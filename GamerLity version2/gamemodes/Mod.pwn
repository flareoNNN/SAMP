/*

< ============================================================================ >

					   __ _                      _   _ _   _ _   _
					  / _| |                    | \ | | \ | | \ | |
					 | |_| | __ _ _ __ ___  ___ |  \| |  \| |  \| |
					 |  _| |/ _` | '__/ _ \/ _ \| . ` | . ` | . ` |
					 | | | | (_| | | |  __/ (_) | |\  | |\  | |\  |
					 |_| |_|\__,_|_|  \___|\___/|_| \_|_| \_|_| \_|

< ============================================================================ >

									  - GamerLity Türkiye Freeroam -
							  		 - « GamerLity FreeRoam [TR] » -
           							  - Last Update: 06.08.2018 -
           							   - Coded by : flareoNNN -
					         - Mapped by : Phoenix & TheDifference & Lordax -

            Bu gamemode tarafýmca tüm GamerLity ailesine armaðan edilmiþtir. Ýyi günlerde kullanmanýzý dilerim.


= Lisans Sözleþmesi =
* Mod tarafýmca kodlanmýþtýr, baþka bir makine veya sunucuda açýlýrsa haklarým tarafýnca hukuki iþlem baþlatýlýr.
* Modda emeði geçen ve her zaman yanýmda olan Alper. ve Lordax kardeþlerime sonsuz teþekkürlerimi iletiyorum.

Copyright © 2018


< ============================================================================ >                                                                                                                                      */

AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed(Fist)",
		"Brass K"
	};
	#pragma unused a
}

WasteDeAMXersTime()
{
	new b;
	#emit load.pri b
	#emit stor.pri b
}

// =============================[INCLUDELER]================================= //

#include "a_samp"              			// a_samp                Include  By SA:MP Team
#include "streamer"            			// streamer              Include  By Incognito
#include "GVC"                          // GVC                   Include  By RyDeR`
//#include "nex-ac"                       // nex-ac                Include  By OstGot
#include "weapon-config"                // weapon-config         Include  By Slice
#include "a_json"                       // a_json                Include  By Hual
#include "a_mysql"             			// a_mysql               Include  By BlueG
#include "a_http"                       // a_http                Include  By SA:MP Team
#include "dini"                			// dini                  Include  By DracoBlue
#include "foreach"            			// foreach               Include  By Y_Less
#include "OnPlayerPause"                // OnPlayerPause         Include  By $t3ve
#include "mSelection_cxe"          		// mSelection            Include  By d0
#include "sscanf2"             			// sscanf2               Include  By Y_Less
#include "izcmd"                		// izcmd                 Include  By ZeeX
#include "YSI\y_ini"           			// YSI\y_ini             Include  By Y_Less
#include "YSI\y_iterate"                // YSI\y_iterate         Include  By Y_Less
#include "YSI\y_timers"                 // YSI\y_timers          Include  By Y_Less
#include "YSI\y_areas"                  // YSI\y_areas           Include  By Y_Less
#include "timerfix"                     // timerfix              Include  By Slice
#include "OPA"                          // OPA                   Include  By Emmet_
#include "MVYoutube"                    // MVYoutube             Include  By MichaelBelgium
#include "DialogCenter"                 // DialogCenter          Include  By Ivan_Ino
#include "date"                         // date                  Include  By NexoR
#include "SKY"                          // SKY                   Include  By Slice
#include "antiFly"                      // antiFly               Include  By NexoR

// ====================[PRAGMA - NATIVE - STOCK - FORWARD]=================== //

#pragma tabsize 0
native IsValidVehicle(vehicleid);
forward MyHttpResponse(playerid, response_code, data[]);
forward ReactionTest();
forward MathTest();
main(){}

// =============================[DEFINELER]================================== //

#define VDS// - Eðer MySQL baðlantýsý VDS'ye yapýlacaksa kalsýn; localhost'a yapýlacaksa baþýna '//' koyun.

#if defined VDS

// - MySQL Bilgileri - VDS
#define SQL_HOST						"127.0.0.1"
#define SQL_USER						"root"
#define SQL_PASS						""
#define SQL_DB							"dg_db"

#else

// - MySQL Bilgileri - flareoNNN PC
#define SQL_HOST						"127.0.0.1"
#define SQL_USER						"root"
#define SQL_PASS						""
#define SQL_DB							"dg_db"

#endif

// - Sunucu Bilgileri

//#define HOSTNAME                    	"••• GamerLity Türkiye | Freeroam [v2.2.0] •••"
#define HOSTNAME                        "»» GamerLity™ [v2.2.0] - Stunt/FR/Games ««"
#define MODENAME                        "GL TurkiyeTürkTR v2"
#define VERSION							"v2.2.0"
#define LANGUAGE						"TurkceTürkceTürkçeTurkiyeTurkish"
#define WEBSITE							"www.gamerlity.com"
#define PASS							""
#define MAPNAME							"San Andreas"
#define RCON							"cxegaming15150123"

// - Genel Defineler

#define MAX_NORELOAD_INFRACTIONS (1)
#define MAX_RAPIDFIRE_INFRACTIONS (3)

#define             MAX_AUTOBULLET_INFRACTIONS          3
#define             AUTOBULLET_RESET_DELAY              30

forward OnAntiCheatAutoBullet(playerid, weaponid);
#define VEHICLE_EXIT_TIME	2000
#define VEHICLE_EXITS		3

#define ISLEM      				(1)

#define BANMESAJ   				(0)

#define BANMESAJI   			"[!] Yasak kullanici adi ile girdiginiz icin sunucudan yasaklandiniz."

#define KICKMESAJ   			(1)

#define KICKMESAJI   			"[!] Yasak kullanici adi ile girdiginiz icin sunucudan atildiniz."

#define YAZIRENGI   			(0x9ACD32AA)

#define DIALOG_DUKKANIM         (5419)

#define DIALOG_CETE_RUTBEISIMD  (1591)
#define DIALOG_CETE_RUTBEISIMD2 (1592)

#define OBJECT_MAX    (203)
#define USERS_MAX     (5)
#define LABYRINTH_VW  (2)
#define LABYRINTH_IN  (2)

#define DIALOG_RACEDUEL         (1561)

#define race_duel_cp1 1
#define race_duel_cp1_CO -521.8025,-3697.3977,3.3074

#define race_duel_cp2 2
#define race_duel_cp2_CO -521.5208,-3568.7190,3.3364

#define race_duel_cp3 3
#define race_duel_cp3_CO -630.6599,-3549.5376,3.3214

#define race_duel_cp4 4
#define race_duel_cp4_CO -761.4255,-3616.7861,3.3325

#define race_duel_cp5 5
#define race_duel_cp5_CO -862.6917,-3691.8369,3.3305

#define race_duel_cp6 6
#define race_duel_cp6_CO -965.9287,-3794.3647,3.3314

#define race_duel_cp7 7
#define race_duel_cp7_CO -815.3692,-3927.0840,3.3305

#define race_duel_cp8 8
#define race_duel_cp8_CO -682.6561,-4036.6628,3.3556

#define race_duel_cp9 9
#define race_duel_cp9_CO -590.7487,-4112.6460,3.3505

#define race_duel_cp10 10
#define race_duel_cp10_CO -522.7924,-4054.5159,3.3370

#define race_duel_cp11 11
#define race_duel_cp11_CO -521.1283,-3861.8088,3.3355

#define race_duel_cp12 12
#define race_duel_cp12_CO -521.5491,-3727.8906,3.3075

#define DIALOG_SORULAR                  (2167)
#define DIALOG_SORULAR_EKLE             (2168)
#define DIALOG_SORULAR_EKLE_CEVAP       (2169)
#define DIALOG_SORULAR_SIL              (2170)

#define DIALOG_KISISEL_DURUM            (5632)

#define DUKKAN_ALIM                     (8978)
#define DUKKAN_SATIM                    (8979)

#define DIALOG_CETELER_YENI             (5138)

#define DIALOG_ILERLE                   (26512)

#define DIALOG_DUELLO_SILAH1            (3488)
#define DIALOG_DUELLO_SILAH2            (3489)
#define DIALOG_DUELLO_SKOR              (3490)
#define DIALOG_DUELLO_PARA              (3491)
#define DIALOG_DUELLO_KABULRED          (3492)

#define DIALOG_OYUNCU_EDIT_RUTBE        (1567)
#define DIALOG_OYUNCU_EDIT              (1568)

#define DIALOG_CETELER                  (9696)
#define DIALOG_CETELER_2                (9697)
#define DIALOG_CETELER_3                (9698)
#define DIALOG_CETELER_4                (9699)

#define DIALOG_CETE_TUMUYELER           (9587)
#define DIALOG_CETE_TUMUYELER_2         (9588)

#define ETK_KOMUTLARI                   (5555)
#define ETK_KOMUTLARI_2                 (5556)

#define RStringLength                   (15)

#define DIALOG_ARKADASLARIM         	(2892)
#define DIALOG_ARKADASLARIM_EKLE    	(2893)
#define DIALOG_ARKADASLARIM_KABULRED    (2894)
#define DIALOG_ARKADASLARIM_SIL    		(2895)

#define RaceYaris1 1
#define RaceYaris1_CO -2847.5464,487.6722,4.3059

#define RaceYaris2 2
#define RaceYaris2_CO -2828.9175,546.2968,4.8722

#define RaceYaris3 3
#define RaceYaris3_CO -2824.9839,645.3925,11.3497

#define RaceYaris4 4
#define RaceYaris4_CO -2864.3091,773.9468,33.2466

#define RaceYaris5 5
#define RaceYaris5_CO -2823.5608,869.0450,43.5654

#define RaceYaris6 6
#define RaceYaris6_CO -2879.4258,1044.3899,33.4474

#define RaceYaris7 7
#define RaceYaris7_CO -2877.4087,1158.1783,13.7761

#define RaceYaris8 8
#define RaceYaris8_CO -2823.7266,1250.0702,5.2058

#define RaceYaris9 9
#define RaceYaris9_CO -2690.4426,1289.7930,6.6972

#define RaceYaris10 10
#define RaceYaris10_CO -2591.6206,1341.9237,6.7007

#define DIALOG_ASANSOR                      (1582)

#define DIALOG_SANSPAKETLERI                (5181)

#define DIALOG_ASAYLIST_SECIM               (5548)
#define DIALOG_ASAYLIST_GENELBILGILENDIRME  (5549)
#define DIALOG_ASAYLIST_ETKINLIK            (5550)

#define DIALOG_BITCOIN_GENEL    			(1218)
#define DIALOG_BITCOIN_GENEL_ALIM   		(1219)
#define DIALOG_BITCOIN_GENEL_SATIM1         (1220)
#define DIALOG_BITCOIN_GENEL_SATIM2         (1221)
#define DIALOG_BITCOIN_GENEL_DONUSTUR       (1222)
#define DIALOG_BITCOIN_GENEL_DONUSTUR11     (1223)
#define DIALOG_BITCOIN_GENEL_DONUSTUR22     (1224)

#define DIALOG_RCON         (1513)

#define DIALOG_DUKKANGIT    		(1512)
#define DIALOG_CETEMEKANINAGIT      (1589)

#define IsPlayerUsingProxy(%0) IsUsingProxy[%0]

#define MAX_SLOTS                       30

#define MAX_SNOW_OBJECTS    5

#define CB:%0(%1)           			forward %0(%1); public %0(%1)

#define DIALOG_TOPTABLOLAR      		(1024)

#define DIALOG_SEARCH_AND_PLAY			(555)

#define DIALOG_TUMCETEUYELER            (1587)

#define DIALOG_SARKILAR                 (5151)

#define GUN_GAME_WORLD                  (31)

#define ARMEDBODY_USE_HEAVY_WEAPON		(false)

#define	DIALOG_BANKA                   (1571)
#define	DIALOG_BANKA_PARAYATIR         (1572)
#define	DIALOG_BANKA_PARACEK           (1573)
#define	DIALOG_BANKA_HESAPDURUMU       (1574)

#define DIALOG_TOPLIST                 (1385)

#define MAX_DUKKAN                     (500)
#define MAX_CETEMEKAN                     (500)

#define DIALOG_RACE                    (39)

#define IsPlayerControllable(%0) 		!GetPVarInt(%0,"Controll")

#define COUNT_SAY 						(300)

#define DIALOG_HOUSE 					(1327)
#define DIALOG_CHANGENAME 				(1328)
#define DIALOG_CARSALE 					(1329)
#define DIALOG_SHOWPRICES 				(1330)
#define DIALOG_GETCAR 					(1331)
#define DIALOG_HOUSESALE 				(1332)
#define DIALOG_FORSALE 					(1333)
#define DIALOG_VISITOR 					(1334)
#define DIALOG_LISTMENU 				(1335)
#define DIALOG_FURNITURE 				(1336)
#define DIALOG_TABLE 					(1337)
#define DIALOG_CHAIR 					(1338)
#define DIALOG_BED 						(1339)
#define DIALOG_SOFA 					(1340)
#define DIALOG_DECORATION 				(1341)
#define DIALOG_APPLIANCE 				(1342)
#define DIALOG_ESYABILGI 				(1343)
#define DIALOG_ESYASAT 					(1344)
#define DIALOG_ESYADUZENLE 				(1345)
#define DIALOG_FURNITURE2 				(1346)

#define MAX_HOUSES 						(300)
#define MAX_HOUSE_VEHICLES 				(2000)
#define MAX_EV_ESYA 					(30)

#define LOTTO_JACKPOT					(10000)
#define LOTTO_START 					(200000)
#define TICKET_COST						(2000)

#define DIALOG_SHOP                    (781)

#define MAX_mPICKUPS 					(700)

#define MAX_CETE                       (200)
#define CETE_KUR                    	(124)
#define CETE_KUR_NAME               	(125)
#define CETE_KUR_TAG                	(126)
#define CETE_KUR_RENK               	(127)

#define CETE_HOME                   	(128)
#define CETE_ISIM                   	(129)
#define CETE_TAG                    	(130)
#define CETE_KASA                   	(131)
#define CETE_UYELER                 	(132)
#define CETE_RENK                   	(133)
#define CETE_SKIN                   	(134)
#define CETE_DURUM                  	(135)

#define CETE_UYEYONET               	(136)
#define CETE_UYERUTBE               	(137)

#define CETE_KASA_YATIR             	(138)
#define CETE_KASA_CEK               	(139)

#define CETE_DAVET                  	(140)
#define CETE_DEGERLENDIR            	(141)

#define MAX_WARNINGS                   (3)

#define DD								(10)
#define DEAGLE                         	(11)
#define MG1                            	(12)
#define KNIFE                          	(13)
#define SNIPER                         	(14)
#define YOK                            	(0)
#define DIALOG_DM                      	(919)
#define DIALOG_TELES                   	(1000)
#define CETE                           	(100)
#define herkesebak 						for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
#define MAX_KOD 						(500)

#define 								Ban(%0) _Ban(%0)

#define function%0(%1) 					forward%0(%1); public%0(%1)

#define UnBan							(18230)
#define OpenSBan    					(18235)
#define OpenNBan    					(18237)
#define OpenIpBlock 					(18240)

#define ETKWORLD 						(35)

#define Msg 							SendClientMessage
#define MsgAll 							SendClientMessageToAll
#define PRESSED(%0)						(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0)					(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define DIALOG_TOPS						(874)

#define SFM(%0,%1,%2,%3)\
                do{\
                        format(_S_T_R_, sizeof(_S_T_R_),(%2), %3);\
                        SendClientMessage((%0),(%1), _S_T_R_);\
                }\
                while(False)
#if !defined NO_NOS_VEHICLES
IsNosVehicle(vehicleid)
{
    #define NO_NOS_VEHICLES 38

    new InvalidNosVehicles[NO_NOS_VEHICLES] =
    {
	581,523,462,521,463,522,461,448,468,586,
    509,481,510,472,473,493,595,484,430,453,
    452,446,454,590,569,537,538,570,449,513,
    520,519,487,417,406,556,444,557
    };

	for(new i = 0; i < NO_NOS_VEHICLES; i++)
	{
	    if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i])
	    {
	        return false;
	    }
	}
	return true;
}
#endif

#define    PARKOUR             (12)

#define SCM     				SendClientMessage

#define DIALOGID 				(2222)
#define DIALOGID0 				(1100)

#define DIALOG_NEON            (38)
#define yellow  				0xFFFF00AA
#define blue 					0x375FFFFF
#define COLOR_GREEN1 			0x33AA33AA
#define COLOR_ozel 				0x0000BBAA
#define lightblue 				0x33CCFFAA
#define COLOR_ROYALBLUE 		0x4169FFAA
#define COLOR_PM                0xFFFF22AA
#define COLOR_PM1               0xFFCC2299
#define COLOR_BLUE              0x0000FFAA
#define COLOR_GREY              0xC0C0C0AA
#define COLOR_ERROR 			0xD2691EAA
#define COLOR_GREEN             0x33AA33AA
#define COLOR_RED               0xFF0000AA
#define COLOR_YELLOW            0xFFFF00AA
#define COLOR_WHITE             0xFFFFFFAA
#define COLOR_AQUA              0x7CFC00AA
#define COLOR_PURPLE            0xB360FDFF
#define COLOR_ORANGE 			0xFF9900AA
#define COLOR_BROWN 			0xA52A2AAA
#define COLOR_ANNOUNCE          0xFFAD00FF
#define COLOR_ADMIN             0x00F600F6
#define COLOR_GENEL             0xF67400F6
#define RED 					0xE60000FF
#define COLOR_DOMATES           0xF66618AA
#define COLOR_CEVIZ             0x25C83CAA
#define GREEN 		            0x21DD00FF
#define white                   0xFFFFFFFF
#define COLOR_SPRINGGREEN       0x00FF7FAA
#define GREY                    0xAFAFAFAA
#define YELLOW                  0xFFFF00AA
#define WHITE                   0xFFFFFFAA
#define LAWNGREEN               0x7CFC00AA
#define PINK                    0xFFC0CBAA
#define COLOR_PURPLE2           0x208FFFFF
#define COLOR_LOCAL				0x208FFFFF
#define COLOR_PORTAKAL 			0xFFCC2299
#define COLOR_BLACK         	0x000000AA
#define COLOR_WHITE 			0xFFFFFFAA
#define COLOR_CHARTREUSE 		0x7FFF00AA
#define COLOR_PINK			 	0xFFC0CBAA
#define COLOR_LIGHTBLUE		 	0x33CCFFAA
#define SES 					PlayerPlaySound(i,1057,0.0,0.0,0.0);
#define SES2 					PlayerPlaySound(b,1057,0.0,0.0,0.0);
#define MAX_STRING              256
#define COLOR_TOMATO 			0xFF6347AA
#define ozel 					0xFFFF22AA
#define red  					0xFF0033FF
#define green  					0x33AA33AA
#define yellow  				0xFFFF00AA
#define grey 					0xC0C0C0AA
#define ozel1 					0x2641FEAA
#define lightozel 				0x33CCFFAA
#define orange 					0xFF9900AA
#define black  					0x2C2727AA

#define dcmd(%1,%2,%3) 			if(!strcmp((%3)[1], #%1, true,(%2)) &&((((%3)[(%2) + 1] == '\0') &&(dcmd_%1(playerid, ""))) ||(((%3)[(%2) + 1] == ' ') &&(dcmd_%1(playerid,(%3)[(%2) + 2]))))) return true

#define w 						"{FFFFFF}"
#define ww 						"{C92E2E}» {FFFFFF}"
#define ad                      "{00F600}"
#define safaf 					"{00D0FF}GamerLity FR » {FFFFFF}"
#define wb 						"{C92E2E}"

#define ADMIN_SPEC_TYPE_NONE 	(0)
#define ADMIN_SPEC_TYPE_PLAYER 	(1)
#define ADMIN_SPEC_TYPE_VEHICLE	(2)

#define MAX_ATM                 (500)

#define MAX_BOLGE               (100)

// =============================[NEWLER]================================== //

new bool: ArkadasIstek[MAX_PLAYERS];

new Cete_Tumuyeler[MAX_PLAYERS];

static PlayerShotCounter[MAX_PLAYERS];

static AutoBulletInfractions[MAX_PLAYERS];
static LastInfractionTime[MAX_PLAYERS];

new LAGExitedVehicle[MAX_PLAYERS];
new LAGExitTimeCheck[MAX_PLAYERS];
new LAGPlayerExitingVehicle[MAX_PLAYERS];

new fyasakisim[24][0] =
{
	{"nul"},
	{"aux"},
	{"con"},
	{"prn"},
	{"com0"},
	{"com1"},
	{"com2"},
	{"com3"},
	{"com4"},
	{"com5"},
	{"com6"},
	{"com7"},
	{"com8"},
	{"com9"},
	{"lpt0"},
	{"lpt1"},
	{"lpt2"},
	{"lpt3"},
	{"lpt4"},
	{"lpt5"},
	{"lpt6"},
	{"lpt7"},
	{"lpt8"},
	{"lpt9"}
};

new ToplamYarislar;
new YarisIsimleri[120][128];
new YarisArac;
new Text: Yaris_Top5[8];
new RaceTextGuncelle_Timer;
new Text: YarisBilgiText[MAX_PLAYERS][4];
new RaceZamanTutum[MAX_PLAYERS];
new RaceMevkii[MAX_PLAYERS];
new YarisBitirmeSayim;
new CPDurum[MAX_PLAYERS];
new bool: YarisBasladi;
new bool: Yarista[MAX_PLAYERS];
new bool: YarisAktif;
new YarisIsim[50];
new YarisDosyaIsim[50];
new YarisToplamCP;
new Float: CP_Pos[120][4];
new Float: YarisBaslangic[4];

new labyrinthOBJ[OBJECT_MAX],
Float:ControlPoint[][]={
	{307.8049,1945.8754,37.1619,2.3721},
	{305.9574,1961.8553,37.1619,218.5507},
	{319.1784,1955.7567,37.1619,143.7911},
	{321.6234,1974.7609,37.1619,218.9685}},
clotheslabyrinth[]={5,39,49,54,64,89},
musiclabyrinth[][]={
	{"https://dl.dropboxusercontent.com/s/31gxjg78u8vq9cx/audio1%20%20By%20OTACON.mp3"},
	{"https://dl.dropboxusercontent.com/s/w1ql2n1g0ns0875/audio2%20%20By%20OTACON.mp3"},
	{"https://dl.dropboxusercontent.com/s/f277d1z59ywwo1i/audio3%20By%20OTACON.mp3"}};

enum iifo{
	countertextTimer,
	labyrinthtimer,
    PlayerText:countertext,
	Float:oldposition[4],
	bool:playerlost,
	oldclothes,
	newworld[2], }
new InfoLabyrinth[MAX_PLAYERS][iifo];

new Text: FPSKismiText[MAX_PLAYERS][29];

new RACEkontrol;
new RaceYakinTimer[MAX_PLAYERS];
new Float: RaceYakinP1;
new Float: RaceYakinP2;
new RacePosition[MAX_PLAYERS];
new RaceBasmaTimer[MAX_PLAYERS];
new RaceVites[MAX_PLAYERS];
new RaceTabloTimer[MAX_PLAYERS];
new Text: RaceDuel_Gosterge[MAX_PLAYERS][4];
new RaceDuelCP[MAX_PLAYERS];
new bool: RaceBastim[MAX_PLAYERS];
new bool: RaceDuelVitesAtma[MAX_PLAYERS];
new bool: VitesAtabilirsin[MAX_PLAYERS];
new RaceDuelTimer[MAX_PLAYERS];
new Text: VitesTD[2];
new bool: RaceDuelde[MAX_PLAYERS];
new CPrace_duel_cp[MAX_PLAYERS];

new bool: BakimDurum = false;

new bool: EkstraZiplama[MAX_PLAYERS];

new Text: LevelAtlandi[MAX_PLAYERS][10];

enum ServerSoru
{
	bool: sAktif,
	sTimer,
	sSoru[1024],
	sCevap[500],
}
new SoruData[ServerSoru];
new sorular_limit[MAX_PLAYERS];
new soru_Timer = 0;

new sorular_ekle[1024][MAX_PLAYERS];

new kabuletmezaman[MAX_PLAYERS];

new vJumpAngular[MAX_PLAYERS];
new bool: wshizlanma[MAX_PLAYERS];

new sarkilar[MAX_PLAYERS][50];

new sarkilar_sayi[MAX_PLAYERS];

new fbitiryapan;

new NBANLAR[MAX_PLAYERS];

new Text3D: uniqueVehicle_0[MAX_VEHICLES], Rhino, Text3D: uniqueVehicle_1[MAX_VEHICLES], Hunter, Text3D: uniqueVehicle_2[MAX_VEHICLES], Hydra;
new UFO, UFO_Obje, Text3D: UFO_Label;

enum MainZone
{
	Zone_Name[28],
	Float:Zone_Area[6]
};
#define MAX_ZONE_NAME 28
static const SanAndreasZones[][MainZone] = {

	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial",         {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"Four Dragons Casino",         {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Citys Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

new getGPSForPlayer[MAX_PLAYERS][MAX_ZONE_NAME];

new WeapName[32];

new gsString[2048];

new Text: pDateClock;

new kickzamani_timer[MAX_PLAYERS];

new IPBANLAR[MAX_PLAYERS];

new cetemekanlarix[MAX_PLAYERS][500];
new dukkanlarx[MAX_PLAYERS][500];

new bool: Eglence[MAX_PLAYERS];

new dukkanlar_sayim[MAX_PLAYERS];
new cetemekan_sayim[MAX_PLAYERS];

new ceteler_sayim[MAX_PLAYERS];

new kullanici_sayi[MAX_PLAYERS];

new Text: CreditsText0;
new Text: CreditsText1;
new Text: CreditsText2;
new Text: CreditsText3;
new Text: CreditsText4;
new Text: CreditsText5;
new Text: CreditsText6;
new Text: CreditsText7;
new Text: CreditsText8;
new Text: CreditsText9;
new Text: CreditsText10;
new Text: CreditsText11;
new Text: CreditsText12;
new Text: CreditsText13;
new Text: CreditsText14;
new Text: CreditsText15;
new Text: CreditsText16;
new Text: CreditsText17;
new Text: CreditsText18;
new Text: CreditsText19;
new Text: CreditsText20;
new Text: CreditsText21;
new Text: CreditsText22;
new Text: CreditsText23;

new bool: duelloda[MAX_PLAYERS];
new bool: duelatti[MAX_PLAYERS];

new Text: elegecirme[MAX_PLAYERS];
new bolgecount;
enum bolgeler
{
	bolgeid,
	bolgeisim[30],
	sahipceteid,
	sahipname[30],
	bolgeseviye,
	bolgerenk,
	Text3D:bolgeyazi,
	bolgezone,
	bolgezone2,
	Float:koorx,
	Float:koory,
	Float:koorz,
	bool:bolgesaldiri,
	bolgesaldiran,
	elegecirmetimer,
	kalanzaman,
}
new bolgebilgi[MAX_BOLGE][bolgeler];

new SpecEtkSifirla_Timer;

new SunucuRekoru;
new SunucuRekoru_Tarih;

new Arkadaslar[MAX_PLAYERS][50];

new bool: ETKAktif;

new DerbyOyunculari;
new bool: DerbyAktif;
new bool: DerbyBasladi;
new DerbyMap;
new bool: Derbyde[MAX_PLAYERS];

new Textdraw_Random_Mesajlar[][] =
{
	{"~y~- ~r~~h~Klan tagý ~w~~h~~h~otomatik olarak geldiðinden nickinize tag yazmayýn"},
	{"~y~- ~w~~h~~h~Aracýný ~r~~h~2 tuþuna ~w~~h~~h~basarak otomatik olarak tamir edebilirsin"},
	{"~y~- ~w~~h~~h~Klan sohbetini ~r~~h~!mesaj ~w~~h~~h~þeklinde kullanabilirsin"},
	{"~y~- ~r~~h~/lotto ~w~~h~~h~> Bugün kendini þanslý hissediyorsan lottoya katýl"},
	{"~y~- ~r~~h~/credits ~w~~h~~h~> Modun yapýmcýlarýyla tanýþ"},
	{"~y~- ~r~~h~/kurallar ~w~~h~~h~> Kurallara uy yoksa alýrým façaný"},
	{"~y~- ~r~~h~/rapor (id) (sebep) ~w~~h~~h~> Kurallara uymayan zýpzýplarý raporla"},
	{"~y~- ~r~~h~/youtube goster ~w~~h~~h~> Þarký adýný öðrenmek için çalan þarký listesine bak"},
	{"~y~- ~r~~h~/banka ~w~~h~~h~> Paraný kaybetmemek için bankaya yatýr"},
	{"~y~- ~r~~h~/shop ~w~~h~~h~> Saðlýk kazanmak için yemekler al"},
	{"~y~- ~r~~h~/shop ~w~~h~~h~> Skor satýn alabilirsin"},
	{"~y~- ~r~~h~/shop ~w~~h~~h~> Ölümlerini silebilirsin"},
	{"~y~- ~r~~h~/shop ~w~~h~~h~> Hesap iþlemlerinide buradan yapabilirsin"},
	{"~y~- ~r~~h~/shop ~w~~h~~h~> Kendine hoþ bir nick rengi satýn almak ister misin"},
	{"~y~- ~w~~h~~h~Haritada sadece birer tane ~r~~h~ücretsiz tank, hydra ve hunter ~w~~h~~h~mevcut"},
	{"~y~- ~r~~h~/derby ~w~~h~~h~> Aracýnla diðerlerini ittir-kaktýr ve kazan"},
	{"~y~- ~r~~h~/race ~w~~h~~h~> Gaza bas ve asfaltý aðlatarak yarýþý kazan"},
	{"~y~- ~r~~h~/dmler ~w~~h~~h~> Silahýný ateþle ve çatýþ, bam bam bam"},
	{"~y~- ~r~~h~/mg1 ~w~~h~~h~> Minigun ile hunharca savaþ"},
	{"~y~- ~r~~h~/deagle ~w~~h~~h~> Desert Eagle ustasýysan bu arenada yiðitliðini göster"},
	{"~y~- ~r~~h~/hg ~w~~h~~h~> Açlýk oyunlarýna katýl ve item toplayýp diðerlerini öldür"},
	{"~y~- ~r~~h~/admins ~w~~h~~h~> Online görevlileri gör"},
	{"~y~- ~r~~h~/rapor ~w~~h~~h~> Hilecileri ve kural ihlallerini raporla"},
	{"~y~- ~r~~h~/teles ~w~~h~~h~> Farklý yerler keþfet"},
	{"~y~- ~r~~h~/pm ~w~~h~~h~> Özel mesaj ile konuþ"},
	{"~y~- ~r~~h~/etkgit ~w~~h~~h~> Görevlilerin eðlenceli etkinliklerine katýl"},
	{"~y~- ~r~~h~/l ~w~~h~~h~> Sadece yakýnýndakilere mesaj gönderebilirsin"},
	{"~y~- ~r~~h~/stats ~w~~h~~h~> Ýstatistiklerine bir göz atalým"},
	{"~y~- ~r~~h~/skinler ~w~~h~~h~> Yeni imajlar denemek ister misin yakýþýklý"},
	{"~y~- ~r~~h~/goto ~w~~h~~h~> Arkadaþlarýna ýþýnlan"},
	{"~y~- ~r~~h~/cik ~w~~h~~h~> Bu yerden sýkýldýn sanýrým"},
	{"~y~- ~r~~h~/omenu ~w~~h~~h~> Oyuncu ayarlarýný düzenle"},
	{"~y~- ~r~~h~/mycar ~w~~h~~h~> Ateþ tuþu ve H tuþuna araç komutu (hýz, zýplama..) ata"},
	{"~y~- ~r~~h~/silahlar ~w~~h~~h~> Silahýný çek ve adam gebertmeye baþla"},
	{"~y~- ~r~~h~/duello ~w~~h~~h~> Kendini kanýtlamanýn tam zamaný"},
	{"~y~- ~r~~h~/parayolla ~w~~h~~h~> Dilediðin kiþiye para gönder"},
	{"~y~- ~r~~h~/evegit ~w~~h~~h~> Evine gidebilirsin"},
	{"~y~- ~r~~h~/dukkanimagit ~w~~h~~h~> Ekmek teknelerine, dükkanlarýna göz at"},
	{"~y~- ~r~~h~/evmenu ~w~~h~~h~> Evinin adýný, eþyalarýný ve ev ayarlarýný düzenle"},
	{"~y~- ~r~~h~/veh ~r~~h~- /v1../v17 ~w~~h~~h~> Dilediðin aracý al ve gazla"},
	{"~y~- ~r~~h~/m1..m28 ~w~~h~~h~> Birbirinden havalý modifiyeli araçlarla biraz yanla"},
	{"~y~- ~r~~h~/savecar /loadcar ~w~~h~~h~> Beðendiðin araçlarýný kaydet"},
	{"~y~- ~r~~h~/savepos /loadpos ~w~~h~~h~> Bulunduðun konumu kaydet"},
	{"~y~- ~w~~h~~h~GamerLity Foruma ~r~~h~forum.gamerlity.com ~w~~h~~h~adresinden katýl"},
	{"~y~- ~w~~h~~h~Tüm þikayetlerini ~r~~h~destek.gamerlity.com ~w~~h~~h~adresinden bildirebilirsin"},
	{"~y~- ~r~~h~/cete ~w~~h~~h~> Klanlarýn amansýz rekabetine katýl"}
};

new vipdairegiris;
new vip_anaasansor;
new vip_anaasansor_solkapi;
new vip_anaasansor_sagkapi;
new vip_enustkat_solkapi;
new vip_enustkat_sagkapi;
new AsansorKat;
new bool: AsansorAktif;
new vip_daire_bolge;
new vip_enustkat_sagdairekapi;
new vip_enustkat_soldairekapi;

new KucukSansPaketiTimer[MAX_PLAYERS];
new KucukSansPaketiSayim[MAX_PLAYERS];
new KucukSansPaketiOduller[][] =
{
	{"50 SKOR"},
	{"100.000$"},
	{"1 BITCOIN"},
	{"30 SKOR"},
	{"300.000$"}
};

new OrtaSansPaketiTimer[MAX_PLAYERS];
new OrtaSansPaketiSayim[MAX_PLAYERS];
new OrtaSansPaketiOduller[][] =
{
	{"100 SKOR"},
	{"85 GLKREDI"},
	{"3 BITCOIN"},
	{"1.000.000$"},
	{"150 SKOR"}
};

new BuyukSansPaketiTimer[MAX_PLAYERS];
new BuyukSansPaketiSayim[MAX_PLAYERS];
new BuyukSansPaketiOduller[][] =
{
	{"250 SKOR"},
	{"500 SKOR"},
	{"5 BITCOIN"},
	{"5.000.000$"},
	{"1 GUNLUK VIP"}
};

new ParasutObje[MAX_PLAYERS];
new Update[MAX_PLAYERS];

new genel_bilgilendirme_asay[][] =
{
	{"(t)Hile olduðunu düþündüðünüz kiþileri (r)/rapor (t)ile bize bildirebilirsiniz."},
	{"(t)Sunucumuzu kaybetmemek için (r)favorilerinize (t)eklemeyi unutmayýn."},
	{"(t)Ýstek etkinliklerinizi (r)/etkistek (t)ile bize bildirebilirsiniz."},
	{"(t)Ýstek þarkýlarýnýzý (r)/isteksarki (t)ile bize bildirebilirsiniz."},
	{"(t)Minigamelerimize göz atmak için (r)/games (t)yazabilirsiniz."},
	{"(t)Bizi tercih ettiðiniz için (r)teþekkür ederiz."},
	{"(t)Bitcoin piyasasýný takip ediyor musun? (r)Bakarsýn fiyatlar düþer! (o)/btc"},
	{"(b)Para göndermek için (w)/parayolla [ÝD] [MÝKTAR] (b)yazabilirsiniz."},
	{"(b)Skor göndermek için (w)/skoryolla [ÝD] [MÝKTAR] (b)yazabilirsiniz."},
	{"(o)Kendinize bir dükkan alarak saat baþý kazanç elde edebilirsiniz."},
	{"(b)Arabanýza aksesuar eklemek için (w)/tune & /modifiye (b)yabilirsiniz."},
	{"(t)Arkadaþ listeni oluþturarak istediðin zaman yanlarýna ýþýnlan! (r)/arkadaslarim"},
	{"(b)Bir yeri kayýt etmek için(w) /savepos(b) oraya gitmek için (w)/loadpos (b)yazabilirsiniz."},
	{"(g)Silah, can, yelek (t)gibi bir çok þeyi (r)/shop (t)menüsünden alabilirsiniz."},
	{"(t)Yeni bir tarz mý istiyorsun? (o)Görünüþünü deðiþtirmek için: (w)/skinler"},
	{"(t)Sunucu (r)en'lerine (t)bakmak için: (g)/toplist"},
	{"(g)Ekran yazý boyutu (r)/fontsize, (g)satýr geniþliði (r)/pagesize'dir."},
	{"(b)Ýsim deðiþtirmek için(w) /nickdegistir [ÝSÝM] (b)yazabilirsiniz.(y) (Deðiþtirdiðiniz isim ile girin)"},
	{"(b)Araba almak için (w)/v1 ... /v17 (b)yazabilirsiniz."},
	{"(b)Modifiye'li araç almak için (w)/m1 ... /m28 (b)yazabilirsiniz."},
	{"(b)forum.gamerlity.com (t)forum adresimiz."}
};

new etkinlik_asay[][] =
{
	{"(t)Atla motora (b)çýk benzinliðe (y)al ödülünü (w)» /etkgit"},
	{"(y)Bin motora (r)çýk binaya (o)al ödülünü (w)» /etkgit"},
	{"(y)Al eline testereyi, (r)teker teker doðra herkesi (w) » /etkgit"},
	{"(t)Zirve tek kiþiliktir... (b)O tek kiþide sensin! (o)Haydi göster kendini. (w)» /etkgit"},
	{"(y)Elinde kýlýç, (b)içinde hýrs. (t)Neler yapabilceðini göster! (w)» /etkgit"},
	{"(r)Herhangi bir silah farketmez, (b)dmciler affetmez. (t)Army'de mevzu çýktý (w)» /etkgit"},
	{"(y)KOD: adýn bombacýysa (t)bu etkinlik tam sana göre (w)» /etkgit"},
	{"(o)C-Bugun ustasýyým (t)kýzlarýn hastasýyým diyorsan (w)» /etkgit"},
	{"(b)Uçuþa geçiyoruz, (g)kemerleri baðlayýn! (w)» /etkgit"},
	{"(o)Patron kýzdý, (b)canavar kamyonu aldý! (y)Kaçamayaný ezerler. (w)» /etkgit"},
	{"(y)Modifiye etkinliði baþlamýþtýr! (b)Arabam þekil (r)önümden çekil diyorsan (w)''çek'' de"},
	{"(t)Paraþüt bizden (r)piramite týrmanmak senden (w)» /etkgit"},
	{"(y)Çek pompalýyý (o)daðýt ortalýðý (w)» /etkgit"},
	{"(y)Tünelde awp var (g)gönlümde sen (w)» /etkgit"},
	{"(r)Yanýyorsun fuat abii (w)» /etkgit"},
	{"(g)Dildocu neneler seni bekliyor (w)» /etkgit"},
	{"(t)Canavar kamyonlar güreþiyor! (r)Peki bu eðlenceye sende katýlmýcakmýsýn? (w)» /etkgit"},
	{"(b)Biz elegyciyiz. (y)Köþeleri dönerken sinyal deðil; (y)yan veririz... (w)» /etkgit"}
};

new borsadurumpara;
new borsadurumskor;

new BTC_al[MAX_PLAYERS][500];

static
	bool:IsUsingProxy[MAX_PLAYERS] = {false, ...}
;

new bool: CekilisAktif;

new aWeaponNames[][] =
{
		{"Unarmed (Fist)"}, // 0
		{"Brass Knuckles"}, // 1
		{"Golf Club"}, // 2
		{"Night Stick"}, // 3
		{"Knife"}, // 4
		{"Baseball Bat"}, // 5
		{"Shovel"}, // 6
		{"Pool Cue"}, // 7
		{"Katana"}, // 8
		{"Chainsaw"}, // 9
		{"Purple Dildo"}, // 10
		{"Big White Vibrator"}, // 11
		{"Medium White Vibrator"}, // 12
		{"Small White Vibrator"}, // 13
		{"Flowers"}, // 14
		{"Cane"}, // 15
		{"Grenade"}, // 16
		{"Teargas"}, // 17
		{"Molotov"}, // 18
		{" "}, // 19
		{" "}, // 20
		{" "}, // 21
		{"Colt 45"}, // 22
		{"Colt 45 (Silenced)"}, // 23
		{"Desert Eagle"}, // 24
		{"Normal Shotgun"}, // 25
		{"Sawnoff Shotgun"}, // 26
		{"Combat Shotgun"}, // 27
		{"Micro Uzi (Mac 10)"}, // 28
		{"MP5"}, // 29
		{"AK47"}, // 30
		{"M4"}, // 31
		{"Tec9"}, // 32
		{"Country Rifle"}, // 33
		{"Sniper Rifle"}, // 34
		{"Rocket Launcher"}, // 35
		{"Heat-Seeking Rocket Launcher"}, // 36
		{"Flamethrower"}, // 37
		{"Minigun"}, // 38
		{"Satchel Charge"}, // 39
		{"Detonator"}, // 40
		{"Spray Can"}, // 41
		{"Fire Extinguisher"}, // 42
		{"Camera"}, // 43
		{"Night Vision Goggles"}, // 44
		{"Infrared Vision Goggles"}, // 45
		{"Parachute"}, // 46
		{"Fake Pistol"} // 47
};

new Text: OlumText0;
new Text: OlumText1;
new Text: OlumText2;
new Text: OlumText3[MAX_PLAYERS];
new Text: OlumText4[MAX_PLAYERS];
new Text: OlumText5[MAX_PLAYERS];

//new SunucuKar;

new bool: snowOn[MAX_SLOTS char],
        snowObject[MAX_SLOTS][MAX_SNOW_OBJECTS],
        updateTimer[MAX_SLOTS char]
;

new Text: NEWEXPText[MAX_PLAYERS][52];
new	NEWEXPRenkleri[] =
{
	0xFF0000FF, 0xFE0800FF, 0xFE1100FF, 0xFE1900FF, 0xFE2200FF,
	0xFE2B00FF, 0xFE3300FF, 0xFD3C00FF, 0xFD4400FF, 0xFD4D00FF, 0xFD5500FF,
	0xFD5E00FF, 0xFD6600FF, 0xFD6F00FF, 0xFC7800FF, 0xFC8000FF, 0xFC8800FF,
	0xFC9100FF, 0xFC9900FF, 0xFCA200FF, 0xFBAA00FF, 0xFBB300FF, 0xFBBB00FF,
	0xFBC400FF, 0xFBCC00FF, 0xFBD400FF, 0xFBDD00FF, 0xFAE500FF, 0xFAED00FF,
	0xFAF600FF, 0xF6FA00FF, 0xEDFA00FF, 0xE4FA00FF, 0xDCF900FF, 0xD3F900FF,
	0xCBF900FF, 0xC2F900FF, 0xB9F900FF, 0xB1F900FF, 0xA8F900FF, 0xA0F800FF, 0x97F800FF,
	0x8FF800FF, 0x86F800FF, 0x7EF800FF, 0x75F800FF, 0x6DF700FF, 0x64F700FF, 0x5CF700FF,
	0x53F700FF, 0x4BF700FF, 0x43F700FF, 0x3AF700FF, 0x32F600FF, 0x29F600FF, 0x21F600FF,
	0x19F600FF, 0x10F600FF, 0x08F600FF, 0x00F600FF
};

new cekilisodulleri[][] =
{
	{"200 SKOR + 200 GLKREDI"},
	{"150 SKOR + 100 GLKREDI"},
	{"IFLAS :("},
	{"1.000 SKOR + 1.000.000$"},
	{"250 GLKREDI"},
	{"1 GUNLUK 1 LEVEL VIP"},
	{"1 GUNLUK 1 LEVEL VIP"}
};

new obj[MAX_PLAYERS];

enum aData
{
	aId,
	Float: aX,
	Float: aY,
	Float: aZ,
	Float: aF,
	aObje,
	aCP,
	bool: aMevcut,
	Text3D: aLabel
};
new ATMInfo[MAX_ATM][aData];
new Iterator: atmler<MAX_ATM>;

new MySQL: mysqlC;

new VehicleSave[5][MAX_PLAYERS][18];

new AracIsimler[212][] =
{
	{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},{"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},{"Washington"},
	{"Bobcat"},{"Mr Whoopee"},{"BF Injection"},{"Hunter"},{"Premier"},{"Enforcer"},{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Trailer 1"},{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Trailer 2"},{"Turismo"},{"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC Van"},{"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},
	{"Sanchez"},{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},
	{"Jetmax"},{"Hotring"},{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},{"Super GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},
	{"Tanker"}, {"Roadtrain"},{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},{"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},
	{"Blade"},{"Freight"},{"Streak"},{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},
	{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},{"Kart"},{"Mower"},{"Duneride"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},
	{"Tug"},{"Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Hotdog"},{"Club"},{"Freight Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car (LSPD)"},{"Police Car (SFPD)"},{"Police Car (LVPD)"},{"Police Ranger"},{"Picador"},{"S.W.A.T. Van"},{"Alpha"},{"Phoenix"},{"Glendale"},
	{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},{"Boxville"},{"Farm Plow"},{"Utility Trailer"}
};

new dukkantimer[MAX_PLAYERS];

new bolge1;
new bolge2;
new bolge3;
new bolge4;
new bolge5;
new spawnda[MAX_PLAYERS];

new Iterator: dukkanlar<MAX_DUKKAN>;
new Iterator: cetemekanlari<MAX_CETEMEKAN>;

enum dukkanEnum
{
    dId,
    dSahip,
    dFiyat,
    bool: dMevcut,
    Float: dX,
    Float: dY,
    Float: dZ,
    Text3D: dLabel,
    dPickup,
    dBirikenPara
};
new DukkanInfo[MAX_DUKKAN][dukkanEnum];

enum cetemekanEnum
{
    cmId,
    cmSahip,
    cmFiyat,
    bool: cmMevcut,
    Float: cmX,
    Float: cmY,
    Float: cmZ,
    Text3D: cmLabel,
    cmPickup
};
new CeteMekanInfo[MAX_CETEMEKAN][cetemekanEnum];

new caliniyor;
new calinanlink[850];

new gYoutubeID[MAX_PLAYERS], gYoutubeIDForAll;
new gMyPlaylist[MAX_PLAYERS], gEveryonesPlaylist, gTotalPlaylists;

new etkismim[500];

new tumceteoyuncular[MAX_PLAYERS][45];

enum ENUM_FIRE_INFO
{
    bool:fire_VALID,
    bool:fire_MIRROR,
    Float:fire_OFFSET_X,
    Float:fire_OFFSET_Y,
    Float:fire_OFFSET_Z,
    Float:fire_ROT_X,
    Float:fire_ROT_Y,
    Float:fire_ROT_Z
};

new FIRE_INFO[][ENUM_FIRE_INFO] =
{
    {true, false, 0.356599, -2.323499, -2.282700, 0.000000, 0.000000, 180.000000}, //400
    {true, false, 0.438600, -2.509499, -2.088700, 0.000000, 0.000000, 180.000000}, //401
    {true, true, 0.502600, -2.623499, -2.136700, 0.000000, 0.000000, 180.000000}, //402
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //403
    {true, false, 0.452600, -2.679299, -2.057499, 0.000000, 0.000000, 180.000000}, //404
    {true, false, 0.484899, -2.694099, -2.203500, 0.000000, 0.000000, 180.000000}, //405
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //406
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //407
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //408
    {true, false, 0.613099, -3.776700, -2.107199, 0.000000, 0.000000, 180.000000}, //409
    {true, false, 0.393799, -2.313999, -2.057199, 0.000000, 0.000000, 180.000000}, //410
    {true, true, 0.307799, -2.537999, -2.083199, 0.000000, 0.000000, 180.000000}, //411
    {true, false, 0.427300, -3.339999, -2.165199, 0.000000, 0.000000, 180.000000}, //412
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //413
    {true, false, 0.516099, -3.160899, -2.317199, 0.000000, 0.000000, 180.000000}, //414
    {true, true, 0.378100, -2.368799, -2.103199, 0.000000, 0.000000, 180.000000}, //415
    {true, false, 0.504199, -3.720499, -2.407199, 0.000000, 0.000000, 180.000000}, //416
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //417
    {true, false, 0.574599, -2.647899, -2.439199, 0.000000, 0.000000, 180.000000}, //418
    {true, false, 0.558099, -2.929099, -2.161200, 0.000000, 0.000000, 180.000000}, //419
    {true, false, 0.574100, -2.639099, -2.137199, 0.000000, 0.000000, 180.000000}, //420
    {true, false, 0.450100, -2.983999, -2.191200, 0.000000, 0.000000, 180.000000}, //421
    {true, false, 0.411700, -2.547899, -2.334000, 0.000000, 0.000000, 180.000000}, //422
    {true, false, -0.369800, -2.315999, -2.404000, 0.000000, 0.000000, 180.000000}, //423
    {true, true, 0.512099, -1.669300, -1.856099, 0.000000, 0.000000, 180.000000}, //424
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //425
    {true, false, 0.578000, -2.621899, -2.136100, 0.000000, 0.000000, 180.000000}, //426
    {true, false, 0.601499, -3.878599, -2.324200, 0.000000, 0.000000, 180.000000}, //427
    {true, false, 0.588999, -2.971599, -2.462199, 0.000000, 0.000000, 180.000000}, //428
    {true, true, 0.503000, -2.523599, -1.965199, 0.000000, 0.000000, 180.000000}, //429
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //430
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //431
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //432
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //433
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //434
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //435
    {true, false, 0.486999, -2.497599, -2.099299, 0.000000, 0.000000, 180.000000}, //436
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //437
    {true, false, 0.490399, -2.705899, -2.371700, 0.000000, 0.000000, 180.000000}, //438
    {true, true, 0.352400, -2.581899, -2.064399, 0.000000, 0.000000, 180.000000}, //439
    {true, false, 0.420700, -2.677599, -2.570899, 0.000000, 0.000000, 180.000000}, //440
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //441
    {true, false, 0.593100, -2.798699, -2.205100, 0.000000, 0.000000, 180.000000}, //442
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //443
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //444
    {true, false, 0.480199, -2.714699, -2.147099, 0.000000, 0.000000, 180.000000}, //445
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //446
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //447
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //448
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //449
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //450
    {true, false, 0.005400, -2.552699, -1.987100, 0.000000, 0.000000, 180.000000}, //451
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //452
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //453
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //454
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //455
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //456
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //457
    {true, false, 0.519200, -2.790499, -2.229899, 0.000000, 0.000000, 180.000000}, //458
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //459
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //460
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //461
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //462
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //463
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //464
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //465
    {true, false, 0.435200, -2.877399, -2.125900, 0.000000, 0.000000, 180.000000}, //466
    {true, false, 0.481200, -2.917399, -2.097899, 0.000000, 0.000000, 180.000000}, //467
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //468
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //469
    {true, false, -1.250200, -2.029500, -0.472800, 0.000000, 0.000000, 180.000000}, //470
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //471
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //472
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //473
    {true, true, 0.584999, -2.822599, -2.209800, 0.000000, 0.000000, 180.000000}, //474
    {true, false, 0.481000, -2.595699, -2.113800, 0.000000, 0.000000, 180.000000}, //475
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //476
    {true, false, 0.587000, -2.805699, -2.071799, 0.000000, 0.000000, 180.000000}, //477
    {true, false, 0.416700, -2.568699, -2.196799, 0.000000, 0.000000, 180.000000}, //478
    {true, false, 0.460799, -2.865999, -2.082799, 0.000000, 0.000000, 180.000000}, //479
    {true, false, 0.483300, -2.409999, -2.163700, 0.000000, 0.000000, 180.000000}, //480
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //481
    {true, false, 0.445899, -2.641699, -2.439800, 0.000000, 0.000000, 180.000000}, //482
    {true, false, -0.340600, -2.846899, -2.512400, 0.000000, 0.000000, 180.000000}, //483
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //484
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //485
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //486
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //487
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //488
    {true, false, 0.446500, -2.771499, -2.240900, 0.000000, 0.000000, 180.000000}, //489
    {true, false, 0.439999, -3.227299, -2.240900, 0.000000, 0.000000, 180.000000}, //490
    {true, false, 0.572200, -2.925899, -2.166899, 0.000000, 0.000000, 180.000000}, //491
    {true, false, 0.579599, -2.606400, -2.116899, 0.000000, 0.000000, 180.000000}, //492
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //493
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //494
    {true, false, 0.596599, -2.335199, -2.332799, 0.000000, 0.000000, 180.000000}, //495
    {true, false, 0.545400, -2.173599, -2.111700, 0.000000, 0.000000, 180.000000}, //496
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //497
    {true, false, -0.473800, -3.108199, -2.361400, 0.000000, 0.000000, 180.000000}, //498
    {true, false, 0.516200, -3.340600, -2.287400, 0.000000, 0.000000, 180.000000}, //499
    {true, false, 0.446900, -1.940299, -2.245399, 0.000000, 0.000000, 180.000000}, //500
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //501
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //502
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //503
    {true, false, 0.430299, -2.876699, -2.117300, 0.000000, 0.000000, 180.000000}, //504
    {true, false, 0.446299, -2.772699, -2.236900, 0.000000, 0.000000, 180.000000}, //505
    {true, true, 0.560599, -2.476300, -2.120100, 0.000000, 0.000000, 180.000000}, //506
    {true, false, 0.485199, -2.971699, -2.262000, 0.000000, 0.000000, 180.000000}, //507
    {true, false, 0.467400, -3.586999, -2.686900, 0.000000, 0.000000, 180.000000}, //508
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //509
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //510
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //511
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //512
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //513
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //514
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //515
    {true, false, 0.447800, -2.946699, -2.141499, 0.000000, 0.000000, 180.000000}, //516
    {true, false, 0.501800, -2.858699, -2.119499, 0.000000, 0.000000, 180.000000}, //517
    {true, false, -0.423400, -2.882499, -2.091500, 0.000000, 0.000000, 180.000000}, //518
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //519
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //520
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //521
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //522
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //523
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //524
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //525
    {true, false, 0.481799, -2.314099, -2.129499, 0.000000, 0.000000, 180.000000}, //526
    {true, false, 0.471799, -2.298099, -1.999199, 0.000000, 0.000000, 180.000000}, //527
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //528
    {true, false, -0.424699, -2.729899, -2.011199, 0.000000, 0.000000, 180.000000}, //529
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //530
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //531
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //532
    {true, true, 0.515100, -2.452399, -2.037100, 0.000000, 0.000000, 180.000000}, //533
    {true, true, 0.483099, -2.958400, -2.167099, 0.000000, 0.000000, 180.000000}, //534
    {true, true, 0.350600, -2.693499, -2.189100, 0.000000, 0.000000, 180.000000}, //535
    {true, true, 0.500000, -2.971299, -2.161099, 0.000000, 0.000000, 180.000000}, //536
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //537
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //538
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //539
    {true, false, -0.410600, -2.748699, -2.265599, 0.000000, 0.000000, 180.000000}, //540
    {true, true, 0.624000, -2.205999, -1.875100, 0.000000, 0.000000, 180.000000}, //541
    {true, false, 0.587400, -2.829499, -1.996899, 0.000000, 0.000000, 180.000000}, //542
    {true, false, -0.411000, -2.764599, -2.099200, 0.000000, 0.000000, 180.000000}, //543
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //544
    {true, true, 0.314900, -2.263700, -2.260600, 0.000000, 0.000000, 180.000000}, //545
    {true, false, 0.581200, -2.833499, -2.020299, 0.000000, 0.000000, 180.000000}, //546
    {true, false, 0.629199, -2.589499, -2.074300, 0.000000, 0.000000, 180.000000}, //547
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //548
    {true, false, 0.441300, -2.511600, -2.030299, 0.000000, 0.000000, 180.000000}, //549
    {true, false, -0.628300, -2.899799, -2.267199, 0.000000, 0.000000, 180.000000}, //550
    {true, false, 0.590799, -3.145499, -2.092799, 0.000000, 0.000000, 180.000000}, //551
    {true, false, 0.446900, -3.063399, -1.924800, 0.000000, 0.000000, 180.000000}, //552
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //553
    {true, false, 0.559300, -2.751999, -2.208499, 0.000000, 0.000000, 180.000000}, //554
    {true, true, 0.136000, -2.282899, -2.003200, 0.000000, 0.000000, 180.000000}, //555
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //556
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //557
    {true, true, 0.465799, -2.558699, -1.977200, 0.000000, 0.000000, 180.000000}, //558
    {true, true, 0.633099, -2.394599, -1.977200, 0.000000, 0.000000, 180.000000}, //559
    {true, true, 0.479999, -2.474699, -1.991199, 0.000000, 0.000000, 180.000000}, //560
    {true, true, 0.446200, -2.739599, -2.166300, 0.000000, 0.000000, 180.000000}, //561
    {true, true, 0.483300, -2.380199, -2.037100, 0.000000, 0.000000, 180.000000}, //562
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //563
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //564
    {true, false, 0.479299, -2.134199, -1.999099, 0.000000, 0.000000, 180.000000}, //565
    {true, false, 0.564700, -2.946699, -2.063100, 0.000000, 0.000000, 180.000000}, //566
    {true, false, 0.628700, -2.776700, -2.252900, 0.000000, 0.000000, 180.000000}, //567
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //568
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //569
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //570
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //571
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //572
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //573
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //574
    {true, false, 0.453399, -2.709800, -1.975300, 0.000000, 0.000000, 180.000000}, //575
    {true, false, 0.658100, -3.092499, -2.043299, 0.000000, 0.000000, 180.000000}, //576
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //577
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //578
    {true, false, -0.424600, -2.890699, -2.102699, 0.000000, 0.000000, 180.000000}, //579
    {true, false, -0.408600, -2.872699, -2.092700, 0.000000, 0.000000, 180.000000}, //580
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //581
    {true, false, 0.444999, -3.395499, -2.334199, 0.000000, 0.000000, 180.000000}, //582
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //583
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //584
    {true, false, -0.428999, -3.143299, -1.889299, 0.000000, 0.000000, 180.000000}, //585
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //586
    {true, true, 0.698000, -2.692600, -2.056400, 0.000000, 0.000000, 180.000000}, //587
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //588
    {true, false, 0.583999, -2.358599, -1.965899, 0.000000, 0.000000, 180.000000}, //589
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //590
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //591
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //592
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //593
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //594
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //595
    {true, false, 0.577000, -2.622299, -2.138499, 0.000000, 0.000000, 180.000000}, //596
    {true, false, 0.577000, -2.622299, -2.138499, 0.000000, 0.000000, 180.000000}, //597
    {true, false, 0.595000, -2.678299, -2.002500, 0.000000, 0.000000, 180.000000}, //598
    {true, false, 0.440600, -2.773699, -2.239099, 0.000000, 0.000000, 180.000000}, //599
    {true, false, 0.442600, -2.763700, -2.054199, 0.000000, 0.000000, 180.000000}, //600
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //601
    {true, true, 0.560999, -2.523999, -2.200700, 0.000000, 0.000000, 180.000000}, //602
    {true, true, 0.587000, -2.661999, -2.192699, 0.000000, 0.000000, 180.000000}, //603
    {true, false, 0.425700, -2.877099, -2.124700, 0.000000, 0.000000, 180.000000}, //604
    {true, false, -0.411900, -2.767699, -2.098700, 0.000000, 0.000000, 180.000000}, //605
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //606
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //607
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //608
    {true, false, -0.477699, -3.106199, -2.359499, 0.000000, 0.000000, 180.000000}, //609
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000}, //610
    {false, false, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000} //611
};

new
    bool:Player_Fire_Enabled[MAX_PLAYERS],
    Player_Key_Sprint_Time[MAX_PLAYERS];

new Text: GostergeAsilHiz[MAX_PLAYERS];
new	Text: GostergeText[29];
new	GostergeRenkleri[] =
{
	0xFFFFFFFF, 0xFFF5F5FF, 0xFFECECFF, 0xFFE3E3FF, 0xFFDADAFF,
	0xFFD1D1FF, 0xFFC8C8FF, 0xFFBFBFFF, 0xFFB6B6FF, 0xFFADADFF,
	0xFFA3A3FF, 0xFF9A9AFF, 0xFF9191FF, 0xFF8888FF, 0xFF7F7FFF,
	0xFF7676FF, 0xFF6D6DFF, 0xFF6464FF, 0xFF5B5BFF, 0xFF5151FF,
	0xFF4848FF, 0xFF3F3FFF, 0xFF3636FF, 0xFF2D2DFF, 0xFF2424FF,
	0xFF1B1BFF, 0xFF1212FF, 0xFF0909FF, 0xFF0000FF
};

new specdeyimaq[MAX_PLAYERS];

new uf_VehicleSpeeds[] = // sýrasýyla araçlarýn max hýzý. rus bir kaynaktan alýndý.
{
	160, 160, 200, 120, 150, 165, 110, 170, 110, 180, 160, 240, 160, 160, 140,
	230, 155, 200, 150, 160, 180, 180, 165, 145, 170, 200, 200, 170, 170, 200,
	190, 130, 800, 180, 200, 120, 160, 160, 160, 160, 160, 750, 150, 150, 110,
	165, 190, 200, 190, 150, 120, 240, 190, 190, 190, 140, 160, 160, 165, 160,
	200, 190, 260, 190, 750, 750, 160, 160, 190, 200, 170, 160, 190, 190, 160,
	160, 200, 200, 150, 165, 200, 120, 150, 120, 190, 160, 100, 200, 200, 170,
	170, 160, 160, 190, 220, 170, 200, 200, 140, 140, 160, 750, 260, 260, 160,
	260, 230, 165, 140, 120, 140, 200, 200, 200, 120, 120, 165, 165, 160, 340,
	340, 190, 190, 190, 110, 160, 160, 160, 170, 160, 600, 700, 140, 200, 160,
	160, 160, 110, 110, 150, 160, 230, 160, 165, 260, 160, 160, 160, 200, 160,
	160, 165, 160, 200, 170, 180, 110, 110, 200, 200, 200, 200, 200, 200, 750,
	200, 160, 160, 170, 110, 110, 900, 600, 110, 600, 160, 160, 200, 110, 160,
	165, 190, 160, 170, 120, 165, 260, 200, 140, 200, 260, 120, 200, 200, 600,
	190, 200, 200, 200, 160, 165, 110, 200, 200, 260, 260, 160, 160, 160, 140,
	160, 260
};

new bool: Speedydeaglede[MAX_PLAYERS];
new speedyhap1;
new speedyhap2;
new speedyhap3;
new speedyhap4;
new speedyhap5;
new speedyhap6;
new speedyhap7;
new speedyhap8;
new speedyhap9;
new speedyhap10;
new speedyhap11;
new speedyhap12;
new speedyhap13;
new speedyhap14;
new speedyhap15;
new speedyhap16;
new speedyhap17;
new speedyhap18;
new speedyhap19;
new speedyhap20;
new speedyhap21;

new sarkisayim[MAX_PLAYERS];

new bool:Bankada[MAX_PLAYERS];

new Text: exptext0;
new Text: exptext1[MAX_PLAYERS];

new SpawnSilahiSecti[MAX_PLAYERS];

new pick1;
new pick2;
new pick3;
new pick4;
new pick5;
new pick6;
new pick7;
new pick8;
new pick9;
new pick10;
new pick11;
new pick12;
new pick13;
new pick14;
new pick15;
new pick16;
new pick17;
new pick18;
new pick19;
new pick20;
new pick21;
new pick22;
new pick23;

new CSTeamCT[MAX_PLAYERS];
new CSTeamT[MAX_PLAYERS];
new CSDe[MAX_PLAYERS];

new bool:GunGamedeAmk[MAX_PLAYERS];
new GunGameSkor[MAX_PLAYERS];

new Text:vote0;
new Text:vote1;
new Text:vote2;
new Text:vote3;
new Text:vote4;
new Text:vote5;
new Text:vote6;
new Text:vote7[MAX_PLAYERS];
new Text:vote8[MAX_PLAYERS];
new Voteactive;
new Yescount;
new Nocount;
new OyKullandi[MAX_PLAYERS];

new ZombieTeamHuman[MAX_PLAYERS];
new ZombieTeamZombie[MAX_PLAYERS];
new ZombieActive;
new Zombiede[MAX_PLAYERS];
new ZombieBasladi;
new ZombieTeamHumanCount;
new ZombieTeamZombieCount;

new HungerGameActive;
new HungerGamede[MAX_PLAYERS];
new HungerGameBasladi;

new muzikkapali[MAX_PLAYERS];

new VehicleNames[][] =
{
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel",
	"Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus",
	"Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection",
	"Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus",
	"Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie",
	"Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral",
	"Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder",
	"Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair", "Berkley's RC Van",
	"Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale",
	"Oceanic","Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy",
	"Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX",
	"Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
	"Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking",
	"Blista Compact", "Police Maverick", "Boxville", "Benson", "Mesa", "RC Goblin",
	"Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT",
	"Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt",
 	"Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra",
 	"FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
 	"Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer",
 	"Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
    "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo",
	"Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite",
	"Windsor", "Monster", "Monster", "Uranus", "Jester", "Sultan", "Stratium",
	"Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper",
	"Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400",
	"News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
	"Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car",
 	"Police Car", "Police Car", "Police Ranger", "Picador", "S.W.A.T", "Alpha",
 	"Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs", "Boxville",
 	"Tiller", "Utility Trailer"
};

new skinlist = mS_INVALID_LISTID;

static armedbody_pTick[MAX_PLAYERS];

new dialogflood[MAX_PLAYERS char];

enum _rTestInf
{
	bool: Durum,
	Timer, Timer2,
	Skor,
	Paraxx,
	Renk, strRenk[56]
};
new RenkTest[_rTestInf];

new Text:skorlar0;
new Text:skorlar1;
new Text:skorlar2[MAX_PLAYERS];
new Text:skorlar3;
new Text:skorlar4[MAX_PLAYERS];
new Text:skorlar5;
new Text:skorlar6[MAX_PLAYERS];
new Text:skorlar7[MAX_PLAYERS];
new Text:skorlar8[MAX_PLAYERS];
new Text:skorlar9;
new Text:skorlar10[MAX_PLAYERS];
new Text:skorlar11;
new Text:skorlar12;
new Text:skorlar13;
new Text:skorlar14;

new cetesavasidurum;

new Float:sonpos[MAX_PLAYERS][3];
new Float:pos4[MAX_PLAYERS];

new Text:PMSpec0;
new Text:PMSpec1;
new Text:PMSpec2;
new Text:PMSpec3;
new Text:PMSpec4;
new PMSpec0_Timer, PMSpec1_Timer, PMSpec2_Timer, PMSpec3_Timer, PMSpec4_Timer, PMSpec_C;

new Text: KomutSpec0;
new Text: KomutSpec1;
new Text: KomutSpec2;
new Text: KomutSpec3;
new Text: KomutSpec4;
new KomutSpec0_Timer, KomutSpec1_Timer, KomutSpec2_Timer, KomutSpec3_Timer, KomutSpec4_Timer, KomutSpec_C;

new karsitarafidsi;
new cetedueldavetci[MAX_PLAYERS];
new takim1sayisi[MAX_PLAYERS];
new takim2sayisi[MAX_PLAYERS];
new countTimer[MAX_PLAYERS], countingPlayer[MAX_PLAYERS];
new takim1say;
new takim2say;
new takim[MAX_PLAYERS];
new takim1cetesi[50][MAX_PLAYERS];
new takim2cetesi[50][MAX_PLAYERS];
new duelde[MAX_PLAYERS];

enum table
{
    tid,
    tablename[48],
    tableprice,
}
new Tables[][table] =
{
	{1281, "Düz Masa",100},
	{1432, "Düz Masa",120},
	{1594, "Düz Masa + Sandalye",150},
	{1825, "Zarif Masa + Sandalye",200},
	{1827, "Zarif Masa",75},
	{1433, "Oturma Odasý Masasý 1",55},
	{1516, "Oturma Odasý Masasý 2",50},
	{2311, "TV Masasý 1",70},
	{2313, "TV Masasý 2",75},
	{2315, "TV Masasý 3 ",65},
	{2346, "TV Masasý 4",50},
	{2635, "Pizzacý Masasý",50},
	{2762, "Kýrmýzý Masa ",75},
	{2799, "Siyah Masa + 2 Sandalye",90}
};

enum chair
{
    cid,
    chairname[48],
    chairprice,
}
new Chairs[][chair] =
{
	{1369, "Eski Tekerlekli Sandalye",50},
	{1663, "Ofis Sandalye 1",75},
	{1704, "Sandalye",120},
	{1705, "Sandalye 2",120},
	{1708, "Sandalye 3",100},
	{1711, "Sandalye 4",90},
	{1714, "Zarif Ofis Sandalyesi",80},
	{1720, "Zarif Sandalye",110},
	{1735, "Dinlenme Sandalyesi",115},
	{1739, "Toplantý Sandalyesi",110},
	{1806, "Bilgisayar Sandalyesi",85},
	{1811, "Yemek Sandalyesi",60},
	{2079, "Yemek Sandalyesi 2",70},
	{2120, "Yemek Sandalyesi 3",75}
};

enum bed
{
    bid,
    bedname[48],
    bedprice,
}
new Beds[][bed] =
{
	{1700, "Yatak",75},
	{1701, "Yatak 2",85},
	{1745, "Yatak 3",95},
	{1793, "Yatak 4",50},
	{1794, "Büyük Yatak",110},
	{1796, "Tekli Yatak ",100},
	{1797, "Otel Yataðý",130},
	{1798, "Otel Yataðý 2",120},
	{1799, "Misafir Yataðý",100},
	{1800, "Askeri Yatak",60},
	{1802, "Geniþ Yatak",150},
	{1803, "Büyük Yatak",160},
	{2299, "Zarif Yatak",100},
	{2563, "Normal Otel Yataðý",200},
	{2566, "Premium Otel Yataðý",230}
};

enum sofa
{
    sid,
    sofaname[48],
    sofaprice,
}
new Sofas[][sofa] =
{
	{1702, "Oturma Odasý Koltuðu 1",110},
	{1703, "Oturma Odasý Koltuðu 2",120},
	{1706, "Oturma Odasý Koltuðu 3",150},
	{1707, "Oturma Odasý Koltuðu 4",100},
	{1712, "Klasik Koltuk ",75},
	{1713, "Siyah Koltuk",160},
	{1753, "Gösteriþli Koltuk",170},
	{1756, "Klasik Koltuk 2",80},
	{1757, "Klasik Koltuk 3",80},
	{1760, "Normal Koltuk",80},
	{1761, "Gösteriþli Koltuk 2",220},
	{1763, "Yüksek Koltuk",100},
	{1764, "Klasik Koltuk 4",100},
	{1766, "Klasik Koltuk 5 ",100},
	{1768, "Normal Koltuk 2",110}
};

enum decoration
{
    did,
    decname[48],
    decprice,
}
new Decorations[][decoration] =
{
	{2833, "Halý",50},
	{1811, "Yemek Sandalye",70},
	{2510, "Model Uçak",50},
	{2285, "Tablo 1",50},
	{2286, "Tablo 2",50},
	{2267, "Tablo 3",50},
	{2274, "Tablo 4",50},
	{2251, "Vazo",60}
};

enum appl
{
    appid,
    appname[48],
    appprice,
}
new Appliances[][appl] =
{
	{1429, "Klasik TV",55},
	{1518, "Klasik TV 2]",60},
	{2297, "TV + TV Masa",100},
	{1429, "Klasik TV 3",55},
	{16377, "Kamera TV",65},
	{2131, "Beyaz Dolap",120},
	{2132, "Mutfak Tezgahý",115},
	{2170, "Ocak",75},
	{2340, "Küçük Dolap",75},
	{2421, "Mikrodalga",70},
	{2528, "Klozet",70},
	{2526, "Banyo",85},
	{1515, "Bahis Aleti",110}
};

enum THouseInterior
{
	InteriorName[50],
	InteriorID,
	Float:IntX,
	Float:IntY,
	Float:IntZ
}
new AHouseInteriors[][THouseInterior] =
{
	{"Dummy", 				12, 		2324.3735,-1148.8219,1050.7101},
	{"Small motel room", 	2, 	225.756989 ,1240.000000 ,1082.149902},
	{"Small house", 		1, 		222.9848,1287.5624,1082.1406},
	{"Small house 2", 		7, 	225.630997,1022.479980,1084.069946},
	{"Medium house", 		15, 	295.2057,1472.9973,1080.2578},
	{"Medium house 2",		15, 		327.9004,1478.2839,1084.4375},
	{"Duplex house",		15, 	385.803986,1471.769897,1080.209961},
	{"Big house", 			9, 	2255.0129,-1139.9670,1050.6328},
	{"Big duplex house", 	10, 		2269.3037,-1210.4395,1047.5625},
	{"Huge house", 			3, 		2496.0330,-1692.9246,1014.7422},
	{"Mansion", 			5, 		1299.14 , -794.77 , 1084.00}
};

new aVehicleNames[212][] =
{
	{"Landstalker"},{"Bravura"},{"Buffalo"},
	{"Linerunner"},{"Perrenial"},{"Sentinel"},{"Dumper"},
	{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},
	{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},
	{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},
	{"Esperanto"},{"Taxi"},{"Washington"},{"Bobcat"},
	{"Mr Whoopee"},{"BF Injection"},{"Hunter"},{"Premier"},
	{"Enforcer"},{"Securicar"},{"Banshee"},{"Predator"},
	{"Bus"},{"Rhino"},{"Barracks"}, {"Hotknife"},
	{"Trailer 1"}, {"Previon"},{"Coach"}, {"Cabbie"},
	{"Stallion"}, {"Rumpo"},{"RC Bandit"}, {"Romero"},
	{"Packer"}, {"Monster"},{"Admiral"}, {"Squalo"},
	{"Seasparrow"}, {"Pizzaboy"},{"Tram"}, {"Trailer 2"},
	{"Turismo"}, {"Speeder"},{"Reefer"}, {"Tropic"},
	{"Flatbed"}, {"Yankee"},{"Caddy"}, {"Solair"},
	{"Berkley's RC Van"}, {"Skimmer"},{"PCJ-600"}, {"Faggio"},
	{"Freeway"}, {"RC Baron"},{"RC Raider"}, {"Glendale"},
	{"Oceanic"}, {"Sanchez"},{"Sparrow"}, {"Patriot"},
	{"Quad"}, {"Coastguard"},{"Dinghy"}, {"Hermes"},
	{"Sabre"}, {"Rustler"},{"ZR-350"}, {"Walton"},
	{"Regina"}, {"Comet"},{"BMX"}, {"Burrito"},
	{"Camper"}, {"Marquis"},{"Baggage"}, {"Dozer"},
	{"Maverick"}, {"News Chopper"},{"Rancher"}, {"FBI Rancher"},
	{"Virgo"}, {"Greenwood"},{"Jetmax"}, {"Hotring"},
	{"Sandking"}, {"Blista Compact"},{"Police Maverick"}, {"Boxville"},
	{"Benson"}, {"Mesa"},{"RC Goblin"}, {"Hotring Racer A"},
	{"Hotring Racer B"}, {"Bloodring Banger"},{"Rancher"}, {"Super GT"},
	{"Elegant"}, {"Journey"},{"Bike"}, {"Mountain Bike"},
	{"Beagle"}, {"Cropdust"},{"Stunt"}, {"Tanker"},
	{"Roadtrain"}, {"Nebula"},{"Majestic"}, {"Buccaneer"},
	{"Shamal"}, {"Hydra"},{"FCR-900"}, {"NRG-500"},
	{"HPV1000"}, {"Cement Truck"},{"Tow Truck"}, {"Fortune"},
	{"Cadrona"}, {"FBI Truck"},{"Willard"}, {"Forklift"},
	{"Tractor"}, {"Combine"},{"Feltzer"}, {"Remington"},
	{"Slamvan"}, {"Blade"},{"Freight"}, {"Streak"},
	{"Vortex"}, {"Vincent"},{"Bullet"}, {"Clover"},
	{"Sadler"}, {"Firetruck LA"},{"Hustler"}, {"Intruder"},
	{"Primo"}, {"Cargobob"},{"Tampa"}, {"Sunrise"},
	{"Merit"}, {"Utility"},{"Nevada"}, {"Yosemite"},
	{"Windsor"}, {"Monster A"},{"Monster B"}, {"Uranus"},
	{"Jester"}, {"Sultan"},{"Stratum"}, {"Elegy"},
	{"Raindance"}, {"RC Tiger"},{"Flash"}, {"Tahoma"},
	{"Savanna"}, {"Bandito"},{"Freight Flat"}, {"Streak Carriage"},
	{"Kart"}, {"Mower"},{"Duneride"}, {"Sweeper"},
	{"Broadway"}, {"Tornado"},{"AT-400"}, {"DFT-30"},
	{"Huntley"}, {"Stafford"},{"BF-400"}, {"Newsvan"},
	{"Tug"}, {"Trailer 3"},{"Emperor"}, {"Wayfarer"},
	{"Euros"}, {"Hotdog"},{"Club"}, {"Freight Carriage"},
	{"Trailer 3"}, {"Andromada"},{"Dodo"}, {"RC Cam"},
	{"Launch"}, {"Police Car(LSPD)"},{"Police Car(SFPD)"}, {"Police Car(LVPD)"},
	{"Police Ranger"}, {"Picador"},{"S.W.A.T. Van"}, {"Alpha"},
	{"Phoenix"}, {"Glendale"},{"Sadler"}, {"Luggage Trailer A"},
	{"Luggage Trailer B"}, {"Stair Trailer"},{"Boxville"}, {"Farm Plow"},
	{"Utility Trailer"}
};

new GetCar[MAX_PLAYERS][10];
new GetObject[MAX_PLAYERS][30][2];
new vehlist = mS_INVALID_LISTID;
new tablelist = mS_INVALID_LISTID;
new chairlist = mS_INVALID_LISTID;
new bedlist = mS_INVALID_LISTID;
new sofalist = mS_INVALID_LISTID;
new declist = mS_INVALID_LISTID;
new applist = mS_INVALID_LISTID;

new ObjectSlotID[15000];
new ObjectHouseID[15000];
new bool:ObjectInSystem[15000];

enum EnumData
{
	PickupID,
	Text3D:DoorText,
	MapIconID,
	bool:Owned,
	Owner[MAX_PLAYER_NAME],
	HouseName[64],
	Float:HouseX,
	Float:HouseY,
	Float:HouseZ,
	HouseInterior,
	HousePrice,
	bool:HouseOpened,
	bool:HouseForSale,
	HouseSalePrice,
	VehicleIDs[10],
	CarSlots,
	EsyaModel[MAX_EV_ESYA],
	Float:EsyaX[MAX_EV_ESYA],
	Float:EsyaY[MAX_EV_ESYA],
	Float:EsyaZ[MAX_EV_ESYA],
	Float:EsyaRotX[MAX_EV_ESYA],
	Float:EsyaRotY[MAX_EV_ESYA],
	Float:EsyaRotZ[MAX_EV_ESYA],
	EsyaType[MAX_EV_ESYA],
	EsyaIDs[MAX_EV_ESYA]
}
new HouseData[MAX_HOUSES][EnumData];
new Iterator:Houses<MAX_HOUSES>;
enum CarEnumData
{
	HouseID,
	Model,
	PaintJob,
	Components[14],
	Color1,
	Color2,
	Float:SpawnX,
	Float:SpawnY,
	Float:SpawnZ,
	Float:SpawnRot
}
new CarData[MAX_HOUSE_VEHICLES][CarEnumData];
new Iterator:Cars<MAX_HOUSE_VEHICLES>;
new VehSystemID[MAX_VEHICLES];
new bool:VehInHouseSystem[MAX_VEHICLES];
enum PlayerEnumData
{
	Homes[2],
	CurrentHouse
}
new PlayerData[MAX_PLAYERS][PlayerEnumData];


enum VehiclePrices
{
	VehicleName[32],
	Price
};
new TopVehiclePrices[][VehiclePrices] =
{
	{"Infernus", 1750000},
 	{"NRG-500", 1750000},
	{"Turismo", 1500000},
	{"Super GT", 1500000},
 	{"Bullet", 1500000},
 	{"Elegy", 1500000},
  	{"Sultan", 1500000},
 	{"Hotring Racer B", 1500000},
 	{"Hotring Racer A", 1500000},
 	{"Comet", 1250000}
};

new VehicleList[137] =
{
	400,
	401,
	402,
	403,
	404,
	405,
	409,
	410,
	411,
	412,
	413,
	414,
	415,
	418,
	419,
	421,
	422,
	423,
	424,
	426,
	428,
	429,
	431,
	434,
	436,
	437,
	438,
	439,
	440,
	442,
	443,
	444,
	445,
	448,
	451,
	455,
	456,
	457,
	458,
	459,
	461,
	462,
	463,
	466,
	467,
	468,
	471,
	474,
	475,
	477,
	478,
	479,
	480,
	482,
	483,
	485,
	489,
	491,
	492,
	494,
	495,
	496,
	498,
	499,
	500,
	502,
	503,
	504,
	505,
	506,
	507,
	508,
	514,
	515,
	516,
	517,
	518,
	521,
	522,
	524,
	525,
	526,
	527,
	529,
	530,
	531,
	533,
	534,
	535,
	536,
	539,
	540,
	541,
	542,
	543,
	545,
	546,
	547,
	549,
	550,
	551,
	552,
	554,
	555,
	556,
	557,
	558,
	559,
	560,
	561,
	562,
	565,
	566,
	567,
	568,
	572,
	573,
	574,
	575,
	576,
	578,
	579,
	580,
	581,
	582,
	583,
	585,
	586,
	587,
	588,
	589,
	600,
	602,
	603,
	604,
	605,
	609
};

new fpsacik[MAX_PLAYERS];

new Jackpot = LOTTO_START;
new Numbers[100];
new loto_Timer = 0, lotoS_Timer = 0;

new ReactionTestString[RStringLength+1];
new bool:ReactionTestWon;

new isenable;
new answer;
new numberxd[4];

new Float: duelpos[][] =
{
	{-203.7536, 18.9743, 791.2534, 132.8007},
	{-203.7536, 36.7850, 791.2534, 312.0056}
};

enum CeteInfo
{
	cIsim[100],
	cTag[7],
	cRenk,
	cKasa,
	cSkin,
	cLevel,
	cExp,
	cMevcut,
	cKayit,
	cetebolgesayisi,
	cMekanID,
	cRank1[50],
	cRank2[50],
	cRank3[50],
	cRank4[50],
	cRank5[50],
	cRank6[50],
	cRank7[50],
	cRank8[50],
	cRank9[50],
	cRank10[50]
};
new Ceteler[MAX_CETE][CeteInfo];

new Iterator:ORs<MAX_CETE>;

new KurulusIsmi[MAX_PLAYERS][100];
new SecilencTag[MAX_PLAYERS][7];

new cetedekiuye[MAX_PLAYERS];
new ceteidsi[MAX_PLAYERS][40];

new CeteDaveet[MAX_PLAYERS];

enum cInff
{
	cInffisim[60],
	cInffrenk,
	cInffrenk2[10],
	cInffrenkkodu
};

new Text3D:Banks;
new Banka;

new parkour_Timer = 0;

enum pVarz
{
	bool: Durum,
	Map,
	Float:_pX,
	Float:_pY,
	Float:_pZ
};
new ParkourInfo[pVarz];

new teleport[MAX_PLAYERS];

new bool:hizacik[MAX_PLAYERS];
new bool:ziplamaacik[MAX_PLAYERS];

new pmkapali[MAX_PLAYERS];

new Text:FPS[MAX_PLAYERS];
new DLlast[MAX_PLAYERS] = 0;
new FPS2[MAX_PLAYERS] = 0;

new Text3D: siraclabel[MAX_PLAYERS];

new degisken[MAX_PLAYERS][50];

new Spectekiler[MAX_PLAYERS];
new Float:pPos[MAX_PLAYERS][4];
new specyaptim[MAX_PLAYERS];

new duyurutimer = -1;
new Text:duyuru;

new DMZoneOyuncuModu[MAX_PLAYERS];

static pmodelid[MAX_PLAYERS];
static pvehicleid[MAX_PLAYERS];

new Float: DmSpawnk1[][] = // - Deagle
{
	{1229.2974, -718.7531, 1084.1910},
	{1222.7040, -718.2886, 1084.1910},
	{1215.3466, -717.9938, 1084.1910},
	{1220.6638, -709.9958, 1084.1910},
	{1230.4607, -704.1064, 1084.1910}
};

forward DmSpawn1(playerid); // - Deagle
public DmSpawn1(playerid)
{
	new rand = random(sizeof(DmSpawnk1));
	SetPlayerPos(playerid, DmSpawnk1[rand][0], DmSpawnk1[rand][1], DmSpawnk1[rand][2]);
	return true;
}

new Float: DmSpawnk2[][] = // - MG1
{
	{198.9551, 475.0042, 8.9185},
	{188.2348, 488.6447, 7.9074},
	{171.3735, 502.1091, 4.5663},
	{190.1533, 513.3741, 5.6893},
	{217.6210, 512.9470, 6.4576},
	{218.8879, 491.8536, 9.0295},
	{230.3637, 457.4511, 12.1600},
	{239.1902, 431.1649, 12.6528},
	{203.7475, 434.7208, 10.1021},
	{180.7946, 412.9809, 9.5758}
};

forward DmSpawn2(playerid); // - MG1
public DmSpawn2(playerid)
{
	new rand = random(sizeof(DmSpawnk2));
	SetPlayerPos(playerid, DmSpawnk2[rand][0], DmSpawnk2[rand][1], DmSpawnk2[rand][2]);
	return true;
}

new Float: DmSpawnk3[][] = // - Knife
{
	{130.1810, 48.5242, 1005.1258},
	{135.8542, 49.2180, 1005.1258},
	{135.4739, 53.0290, 1005.1258},
	{129.9073, 52.3277, 1005.1258}
};

forward DmSpawn3(playerid); // - Knife
public DmSpawn3(playerid)
{
	new rand = random(sizeof(DmSpawnk3));
	SetPlayerPos(playerid, DmSpawnk3[rand][0], DmSpawnk3[rand][1], DmSpawnk3[rand][2]);
	return true;
}

new Float: DmSpawnk4[][] = // - Sniper
{
	{1324.8605, -865.6270, 133.5553},
	{1225.6356, -850.4396, 137.9689},
	{1249.5096, -865.0491, 133.2558},
	{1351.8358, -810.6813, 133.5390},
	{1352.9919, -765.9754, 133.5390}
};

forward DmSpawn4(playerid); // - Sniper
public DmSpawn4(playerid)
{
	new rand = random(sizeof(DmSpawnk4));
	SetPlayerPos(playerid, DmSpawnk4[rand][0], DmSpawnk4[rand][1], DmSpawnk4[rand][2]);
	return true;
}

new dmyasagi[MAX_PLAYERS];
new dmde[MAX_PLAYERS char];
new lCountDown;
new gerisayimbaslatanid=-1;
new etkyaptim[MAX_PLAYERS];

new bool: ilkhs;
new rows,fields;
new FreezeTimer[MAX_PLAYERS]=-1;
new IsGodCar[MAX_VEHICLES];
new EklenenLight[MAX_PLAYERS];
new EklenenFar[MAX_PLAYERS];
new ldurum, lBasladi, Float:gX,Float:gY,Float:gZ,Float:gC,lkackisi,lKatildim[MAX_PLAYERS],lEtkinlikte[MAX_PLAYERS];

new Float:lX,Float:lY,Float:lZ,Float:zC,Float:lC;
new etkLocali[MAX_PLAYERS];
native gpci(playerid,serial[],maxlen);
new JailTimer[MAX_PLAYERS]=-1;

new CeteColor[10][cInff] =
{
	{"Beyaz", 118, "FFFFFF", 0xFFFFFFAA},
	{"Kýrmýzý", 134, "FF0000", 0xFF0000AA},
	{"Sarý", 162, "FFFF00", 0xFFFF00AA},
	{"Mavi", 166, "0000FF", 0x0000FFAA},
	{"Mor", 145, "800080", 0x800080AA},
	{"Pembe", 175, "FF0080", 0xFF0080FF},
	{"Turuncu", 158, "FFA500", 0xFFA500AA},
	{"Yeþil", 158, "228B22", 0x228B22FF},
	{"Gri", 158, "808080", 0x808080FF},
	{"Kahverengi", 158, "BF5F00", 0xBF5F00FF}
};

new Float: jailpos[][] =
{
	{1757.472412, -1564.134765, 1734.942993},
	{1762.099853, -1563.180297, 1734.942993},
	{1766.315063, -1563.248168, 1734.942993},
	{1770.392211, -1563.619628, 1734.942993},
	{1774.503662, -1563.794311, 1734.942993},
	{1778.717529, -1564.111083, 1734.942993},
	{1778.499511, -1582.975097, 1734.942993},
	{1774.340820, -1583.029541, 1734.942993},
	{1770.402099, -1583.185058, 1734.942993},
	{1765.928588, -1581.980468, 1734.942993},
	{1761.706787, -1582.784545, 1734.942993},
	{1757.424926, -1582.484375, 1734.942993}
};

new isCbug[MAX_PLAYERS+1];
new bool:disparou[MAX_PLAYERS+1] = false;
new Float:ccount[4][MAX_PLAYERS+1];
new sstr[128];
new str1[256];
new fileToWrite[] = "topcbug.ini";
new Float:tops[5];
new jogtops[5][MAX_PLAYER_NAME+1];
new bool:False = false, _S_T_R_[1024];

new PlayerColors[200] =
{
	0xFF8C13FF,0xC715FFFF,0x20B2AAFF,0xDC143CFF,0x6495EDFF,0xf0e68cFF,0x778899FF,0xFF1493FF,0xF4A460FF,
	0xEE82EEFF,0xFFD720FF,0x8b4513FF,0x4949A0FF,0x148b8bFF,0x14ff7fFF,0x556b2fFF,0x0FD9FAFF,0x10DC29FF,
	0x534081FF,0x0495CDFF,0xEF6CE8FF,0xBD34DAFF,0x247C1BFF,0x0C8E5DFF,0x635B03FF,0xCB7ED3FF,0x65ADEBFF,
	0x5C1ACCFF,0xF2F853FF,0x11F891FF,0x7B39AAFF,0x53EB10FF,0x54137DFF,0x275222FF,0xF09F5BFF,0x3D0A4FFF,
	0x22F767FF,0xD63034FF,0x9A6980FF,0xDFB935FF,0x3793FAFF,0x90239DFF,0xE9AB2FFF,0xAF2FF3FF,0x057F94FF,
	0xB98519FF,0x388EEAFF,0x028151FF,0xA55043FF,0x0DE018FF,0x93AB1CFF,0x95BAF0FF,0x369976FF,0x18F71FFF,
	0x4B8987FF,0x491B9EFF,0x829DC7FF,0xBCE635FF,0xCEA6DFFF,0x20D4ADFF,0x2D74FDFF,0x3C1C0DFF,0x12D6D4FF,
	0x48C000FF,0x2A51E2FF,0xE3AC12FF,0xFC42A8FF,0x2FC827FF,0x1A30BFFF,0xB740C2FF,0x42ACF5FF,0x2FD9DEFF,
	0xFAFB71FF,0x05D1CDFF,0xC471BDFF,0x94436EFF,0xC1F7ECFF,0xCE79EEFF,0xBD1EF2FF,0x93B7E4FF,0x3214AAFF,
	0x184D3BFF,0xAE4B99FF,0x7E49D7FF,0x4C436EFF,0xFA24CCFF,0xCE76BEFF,0xA04E0AFF,0x9F945CFF,0xDCDE3DFF,
	0x10C9C5FF,0x70524DFF,0x0BE472FF,0x8A2CD7FF,0x6152C2FF,0xCF72A9FF,0xE59338FF,0xEEDC2DFF,0xD8C762FF,
	0xD8C762FF,0xFF8C13FF,0xC715FFFF,0x20B2AAFF,0xDC143CFF,0x6495EDFF,0xf0e68cFF,0x778899FF,0xFF1493FF,
	0xF4A460FF,0xEE82EEFF,0xFFD720FF,0x8b4513FF,0x4949A0FF,0x148b8bFF,0x14ff7fFF,0x556b2fFF,0x0FD9FAFF,
	0x10DC29FF,0x534081FF,0x0495CDFF,0xEF6CE8FF,0xBD34DAFF,0x247C1BFF,0x0C8E5DFF,0x635B03FF,0xCB7ED3FF,
	0x65ADEBFF,0x5C1ACCFF,0xF2F853FF,0x11F891FF,0x7B39AAFF,0x53EB10FF,0x54137DFF,0x275222FF,0xF09F5BFF,
	0x3D0A4FFF,0x22F767FF,0xD63034FF,0x9A6980FF,0xDFB935FF,0x3793FAFF,0x90239DFF,0xE9AB2FFF,0xAF2FF3FF,
	0x057F94FF,0xB98519FF,0x388EEAFF,0x028151FF,0xA55043FF,0x0DE018FF,0x93AB1CFF,0x95BAF0FF,0x369976FF,
	0x18F71FFF,0x4B8987FF,0x491B9EFF,0x829DC7FF,0xBCE635FF,0xCEA6DFFF,0x20D4ADFF,0x2D74FDFF,0x3C1C0DFF,
	0x12D6D4FF,0x48C000FF,0x2A51E2FF,0xE3AC12FF,0xFC42A8FF,0x2FC827FF,0x1A30BFFF,0xB740C2FF,0x42ACF5FF,
	0x2FD9DEFF,0xFAFB71FF,0x05D1CDFF,0xC471BDFF,0x94436EFF,0xC1F7ECFF,0xCE79EEFF,0xBD1EF2FF,0x93B7E4FF,
	0x3214AAFF,0x184D3BFF,0xAE4B99FF,0x7E49D7FF,0x4C436EFF,0xFA24CCFF,0xCE76BEFF,0xA04E0AFF,0x9F945CFF,
	0xDCDE3DFF,0x10C9C5FF,0x70524DFF,0x0BE472FF,0x8A2CD7FF,0x6152C2FF,0xCF72A9FF,0xE59338FF,0xEEDC2DFF,
	0xD8C762FF,0xD8C762FF
};

new estring[1000];
new fstring[1000];
new Text:eMessage[2][5];
new MessageStr[2][5][1024];
new EVT[5]=-1;
new ats[256];
new atx[256];

new vehNames[212][] =
{
	{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},{"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},{"Washington"},
	{"Bobcat"},{"Mr Whoopee"},{"BF Injection"},{"Hunter"},{"Premier"},{"Enforcer"},{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Trailer 1"},{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},{"Romero"},{"Packer"},{"Monster"},
	{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Trailer 2"},{"Turismo"},{"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},{"Berkley's RC Van"},{"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},
	{"Sanchez"},{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},{"Virgo"},{"Greenwood"},
	{"Jetmax"},{"Hotring"},{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},{"Rancher"},{"Super GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},
	{"Tanker"}, {"Roadtrain"},{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},{"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},
	{"Blade"},{"Freight"},{"Streak"},{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},
	{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},{"Kart"},{"Mower"},{"Duneride"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},
	{"Tug"},{"Trailer 3"},{"EmpHata"},{"Wayfarer"},{"Euros"},{"Hotdog"},{"Club"},{"Freight Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car(LSPD)"},{"Police Car(SFPD)"},{"Police Car(LVPD)"},{"Police Ranger"},{"Picador"},{"S.W.A.T. Van"},{"Alpha"},{"Phoenix"},{"Glendale"},
	{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},{"Boxville"},{"Farm Plow"},{"Utility Trailer"}
};

new carobj[MAX_VEHICLES][45];
new v1 = mS_INVALID_LISTID;
new v2 = mS_INVALID_LISTID;
new v3 = mS_INVALID_LISTID;
new v4 = mS_INVALID_LISTID;
new v5 = mS_INVALID_LISTID;
new v6 = mS_INVALID_LISTID;
new v7 = mS_INVALID_LISTID;
new v8 = mS_INVALID_LISTID;
new v9 = mS_INVALID_LISTID;
new v10 = mS_INVALID_LISTID;
new v11 = mS_INVALID_LISTID;
new v12 = mS_INVALID_LISTID;
new v13 = mS_INVALID_LISTID;
new v14 = mS_INVALID_LISTID;
new v15 = mS_INVALID_LISTID;
new v16 = mS_INVALID_LISTID;
new v17 = mS_INVALID_LISTID;

new Text: AltTextler[41];

new Float: spawnzone[][] =
{
	/*{2526.9333, 2034.8307, 11.2637},//lv ilk
	{1265.1481, -1651.8574, 13.7288},//ls ilk
	{-2388.7375, -8.4934, 37.2643},//sf ilk
	{-2399.2366,-594.3388,136.7155},//sf3
	{-2890.3376,473.2331,10.5415},//sf2
	{2958.3733,-1499.8151,13.0279},//ls2
	{-1626.5522, 662.7507, 13.0196}//YILBAÞI SPAWN*/
	{1262.7401, -2020.7177, 60.4040},
	{2323.9287, 1283.0664, 97.8530},
	{-1255.9584, 34.6934, 14.4883},
	{-719.6172, 2001.2847, 1.4080},
	{1281.8262, -1307.0850, 13.3771}
};

// =============================[ENUMLAR]================================== //

enum PData
{
	sqlid,
	kullaniciadi[24],
	money,
	Olum,
	Oldurme,
	dLevel,
	pCEO,
	score,
	Giris,
	LastOn[50],
 	RegisteredDate[50],
	bannedxd,
	Kayitli,
	Jailed,
	JailTime,
	language,
	Float:pinfox,
	Float:pinfoy,
	Float:pinfoz,
	pinfointerior,
	pinfoworld,
	onlinet,
	skinplayer,
	rengim,
	PlayerCeteID,
	PlayerCeteRutbeID,
	HeadShots,
    dukkanivar,
    YetkiIsim[500],
    VIP,
    VIP_Sure,
    cekilisgun,
    dukkanalimzaman,
    dukkansatimzaman,
    BitCoin,
    DaireIzin,
    EtkSayisi,
    GunlukSpec,
    GunlukEtk,
    KisiselDurum[850],
    exp,
	seviye,
	maxexp,
	mute_,
	ratio,
	GLKredi,
    // -------------------------------------------------------------------------------
    AWarings,
    bool: AFK,
	Muted,
	God,
	GodCar,
	Warnings,
	SpecID,
	SpecType,
	pmspec,
	Arac,
	Etkinlik_Sayac,
	Etkinlik_Timer,
	bool: Parkour,
	SKTimer,
	bank,
	pSkin,
	Kombo,
	Spawned,
	AFK_Timer
};
new PlayerInfo[MAX_PLAYERS][PData];

stock GivePlayerMoney_R(playerid,para)return GivePlayerMoney(playerid,para);
stock GivePlayerMoney_M(playerid,para)
{
	PlayerInfo[playerid][money] += para;
	GivePlayerMoney(playerid,para);
}
#define GivePlayerMoney GivePlayerMoney_M
stock ResetPlayerMoney_M(playerid)
{
	PlayerInfo[playerid][money] = 0;
	return ResetPlayerMoney(playerid);
}
#define ResetPlayerMoney ResetPlayerMoney_M
stock SetPlayerMoney(playerid,para)
{
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid,para);
}
stock GetPlayerMoney_M(playerid)
{
	return PlayerInfo[playerid][money];
}
#define GetPlayerMoney GetPlayerMoney_M

// ======================================================================= //

forward ConnectMySQL();
public ConnectMySQL()
{
	mysqlC = mysql_connect(SQL_HOST, SQL_USER, SQL_PASS, SQL_DB);
	mysql_log(ALL);
	if(mysql_errno(mysqlC) == 0)
	{
		print("» Veritabanýna baðlantý kuruldu. Bilgiler yüklendi.");
		mysql_query(mysqlC, "SET NAMES `latin5`");
	    mysql_query(mysqlC, "SET CHARACTER SET `latin5`");
	    mysql_query(mysqlC, "SET COLLATION_CONNECTION = `latin5_turkish_ci`");
	    mysql_tquery(mysqlC, "SET NAMES 'latin5'");
	}
	else
	{
		print("» Veritabanýna baðlantý kurulamadý, sunucu kapatýlýyor.");
		SendRconCommand("exit");
		return false;
	}
	return true;
}

CB: SpecEtkSifirla()
{
    new hour, minute, second;
	gettime(hour, minute, second);

	if(hour == 00)
	{
	    KillTimer(SpecEtkSifirla_Timer);
	    new sql[500];
	    format(sql, sizeof(sql), "UPDATE `oyuncular` SET `GunlukSpec` = '0', `GunlukEtk` = '0'");
	    mysql_query(mysqlC, sql);

	    foreach(new i: Player)
	    {
	        PlayerInfo[i][GunlukSpec] = 0;
	        PlayerInfo[i][GunlukEtk] = 0;
	        SavePlayer(i);
	    }

	    SetTimer("SpecEtkAktiflestir", 3600000, false);
	}
	return true;
}

CB: SpecEtkAktiflestir()
{
    SpecEtkSifirla_Timer = SetTimer("SpecEtkSifirla", 1000, true);
	return true;
}

public OnGameModeInit()
{
	AntiDeAMX();
	WasteDeAMXersTime();

	ConnectMySQL();

	SpecEtkSifirla_Timer = SetTimer("SpecEtkSifirla", 1000, true);

	mysql_query(mysqlC, "SELECT * FROM `sunucu_ayarlari`");
	cache_get_value_name_int(0, "rekor", SunucuRekoru);
	cache_get_value_name_int(0, "rekortarih", SunucuRekoru_Tarih);
	new tarih[128];
	TimeStampTamTarih(SunucuRekoru_Tarih, tarih);
	printf("» Sunucu rekoru yüklendi: %d | %s", SunucuRekoru, tarih);

	borsadurumpara = 500000;
	borsadurumskor = 50;

	SetVehiclePassengerDamage(true);
	SetDisableSyncBugs(true);

	SetTimer("dukkanbiriktir", 3600000, true);

	new p = GetMaxPlayers();
	for (new i = 0; i < p; i++)
	{
		SetPVarInt(i, "laser", 0);
		SetPVarInt(i, "color", 18643);
	}

	vipdairegiris = CreateDynamicObject(19912, -2152.57471, 1361.80615, 8.38083,   0.00000, 0.00000, 0.31228);
	vip_anaasansor = CreateDynamicObject(18755, -2159.36719, 1450.12793, 7.75996,   0.00000, 0.00000, 90.36002);
	vip_anaasansor_solkapi = CreateDynamicObject(18756, -2161.32129, 1450.09326, 7.75941,   0.00000, 0.00000, 88.97999);
	vip_anaasansor_sagkapi = CreateDynamicObject(18756, -2157.27637, 1446.30811, 7.75941,   0.00000, 0.00000, 271.43979);
	vip_enustkat_sagkapi = CreateDynamicObject(18756, -2156.57568, 1447.15735, 71.24793,   0.00000, 0.00000, 271.43979);
	vip_enustkat_solkapi = CreateDynamicObject(18756, -2160.2600, 1450.9520, 71.2554,   0.00000, 0.00000, 88.97999);
	vip_enustkat_sagdairekapi = CreateDynamicObject(1504, -2168.54053, 1437.56177, 69.53742,   0.00000, 0.00000, 89.40000);
	vip_enustkat_soldairekapi = CreateDynamicObject(1504, -2148.53369, 1437.63354, 69.25283,   0.00000, 0.00000, 90.06000);
	vip_daire_bolge = Area_AddBox(-2220.1235, 1355.2682, -2096.8767, 1478.3893);
    Create3DTextLabel(""ad"Asansörü çaðýrmak için "wb"'Y' "ad"tuþuna basýnýz.", -1, -2157.3411, 1447.5414, 5.8281, 20, 0);
    Create3DTextLabel(""ad"Gideceðiniz katý seçmek için "wb"'N' "ad"tuþuna basýnýz.", -1, -2157.3269, 1450.0746, 5.8340, 20, 0);
    Create3DTextLabel(""ad"GAMERLITY VIP KONUTLARI\n"wb"« BU BÖLGEYE SADECE VIP OYUNCULAR GÝREBÝLÝR! »", -1, -2158.5325,1356.0355,7.7480, 40, 0);
	AsansorKat = 0;
	AsansorAktif = false;

	Yaris_Top5[0] = TextDrawCreate(148.506561, 299.666625, "box");
	TextDrawLetterSize(Yaris_Top5[0], 0.000000, 12.389457);
	TextDrawTextSize(Yaris_Top5[0], 324.000000, 0.000000);
	TextDrawAlignment(Yaris_Top5[0], 1);
	TextDrawColor(Yaris_Top5[0], -1);
	TextDrawUseBox(Yaris_Top5[0], 1);
	TextDrawBoxColor(Yaris_Top5[0], 51);
	TextDrawSetShadow(Yaris_Top5[0], 0);
	TextDrawSetOutline(Yaris_Top5[0], 0);
	TextDrawBackgroundColor(Yaris_Top5[0], 255);
	TextDrawFont(Yaris_Top5[0], 1);
	TextDrawSetProportional(Yaris_Top5[0], 1);
	TextDrawSetShadow(Yaris_Top5[0], 0);

	Yaris_Top5[1] = TextDrawCreate(230.966339, 304.916656, "~r~~h~\"Drifting\" ~y~Top 5");
	TextDrawLetterSize(Yaris_Top5[1], 0.280995, 1.109999);
	TextDrawAlignment(Yaris_Top5[1], 2);
	TextDrawColor(Yaris_Top5[1], -1);
	TextDrawSetShadow(Yaris_Top5[1], 0);
	TextDrawSetOutline(Yaris_Top5[1], 1);
	TextDrawBackgroundColor(Yaris_Top5[1], 85);
	TextDrawFont(Yaris_Top5[1], 1);
	TextDrawSetProportional(Yaris_Top5[1], 1);
	TextDrawSetShadow(Yaris_Top5[1], 0);

	Yaris_Top5[2] = TextDrawCreate(235.183013, 317.749694, "====================");
	TextDrawLetterSize(Yaris_Top5[2], 0.362049, 1.384166);
	TextDrawAlignment(Yaris_Top5[2], 2);
	TextDrawColor(Yaris_Top5[2], -5963521);
	TextDrawSetShadow(Yaris_Top5[2], 0);
	TextDrawSetOutline(Yaris_Top5[2], 0);
	TextDrawBackgroundColor(Yaris_Top5[2], 255);
	TextDrawFont(Yaris_Top5[2], 1);
	TextDrawSetProportional(Yaris_Top5[2], 1);
	TextDrawSetShadow(Yaris_Top5[2], 0);

	Yaris_Top5[3] = TextDrawCreate(151.317749, 334.083251, "~b~~h~1) ~w~~h~flareoNNN - 1 dakika ve 10 saniye");
	TextDrawLetterSize(Yaris_Top5[3], 0.221962, 1.238333);
	TextDrawAlignment(Yaris_Top5[3], 1);
	TextDrawColor(Yaris_Top5[3], -1);
	TextDrawSetShadow(Yaris_Top5[3], 0);
	TextDrawSetOutline(Yaris_Top5[3], 1);
	TextDrawBackgroundColor(Yaris_Top5[3], 85);
	TextDrawFont(Yaris_Top5[3], 1);
	TextDrawSetProportional(Yaris_Top5[3], 1);
	TextDrawSetShadow(Yaris_Top5[3], 0);

	Yaris_Top5[4] = TextDrawCreate(151.317749, 348.684143, "~b~~h~2) ~w~~h~Alper. - 1 dakika ve 25 saniye");
	TextDrawLetterSize(Yaris_Top5[4], 0.221962, 1.238333);
	TextDrawAlignment(Yaris_Top5[4], 1);
	TextDrawColor(Yaris_Top5[4], -1);
	TextDrawSetShadow(Yaris_Top5[4], 0);
	TextDrawSetOutline(Yaris_Top5[4], 1);
	TextDrawBackgroundColor(Yaris_Top5[4], 85);
	TextDrawFont(Yaris_Top5[4], 1);
	TextDrawSetProportional(Yaris_Top5[4], 1);
	TextDrawSetShadow(Yaris_Top5[4], 0);

	Yaris_Top5[5] = TextDrawCreate(151.317749, 363.785064, "~b~~h~3) ~w~~h~Lordax - 1 dakika ve 30 saniye");
	TextDrawLetterSize(Yaris_Top5[5], 0.221962, 1.238333);
	TextDrawAlignment(Yaris_Top5[5], 1);
	TextDrawColor(Yaris_Top5[5], -1);
	TextDrawSetShadow(Yaris_Top5[5], 0);
	TextDrawSetOutline(Yaris_Top5[5], 1);
	TextDrawBackgroundColor(Yaris_Top5[5], 85);
	TextDrawFont(Yaris_Top5[5], 1);
	TextDrawSetProportional(Yaris_Top5[5], 1);
	TextDrawSetShadow(Yaris_Top5[5], 0);

	Yaris_Top5[6] = TextDrawCreate(151.317749, 378.285949, "~b~~h~4) ~w~~h~Ethernos - 1 dakika ve 45 saniye");
	TextDrawLetterSize(Yaris_Top5[6], 0.221962, 1.238333);
	TextDrawAlignment(Yaris_Top5[6], 1);
	TextDrawColor(Yaris_Top5[6], -1);
	TextDrawSetShadow(Yaris_Top5[6], 0);
	TextDrawSetOutline(Yaris_Top5[6], 1);
	TextDrawBackgroundColor(Yaris_Top5[6], 85);
	TextDrawFont(Yaris_Top5[6], 1);
	TextDrawSetProportional(Yaris_Top5[6], 1);
	TextDrawSetShadow(Yaris_Top5[6], 0);

	Yaris_Top5[7] = TextDrawCreate(151.317749, 393.686889, "~b~~h~5) ~w~~h~Nicromany. - 1 dakika ve 59 saniye");
	TextDrawLetterSize(Yaris_Top5[7], 0.221962, 1.238333);
	TextDrawAlignment(Yaris_Top5[7], 1);
	TextDrawColor(Yaris_Top5[7], -1);
	TextDrawSetShadow(Yaris_Top5[7], 0);
	TextDrawSetOutline(Yaris_Top5[7], 1);
	TextDrawBackgroundColor(Yaris_Top5[7], 85);
	TextDrawFont(Yaris_Top5[7], 1);
	TextDrawSetProportional(Yaris_Top5[7], 1);
	TextDrawSetShadow(Yaris_Top5[7], 0);

	VitesTD[0] = TextDrawCreate(259.077453, 136.916656, "SIMDI VITESI AT! (H)");
	TextDrawLetterSize(VitesTD[0], 0.400000, 1.600000);
	TextDrawAlignment(VitesTD[0], 1);
	TextDrawColor(VitesTD[0], 16711935);
	TextDrawSetShadow(VitesTD[0], 0);
	TextDrawSetOutline(VitesTD[0], -1);
	TextDrawBackgroundColor(VitesTD[0], 34);
	TextDrawFont(VitesTD[0], 1);
	TextDrawSetProportional(VitesTD[0], 1);
	TextDrawSetShadow(VitesTD[0], 0);

	VitesTD[1] = TextDrawCreate(250.175750, 128.749938, "box");
	TextDrawLetterSize(VitesTD[1], 0.000000, 3.674964);
	TextDrawTextSize(VitesTD[1], 393.000000, 0.000000);
	TextDrawAlignment(VitesTD[1], 1);
	TextDrawColor(VitesTD[1], -1);
	TextDrawUseBox(VitesTD[1], 1);
	TextDrawBoxColor(VitesTD[1], 51);
	TextDrawSetShadow(VitesTD[1], 0);
	TextDrawSetOutline(VitesTD[1], 0);
	TextDrawBackgroundColor(VitesTD[1], 255);
	TextDrawFont(VitesTD[1], 1);
	TextDrawSetProportional(VitesTD[1], 1);
	TextDrawSetShadow(VitesTD[1], 0);

	CreditsText0 = TextDrawCreate(390.000000, 115.988891, "usebox");
	TextDrawLetterSize(CreditsText0, 0.000000, 23.950002);
	TextDrawTextSize(CreditsText0, 255.000000, 0.000000);
	TextDrawAlignment(CreditsText0, 1);
	TextDrawColor(CreditsText0, 0);
	TextDrawUseBox(CreditsText0, true);
	TextDrawBoxColor(CreditsText0, -239);
	TextDrawSetShadow(CreditsText0, 0);
	TextDrawSetOutline(CreditsText0, 0);
	TextDrawFont(CreditsText0, 0);

	CreditsText1 = TextDrawCreate(387.500000, 113.866668, "LD_SPAC:white");
	TextDrawLetterSize(CreditsText1, 0.000000, 0.000000);
	TextDrawTextSize(CreditsText1, 0.500000, 219.644439);
	TextDrawAlignment(CreditsText1, 1);
	TextDrawColor(CreditsText1, -1);
	TextDrawSetShadow(CreditsText1, 0);
	TextDrawSetOutline(CreditsText1, 0);
	TextDrawFont(CreditsText1, 4);

	CreditsText2 = TextDrawCreate(257.500000, 114.244445, "LD_SPAC:white");
	TextDrawLetterSize(CreditsText2, 0.000000, 0.000000);
	TextDrawTextSize(CreditsText2, 0.500000, 219.644439);
	TextDrawAlignment(CreditsText2, 1);
	TextDrawColor(CreditsText2, -1);
	TextDrawSetShadow(CreditsText2, 0);
	TextDrawSetOutline(CreditsText2, 0);
	TextDrawFont(CreditsText2, 4);

	CreditsText3 = TextDrawCreate(390.500000, 93.588890, "usebox");
	TextDrawLetterSize(CreditsText3, 0.000000, 2.033950);
	TextDrawTextSize(CreditsText3, 255.000000, 0.000000);
	TextDrawAlignment(CreditsText3, 1);
	TextDrawColor(CreditsText3, 0);
	TextDrawUseBox(CreditsText3, true);
	TextDrawBoxColor(CreditsText3, 102);
	TextDrawSetShadow(CreditsText3, 0);
	TextDrawSetOutline(CreditsText3, 0);
	TextDrawFont(CreditsText3, 0);

	CreditsText4 = TextDrawCreate(288.500000, 95.199951, "GamerLity - Credits");
	TextDrawLetterSize(CreditsText4, 0.182000, 1.400889);
	TextDrawAlignment(CreditsText4, 1);
	TextDrawColor(CreditsText4, -1);
	TextDrawSetShadow(CreditsText4, 0);
	TextDrawSetOutline(CreditsText4, 1);
	TextDrawBackgroundColor(CreditsText4, 51);
	TextDrawFont(CreditsText4, 1);
	TextDrawSetProportional(CreditsText4, 1);

	CreditsText5 = TextDrawCreate(283.000000, 68.444442, "LD_SPAC:white");
	TextDrawLetterSize(CreditsText5, 0.000000, 0.000000);
	TextDrawTextSize(CreditsText5, -0.500000, 0.000000);
	TextDrawAlignment(CreditsText5, 1);
	TextDrawColor(CreditsText5, -1);
	TextDrawSetShadow(CreditsText5, 0);
	TextDrawSetOutline(CreditsText5, 0);
	TextDrawFont(CreditsText5, 4);

	CreditsText6 = TextDrawCreate(279.000000, 92.088882, "ld_tatt:9homby");
	TextDrawLetterSize(CreditsText6, 0.449999, 1.600000);
	TextDrawTextSize(CreditsText6, -22.000000, 23.022264);
	TextDrawAlignment(CreditsText6, 1);
	TextDrawColor(CreditsText6, -2139094785);
	TextDrawSetShadow(CreditsText6, 0);
	TextDrawSetOutline(CreditsText6, 1);
	TextDrawBackgroundColor(CreditsText6, 51);
	TextDrawFont(CreditsText6, 4);
	TextDrawSetProportional(CreditsText6, 1);

	CreditsText7 = TextDrawCreate(338.500000, 115.733306, "ld_tatt:9crown");
	TextDrawLetterSize(CreditsText7, 0.449999, 1.600000);
	TextDrawTextSize(CreditsText7, -36.500000, 30.488895);
	TextDrawAlignment(CreditsText7, 1);
	TextDrawColor(CreditsText7, -5963521);
	TextDrawSetShadow(CreditsText7, 0);
	TextDrawSetOutline(CreditsText7, 1);
	TextDrawBackgroundColor(CreditsText7, 51);
	TextDrawFont(CreditsText7, 4);
	TextDrawSetProportional(CreditsText7, 1);

	CreditsText8 = TextDrawCreate(297.000000, 149.955535, "Proje Yapimcisi:");
	TextDrawLetterSize(CreditsText8, 0.170000, 0.983999);
	TextDrawAlignment(CreditsText8, 1);
	TextDrawColor(CreditsText8, -16776961);
	TextDrawSetShadow(CreditsText8, 0);
	TextDrawSetOutline(CreditsText8, 1);
	TextDrawBackgroundColor(CreditsText8, 51);
	TextDrawFont(CreditsText8, 1);
	TextDrawSetProportional(CreditsText8, 1);

	CreditsText9 = TextDrawCreate(348.000000, 148.966659, "usebox");
	TextDrawLetterSize(CreditsText9, 0.000000, 1.411730);
	TextDrawTextSize(CreditsText9, 290.500000, 0.000000);
	TextDrawAlignment(CreditsText9, 1);
	TextDrawColor(CreditsText9, 0);
	TextDrawUseBox(CreditsText9, true);
	TextDrawBoxColor(CreditsText9, 102);
	TextDrawSetShadow(CreditsText9, 0);
	TextDrawSetOutline(CreditsText9, 0);
	TextDrawFont(CreditsText9, 0);

	CreditsText10 = TextDrawCreate(373.000000, 165.766662, "usebox");
	TextDrawLetterSize(CreditsText10, 0.000000, 1.342592);
	TextDrawTextSize(CreditsText10, 269.500000, 0.000000);
	TextDrawAlignment(CreditsText10, 1);
	TextDrawColor(CreditsText10, 0);
	TextDrawUseBox(CreditsText10, true);
	TextDrawBoxColor(CreditsText10, 102);
	TextDrawSetShadow(CreditsText10, 0);
	TextDrawSetOutline(CreditsText10, 0);
	TextDrawFont(CreditsText10, 0);

	CreditsText11 = TextDrawCreate(296.500000, 166.755538, "- GamerLity -");
	TextDrawLetterSize(CreditsText11, 0.179000, 0.903111);
	TextDrawAlignment(CreditsText11, 1);
	TextDrawColor(CreditsText11, -1);
	TextDrawSetShadow(CreditsText11, 0);
	TextDrawSetOutline(CreditsText11, 1);
	TextDrawBackgroundColor(CreditsText11, 51);
	TextDrawFont(CreditsText11, 1);
	TextDrawSetProportional(CreditsText11, 1);

	CreditsText12 = TextDrawCreate(340.000000, 180.200012, "ld_tatt:6clown");
	TextDrawLetterSize(CreditsText12, 0.449999, 1.600000);
	TextDrawTextSize(CreditsText12, -36.500000, 30.488895);
	TextDrawAlignment(CreditsText12, 1);
	TextDrawColor(CreditsText12, -5963521);
	TextDrawSetShadow(CreditsText12, 0);
	TextDrawSetOutline(CreditsText12, 1);
	TextDrawBackgroundColor(CreditsText12, 51);
	TextDrawFont(CreditsText12, 4);
	TextDrawSetProportional(CreditsText12, 1);

	CreditsText13 = TextDrawCreate(351.000000, 213.433334, "usebox");
	TextDrawLetterSize(CreditsText13, 0.000000, 1.411730);
	TextDrawTextSize(CreditsText13, 292.500000, 0.000000);
	TextDrawAlignment(CreditsText13, 1);
	TextDrawColor(CreditsText13, 0);
	TextDrawUseBox(CreditsText13, true);
	TextDrawBoxColor(CreditsText13, 102);
	TextDrawSetShadow(CreditsText13, 0);
	TextDrawSetOutline(CreditsText13, 0);
	TextDrawFont(CreditsText13, 0);

	CreditsText14 = TextDrawCreate(304.000000, 215.044387, "PAWN Coder:");
	TextDrawLetterSize(CreditsText14, 0.170000, 0.983999);
	TextDrawAlignment(CreditsText14, 1);
	TextDrawColor(CreditsText14, -16776961);
	TextDrawSetShadow(CreditsText14, 0);
	TextDrawSetOutline(CreditsText14, 1);
	TextDrawBackgroundColor(CreditsText14, 51);
	TextDrawFont(CreditsText14, 1);
	TextDrawSetProportional(CreditsText14, 1);

	CreditsText15 = TextDrawCreate(375.000000, 230.233367, "usebox");
	TextDrawLetterSize(CreditsText15, 0.000000, 1.342592);
	TextDrawTextSize(CreditsText15, 270.500000, 0.000000);
	TextDrawAlignment(CreditsText15, 1);
	TextDrawColor(CreditsText15, 0);
	TextDrawUseBox(CreditsText15, true);
	TextDrawBoxColor(CreditsText15, 102);
	TextDrawSetShadow(CreditsText15, 0);
	TextDrawSetOutline(CreditsText15, 0);
	TextDrawFont(CreditsText15, 0);

	CreditsText16 = TextDrawCreate(305.500000, 231.222274, "flareoNNN");
	TextDrawLetterSize(CreditsText16, 0.179000, 0.903111);
	TextDrawAlignment(CreditsText16, 1);
	TextDrawColor(CreditsText16, -1);
	TextDrawSetShadow(CreditsText16, 0);
	TextDrawSetOutline(CreditsText16, 1);
	TextDrawBackgroundColor(CreditsText16, 51);
	TextDrawFont(CreditsText16, 1);
	TextDrawSetProportional(CreditsText16, 1);

	CreditsText17 = TextDrawCreate(340.500000, 244.911087, "ld_tatt:5cross2");
	TextDrawLetterSize(CreditsText17, 0.449999, 1.600000);
	TextDrawTextSize(CreditsText17, -36.500000, 30.488895);
	TextDrawAlignment(CreditsText17, 1);
	TextDrawColor(CreditsText17, -5963521);
	TextDrawSetShadow(CreditsText17, 0);
	TextDrawSetOutline(CreditsText17, 1);
	TextDrawBackgroundColor(CreditsText17, 51);
	TextDrawFont(CreditsText17, 4);
	TextDrawSetProportional(CreditsText17, 1);

	CreditsText18 = TextDrawCreate(352.500000, 277.522247, "usebox");
	TextDrawLetterSize(CreditsText18, 0.000000, 1.411730);
	TextDrawTextSize(CreditsText18, 294.000000, 0.000000);
	TextDrawAlignment(CreditsText18, 1);
	TextDrawColor(CreditsText18, 0);
	TextDrawUseBox(CreditsText18, true);
	TextDrawBoxColor(CreditsText18, 102);
	TextDrawSetShadow(CreditsText18, 0);
	TextDrawSetOutline(CreditsText18, 0);
	TextDrawFont(CreditsText18, 0);

	CreditsText19 = TextDrawCreate(309.500000, 278.888824, "Haritalar:");
	TextDrawLetterSize(CreditsText19, 0.170000, 0.983999);
	TextDrawAlignment(CreditsText19, 1);
	TextDrawColor(CreditsText19, -16776961);
	TextDrawSetShadow(CreditsText19, 0);
	TextDrawSetOutline(CreditsText19, 1);
	TextDrawBackgroundColor(CreditsText19, 51);
	TextDrawFont(CreditsText19, 1);
	TextDrawSetProportional(CreditsText19, 1);

	CreditsText20 = TextDrawCreate(376.500000, 294.700103, "usebox");
	TextDrawLetterSize(CreditsText20, 0.000000, 1.342592);
	TextDrawTextSize(CreditsText20, 271.000000, 0.000000);
	TextDrawAlignment(CreditsText20, 1);
	TextDrawColor(CreditsText20, 0);
	TextDrawUseBox(CreditsText20, true);
	TextDrawBoxColor(CreditsText20, 102);
	TextDrawSetShadow(CreditsText20, 0);
	TextDrawSetOutline(CreditsText20, 0);
	TextDrawFont(CreditsText20, 0);

	CreditsText21 = TextDrawCreate(296.500000, 295.933380, "GamerLity FR AR-GE");
	TextDrawLetterSize(CreditsText21, 0.179000, 0.903111);
	TextDrawAlignment(CreditsText21, 1);
	TextDrawColor(CreditsText21, -1);
	TextDrawSetShadow(CreditsText21, 0);
	TextDrawSetOutline(CreditsText21, 1);
	TextDrawBackgroundColor(CreditsText21, 51);
	TextDrawFont(CreditsText21, 1);
	TextDrawSetProportional(CreditsText21, 1);

	CreditsText22 = TextDrawCreate(346.000000, 326.300018, "usebox");
	TextDrawLetterSize(CreditsText22, 0.000000, 0.651232);
	TextDrawTextSize(CreditsText22, 302.500000, 0.000000);
	TextDrawAlignment(CreditsText22, 1);
	TextDrawColor(CreditsText22, 0);
	TextDrawUseBox(CreditsText22, true);
	TextDrawBoxColor(CreditsText22, 102);
	TextDrawSetShadow(CreditsText22, 0);
	TextDrawSetOutline(CreditsText22, 0);
	TextDrawFont(CreditsText22, 0);

	CreditsText23 = TextDrawCreate(316.500000, 324.555603, "Kapat");
	TextDrawLetterSize(CreditsText23, 0.159500, 0.822221);
	TextDrawAlignment(CreditsText23, 1);
	TextDrawColor(CreditsText23, -16776961);
	TextDrawSetShadow(CreditsText23, 0);
	TextDrawSetOutline(CreditsText23, 1);
	TextDrawBackgroundColor(CreditsText23, 51);
	TextDrawFont(CreditsText23, 1);
	TextDrawSetProportional(CreditsText23, 1);
	TextDrawSetSelectable(CreditsText23, 1);

	OlumText0 = TextDrawCreate(271.399688, 274.500000, "usebox");
	TextDrawLetterSize(OlumText0, 0.000000, 6.942590);
	TextDrawTextSize(OlumText0, 109.039535, 0.000000);
	TextDrawAlignment(OlumText0, 1);
	TextDrawColor(OlumText0, 0);
	TextDrawUseBox(OlumText0, true);
	TextDrawBoxColor(OlumText0, 102);
	TextDrawSetShadow(OlumText0, 0);
	TextDrawSetOutline(OlumText0, 0);
	TextDrawFont(OlumText0, 0);

	OlumText1 = TextDrawCreate(137.745223, 265.416717, "Olduruldunuz");
	TextDrawLetterSize(OlumText1, 0.449999, 1.600000);
	TextDrawAlignment(OlumText1, 1);
	TextDrawColor(OlumText1, -16776961);
	TextDrawSetShadow(OlumText1, 0);
	TextDrawSetOutline(OlumText1, 1);
	TextDrawBackgroundColor(OlumText1, 51);
	TextDrawFont(OlumText1, 3);
	TextDrawSetProportional(OlumText1, 1);

	OlumText2 = TextDrawCreate(222.079071, 283.499938, "ld_drv:goboat");
	TextDrawLetterSize(OlumText2, 0.449999, 1.600000);
	TextDrawTextSize(OlumText2, 41.698387, 49.000003);
	TextDrawAlignment(OlumText2, 1);
	TextDrawColor(OlumText2, -1);
	TextDrawSetShadow(OlumText2, 0);
	TextDrawSetOutline(OlumText2, 1);
	TextDrawBackgroundColor(OlumText2, 51);
	TextDrawFont(OlumText2, 4);
	TextDrawSetProportional(OlumText2, 1);

    bolge1 = Area_AddBox(2313.7979, 1273.3846, 2333.5520, 1293.0115);

    bolge2 = Area_AddBox(1272.2274, -2032.3086, 1253.3301, -2013.0884);
    
    bolge3 = Area_AddBox(-1275.5999, 39.6401, -1237.2498, 28.9461);
    
    bolge4 = Area_AddBox(-710.3267, 2011.7292, -729.8420, 1992.5029);
    
    bolge5 = Area_AddBox(1275.7205, -1322.6420, 1286.8219, -1291.3114);

    Iter_Clear(dukkanlar);
    Iter_Clear(cetemekanlari);

	for(new i = 0; i < MAX_PLAYERS; i++) gYoutubeID[i] = INVALID_YT_ID;
	gYoutubeIDForAll = INVALID_YT_ID;

	gEveryonesPlaylist = CreatePlaylist("Herkes");
	gTotalPlaylists = 1;

	pDateClock = TextDrawCreate(510.000000, 6.000000, "");
	TextDrawAlignment(pDateClock, 1);
	TextDrawFont(pDateClock, 1);
	TextDrawLetterSize(pDateClock, 0.159998, 0.899999);
	TextDrawColor(pDateClock, -1);
	TextDrawSetOutline(pDateClock, 1);
	TextDrawSetProportional(pDateClock, 1);
	TextDrawSetSelectable(pDateClock, 0);

	//skin seçme yeri mapý baþlangýç

	CreateObject(10826, -1407.00000, 390.96094, 11.12403,   356.85840, 0.00000, 3.14159);
	CreateObject(16121, -1487.54968, 356.39838, 690.72400,   0.00000, 0.00000, -17.94000);
	CreateObject(16121, -1488.17224, 404.83008, 690.72400,   0.00000, 0.00000, -18.36000);
	CreateObject(16121, -1484.61731, 440.58493, 690.72400,   0.00000, 0.00000, -18.36000);
	CreateObject(7392, -1400.50232, 451.32169, 700.41736,   0.00000, 0.00000, -179.40001);
	CreateObject(7392, -1384.76050, 452.49826, 700.39166,   0.00000, 0.00000, -179.16006);
	CreateObject(7392, -1374.37732, 451.82022, 700.37488,   0.00000, 0.00000, -177.65997);
	CreateObject(7392, -1362.70386, 453.11591, 700.47778,   0.00000, 0.00000, -179.46001);
	CreateObject(7392, -1353.29590, 452.41153, 700.67285,   0.00000, 0.00000, -183.60002);
	CreateObject(7392, -1345.52954, 452.48502, 700.52521,   0.00000, 0.00000, -171.95993);
	CreateObject(7392, -1411.93787, 449.69888, 699.38806,   0.00000, 0.00000, -178.38004);
	CreateObject(7392, -1339.44934, 342.55911, 702.01874,   0.00000, 0.00000, 0.30000);
	CreateObject(7392, -1357.93494, 340.70145, 702.01874,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1348.51660, 341.56354, 702.01874,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1370.16821, 339.45187, 702.01874,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1398.52002, 338.24167, 702.01874,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1412.80957, 337.79462, 702.01874,   0.00000, 0.00000, 1.98000);
	CreateObject(7392, -1426.26111, 336.39444, 702.01874,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1439.00488, 336.50900, 702.01874,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1449.61548, 335.44919, 702.01874,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1383.07520, 338.28088, 701.93542,   0.00000, 0.00000, 0.00000);
	CreateObject(7392, -1421.86743, 448.97977, 699.66498,   0.00000, 0.00000, -178.38004);
	CreateObject(7392, -1434.71997, 447.51712, 699.03851,   0.00000, 0.00000, -178.38004);
	CreateObject(7392, -1450.44019, 445.99979, 698.47058,   0.00000, 0.00000, -178.38004);
	CreateObject(10826, -1403.59460, 395.11566, 677.03857,   0.00000, 0.00000, 0.00000);
	CreateObject(18753, -1403.89307, 394.38046, 692.92322,   0.00000, 0.00000, 0.00000);
	CreateObject(18768, -1443.42188, 394.10300, 693.32678,   0.00000, 0.00000, 0.00000);
	CreateObject(19129, -1443.58667, 394.03003, 693.91833,   0.00000, 0.00000, 0.00000);
	CreateObject(7073, -1459.97986, 405.76935, 709.12549,   0.00000, 0.00000, 0.00000);
	CreateObject(7073, -1460.13684, 394.20520, 709.12549,   0.00000, 0.00000, 0.00000);
	CreateObject(7073, -1460.08203, 382.52408, 709.12549,   0.00000, 0.00000, 0.00000);
	CreateObject(18750, -1474.69958, 391.01135, 718.90405,   90.23994, -25.62000, -243.48001);
	CreateObject(621, -1434.06958, 403.95929, 686.76947,   -0.24000, 0.36000, 0.00000);
	CreateObject(621, -1434.02075, 383.69925, 686.76947,   0.00000, 0.00000, 0.00000);
	CreateObject(8491, -1443.11536, 393.87939, 700.23175,   0.00000, 0.00000, -227.33997);
	CreateObject(621, -1453.10547, 403.07043, 691.49579,   -0.24000, 0.36000, 0.00000);
	CreateObject(621, -1453.26477, 383.96042, 691.49579,   -0.24000, 0.36000, 0.00000);

	//skin seçme yeri mapý bitiþ

	GostergeText[0] = TextDrawCreate(41.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[0], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[0], 1);
	TextDrawColor(GostergeText[0], -1);
	TextDrawSetShadow(GostergeText[0], 0);
	TextDrawSetOutline(GostergeText[0], 0);
	TextDrawBackgroundColor(GostergeText[0], 255);
	TextDrawFont(GostergeText[0], 2);
	TextDrawSetProportional(GostergeText[0], 1);
	TextDrawSetShadow(GostergeText[0], 0);

	GostergeText[1] = TextDrawCreate(44.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[1], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[1], 1);
	TextDrawColor(GostergeText[1], -1);
	TextDrawSetShadow(GostergeText[1], 0);
	TextDrawSetOutline(GostergeText[1], 0);
	TextDrawBackgroundColor(GostergeText[1], 255);
	TextDrawFont(GostergeText[1], 2);
	TextDrawSetProportional(GostergeText[1], 1);
	TextDrawSetShadow(GostergeText[1], 0);

	GostergeText[2] = TextDrawCreate(47.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[2], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[2], 1);
	TextDrawColor(GostergeText[2], -1);
	TextDrawSetShadow(GostergeText[2], 0);
	TextDrawSetOutline(GostergeText[2], 0);
	TextDrawBackgroundColor(GostergeText[2], 255);
	TextDrawFont(GostergeText[2], 2);
	TextDrawSetProportional(GostergeText[2], 1);
	TextDrawSetShadow(GostergeText[2], 0);

	GostergeText[3] = TextDrawCreate(50.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[3], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[3], 1);
	TextDrawColor(GostergeText[3], -1);
	TextDrawSetShadow(GostergeText[3], 0);
	TextDrawSetOutline(GostergeText[3], 0);
	TextDrawBackgroundColor(GostergeText[3], 255);
	TextDrawFont(GostergeText[3], 2);
	TextDrawSetProportional(GostergeText[3], 1);
	TextDrawSetShadow(GostergeText[3], 0);

	GostergeText[4] = TextDrawCreate(53.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[4], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[4], 1);
	TextDrawColor(GostergeText[4], -1);
	TextDrawSetShadow(GostergeText[4], 0);
	TextDrawSetOutline(GostergeText[4], 0);
	TextDrawBackgroundColor(GostergeText[4], 255);
	TextDrawFont(GostergeText[4], 2);
	TextDrawSetProportional(GostergeText[4], 1);
	TextDrawSetShadow(GostergeText[4], 0);

	GostergeText[5] = TextDrawCreate(56.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[5], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[5], 1);
	TextDrawColor(GostergeText[5], -1);
	TextDrawSetShadow(GostergeText[5], 0);
	TextDrawSetOutline(GostergeText[5], 0);
	TextDrawBackgroundColor(GostergeText[5], 255);
	TextDrawFont(GostergeText[5], 2);
	TextDrawSetProportional(GostergeText[5], 1);
	TextDrawSetShadow(GostergeText[5], 0);

	GostergeText[6] = TextDrawCreate(59.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[6], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[6], 1);
	TextDrawColor(GostergeText[6], -1);
	TextDrawSetShadow(GostergeText[6], 0);
	TextDrawSetOutline(GostergeText[6], 0);
	TextDrawBackgroundColor(GostergeText[6], 255);
	TextDrawFont(GostergeText[6], 2);
	TextDrawSetProportional(GostergeText[6], 1);
	TextDrawSetShadow(GostergeText[6], 0);

	GostergeText[7] = TextDrawCreate(62.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[7], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[7], 1);
	TextDrawColor(GostergeText[7], -1);
	TextDrawSetShadow(GostergeText[7], 0);
	TextDrawSetOutline(GostergeText[7], 0);
	TextDrawBackgroundColor(GostergeText[7], 255);
	TextDrawFont(GostergeText[7], 2);
	TextDrawSetProportional(GostergeText[7], 1);
	TextDrawSetShadow(GostergeText[7], 0);

	GostergeText[8] = TextDrawCreate(65.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[8], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[8], 1);
	TextDrawColor(GostergeText[8], -1);
	TextDrawSetShadow(GostergeText[8], 0);
	TextDrawSetOutline(GostergeText[8], 0);
	TextDrawBackgroundColor(GostergeText[8], 255);
	TextDrawFont(GostergeText[8], 2);
	TextDrawSetProportional(GostergeText[8], 1);
	TextDrawSetShadow(GostergeText[8], 0);

	GostergeText[9] = TextDrawCreate(68.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[9], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[9], 1);
	TextDrawColor(GostergeText[9], -1);
	TextDrawSetShadow(GostergeText[9], 0);
	TextDrawSetOutline(GostergeText[9], 0);
	TextDrawBackgroundColor(GostergeText[9], 255);
	TextDrawFont(GostergeText[9], 2);
	TextDrawSetProportional(GostergeText[9], 1);
	TextDrawSetShadow(GostergeText[9], 0);

	GostergeText[10] = TextDrawCreate(71.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[10], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[10], 1);
	TextDrawColor(GostergeText[10], -1);
	TextDrawSetShadow(GostergeText[10], 0);
	TextDrawSetOutline(GostergeText[10], 0);
	TextDrawBackgroundColor(GostergeText[10], 255);
	TextDrawFont(GostergeText[10], 2);
	TextDrawSetProportional(GostergeText[10], 1);
	TextDrawSetShadow(GostergeText[10], 0);

	GostergeText[11] = TextDrawCreate(74.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[11], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[11], 1);
	TextDrawColor(GostergeText[11], -1);
	TextDrawSetShadow(GostergeText[11], 0);
	TextDrawSetOutline(GostergeText[11], 0);
	TextDrawBackgroundColor(GostergeText[11], 255);
	TextDrawFont(GostergeText[11], 2);
	TextDrawSetProportional(GostergeText[11], 1);
	TextDrawSetShadow(GostergeText[11], 0);

	GostergeText[12] = TextDrawCreate(77.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[12], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[12], 1);
	TextDrawColor(GostergeText[12], -1);
	TextDrawSetShadow(GostergeText[12], 0);
	TextDrawSetOutline(GostergeText[12], 0);
	TextDrawBackgroundColor(GostergeText[12], 255);
	TextDrawFont(GostergeText[12], 2);
	TextDrawSetProportional(GostergeText[12], 1);
	TextDrawSetShadow(GostergeText[12], 0);

	GostergeText[13] = TextDrawCreate(80.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[13], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[13], 1);
	TextDrawColor(GostergeText[13], -1);
	TextDrawSetShadow(GostergeText[13], 0);
	TextDrawSetOutline(GostergeText[13], 0);
	TextDrawBackgroundColor(GostergeText[13], 255);
	TextDrawFont(GostergeText[13], 2);
	TextDrawSetProportional(GostergeText[13], 1);
	TextDrawSetShadow(GostergeText[13], 0);

	GostergeText[14] = TextDrawCreate(83.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[14], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[14], 1);
	TextDrawColor(GostergeText[14], -1);
	TextDrawSetShadow(GostergeText[14], 0);
	TextDrawSetOutline(GostergeText[14], 0);
	TextDrawBackgroundColor(GostergeText[14], 255);
	TextDrawFont(GostergeText[14], 2);
	TextDrawSetProportional(GostergeText[14], 1);
	TextDrawSetShadow(GostergeText[14], 0);

	GostergeText[15] = TextDrawCreate(86.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[15], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[15], 1);
	TextDrawColor(GostergeText[15], -1);
	TextDrawSetShadow(GostergeText[15], 0);
	TextDrawSetOutline(GostergeText[15], 0);
	TextDrawBackgroundColor(GostergeText[15], 255);
	TextDrawFont(GostergeText[15], 2);
	TextDrawSetProportional(GostergeText[15], 1);
	TextDrawSetShadow(GostergeText[15], 0);

	GostergeText[16] = TextDrawCreate(89.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[16], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[16], 1);
	TextDrawColor(GostergeText[16], -1);
	TextDrawSetShadow(GostergeText[16], 0);
	TextDrawSetOutline(GostergeText[16], 0);
	TextDrawBackgroundColor(GostergeText[16], 255);
	TextDrawFont(GostergeText[16], 2);
	TextDrawSetProportional(GostergeText[16], 1);
	TextDrawSetShadow(GostergeText[16], 0);

	GostergeText[17] = TextDrawCreate(92.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[17], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[17], 1);
	TextDrawColor(GostergeText[17], -1);
	TextDrawSetShadow(GostergeText[17], 0);
	TextDrawSetOutline(GostergeText[17], 0);
	TextDrawBackgroundColor(GostergeText[17], 255);
	TextDrawFont(GostergeText[17], 2);
	TextDrawSetProportional(GostergeText[17], 1);
	TextDrawSetShadow(GostergeText[17], 0);

	GostergeText[18] = TextDrawCreate(95.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[18], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[18], 1);
	TextDrawColor(GostergeText[18], -1);
	TextDrawSetShadow(GostergeText[18], 0);
	TextDrawSetOutline(GostergeText[18], 0);
	TextDrawBackgroundColor(GostergeText[18], 255);
	TextDrawFont(GostergeText[18], 2);
	TextDrawSetProportional(GostergeText[18], 1);
	TextDrawSetShadow(GostergeText[18], 0);

	GostergeText[19] = TextDrawCreate(98.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[19], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[19], 1);
	TextDrawColor(GostergeText[19], -1);
	TextDrawSetShadow(GostergeText[19], 0);
	TextDrawSetOutline(GostergeText[19], 0);
	TextDrawBackgroundColor(GostergeText[19], 255);
	TextDrawFont(GostergeText[19], 2);
	TextDrawSetProportional(GostergeText[19], 1);
	TextDrawSetShadow(GostergeText[19], 0);

	GostergeText[20] = TextDrawCreate(101.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[20], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[20], 1);
	TextDrawColor(GostergeText[20], -1);
	TextDrawSetShadow(GostergeText[20], 0);
	TextDrawSetOutline(GostergeText[20], 0);
	TextDrawBackgroundColor(GostergeText[20], 255);
	TextDrawFont(GostergeText[20], 2);
	TextDrawSetProportional(GostergeText[20], 1);
	TextDrawSetShadow(GostergeText[20], 0);

	GostergeText[21] = TextDrawCreate(104.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[21], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[21], 1);
	TextDrawColor(GostergeText[21], -1);
	TextDrawSetShadow(GostergeText[21], 0);
	TextDrawSetOutline(GostergeText[21], 0);
	TextDrawBackgroundColor(GostergeText[21], 255);
	TextDrawFont(GostergeText[21], 2);
	TextDrawSetProportional(GostergeText[21], 1);
	TextDrawSetShadow(GostergeText[21], 0);

	GostergeText[22] = TextDrawCreate(107.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[22], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[22], 1);
	TextDrawColor(GostergeText[22], -1);
	TextDrawSetShadow(GostergeText[22], 0);
	TextDrawSetOutline(GostergeText[22], 0);
	TextDrawBackgroundColor(GostergeText[22], 255);
	TextDrawFont(GostergeText[22], 2);
	TextDrawSetProportional(GostergeText[22], 1);
	TextDrawSetShadow(GostergeText[22], 0);

	GostergeText[23] = TextDrawCreate(110.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[23], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[23], 1);
	TextDrawColor(GostergeText[23], -1);
	TextDrawSetShadow(GostergeText[23], 0);
	TextDrawSetOutline(GostergeText[23], 0);
	TextDrawBackgroundColor(GostergeText[23], 255);
	TextDrawFont(GostergeText[23], 2);
	TextDrawSetProportional(GostergeText[23], 1);
	TextDrawSetShadow(GostergeText[23], 0);

	GostergeText[24] = TextDrawCreate(113.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[24], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[24], 1);
	TextDrawColor(GostergeText[24], -1);
	TextDrawSetShadow(GostergeText[24], 0);
	TextDrawSetOutline(GostergeText[24], 0);
	TextDrawBackgroundColor(GostergeText[24], 255);
	TextDrawFont(GostergeText[24], 2);
	TextDrawSetProportional(GostergeText[24], 1);
	TextDrawSetShadow(GostergeText[24], 0);

	GostergeText[25] = TextDrawCreate(116.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[25], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[25], 1);
	TextDrawColor(GostergeText[25], -1);
	TextDrawSetShadow(GostergeText[25], 0);
	TextDrawSetOutline(GostergeText[25], 0);
	TextDrawBackgroundColor(GostergeText[25], 255);
	TextDrawFont(GostergeText[25], 2);
	TextDrawSetProportional(GostergeText[25], 1);
	TextDrawSetShadow(GostergeText[25], 0);

	GostergeText[26] = TextDrawCreate(119.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[26], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[26], 1);
	TextDrawColor(GostergeText[26], -1);
	TextDrawSetShadow(GostergeText[26], 0);
	TextDrawSetOutline(GostergeText[26], 0);
	TextDrawBackgroundColor(GostergeText[26], 255);
	TextDrawFont(GostergeText[26], 2);
	TextDrawSetProportional(GostergeText[26], 1);
	TextDrawSetShadow(GostergeText[26], 0);

	GostergeText[27] = TextDrawCreate(122.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[27], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[27], 1);
	TextDrawColor(GostergeText[27], -1);
	TextDrawSetShadow(GostergeText[27], 0);
	TextDrawSetOutline(GostergeText[27], 0);
	TextDrawBackgroundColor(GostergeText[27], 255);
	TextDrawFont(GostergeText[27], 2);
	TextDrawSetProportional(GostergeText[27], 1);
	TextDrawSetShadow(GostergeText[27], 0);

	GostergeText[28] = TextDrawCreate(125.215270, 302.000122, "I");
	TextDrawLetterSize(GostergeText[28], 0.319882, 3.863332);
	TextDrawAlignment(GostergeText[28], 1);
	TextDrawColor(GostergeText[28], -1);
	TextDrawSetShadow(GostergeText[28], 0);
	TextDrawSetOutline(GostergeText[28], 0);
	TextDrawBackgroundColor(GostergeText[28], 255);
	TextDrawFont(GostergeText[28], 2);
	TextDrawSetProportional(GostergeText[28], 1);
	TextDrawSetShadow(GostergeText[28], 0);

	for(new i = 0; i != sizeof GostergeText; i++)
	{
		TextDrawBackgroundColor(GostergeText[i], 0x00000033);
		TextDrawFont(GostergeText[i], 2);
		TextDrawColor(GostergeText[i], 0x66666644);
		TextDrawSetOutline(GostergeText[i], false);
		TextDrawSetProportional(GostergeText[i], true);
		TextDrawSetShadow(GostergeText[i], false);
	}

    Create3DTextLabel("{007f00}({FFFFFF}${007f00}) {FFFFFF}GamerLity FR Bank {007f00}({FFFFFF}${007f00})\n\n{FFFFFF}(Girmek Ýçin 'F' Basýnýz)",-1,2153.3083,1479.9667,10.8203,40,0);
    CreatePickup(1274, 1, 2153.3083,1479.9667,10.8203, -1);

    Create3DTextLabel("{b2b2b2}(Çýkmak Ýçin 'F' Basýnýz)",-1,2315.4834,0.3538,26.7422,40,77);
    CreatePickup(1318, 1, 2315.4834,0.3538,26.7422, -1);

    exptext0 = TextDrawCreate(635.440673, 374.250000, "usebox");
    TextDrawLetterSize(exptext0, 0.000000, 4.803701);
    TextDrawTextSize(exptext0, 515.247436, 0.000000);
    TextDrawAlignment(exptext0, 1);
    TextDrawColor(exptext0, 0);
    TextDrawUseBox(exptext0, true);
    TextDrawBoxColor(exptext0, 51);
    TextDrawSetShadow(exptext0, 0);
    TextDrawSetOutline(exptext0, 0);
    TextDrawFont(exptext0, 0);

	////////////////////////////////////////////////////////////////////////////////

    speedyhap1 = CreatePickup(1241, 2, 1556.2560,1160.7458,10.8052, 124);
    speedyhap2 = CreatePickup(1241, 2, 1574.2324,1160.5609,10.8052, 124);
    speedyhap3 = CreatePickup(1241, 2, 1599.5975,1160.6541,10.8125, 124);
    speedyhap4 = CreatePickup(1241, 2, 1604.9911,1165.2550,10.8125, 124);
    speedyhap5 = CreatePickup(1241, 2, 1585.9164,1170.4716,10.8125, 124);
    speedyhap6 = CreatePickup(1241, 2, 1595.7008,1177.0540,10.8125, 124);
    speedyhap7 = CreatePickup(1241, 2, 1604.3967,1184.8003,10.8052, 124);
    speedyhap8 = CreatePickup(1241, 2, 1613.0907,1194.3196,10.8125, 124);
    speedyhap9 = CreatePickup(1241, 2, 1618.8478,1210.3806,10.8125, 124);
    speedyhap10 = CreatePickup(1241, 2, 1602.0573,1217.9575,10.8125, 124);
    speedyhap11 = CreatePickup(1241, 2, 1583.3738,1219.4813,10.8125, 124);
    speedyhap12 = CreatePickup(1241, 2, 1570.3704,1220.0621,10.8125, 124);
    speedyhap13 = CreatePickup(1241, 2, 1554.8376,1220.7157,10.9214, 124);
    speedyhap14 = CreatePickup(1241, 2, 1614.4763,1190.3229,11.7878, 124);
    speedyhap15 = CreatePickup(1241, 2, 1617.8253,1178.4723,14.2188, 124);
    speedyhap16 = CreatePickup(1241, 2, 1618.4814,1166.9546,14.6608, 124);
    speedyhap17 = CreatePickup(1241, 2, 1613.5728,1160.3904,14.2188, 124);
    speedyhap18 = CreatePickup(1241, 2, 1608.0142,1157.5374,14.2206, 124);
    speedyhap19 = CreatePickup(1241, 2, 1607.0177,1164.0571,14.2206, 124);
    speedyhap20 = CreatePickup(1241, 2, 1604.2245,1170.0793,14.2205, 124);
    speedyhap21 = CreatePickup(1241, 2, 1595.7928,1171.1368,14.2205, 124);

	///////////////////////////////////////////////////////////////////////////////

    pick1 = CreatePickup(1247, 2, 531.6651,-3765.1660,187.8726, -1);

    pick2 = CreatePickup(1247, 2, 573.5204,-3744.6394,187.8726, -1);

    pick3 = CreatePickup(1247, 2, 603.3165,-3750.6555,187.8726, -1);

    pick4 = CreatePickup(1247, 2, 604.1995,-3747.9148,203.9172, -1);

    pick5 = CreatePickup(1247, 2, 574.0161,-3789.4565,188.0118, -1);

    pick6 = CreatePickup(1247, 2, 589.0125,-3813.7605,187.8726, -1);

    pick7 = CreatePickup(1247, 2, 580.8398,-3853.5842,187.8726, -1);

    pick8 = CreatePickup(1247, 2, 565.4315,-3874.1865,187.8726, -1);

    pick9 = CreatePickup(1247, 2, 583.4901,-3930.1143,188.2780, -1);

    pick10 = CreatePickup(1247, 2, 574.5030,-3955.2439,188.6196, -1);

    pick11 = CreatePickup(1247, 2, 604.2519,-3975.3013,187.8726, -1);

    pick12 = CreatePickup(1247, 2, 607.3188,-3980.1816,203.9172, -1);

    pick13 = CreatePickup(1247, 2, 547.0724,-3970.9294,187.8726, -1);

    pick14 = CreatePickup(1247, 2, 518.4097,-3959.1602,187.8726, -1);

    pick15 = CreatePickup(1247, 2, 519.2185,-3918.9885,187.8726, -1);

    pick16 = CreatePickup(1247, 2, 478.8461,-3893.9717,187.8726, -1);

    pick17 = CreatePickup(1247, 2, 466.5935,-3939.8899,187.8726, -1);

    pick18 = CreatePickup(1247, 2, 492.4511,-3949.6211,187.8726, -1);

    pick19 = CreatePickup(1247, 2, 451.2119,-3959.0496,187.8726, -1);

    pick20 = CreatePickup(1247, 2, 402.5574,-3938.1550,187.8726, -1);

    pick21 = CreatePickup(1247, 2, 389.6791,-3894.4917,187.8726, -1);

    pick22 = CreatePickup(1247, 2, 392.1243,-3842.6575,187.8726, -1);

    pick23 = CreatePickup(1247, 2, 423.0103,-3837.0688,187.8726, -1);

    vote0 = TextDrawCreate(161.297225, 279.749847, "usebox");
    TextDrawLetterSize(vote0, 0.000000, 5.918723);
    TextDrawTextSize(vote0, 8.775993, 0.000000);
    TextDrawAlignment(vote0, 1);
    TextDrawColor(vote0, 0);
    TextDrawUseBox(vote0, true);
    TextDrawBoxColor(vote0, 102);
    TextDrawSetShadow(vote0, 0);
    TextDrawSetOutline(vote0, 0);
    TextDrawFont(vote0, 0);

    vote1 = TextDrawCreate(12.181373, 281.749908, "hud:radar_gangb");
    TextDrawLetterSize(vote1, 0.449999, 1.600000);
    TextDrawTextSize(vote1, 12.650071, 14.583333);
    TextDrawAlignment(vote1, 1);
    TextDrawColor(vote1, -1);
    TextDrawSetShadow(vote1, 0);
    TextDrawSetOutline(vote1, 1);
    TextDrawBackgroundColor(vote1, 51);
    TextDrawFont(vote1, 4);
    TextDrawSetProportional(vote1, 1);

    vote2 = TextDrawCreate(28.111248, 282.333312, "Yetkili flareoNNN yeni bir oylama baslatti.");
    TextDrawLetterSize(vote2, 0.143587, 1.325834);
    TextDrawAlignment(vote2, 1);
    TextDrawColor(vote2, 16777215);
    TextDrawSetShadow(vote2, 0);
    TextDrawSetOutline(vote2, 1);
    TextDrawBackgroundColor(vote2, 51);
    TextDrawFont(vote2, 1);
    TextDrawSetProportional(vote2, 1);

    vote3 = TextDrawCreate(27.642791, 298.666687, "Soru:");
    TextDrawLetterSize(vote3, 0.166544, 1.366665);
    TextDrawAlignment(vote3, 1);
    TextDrawColor(vote3, -2139062017);
    TextDrawSetShadow(vote3, 0);
    TextDrawSetOutline(vote3, 1);
    TextDrawBackgroundColor(vote3, 51);
    TextDrawFont(vote3, 1);
    TextDrawSetProportional(vote3, 1);

    vote4 = TextDrawCreate(14.524114, 299.833374, "hud:radar_flag");
    TextDrawLetterSize(vote4, 0.449999, 1.600000);
    TextDrawTextSize(vote4, 8.433382, 11.666668);
    TextDrawAlignment(vote4, 1);
    TextDrawColor(vote4, -1);
    TextDrawSetShadow(vote4, 0);
    TextDrawSetOutline(vote4, 1);
    TextDrawBackgroundColor(vote4, 51);
    TextDrawFont(vote4, 4);
    TextDrawSetProportional(vote4, 1);

    vote5 = TextDrawCreate(13.587158, 315.583404, "flareoNNN seksi midir");
    TextDrawLetterSize(vote5, 0.146398, 1.372501);
    TextDrawTextSize(vote5, 400.585693, -4.666667);
    TextDrawAlignment(vote5, 1);
    TextDrawColor(vote5, -5963521);
    TextDrawUseBox(vote5, true);
    TextDrawBoxColor(vote5, 0);
    TextDrawSetShadow(vote5, 1);
    TextDrawSetOutline(vote5, 0);
    TextDrawBackgroundColor(vote5, 51);
    TextDrawFont(vote5, 2);
    TextDrawSetProportional(vote5, 1);

    vote6 = TextDrawCreate(44.509483, 298.666717, "~w~~h~~h~Evet icin ~g~Y, ~w~~h~~h~hayir icin ~r~N ~w~~h~~h~tusuna basabilirsiniz.");
    TextDrawLetterSize(vote6, 0.151083, 1.430834);
    TextDrawAlignment(vote6, 1);
    TextDrawColor(vote6, 16711935);
    TextDrawSetShadow(vote6, 1);
    TextDrawSetOutline(vote6, 0);
    TextDrawBackgroundColor(vote6, 51);
    TextDrawFont(vote6, 1);
    TextDrawSetProportional(vote6, 1);

    Nocount = 0;
    Yescount = 0;
    Voteactive = 0;
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        ZombieTeamHuman[i] = 0;
        ZombieTeamZombie[i] = 0;
        ZombieActive = 0;
    }
    LoadMaps();
    SetTimer("GenelTimer", 1000, true);

	SetTimer("bilgitextdrawi", 8000, true);

    SetTimer("ZombieBaslat", 600000, true);
    
    SetTimer("YarisBaslatX", 540000, true);

    SetTimer("TarihSaat", 1000, true);

    SetTimer("HungerGameBaslat", 600000, true);

    cetesavasidurum = 0;

	KillTimer(RenkTest[Timer2]);
	KillTimer(RenkTest[Timer]);
	
	for(new i = 0; i != sizeof(spawnzone); i++)
	{
	    new str[500];
	    strcat(str, ""ww"GamerLity FR™ Türkiye Freeroam'a hoþgeldiniz!\n");
		strcat(str, ""ww"Spawn bölgelerinde "wb"'H' "w"tuþuna basarak ücretsiz can & zýrh alabilirsiniz.\n");
		strcat(str, ""ww"Bulduðunuz buglarý "wb"/bugrapor "w"ile iletebilirsiniz.\n");
		strcat(str, ""ww"Spawn silahlarýnýzý "wb"/spawnsilahlari "w"yazarak ayarlayabilirsiniz.\n");
		strcat(str, ""ww"Komutlara bakmak için "wb"/cmds "w"yazabilirsiniz.");
		Create3DTextLabel(str, -1, spawnzone[i][0], spawnzone[i][1], spawnzone[i][2], 30.0, 0, 0);
	}

	skorlar0 = TextDrawCreate(634.500000, 219.666656, "usebox");
	TextDrawLetterSize(skorlar0, 0.000000, 7.461114);
	TextDrawTextSize(skorlar0, 499.875000, 0.000000);
	TextDrawAlignment(skorlar0, 1);
	TextDrawColor(skorlar0, 0);
	TextDrawUseBox(skorlar0, true);
	TextDrawBoxColor(skorlar0, 102);
	TextDrawSetShadow(skorlar0, 0);
	TextDrawSetOutline(skorlar0, 0);
	TextDrawFont(skorlar0, 0);

	skorlar1 = TextDrawCreate(504.375000, 221.083343, "KALAN ZAMAN:");
	TextDrawLetterSize(skorlar1, 0.153124, 0.987500);
	TextDrawAlignment(skorlar1, 1);
	TextDrawColor(skorlar1, -1);
	TextDrawSetShadow(skorlar1, 0);
	TextDrawSetOutline(skorlar1, 1);
	TextDrawBackgroundColor(skorlar1, 51);
	TextDrawFont(skorlar1, 2);
	TextDrawSetProportional(skorlar1, 1);

	skorlar9 = TextDrawCreate(597.625000, 239.416595, "PUAN");
	TextDrawLetterSize(skorlar9, 0.187499, 0.649166);
	TextDrawAlignment(skorlar9, 1);
	TextDrawColor(skorlar9, -1);
	TextDrawSetShadow(skorlar9, 0);
	TextDrawSetOutline(skorlar9, 1);
	TextDrawBackgroundColor(skorlar9, 51);
	TextDrawFont(skorlar9, 2);
	TextDrawSetProportional(skorlar9, 1);

	skorlar11 = TextDrawCreate(503.750000, 247.333389, "===========================");
	TextDrawLetterSize(skorlar11, 0.178124, 0.987498);
	TextDrawAlignment(skorlar11, 1);
	TextDrawColor(skorlar11, -1);
	TextDrawSetShadow(skorlar11, 0);
	TextDrawSetOutline(skorlar11, 1);
	TextDrawBackgroundColor(skorlar11, 51);
	TextDrawFont(skorlar11, 1);
	TextDrawSetProportional(skorlar11, 1);

	skorlar12 = TextDrawCreate(597.250000, 258.833282, "PUAN");
	TextDrawLetterSize(skorlar12, 0.187499, 0.649166);
	TextDrawAlignment(skorlar12, 1);
	TextDrawColor(skorlar12, -1);
	TextDrawSetShadow(skorlar12, 0);
	TextDrawSetOutline(skorlar12, 1);
	TextDrawBackgroundColor(skorlar12, 51);
	TextDrawFont(skorlar12, 2);
	TextDrawSetProportional(skorlar12, 1);

	skorlar13 = TextDrawCreate(502.500000, 217.000000, "LD_SPAC:white");
	TextDrawLetterSize(skorlar13, 0.000000, 0.000000);
	TextDrawTextSize(skorlar13, 129.375000, 1.166656);
	TextDrawAlignment(skorlar13, 1);
	TextDrawColor(skorlar13, 46605862);
	TextDrawSetShadow(skorlar13, 0);
	TextDrawSetOutline(skorlar13, 0);
	TextDrawFont(skorlar13, 4);

	skorlar14 = TextDrawCreate(502.250000, 288.583312, "LD_SPAC:white");
	TextDrawLetterSize(skorlar14, 0.000000, 0.000000);
	TextDrawTextSize(skorlar14, 129.375000, 1.166656);
	TextDrawAlignment(skorlar14, 1);
	TextDrawColor(skorlar14, 46605862);
	TextDrawSetShadow(skorlar14, 0);
	TextDrawSetOutline(skorlar14, 0);
	TextDrawFont(skorlar14, 4);

	PMSpec0 = TextDrawCreate(3.000000, 230.000000, " ");
	TextDrawAlignment(PMSpec0, 1);
	TextDrawBackgroundColor(PMSpec0, 100);
	TextDrawFont(PMSpec0, 1);
	TextDrawLetterSize(PMSpec0, 0.159998, 0.899999);
	TextDrawColor(PMSpec0, -1);
	TextDrawSetOutline(PMSpec0, 1);
	TextDrawSetProportional(PMSpec0, 1);
	TextDrawSetSelectable(PMSpec0, 0);

	PMSpec1 = TextDrawCreate(3.000000, 240.000000, " ");
	TextDrawAlignment(PMSpec1, 1);
	TextDrawBackgroundColor(PMSpec1, 100);
	TextDrawFont(PMSpec1, 1);
	TextDrawLetterSize(PMSpec1, 0.159998, 0.899999);
	TextDrawColor(PMSpec1, -1);
	TextDrawSetOutline(PMSpec1, 1);
	TextDrawSetProportional(PMSpec1, 1);
	TextDrawSetSelectable(PMSpec1, 0);

	PMSpec2 = TextDrawCreate(3.000000, 250.000000, " ");
	TextDrawAlignment(PMSpec2, 1);
	TextDrawBackgroundColor(PMSpec2, 100);
	TextDrawFont(PMSpec2, 1);
	TextDrawLetterSize(PMSpec2, 0.159998, 0.899999);
	TextDrawColor(PMSpec2, -1);
	TextDrawSetOutline(PMSpec2, 1);
	TextDrawSetProportional(PMSpec2, 1);
	TextDrawSetSelectable(PMSpec2, 0);

	PMSpec3 = TextDrawCreate(3.000000, 260.000000, " ");
	TextDrawAlignment(PMSpec3, 1);
	TextDrawBackgroundColor(PMSpec3, 100);
	TextDrawFont(PMSpec3, 1);
	TextDrawLetterSize(PMSpec3, 0.159998, 0.899999);
	TextDrawColor(PMSpec3, -1);
	TextDrawSetOutline(PMSpec3, 1);
	TextDrawSetProportional(PMSpec3, 1);
	TextDrawSetSelectable(PMSpec3, 0);

	PMSpec4 = TextDrawCreate(3.000000, 270.000000, " ");
	TextDrawAlignment(PMSpec4, 1);
	TextDrawBackgroundColor(PMSpec4, 100);
	TextDrawFont(PMSpec4, 1);
	TextDrawLetterSize(PMSpec4, 0.159998, 0.899999);
	TextDrawColor(PMSpec4, -1);
	TextDrawSetOutline(PMSpec4, 1);
	TextDrawSetProportional(PMSpec4, 1);
	TextDrawSetSelectable(PMSpec4, 0);

	//////////////////////////////////

	KomutSpec0 = TextDrawCreate(3.000000, 160.000000, " ");
	TextDrawAlignment(KomutSpec0, 1);
	TextDrawBackgroundColor(KomutSpec0, 100);
	TextDrawFont(KomutSpec0, 1);
	TextDrawLetterSize(KomutSpec0, 0.159998, 0.899999);
	TextDrawColor(KomutSpec0, -1);
	TextDrawSetOutline(KomutSpec0, 1);
	TextDrawSetProportional(KomutSpec0, 1);
	TextDrawSetSelectable(KomutSpec0, 0);

	KomutSpec1 = TextDrawCreate(3.000000, 170.000000, " ");
	TextDrawAlignment(KomutSpec1, 1);
	TextDrawBackgroundColor(KomutSpec1, 100);
	TextDrawFont(KomutSpec1, 1);
	TextDrawLetterSize(KomutSpec1, 0.159998, 0.899999);
	TextDrawColor(KomutSpec1, -1);
	TextDrawSetOutline(KomutSpec1, 1);
	TextDrawSetProportional(KomutSpec1, 1);
	TextDrawSetSelectable(KomutSpec1, 0);

	KomutSpec2 = TextDrawCreate(3.000000, 180.000000, " ");
	TextDrawAlignment(KomutSpec2, 1);
	TextDrawBackgroundColor(KomutSpec2, 100);
	TextDrawFont(KomutSpec2, 1);
	TextDrawLetterSize(KomutSpec2, 0.159998, 0.899999);
	TextDrawColor(KomutSpec2, -1);
	TextDrawSetOutline(KomutSpec2, 1);
	TextDrawSetProportional(KomutSpec2, 1);
	TextDrawSetSelectable(KomutSpec2, 0);

	KomutSpec3 = TextDrawCreate(3.000000, 190.000000, " ");
	TextDrawAlignment(KomutSpec3, 1);
	TextDrawBackgroundColor(KomutSpec3, 100);
	TextDrawFont(KomutSpec3, 1);
	TextDrawLetterSize(KomutSpec3, 0.159998, 0.899999);
	TextDrawColor(KomutSpec3, -1);
	TextDrawSetOutline(KomutSpec3, 1);
	TextDrawSetProportional(KomutSpec3, 1);
	TextDrawSetSelectable(KomutSpec3, 0);

	KomutSpec4 = TextDrawCreate(3.000000, 200.000000, " ");
	TextDrawAlignment(KomutSpec4, 1);
	TextDrawBackgroundColor(KomutSpec4, 100);
	TextDrawFont(KomutSpec4, 1);
	TextDrawLetterSize(KomutSpec4, 0.159998, 0.899999);
	TextDrawColor(KomutSpec4, -1);
	TextDrawSetOutline(KomutSpec4, 1);
	TextDrawSetProportional(KomutSpec4, 1);
	TextDrawSetSelectable(KomutSpec4, 0);

	for(new i = 0; i < MAX_HOUSES; i++)
	{
	    for(new vid = 0; vid < 10; vid ++)
	    {
			HouseData[i][VehicleIDs][vid] = INVALID_VEHICLE_ID;
		}
	    LoadHouse(i);
	}
	for(new i = 0; i < MAX_HOUSE_VEHICLES; i++)
	{
	    LoadCar(i);
	}
	vehlist = LoadModelSelectionMenu("vehicles.ini");
	tablelist = LoadModelSelectionMenu("Tables.ini");
	chairlist = LoadModelSelectionMenu("Chairs.ini");
	bedlist = LoadModelSelectionMenu("Beds.ini");
	sofalist = LoadModelSelectionMenu("Sofas.ini");
	declist = LoadModelSelectionMenu("Decorations.ini");
	applist = LoadModelSelectionMenu("Appliances.ini");

    Banks = Create3DTextLabel("{00FF00}Banka\n{FFFFFF}Ýþlemlerinizi buradan gerçekleþtirebilirsiniz.", -1, 361.8299, 173.8032, 1008.3828, 40.0, 0, 0);
	Banka = CreateDynamicPickup(1314, 2, 361.8299, 173.8032, 1008.3828, -1);

	LoadUniqueVehicles();

    SetTimer("GenelTimer1",	5000, true);

    SetTimer("HsTimer", 900000, true); // - 15 Dakika

    print("» Renk testi yüklendi.");

	RenkTest[Timer] = SetTimer("ColorTest", 300000, true); // 5 Dakika

	SetTimer("rasgelemesaj", 180000, true);

	SetTimer("labeltimer", 500, true);

    SetGameModeText(MODENAME);
    new str[500];
    format(str,150,"hostname %s",HOSTNAME);
    SendRconCommand(str);
    format(str,150,"weburl %s",WEBSITE);
    SendRconCommand(str);
    format(str,150,"language %s",LANGUAGE);
    SendRconCommand(str);
	format(str,150,"password %s",PASS);
	SendRconCommand(str);
	format(str,150,"mapname %s",MAPNAME);
	SendRconCommand(str);
	format(str,150,"rcon_password %s",RCON);
	SendRconCommand(str);

	if(!fexist(fileToWrite))
	{
		new INI:iniFile = INI_Open(fileToWrite);
		INI_SetTag(iniFile, "tempos");
		INI_WriteFloat(iniFile, "1", 9999999.0, 4);
		INI_WriteFloat(iniFile, "2", 9999999.0, 4);
		INI_WriteFloat(iniFile, "3", 9999999.0, 4);
		INI_WriteFloat(iniFile, "4", 9999999.0, 4);
		INI_WriteFloat(iniFile, "5", 9999999.0, 4);
		INI_SetTag(iniFile, "jogadores");
		INI_WriteString(iniFile, "j1", "N/D");
		INI_WriteString(iniFile, "j2", "N/D");
		INI_WriteString(iniFile, "j3", "N/D");
		INI_WriteString(iniFile, "j4", "N/D");
		INI_WriteString(iniFile, "j5", "N/D");
		INI_Close(iniFile);
	}

	duyuru = TextDrawCreate(330.000000, 200.000000, "");
	TextDrawAlignment(duyuru, 2);
	TextDrawFont(duyuru, 1);
	TextDrawLetterSize(duyuru, 0.270000, 1.000000);
	TextDrawColor(duyuru, 0x000000FF);
	TextDrawSetOutline(duyuru, 0);
	TextDrawSetShadow(duyuru, 1);
	TextDrawUseBox(duyuru, 1);
	TextDrawBoxColor(duyuru, COLOR_RED);
	TextDrawTextSize(duyuru, 640.000000, 236.000000);

	duyuru = TextDrawCreate(330.000000, 200.000000, "");
	TextDrawAlignment(duyuru, 2);
	TextDrawFont(duyuru, 1);
	TextDrawLetterSize(duyuru, 0.270000, 1.000000);
	TextDrawColor(duyuru, 0x000000FF);
	TextDrawSetOutline(duyuru, 0);
	TextDrawSetShadow(duyuru, 1);
	TextDrawUseBox(duyuru, 1);
	TextDrawBoxColor(duyuru, COLOR_RED);
	TextDrawTextSize(duyuru, 640.000000, 236.000000);

    UsePlayerPedAnims();
    EnableStuntBonusForAll(0);
    DisableInteriorEnterExits();
    SetWorldTime(12);
    ShowPlayerMarkers(1);
	ShowNameTags(1);

	for(new i = 0; i < 300 || i == 74 || i == 292; ++i)
	{
    	AddPlayerClass(i, -2823.9551, 2176.8379, 180.7676, 33.6845,24, 300, 27, 300, 31, 500);
	}

	for(new playerid; playerid < 2; playerid++)
	{
	    eMessage[playerid][0] = TextDrawCreate(320.000000, 359.000000, MessageStr[playerid][0]);
	    eMessage[playerid][1] = TextDrawCreate(320.000000, 370.000000, MessageStr[playerid][1]);
	    eMessage[playerid][2] = TextDrawCreate(320.000000, 381.000000, MessageStr[playerid][2]);
	    eMessage[playerid][3] = TextDrawCreate(320.000000, 393.000000, MessageStr[playerid][3]);
	    eMessage[playerid][4] = TextDrawCreate(320.000000, 404.000000, MessageStr[playerid][4]);
    }

    for(new aline; aline < 5; aline++)
	{
		for(new playerid; playerid < 2; playerid++)
	 	{
			TextDrawAlignment(eMessage[playerid][aline], 2);
			TextDrawBackgroundColor(eMessage[playerid][aline], 50);
			TextDrawFont(eMessage[playerid][aline], 1);
			TextDrawLetterSize(eMessage[playerid][aline], 0.189999, 1.000000);
			TextDrawColor(eMessage[playerid][aline], -1);
			TextDrawSetOutline(eMessage[playerid][aline], 1);
			TextDrawSetProportional(eMessage[playerid][aline], 1);
		}
	}

	AltTextler[0] = TextDrawCreate(-52.500000, 440.755798, "box");
	TextDrawLetterSize(AltTextler[0], 0.000000, 0.846852);
	TextDrawTextSize(AltTextler[0], 669.000000, 0.000000);
	TextDrawAlignment(AltTextler[0], 1);
	TextDrawColor(AltTextler[0], -1);
	TextDrawUseBox(AltTextler[0], 1);
	TextDrawBoxColor(AltTextler[0], 85);
	TextDrawSetShadow(AltTextler[0], 0);
	TextDrawSetOutline(AltTextler[0], 0);
	TextDrawBackgroundColor(AltTextler[0], 255);
	TextDrawFont(AltTextler[0], 1);
	TextDrawSetProportional(AltTextler[0], 1);
	TextDrawSetShadow(AltTextler[0], 0);

	AltTextler[1] = TextDrawCreate(-52.500000, 427.689117, "box");
	TextDrawLetterSize(AltTextler[1], 0.000000, 0.846852);
	TextDrawTextSize(AltTextler[1], 670.000000, 0.000000);
	TextDrawAlignment(AltTextler[1], 1);
	TextDrawColor(AltTextler[1], -1);
	TextDrawUseBox(AltTextler[1], 1);
	TextDrawBoxColor(AltTextler[1], 85);
	TextDrawSetShadow(AltTextler[1], 0);
	TextDrawSetOutline(AltTextler[1], 0);
	TextDrawBackgroundColor(AltTextler[1], 255);
	TextDrawFont(AltTextler[1], 1);
	TextDrawSetProportional(AltTextler[1], 1);
	TextDrawSetShadow(AltTextler[1], 0);

	AltTextler[2] = TextDrawCreate(-40.500000, 437.488861, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[2], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[2], 722.000000, 1.000000);
	TextDrawAlignment(AltTextler[2], 1);
	TextDrawColor(AltTextler[2], -2139062017);
	TextDrawSetShadow(AltTextler[2], 0);
	TextDrawSetOutline(AltTextler[2], 0);
	TextDrawBackgroundColor(AltTextler[2], 255);
	TextDrawFont(AltTextler[2], 4);
	TextDrawSetProportional(AltTextler[2], 0);
	TextDrawSetShadow(AltTextler[2], 0);

	AltTextler[3] = TextDrawCreate(-40.500000, 437.488861, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[3], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[3], 722.000000, 1.000000);
	TextDrawAlignment(AltTextler[3], 1);
	TextDrawColor(AltTextler[3], -2139062017);
	TextDrawSetShadow(AltTextler[3], 0);
	TextDrawSetOutline(AltTextler[3], 0);
	TextDrawBackgroundColor(AltTextler[3], 255);
	TextDrawFont(AltTextler[3], 4);
	TextDrawSetProportional(AltTextler[3], 0);
	TextDrawSetShadow(AltTextler[3], 0);

	AltTextler[4] = TextDrawCreate(-1.000000, 427.689178, "box");
	TextDrawLetterSize(AltTextler[4], 0.000000, 0.699999);
	TextDrawTextSize(AltTextler[4], 11.000000, 0.000000);
	TextDrawAlignment(AltTextler[4], 1);
	TextDrawColor(AltTextler[4], -1);
	TextDrawUseBox(AltTextler[4], 1);
	TextDrawBoxColor(AltTextler[4], 153);
	TextDrawSetShadow(AltTextler[4], 0);
	TextDrawSetOutline(AltTextler[4], 0);
	TextDrawBackgroundColor(AltTextler[4], 255);
	TextDrawFont(AltTextler[4], 1);
	TextDrawSetProportional(AltTextler[4], 1);
	TextDrawSetShadow(AltTextler[4], 0);

	AltTextler[5] = TextDrawCreate(-0.500000, 426.911254, "ld_chat:badchat");
	TextDrawLetterSize(AltTextler[5], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[5], 13.000000, 9.000000);
	TextDrawAlignment(AltTextler[5], 1);
	TextDrawColor(AltTextler[5], -1);
	TextDrawSetShadow(AltTextler[5], 0);
	TextDrawSetOutline(AltTextler[5], 0);
	TextDrawBackgroundColor(AltTextler[5], 255);
	TextDrawFont(AltTextler[5], 4);
	TextDrawSetProportional(AltTextler[5], 0);
	TextDrawSetShadow(AltTextler[5], 0);

	AltTextler[6] = TextDrawCreate(14.500000, 428.894653, "- /komutlar > komutlari incelemeye yardimci olur.");
	TextDrawLetterSize(AltTextler[6], 0.156531, 0.654221);
	TextDrawAlignment(AltTextler[6], 1);
	TextDrawColor(AltTextler[6], -1);
	TextDrawSetShadow(AltTextler[6], 0);
	TextDrawSetOutline(AltTextler[6], 0);
	TextDrawBackgroundColor(AltTextler[6], 255);
	TextDrawFont(AltTextler[6], 1);
	TextDrawSetProportional(AltTextler[6], 1);
	TextDrawSetShadow(AltTextler[6], 0);
	TextDrawSetSelectable(AltTextler[6], true);

	AltTextler[7] = TextDrawCreate(289.084808, 413.727783, "GamerLity");
	TextDrawLetterSize(AltTextler[7], 0.400000, 1.600000);
	TextDrawAlignment(AltTextler[7], 1);
	TextDrawColor(AltTextler[7], -1);
	TextDrawSetShadow(AltTextler[7], 0);
	TextDrawSetOutline(AltTextler[7], 0);
	TextDrawBackgroundColor(AltTextler[7], 255);
	TextDrawFont(AltTextler[7], 0);
	TextDrawSetProportional(AltTextler[7], 1);
	TextDrawSetShadow(AltTextler[7], 0);

	AltTextler[8] = TextDrawCreate(304.000000, 429.555633, "gamerlity.com");
	TextDrawLetterSize(AltTextler[8], 0.112999, 0.604444);
	TextDrawAlignment(AltTextler[8], 1);
	TextDrawColor(AltTextler[8], -1);
	TextDrawSetShadow(AltTextler[8], 0);
	TextDrawSetOutline(AltTextler[8], 0);
	TextDrawBackgroundColor(AltTextler[8], 255);
	TextDrawFont(AltTextler[8], 1);
	TextDrawSetProportional(AltTextler[8], 1);
	TextDrawSetShadow(AltTextler[8], 0);

	AltTextler[9] = TextDrawCreate(356.000000, 427.689117, "/KOMUTLAR - /KURALLAR - /CREDITS - /ADMINS - /GAMES - /FIYATLAR - /HAKKIMIZDA");
	TextDrawLetterSize(AltTextler[9], 0.167499, 0.710222);
	TextDrawAlignment(AltTextler[9], 1);
	TextDrawColor(AltTextler[9], -1);
	TextDrawSetShadow(AltTextler[9], 0);
	TextDrawSetOutline(AltTextler[9], 0);
	TextDrawBackgroundColor(AltTextler[9], 255);
	TextDrawFont(AltTextler[9], 2);
	TextDrawSetProportional(AltTextler[9], 1);
	TextDrawSetShadow(AltTextler[9], 0);

	AltTextler[10] = TextDrawCreate(1.968521, 436.983398, "CS:      ZOMBIE:      DERBY:      RACE:      PARKOUR:      HG:      GG:      SDG:");
	TextDrawLetterSize(AltTextler[10], 0.122000, 1.183109);
	TextDrawAlignment(AltTextler[10], 1);
	TextDrawColor(AltTextler[10], -1);
	TextDrawSetShadow(AltTextler[10], 0);
	TextDrawSetOutline(AltTextler[10], 0);
	TextDrawBackgroundColor(AltTextler[10], 255);
	TextDrawFont(AltTextler[10], 2);
	TextDrawSetProportional(AltTextler[10], 0);
	TextDrawSetShadow(AltTextler[10], 0);

	AltTextler[11] = TextDrawCreate(12.500000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[11], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[11], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[11], 1);
	TextDrawColor(AltTextler[11], -2139062017);
	TextDrawSetShadow(AltTextler[11], 0);
	TextDrawSetOutline(AltTextler[11], 0);
	TextDrawBackgroundColor(AltTextler[11], 255);
	TextDrawFont(AltTextler[11], 4);
	TextDrawSetProportional(AltTextler[11], 0);
	TextDrawSetShadow(AltTextler[11], 0);

	AltTextler[12] = TextDrawCreate(56.000000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[12], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[12], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[12], 1);
	TextDrawColor(AltTextler[12], -2139062017);
	TextDrawSetShadow(AltTextler[12], 0);
	TextDrawSetOutline(AltTextler[12], 0);
	TextDrawBackgroundColor(AltTextler[12], 255);
	TextDrawFont(AltTextler[12], 4);
	TextDrawSetProportional(AltTextler[12], 0);
	TextDrawSetShadow(AltTextler[12], 0);

	AltTextler[13] = TextDrawCreate(95.500000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[13], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[13], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[13], 1);
	TextDrawColor(AltTextler[13], -2139062017);
	TextDrawSetShadow(AltTextler[13], 0);
	TextDrawSetOutline(AltTextler[13], 0);
	TextDrawBackgroundColor(AltTextler[13], 255);
	TextDrawFont(AltTextler[13], 4);
	TextDrawSetProportional(AltTextler[13], 0);
	TextDrawSetShadow(AltTextler[13], 0);

	AltTextler[14] = TextDrawCreate(130.500000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[14], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[14], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[14], 1);
	TextDrawColor(AltTextler[14], -2139062017);
	TextDrawSetShadow(AltTextler[14], 0);
	TextDrawSetOutline(AltTextler[14], 0);
	TextDrawBackgroundColor(AltTextler[14], 255);
	TextDrawFont(AltTextler[14], 4);
	TextDrawSetProportional(AltTextler[14], 0);
	TextDrawSetShadow(AltTextler[14], 0);

	AltTextler[15] = TextDrawCreate(176.500000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[15], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[15], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[15], 1);
	TextDrawColor(AltTextler[15], -2139062017);
	TextDrawSetShadow(AltTextler[15], 0);
	TextDrawSetOutline(AltTextler[15], 0);
	TextDrawBackgroundColor(AltTextler[15], 255);
	TextDrawFont(AltTextler[15], 4);
	TextDrawSetProportional(AltTextler[15], 0);
	TextDrawSetShadow(AltTextler[15], 0);

	AltTextler[16] = TextDrawCreate(207.000000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[16], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[16], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[16], 1);
	TextDrawColor(AltTextler[16], -2139062017);
	TextDrawSetShadow(AltTextler[16], 0);
	TextDrawSetOutline(AltTextler[16], 0);
	TextDrawBackgroundColor(AltTextler[16], 255);
	TextDrawFont(AltTextler[16], 4);
	TextDrawSetProportional(AltTextler[16], 0);
	TextDrawSetShadow(AltTextler[16], 0);

	AltTextler[17] = TextDrawCreate(237.000000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[17], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[17], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[17], 1);
	TextDrawColor(AltTextler[17], -2139062017);
	TextDrawSetShadow(AltTextler[17], 0);
	TextDrawSetOutline(AltTextler[17], 0);
	TextDrawBackgroundColor(AltTextler[17], 255);
	TextDrawFont(AltTextler[17], 4);
	TextDrawSetProportional(AltTextler[17], 0);
	TextDrawSetShadow(AltTextler[17], 0);

	AltTextler[18] = TextDrawCreate(269.000000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[18], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[18], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[18], 1);
	TextDrawColor(AltTextler[18], -2139062017);
	TextDrawSetShadow(AltTextler[18], 0);
	TextDrawSetOutline(AltTextler[18], 0);
	TextDrawBackgroundColor(AltTextler[18], 255);
	TextDrawFont(AltTextler[18], 4);
	TextDrawSetProportional(AltTextler[18], 0);
	TextDrawSetShadow(AltTextler[18], 0);

	AltTextler[19] = TextDrawCreate(13.500000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[19], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[19], 1);
	TextDrawColor(AltTextler[19], -16776961);
	TextDrawSetShadow(AltTextler[19], 0);
	TextDrawSetOutline(AltTextler[19], 0);
	TextDrawBackgroundColor(AltTextler[19], 255);
	TextDrawFont(AltTextler[19], 1);
	TextDrawSetProportional(AltTextler[19], 1);
	TextDrawSetShadow(AltTextler[19], 0);

	AltTextler[20] = TextDrawCreate(57.000000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[20], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[20], 1);
	TextDrawColor(AltTextler[20], -16776961);
	TextDrawSetShadow(AltTextler[20], 0);
	TextDrawSetOutline(AltTextler[20], 0);
	TextDrawBackgroundColor(AltTextler[20], 255);
	TextDrawFont(AltTextler[20], 1);
	TextDrawSetProportional(AltTextler[20], 1);
	TextDrawSetShadow(AltTextler[20], 0);

	AltTextler[21] = TextDrawCreate(96.500000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[21], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[21], 1);
	TextDrawColor(AltTextler[21], -16776961);
	TextDrawSetShadow(AltTextler[21], 0);
	TextDrawSetOutline(AltTextler[21], 0);
	TextDrawBackgroundColor(AltTextler[21], 255);
	TextDrawFont(AltTextler[21], 1);
	TextDrawSetProportional(AltTextler[21], 1);
	TextDrawSetShadow(AltTextler[21], 0);

	AltTextler[22] = TextDrawCreate(131.500000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[22], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[22], 1);
	TextDrawColor(AltTextler[22], -16776961);
	TextDrawSetShadow(AltTextler[22], 0);
	TextDrawSetOutline(AltTextler[22], 0);
	TextDrawBackgroundColor(AltTextler[22], 255);
	TextDrawFont(AltTextler[22], 1);
	TextDrawSetProportional(AltTextler[22], 1);
	TextDrawSetShadow(AltTextler[22], 0);

	AltTextler[23] = TextDrawCreate(177.500000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[23], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[23], 1);
	TextDrawColor(AltTextler[23], -16776961);
	TextDrawSetShadow(AltTextler[23], 0);
	TextDrawSetOutline(AltTextler[23], 0);
	TextDrawBackgroundColor(AltTextler[23], 255);
	TextDrawFont(AltTextler[23], 1);
	TextDrawSetProportional(AltTextler[23], 1);
	TextDrawSetShadow(AltTextler[23], 0);

	AltTextler[24] = TextDrawCreate(208.000000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[24], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[24], 1);
	TextDrawColor(AltTextler[24], -16776961);
	TextDrawSetShadow(AltTextler[24], 0);
	TextDrawSetOutline(AltTextler[24], 0);
	TextDrawBackgroundColor(AltTextler[24], 255);
	TextDrawFont(AltTextler[24], 1);
	TextDrawSetProportional(AltTextler[24], 1);
	TextDrawSetShadow(AltTextler[24], 0);

	AltTextler[25] = TextDrawCreate(238.000000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[25], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[25], 1);
	TextDrawColor(AltTextler[25], -16776961);
	TextDrawSetShadow(AltTextler[25], 0);
	TextDrawSetOutline(AltTextler[25], 0);
	TextDrawBackgroundColor(AltTextler[25], 255);
	TextDrawFont(AltTextler[25], 1);
	TextDrawSetProportional(AltTextler[25], 1);
	TextDrawSetShadow(AltTextler[25], 0);

	AltTextler[26] = TextDrawCreate(270.000000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[26], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[26], 1);
	TextDrawColor(AltTextler[26], -16776961);
	TextDrawSetShadow(AltTextler[26], 0);
	TextDrawSetOutline(AltTextler[26], 0);
	TextDrawBackgroundColor(AltTextler[26], 255);
	TextDrawFont(AltTextler[26], 1);
	TextDrawSetProportional(AltTextler[26], 1);
	TextDrawSetShadow(AltTextler[26], 0);

	AltTextler[27] = TextDrawCreate(270.000000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[27], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[27], 1);
	TextDrawColor(AltTextler[27], -16776961);
	TextDrawSetShadow(AltTextler[27], 0);
	TextDrawSetOutline(AltTextler[27], 0);
	TextDrawBackgroundColor(AltTextler[27], 255);
	TextDrawFont(AltTextler[27], 1);
	TextDrawSetProportional(AltTextler[27], 1);
	TextDrawSetShadow(AltTextler[27], 0);

	AltTextler[28] = TextDrawCreate(311.000000, 438.733551, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[28], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[28], 1.000000, 10.000000);
	TextDrawAlignment(AltTextler[28], 1);
	TextDrawColor(AltTextler[28], -1);
	TextDrawSetShadow(AltTextler[28], 0);
	TextDrawSetOutline(AltTextler[28], 0);
	TextDrawBackgroundColor(AltTextler[28], 255);
	TextDrawFont(AltTextler[28], 4);
	TextDrawSetProportional(AltTextler[28], 0);
	TextDrawSetShadow(AltTextler[28], 0);

	AltTextler[29] = TextDrawCreate(313.500000, 438.733551, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[29], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[29], 1.000000, 10.000000);
	TextDrawAlignment(AltTextler[29], 1);
	TextDrawColor(AltTextler[29], -1);
	TextDrawSetShadow(AltTextler[29], 0);
	TextDrawSetOutline(AltTextler[29], 0);
	TextDrawBackgroundColor(AltTextler[29], 255);
	TextDrawFont(AltTextler[29], 4);
	TextDrawSetProportional(AltTextler[29], 0);
	TextDrawSetShadow(AltTextler[29], 0);

	AltTextler[30] = TextDrawCreate(316.000000, 438.733551, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[30], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[30], 1.000000, 10.000000);
	TextDrawAlignment(AltTextler[30], 1);
	TextDrawColor(AltTextler[30], -1);
	TextDrawSetShadow(AltTextler[30], 0);
	TextDrawSetOutline(AltTextler[30], 0);
	TextDrawBackgroundColor(AltTextler[30], 255);
	TextDrawFont(AltTextler[30], 4);
	TextDrawSetProportional(AltTextler[30], 0);
	TextDrawSetShadow(AltTextler[30], 0);

	AltTextler[31] = TextDrawCreate(320.000000, 437.022216, ">>>>");
	TextDrawLetterSize(AltTextler[31], 0.132500, 1.307555);
	TextDrawAlignment(AltTextler[31], 1);
	TextDrawColor(AltTextler[31], -1);
	TextDrawSetShadow(AltTextler[31], 0);
	TextDrawSetOutline(AltTextler[31], 0);
	TextDrawBackgroundColor(AltTextler[31], 255);
	TextDrawFont(AltTextler[31], 1);
	TextDrawSetProportional(AltTextler[31], 1);
	TextDrawSetShadow(AltTextler[31], 0);

	AltTextler[32] = TextDrawCreate(345.113464, 437.294372, "DDM:     MDM:     KDM:     SDM:");
	TextDrawLetterSize(AltTextler[32], 0.122000, 1.183109);
	TextDrawAlignment(AltTextler[32], 1);
	TextDrawColor(AltTextler[32], -1);
	TextDrawSetShadow(AltTextler[32], 0);
	TextDrawSetOutline(AltTextler[32], 0);
	TextDrawBackgroundColor(AltTextler[32], 255);
	TextDrawFont(AltTextler[32], 2);
	TextDrawSetProportional(AltTextler[32], 0);
	TextDrawSetShadow(AltTextler[32], 0);

	AltTextler[33] = TextDrawCreate(358.500000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[33], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[33], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[33], 1);
	TextDrawColor(AltTextler[33], -2139062017);
	TextDrawSetShadow(AltTextler[33], 0);
	TextDrawSetOutline(AltTextler[33], 0);
	TextDrawBackgroundColor(AltTextler[33], 255);
	TextDrawFont(AltTextler[33], 4);
	TextDrawSetProportional(AltTextler[33], 0);
	TextDrawSetShadow(AltTextler[33], 0);

	AltTextler[34] = TextDrawCreate(389.000000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[34], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[34], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[34], 1);
	TextDrawColor(AltTextler[34], -2139062017);
	TextDrawSetShadow(AltTextler[34], 0);
	TextDrawSetOutline(AltTextler[34], 0);
	TextDrawBackgroundColor(AltTextler[34], 255);
	TextDrawFont(AltTextler[34], 4);
	TextDrawSetProportional(AltTextler[34], 0);
	TextDrawSetShadow(AltTextler[34], 0);

	AltTextler[35] = TextDrawCreate(418.500000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[35], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[35], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[35], 1);
	TextDrawColor(AltTextler[35], -2139062017);
	TextDrawSetShadow(AltTextler[35], 0);
	TextDrawSetOutline(AltTextler[35], 0);
	TextDrawBackgroundColor(AltTextler[35], 255);
	TextDrawFont(AltTextler[35], 4);
	TextDrawSetProportional(AltTextler[35], 0);
	TextDrawSetShadow(AltTextler[35], 0);

	AltTextler[36] = TextDrawCreate(448.500000, 438.733642, "LD_SPAC:white");
	TextDrawLetterSize(AltTextler[36], 0.000000, 0.000000);
	TextDrawTextSize(AltTextler[36], 8.000000, 9.000000);
	TextDrawAlignment(AltTextler[36], 1);
	TextDrawColor(AltTextler[36], -2139062017);
	TextDrawSetShadow(AltTextler[36], 0);
	TextDrawSetOutline(AltTextler[36], 0);
	TextDrawBackgroundColor(AltTextler[36], 255);
	TextDrawFont(AltTextler[36], 4);
	TextDrawSetProportional(AltTextler[36], 0);
	TextDrawSetShadow(AltTextler[36], 0);

	AltTextler[37] = TextDrawCreate(359.500000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[37], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[37], 1);
	TextDrawColor(AltTextler[37], -16776961);
	TextDrawSetShadow(AltTextler[37], 0);
	TextDrawSetOutline(AltTextler[37], 0);
	TextDrawBackgroundColor(AltTextler[37], 255);
	TextDrawFont(AltTextler[37], 1);
	TextDrawSetProportional(AltTextler[37], 1);
	TextDrawSetShadow(AltTextler[37], 0);

	AltTextler[38] = TextDrawCreate(390.000000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[38], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[38], 1);
	TextDrawColor(AltTextler[38], -16776961);
	TextDrawSetShadow(AltTextler[38], 0);
	TextDrawSetOutline(AltTextler[38], 0);
	TextDrawBackgroundColor(AltTextler[38], 255);
	TextDrawFont(AltTextler[38], 1);
	TextDrawSetProportional(AltTextler[38], 1);
	TextDrawSetShadow(AltTextler[38], 0);

	AltTextler[39] = TextDrawCreate(419.500000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[39], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[39], 1);
	TextDrawColor(AltTextler[39], -16776961);
	TextDrawSetShadow(AltTextler[39], 0);
	TextDrawSetOutline(AltTextler[39], 0);
	TextDrawBackgroundColor(AltTextler[39], 255);
	TextDrawFont(AltTextler[39], 1);
	TextDrawSetProportional(AltTextler[39], 1);
	TextDrawSetShadow(AltTextler[39], 0);

	AltTextler[40] = TextDrawCreate(449.500000, 440.133483, "00");
	TextDrawLetterSize(AltTextler[40], 0.113999, 0.641777);
	TextDrawAlignment(AltTextler[40], 1);
	TextDrawColor(AltTextler[40], -16776961);
	TextDrawSetShadow(AltTextler[40], 0);
	TextDrawSetOutline(AltTextler[40], 0);
	TextDrawBackgroundColor(AltTextler[40], 255);
	TextDrawFont(AltTextler[40], 1);
	TextDrawSetProportional(AltTextler[40], 1);
	TextDrawSetShadow(AltTextler[40], 0);

	skinlist = LoadModelSelectionMenu("Dark/Diger/skins.txt");

    v1 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v1.txt");
    v2 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v2.txt");
    v3 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v3.txt");
    v4 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v4.txt");
    v5 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v5.txt");
	v6 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v6.txt");
	v7 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v7.txt");
	v8 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v8.txt");
	v9 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v9.txt");
	v10 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v10.txt");
	v11 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v11.txt");
	v12 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v12.txt");
	v13 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v13.txt");
	v14 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v14.txt");
	v15 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v15.txt");
	v16 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v16.txt");
	v17 = LoadModelSelectionMenu("Dark/Diger/v1-v17/v17.txt");

	SetTimer("ayar", 1, false);

	SetTimer("ReactionTest", 600000, 1); // - 10 Dakika
    SetTimer("MathTest", 480000, 1); // - 8 Dakika
	SetTimer("FPSUP", 1203, true);

    CekilisAktif = false;
    
	labyrinthOBJ[0]=CreateDynamicObject(18981, 314.30420, 1955.64856, 40.11170,   0.00000, 90.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[1]=CreateDynamicObject(18981, 314.30420, 1980.59070, 40.11170,   0.00000, 90.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[2]=CreateDynamicObject(18981, 314.30420, 1955.64856, 35.66190,   0.00000, 90.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[3]=CreateDynamicObject(18981, 314.30420, 1980.59070, 35.66190,   0.00000, 90.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[4]=CreateDynamicObject(19353, 325.35818, 1968.01404, 37.87025,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[5]=CreateDynamicObject(19353, 325.35818, 1971.23267, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[6]=CreateDynamicObject(19353, 325.35818, 1974.43787, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[7]=CreateDynamicObject(19353, 325.35818, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[8]=CreateDynamicObject(19353, 325.35818, 1980.80066, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[9]=CreateDynamicObject(19353, 325.35818, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[10]=CreateDynamicObject(19353, 325.35818, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[11]=CreateDynamicObject(19353, 325.35818, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[12]=CreateDynamicObject(19353, 325.35818, 1964.85657, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[13]=CreateDynamicObject(19353, 325.35818, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[14]=CreateDynamicObject(19353, 325.35818, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[15]=CreateDynamicObject(19353, 325.35818, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[16]=CreateDynamicObject(19353, 325.35818, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[17]=CreateDynamicObject(19353, 325.35818, 1948.95374, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[18]=CreateDynamicObject(19353, 325.35818, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[19]=CreateDynamicObject(19353, 302.96570, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[20]=CreateDynamicObject(19353, 302.96570, 1948.95374, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[21]=CreateDynamicObject(19353, 302.96570, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[22]=CreateDynamicObject(19353, 302.96570, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[23]=CreateDynamicObject(19353, 302.96570, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[24]=CreateDynamicObject(19353, 302.96570, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[25]=CreateDynamicObject(19353, 302.96570, 1964.85657, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[26]=CreateDynamicObject(19353, 302.96570, 1968.01404, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[27]=CreateDynamicObject(19353, 302.96570, 1971.23267, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[28]=CreateDynamicObject(19353, 302.96570, 1974.43787, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[29]=CreateDynamicObject(19353, 302.96570, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[30]=CreateDynamicObject(19353, 302.96570, 1980.80066, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[31]=CreateDynamicObject(19353, 302.96570, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[32]=CreateDynamicObject(19353, 302.96570, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[33]=CreateDynamicObject(19353, 302.96570, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[34]=CreateDynamicObject(19353, 323.68411, 1992.00366, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[35]=CreateDynamicObject(19353, 320.48541, 1992.00366, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[36]=CreateDynamicObject(19353, 317.30701, 1992.00366, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[37]=CreateDynamicObject(19353, 314.13129, 1992.00366, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[38]=CreateDynamicObject(19353, 310.95230, 1992.00366, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[39]=CreateDynamicObject(19353, 307.79578, 1992.00354, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[40]=CreateDynamicObject(19353, 304.61771, 1992.00366, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[41]=CreateDynamicObject(19353, 323.68411, 1944.11584, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[42]=CreateDynamicObject(19353, 320.48541, 1944.11584, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[43]=CreateDynamicObject(19353, 317.30701, 1944.11584, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[44]=CreateDynamicObject(19353, 314.13129, 1944.11584, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[45]=CreateDynamicObject(19353, 310.95230, 1944.11584, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[46]=CreateDynamicObject(19353, 307.79581, 1944.11584, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[47]=CreateDynamicObject(19353, 304.61771, 1944.11584, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[48]=CreateDynamicObject(19353, 323.68411, 1988.78967, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[49]=CreateDynamicObject(19353, 323.68439, 1985.53613, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[50]=CreateDynamicObject(19353, 323.68411, 1982.41309, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[51]=CreateDynamicObject(19353, 323.68411, 1979.20618, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[52]=CreateDynamicObject(19353, 323.68411, 1976.04321, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[53]=CreateDynamicObject(19353, 323.68411, 1969.63086, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[54]=CreateDynamicObject(19353, 323.68411, 1966.38892, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[55]=CreateDynamicObject(19353, 323.68411, 1963.25867, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[56]=CreateDynamicObject(19353, 323.68411, 1947.36792, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[57]=CreateDynamicObject(19353, 320.48541, 1985.53613, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[58]=CreateDynamicObject(19353, 320.50552, 1979.18640, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[59]=CreateDynamicObject(19353, 320.48563, 1976.02319, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[60]=CreateDynamicObject(19353, 320.48541, 1972.84106, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[61]=CreateDynamicObject(19353, 320.48541, 1969.63086, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[62]=CreateDynamicObject(19353, 320.48541, 1966.38892, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[63]=CreateDynamicObject(19353, 320.48541, 1963.25867, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[64]=CreateDynamicObject(19353, 320.48541, 1960.07654, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[65]=CreateDynamicObject(19353, 320.48541, 1956.91199, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[66]=CreateDynamicObject(19353, 320.48541, 1953.73132, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[67]=CreateDynamicObject(19353, 320.48541, 1950.53210, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[68]=CreateDynamicObject(19353, 320.48541, 1947.36792, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[69]=CreateDynamicObject(19353, 317.30701, 1988.78967, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[70]=CreateDynamicObject(19353, 317.30701, 1982.41309, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[71]=CreateDynamicObject(19353, 317.30701, 1979.20618, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[72]=CreateDynamicObject(19353, 317.30701, 1969.63086, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[73]=CreateDynamicObject(19353, 317.30701, 1960.07654, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[74]=CreateDynamicObject(19353, 317.30701, 1956.91199, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[75]=CreateDynamicObject(19353, 317.30701, 1947.36792, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[76]=CreateDynamicObject(19353, 314.13129, 1988.78967, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[77]=CreateDynamicObject(19353, 314.13129, 1985.53613, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[78]=CreateDynamicObject(19353, 314.13129, 1976.04321, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[79]=CreateDynamicObject(19353, 314.13129, 1972.84106, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[80]=CreateDynamicObject(19353, 314.13129, 1966.38892, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[81]=CreateDynamicObject(19353, 314.13129, 1963.25867, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[82]=CreateDynamicObject(19353, 314.13129, 1953.73132, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[83]=CreateDynamicObject(19353, 314.13129, 1950.53210, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[84]=CreateDynamicObject(19353, 314.13129, 1947.36792, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[85]=CreateDynamicObject(19353, 310.95230, 1988.78967, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[86]=CreateDynamicObject(19353, 310.95230, 1982.41309, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[87]=CreateDynamicObject(19353, 310.95230, 1979.20618, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[88]=CreateDynamicObject(19353, 310.95230, 1976.04321, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[89]=CreateDynamicObject(19353, 310.95230, 1969.63086, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[90]=CreateDynamicObject(19353, 310.95230, 1966.38892, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[91]=CreateDynamicObject(19353, 310.95230, 1960.07654, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[92]=CreateDynamicObject(19353, 310.95230, 1956.91199, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[93]=CreateDynamicObject(19353, 310.95230, 1950.53210, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[94]=CreateDynamicObject(19353, 310.95230, 1947.36792, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[95]=CreateDynamicObject(19353, 307.79581, 1988.78967, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[96]=CreateDynamicObject(19353, 307.79581, 1985.53613, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[97]=CreateDynamicObject(19353, 307.79581, 1982.41309, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[98]=CreateDynamicObject(19353, 307.79581, 1976.04321, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[99]=CreateDynamicObject(19353, 307.79581, 1972.84106, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[100]=CreateDynamicObject(19353, 307.79581, 1969.63086, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[101]=CreateDynamicObject(19353, 307.79581, 1963.25867, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[102]=CreateDynamicObject(19353, 307.79581, 1956.91199, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[103]=CreateDynamicObject(19353, 304.61771, 1988.78967, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[104]=CreateDynamicObject(19353, 304.61771, 1985.53613, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[105]=CreateDynamicObject(19353, 304.61771, 1982.41309, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[106]=CreateDynamicObject(19353, 304.61771, 1979.20618, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[107]=CreateDynamicObject(19353, 304.61771, 1969.63086, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[108]=CreateDynamicObject(19353, 304.61771, 1966.38892, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[109]=CreateDynamicObject(19353, 304.61771, 1963.25867, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[110]=CreateDynamicObject(19353, 304.61771, 1960.07654, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[111]=CreateDynamicObject(19353, 304.61771, 1956.91199, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[112]=CreateDynamicObject(19353, 304.61771, 1953.73132, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[113]=CreateDynamicObject(19353, 304.61771, 1950.53210, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[114]=CreateDynamicObject(19353, 304.61771, 1947.36792, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[115]=CreateDynamicObject(19353, 304.61740, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[116]=CreateDynamicObject(19353, 304.61740, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[117]=CreateDynamicObject(19353, 304.61740, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[118]=CreateDynamicObject(19353, 304.61740, 1980.80066, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[119]=CreateDynamicObject(19353, 304.61740, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[120]=CreateDynamicObject(19353, 304.61740, 1974.43787, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[121]=CreateDynamicObject(19353, 304.61740, 1971.23267, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[121]=CreateDynamicObject(19353, 304.59741, 1968.01404, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[122]=CreateDynamicObject(19353, 304.61740, 1964.85657, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[123]=CreateDynamicObject(19353, 304.61710, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[124]=CreateDynamicObject(19353, 304.61740, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[125]=CreateDynamicObject(19353, 304.61740, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[126]=CreateDynamicObject(19353, 304.61740, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[127]=CreateDynamicObject(19353, 304.61740, 1948.95374, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[128]=CreateDynamicObject(19353, 304.61740, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[129]=CreateDynamicObject(19353, 307.79581, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[130]=CreateDynamicObject(19353, 307.79581, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[131]=CreateDynamicObject(19353, 307.79581, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[132]=CreateDynamicObject(19353, 307.81580, 1980.80066, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[133]=CreateDynamicObject(19353, 307.79581, 1974.43787, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[134]=CreateDynamicObject(19353, 307.79581, 1968.01404, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[135]=CreateDynamicObject(19353, 307.79581, 1964.85657, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[136]=CreateDynamicObject(19353, 307.79581, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[137]=CreateDynamicObject(19353, 307.79581, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[138]=CreateDynamicObject(19353, 307.79581, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[139]=CreateDynamicObject(19353, 307.79581, 1948.95374, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[140]=CreateDynamicObject(19353, 310.95230, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[141]=CreateDynamicObject(19353, 310.95230, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[142]=CreateDynamicObject(19353, 310.95230, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[143]=CreateDynamicObject(19353, 310.95239, 1974.43787, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[144]=CreateDynamicObject(19353, 323.68411, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[145]=CreateDynamicObject(19353, 323.68411, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[146]=CreateDynamicObject(19353, 323.68411, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[147]=CreateDynamicObject(19353, 323.68411, 1948.95374, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[148]=CreateDynamicObject(19353, 323.68411, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[149]=CreateDynamicObject(19353, 307.79581, 1953.73132, 37.87020,   0.00000, 0.00000, 90.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[150]=CreateDynamicObject(19353, 310.95230, 1971.23267, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[151]=CreateDynamicObject(19353, 310.95230, 1964.85657, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[152]=CreateDynamicObject(19353, 310.93231, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[153]=CreateDynamicObject(19353, 310.95230, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[154]=CreateDynamicObject(19353, 310.95230, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[155]=CreateDynamicObject(19353, 310.95221, 1948.95374, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[156]=CreateDynamicObject(19353, 310.95230, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[157]=CreateDynamicObject(19353, 314.13129, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[158]=CreateDynamicObject(19353, 314.13129, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[159]=CreateDynamicObject(19353, 314.15131, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[160]=CreateDynamicObject(19353, 314.13129, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[161]=CreateDynamicObject(19353, 314.13129, 1971.23267, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[162]=CreateDynamicObject(19353, 314.13129, 1968.01404, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[163]=CreateDynamicObject(19353, 314.13129, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[164]=CreateDynamicObject(19353, 314.13129, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[165]=CreateDynamicObject(19353, 314.13129, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[166]=CreateDynamicObject(19353, 314.13129, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[167]=CreateDynamicObject(19353, 314.13129, 1948.95374, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[168]=CreateDynamicObject(19353, 314.13129, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[169]=CreateDynamicObject(19353, 317.30701, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[170]=CreateDynamicObject(19353, 317.30701, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[171]=CreateDynamicObject(19353, 317.30701, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[172]=CreateDynamicObject(19353, 317.30701, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[173]=CreateDynamicObject(19353, 317.30701, 1971.23267, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[174]=CreateDynamicObject(19353, 317.30701, 1968.01404, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[175]=CreateDynamicObject(19353, 317.30701, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[176]=CreateDynamicObject(19353, 317.30701, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[177]=CreateDynamicObject(19353, 317.30701, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[178]=CreateDynamicObject(19353, 317.30701, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[179]=CreateDynamicObject(19353, 317.30701, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[180]=CreateDynamicObject(19353, 320.48541, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[181]=CreateDynamicObject(19353, 320.48541, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[182]=CreateDynamicObject(19353, 320.48541, 1980.80066, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[183]=CreateDynamicObject(19353, 320.48541, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[184]=CreateDynamicObject(19353, 320.48541, 1974.43787, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[185]=CreateDynamicObject(19353, 320.48541, 1968.01404, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[186]=CreateDynamicObject(19353, 323.68411, 1961.67712, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[187]=CreateDynamicObject(19353, 320.48541, 1964.85657, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[188]=CreateDynamicObject(19353, 320.48541, 1958.49646, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[189]=CreateDynamicObject(19353, 320.48541, 1955.31592, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[190]=CreateDynamicObject(19353, 320.50562, 1952.13501, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[191]=CreateDynamicObject(19353, 320.48541, 1945.77246, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[192]=CreateDynamicObject(19353, 323.68411, 1990.37000, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[193]=CreateDynamicObject(19353, 323.68411, 1987.18994, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[194]=CreateDynamicObject(19353, 323.68411, 1983.98132, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[195]=CreateDynamicObject(19353, 323.68411, 1980.80066, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[193]=CreateDynamicObject(19353, 323.68411, 1977.61865, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[197]=CreateDynamicObject(19353, 323.68411, 1974.43787, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[198]=CreateDynamicObject(19353, 323.68411, 1971.23267, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[199]=CreateDynamicObject(19353, 323.68411, 1968.01404, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[200]=CreateDynamicObject(19353, 323.68411, 1964.85657, 37.87020,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);

	labyrinthOBJ[201]=CreateDynamicObject(1535, 319.01724, 1991.90137, 36.14701,   0.00000, 0.00000, 0.00000, LABYRINTH_VW, LABYRINTH_IN);
	labyrinthOBJ[202]=CreateDynamicObject(1535, 322.03638, 1991.94165, 36.14700,   0.00000, 0.00000, 180.00000, LABYRINTH_VW, LABYRINTH_IN);

	for(new index=0; index<sizeof(labyrinthOBJ); index++){
	    switch(index){
	        case 0..1:{SetDynamicObjectMaterial(labyrinthOBJ[index], 0, 16657, "a51_labs", "concretegroundl1_256", -1);}//techo
	        case 2..3:{SetDynamicObjectMaterial(labyrinthOBJ[index], 0, 16657, "a51_labs", "dam_terazzo", -1);}//piso
	        case 4..47:{SetDynamicObjectMaterial(labyrinthOBJ[index], 0, 16657, "a51_labs", "a51_labwall1", -1);}//paredes
	        case 48..200:{SetDynamicObjectMaterial(labyrinthOBJ[index], 0, 16657, "a51_labs", "a51_labwall1", -1);}//laberinto
	        case 201..202:{SetDynamicObjectMaterial(labyrinthOBJ[index], 0, -1, "null", "null", 0xFFD00000);}//puertas
	     }
	}
	
	YarislariYukle();
	DukkanYukle();
	CetessYukle();

	new atmsql[500];
	format(atmsql, sizeof(atmsql), "SELECT * FROM `atmler`");
	mysql_tquery(mysqlC, atmsql, "AtmYukle");

    BolgeleriYukle();
    mysql_tquery(mysqlC, "SELECT * FROM `bolgeler`", "BolgeSayisi");

	new cetemekansqlx[500];
	format(cetemekansqlx, sizeof(cetemekansqlx), "SELECT * FROM `cetemekanlari`");
	mysql_tquery(mysqlC, cetemekansqlx, "CeteMekanYukle");
	
	SetTimer("MapFSYukle", 1500, false);
	
	for(new playerid = 0; playerid <= GetMaxPlayers(); playerid++)
	{
		YarisBilgiText[playerid][0] = TextDrawCreate(146.164001, 342.250000, "box");
		TextDrawLetterSize(YarisBilgiText[playerid][0], 0.000000, 7.142021);
		TextDrawTextSize(YarisBilgiText[playerid][0], 283.000000, 0.000000);
		TextDrawAlignment(YarisBilgiText[playerid][0], 1);
		TextDrawColor(YarisBilgiText[playerid][0], -1);
		TextDrawUseBox(YarisBilgiText[playerid][0], 1);
		TextDrawBoxColor(YarisBilgiText[playerid][0], 51);
		TextDrawSetShadow(YarisBilgiText[playerid][0], 0);
		TextDrawSetOutline(YarisBilgiText[playerid][0], 0);
		TextDrawBackgroundColor(YarisBilgiText[playerid][0], 255);
		TextDrawFont(YarisBilgiText[playerid][0], 1);
		TextDrawSetProportional(YarisBilgiText[playerid][0], 1);
		TextDrawSetShadow(YarisBilgiText[playerid][0], 0);

		YarisBilgiText[playerid][1] = TextDrawCreate(215.036575, 351.583282, "~r~~h~Checkpoint: ~g~~h~15/20");
		TextDrawLetterSize(YarisBilgiText[playerid][1], 0.266470, 1.279165);
		TextDrawAlignment(YarisBilgiText[playerid][1], 2);
		TextDrawColor(YarisBilgiText[playerid][1], -1);
		TextDrawSetShadow(YarisBilgiText[playerid][1], 0);
		TextDrawSetOutline(YarisBilgiText[playerid][1], 1);
		TextDrawBackgroundColor(YarisBilgiText[playerid][1], 34);
		TextDrawFont(YarisBilgiText[playerid][1], 1);
		TextDrawSetProportional(YarisBilgiText[playerid][1], 1);
		TextDrawSetShadow(YarisBilgiText[playerid][1], 0);

		YarisBilgiText[playerid][2] = TextDrawCreate(214.236526, 389.485595, "~r~~h~Sira: ~g~~h~1st");
		TextDrawLetterSize(YarisBilgiText[playerid][2], 0.266470, 1.279165);
		TextDrawAlignment(YarisBilgiText[playerid][2], 2);
		TextDrawColor(YarisBilgiText[playerid][2], -1);
		TextDrawSetShadow(YarisBilgiText[playerid][2], 0);
		TextDrawSetOutline(YarisBilgiText[playerid][2], 1);
		TextDrawBackgroundColor(YarisBilgiText[playerid][2], 34);
		TextDrawFont(YarisBilgiText[playerid][2], 1);
		TextDrawSetProportional(YarisBilgiText[playerid][2], 1);
		TextDrawSetShadow(YarisBilgiText[playerid][2], 0);

		YarisBilgiText[playerid][3] = TextDrawCreate(215.036575, 370.584442, "~r~~h~Sure: ~g~~h~1 dakika 10 saniye");
		TextDrawLetterSize(YarisBilgiText[playerid][3], 0.266470, 1.279165);
		TextDrawAlignment(YarisBilgiText[playerid][3], 2);
		TextDrawColor(YarisBilgiText[playerid][3], -1);
		TextDrawSetShadow(YarisBilgiText[playerid][3], 0);
		TextDrawSetOutline(YarisBilgiText[playerid][3], 1);
		TextDrawBackgroundColor(YarisBilgiText[playerid][3], 34);
		TextDrawFont(YarisBilgiText[playerid][3], 1);
		TextDrawSetProportional(YarisBilgiText[playerid][3], 1);
		TextDrawSetShadow(YarisBilgiText[playerid][3], 0);

		RaceDuel_Gosterge[playerid][0] = TextDrawCreate(150.849212, 349.250061, "box");
		TextDrawLetterSize(RaceDuel_Gosterge[playerid][0], 0.000000, 8.172767);
		TextDrawTextSize(RaceDuel_Gosterge[playerid][0], 317.000000, 0.000000);
		TextDrawAlignment(RaceDuel_Gosterge[playerid][0], 1);
		TextDrawColor(RaceDuel_Gosterge[playerid][0], -1);
		TextDrawUseBox(RaceDuel_Gosterge[playerid][0], 1);
		TextDrawBoxColor(RaceDuel_Gosterge[playerid][0], 51);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][0], 0);
		TextDrawSetOutline(RaceDuel_Gosterge[playerid][0], 0);
		TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][0], 255);
		TextDrawFont(RaceDuel_Gosterge[playerid][0], 1);
		TextDrawSetProportional(RaceDuel_Gosterge[playerid][0], 1);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][0], 0);

		RaceDuel_Gosterge[playerid][1] = TextDrawCreate(231.903381, 359.166534, "~r~~h~Checkpoint: ~g~~h~1");
		TextDrawLetterSize(RaceDuel_Gosterge[playerid][1], 0.289897, 1.226664);
		TextDrawAlignment(RaceDuel_Gosterge[playerid][1], 2);
		TextDrawColor(RaceDuel_Gosterge[playerid][1], -1);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][1], 0);
		TextDrawSetOutline(RaceDuel_Gosterge[playerid][1], 1);
		TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][1], 51);
		TextDrawFont(RaceDuel_Gosterge[playerid][1], 1);
		TextDrawSetProportional(RaceDuel_Gosterge[playerid][1], 1);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][1], 0);

		RaceDuel_Gosterge[playerid][2] = TextDrawCreate(231.903381, 378.416717, "~r~~h~Sira: ~g~~h~1st");
		TextDrawLetterSize(RaceDuel_Gosterge[playerid][2], 0.289897, 1.226664);
		TextDrawAlignment(RaceDuel_Gosterge[playerid][2], 2);
		TextDrawColor(RaceDuel_Gosterge[playerid][2], -1);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][2], 0);
		TextDrawSetOutline(RaceDuel_Gosterge[playerid][2], 1);
		TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][2], 51);
		TextDrawFont(RaceDuel_Gosterge[playerid][2], 1);
		TextDrawSetProportional(RaceDuel_Gosterge[playerid][2], 1);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][2], 0);

		RaceDuel_Gosterge[playerid][3] = TextDrawCreate(231.903381, 398.250335, "~r~~h~Vites: ~g~~h~5");
		TextDrawLetterSize(RaceDuel_Gosterge[playerid][3], 0.289897, 1.226664);
		TextDrawAlignment(RaceDuel_Gosterge[playerid][3], 2);
		TextDrawColor(RaceDuel_Gosterge[playerid][3], -1);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][3], 0);
		TextDrawSetOutline(RaceDuel_Gosterge[playerid][3], 1);
		TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][3], 51);
		TextDrawFont(RaceDuel_Gosterge[playerid][3], 1);
		TextDrawSetProportional(RaceDuel_Gosterge[playerid][3], 1);
		TextDrawSetShadow(RaceDuel_Gosterge[playerid][3], 0);

		LevelAtlandi[playerid][0] = TextDrawCreate(183.645645, 46.499977, "box");
		TextDrawLetterSize(LevelAtlandi[playerid][0], 0.000000, 10.046852);
		TextDrawTextSize(LevelAtlandi[playerid][0], 454.000000, 0.000000);
		TextDrawAlignment(LevelAtlandi[playerid][0], 1);
		TextDrawColor(LevelAtlandi[playerid][0], -1);
		TextDrawUseBox(LevelAtlandi[playerid][0], 1);
		TextDrawBoxColor(LevelAtlandi[playerid][0], 1768515993);
		TextDrawSetShadow(LevelAtlandi[playerid][0], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][0], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][0], 255);
		TextDrawFont(LevelAtlandi[playerid][0], 1);
		TextDrawSetProportional(LevelAtlandi[playerid][0], 1);
		TextDrawSetShadow(LevelAtlandi[playerid][0], 0);

		LevelAtlandi[playerid][1] = TextDrawCreate(382.130676, 42.999996, "");
		TextDrawLetterSize(LevelAtlandi[playerid][1], 0.000000, 0.000000);
		TextDrawTextSize(LevelAtlandi[playerid][1], 120.000000, 115.000000);
		TextDrawAlignment(LevelAtlandi[playerid][1], 1);
		TextDrawColor(LevelAtlandi[playerid][1], -1);
		TextDrawSetShadow(LevelAtlandi[playerid][1], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][1], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][1], 0);
		TextDrawFont(LevelAtlandi[playerid][1], 5);
		TextDrawSetProportional(LevelAtlandi[playerid][1], 0);
		TextDrawSetShadow(LevelAtlandi[playerid][1], 0);
		TextDrawSetPreviewModel(LevelAtlandi[playerid][1], 348);
		TextDrawSetPreviewRot(LevelAtlandi[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);

		LevelAtlandi[playerid][2] = TextDrawCreate(178.023406, 38.333347, "box");
		TextDrawLetterSize(LevelAtlandi[playerid][2], 0.000000, 11.592971);
		TextDrawTextSize(LevelAtlandi[playerid][2], 461.000000, 0.000000);
		TextDrawAlignment(LevelAtlandi[playerid][2], 1);
		TextDrawColor(LevelAtlandi[playerid][2], -1);
		TextDrawUseBox(LevelAtlandi[playerid][2], 1);
		TextDrawBoxColor(LevelAtlandi[playerid][2], 1768515942);
		TextDrawSetShadow(LevelAtlandi[playerid][2], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][2], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][2], -120);
		TextDrawFont(LevelAtlandi[playerid][2], 1);
		TextDrawSetProportional(LevelAtlandi[playerid][2], 1);
		TextDrawSetShadow(LevelAtlandi[playerid][2], 0);

		LevelAtlandi[playerid][3] = TextDrawCreate(315.131988, 45.333335, "");
		TextDrawLetterSize(LevelAtlandi[playerid][3], 0.000000, 0.000000);
		TextDrawTextSize(LevelAtlandi[playerid][3], 90.000000, 90.000000);
		TextDrawAlignment(LevelAtlandi[playerid][3], 1);
		TextDrawColor(LevelAtlandi[playerid][3], -1);
		TextDrawSetShadow(LevelAtlandi[playerid][3], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][3], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][3], 0);
		TextDrawFont(LevelAtlandi[playerid][3], 5);
		TextDrawSetProportional(LevelAtlandi[playerid][3], 0);
		TextDrawSetShadow(LevelAtlandi[playerid][3], 0);
		TextDrawSetPreviewModel(LevelAtlandi[playerid][3], 0);
		TextDrawSetPreviewRot(LevelAtlandi[playerid][3], 0.000000, 0.000000, 0.000000, 1.000000);

		LevelAtlandi[playerid][4] = TextDrawCreate(190.973648, 87.333366, "hud:radar_cash");
		TextDrawLetterSize(LevelAtlandi[playerid][4], 0.000000, 0.000000);
		TextDrawTextSize(LevelAtlandi[playerid][4], 12.000000, 18.000000);
		TextDrawAlignment(LevelAtlandi[playerid][4], 1);
		TextDrawColor(LevelAtlandi[playerid][4], -1);
		TextDrawSetShadow(LevelAtlandi[playerid][4], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][4], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][4], 255);
		TextDrawFont(LevelAtlandi[playerid][4], 4);
		TextDrawSetProportional(LevelAtlandi[playerid][4], 0);
		TextDrawSetShadow(LevelAtlandi[playerid][4], 0);

		LevelAtlandi[playerid][5] = TextDrawCreate(190.973648, 109.499992, "hud:radar_sweet");
		TextDrawLetterSize(LevelAtlandi[playerid][5], 0.000000, 0.000000);
		TextDrawTextSize(LevelAtlandi[playerid][5], 11.000000, 18.000000);
		TextDrawAlignment(LevelAtlandi[playerid][5], 1);
		TextDrawColor(LevelAtlandi[playerid][5], -1);
		TextDrawSetShadow(LevelAtlandi[playerid][5], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][5], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][5], 255);
		TextDrawFont(LevelAtlandi[playerid][5], 4);
		TextDrawSetProportional(LevelAtlandi[playerid][5], 0);
		TextDrawSetShadow(LevelAtlandi[playerid][5], 0);

		LevelAtlandi[playerid][6] = TextDrawCreate(205.197601, 88.499984, "+500.000");
		TextDrawLetterSize(LevelAtlandi[playerid][6], 0.252415, 1.652500);
		TextDrawAlignment(LevelAtlandi[playerid][6], 1);
		TextDrawColor(LevelAtlandi[playerid][6], -5963521);
		TextDrawSetShadow(LevelAtlandi[playerid][6], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][6], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][6], 255);
		TextDrawFont(LevelAtlandi[playerid][6], 2);
		TextDrawSetProportional(LevelAtlandi[playerid][6], 1);
		TextDrawSetShadow(LevelAtlandi[playerid][6], 0);

		LevelAtlandi[playerid][7] = TextDrawCreate(204.729095, 110.083335, "+150");
		TextDrawLetterSize(LevelAtlandi[playerid][7], 0.272093, 1.839167);
		TextDrawAlignment(LevelAtlandi[playerid][7], 1);
		TextDrawColor(LevelAtlandi[playerid][7], -65281);
		TextDrawSetShadow(LevelAtlandi[playerid][7], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][7], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][7], 255);
		TextDrawFont(LevelAtlandi[playerid][7], 2);
		TextDrawSetProportional(LevelAtlandi[playerid][7], 1);
		TextDrawSetShadow(LevelAtlandi[playerid][7], 0);

		LevelAtlandi[playerid][8] = TextDrawCreate(190.204910, 50.583332, "SEVIYE ATLANDI");
		TextDrawLetterSize(LevelAtlandi[playerid][8], 0.400000, 1.600000);
		TextDrawAlignment(LevelAtlandi[playerid][8], 1);
		TextDrawColor(LevelAtlandi[playerid][8], 16711935);
		TextDrawSetShadow(LevelAtlandi[playerid][8], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][8], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][8], 255);
		TextDrawFont(LevelAtlandi[playerid][8], 3);
		TextDrawSetProportional(LevelAtlandi[playerid][8], 1);
		TextDrawSetShadow(LevelAtlandi[playerid][8], 0);

		LevelAtlandi[playerid][9] = TextDrawCreate(190.204833, 67.500007, "Yeni seviye: 10");
		TextDrawLetterSize(LevelAtlandi[playerid][9], 0.279589, 1.518334);
		TextDrawAlignment(LevelAtlandi[playerid][9], 1);
		TextDrawColor(LevelAtlandi[playerid][9], 16777215);
		TextDrawSetShadow(LevelAtlandi[playerid][9], 0);
		TextDrawSetOutline(LevelAtlandi[playerid][9], 0);
		TextDrawBackgroundColor(LevelAtlandi[playerid][9], 255);
		TextDrawFont(LevelAtlandi[playerid][9], 1);
		TextDrawSetProportional(LevelAtlandi[playerid][9], 1);
		TextDrawSetShadow(LevelAtlandi[playerid][9], 0);

		vote7[playerid] = TextDrawCreate(12.181545, 261.333435, "Evet: 0");
		TextDrawLetterSize(vote7[playerid], 0.271493, 1.553333);
		TextDrawAlignment(vote7[playerid], 1);
		TextDrawColor(vote7[playerid], 16711935);
		TextDrawSetShadow(vote7[playerid], 0);
		TextDrawSetOutline(vote7[playerid], 1);
		TextDrawBackgroundColor(vote7[playerid], 51);
		TextDrawFont(vote7[playerid], 1);
		TextDrawSetProportional(vote7[playerid], 1);

		vote8[playerid] = TextDrawCreate(67.935607, 261.333312, "Hayir: 0");
		TextDrawLetterSize(vote8[playerid], 0.321156, 1.512499);
		TextDrawTextSize(vote8[playerid], 484.919464, -11.666666);
		TextDrawAlignment(vote8[playerid], 1);
		TextDrawColor(vote8[playerid], -16776961);
		TextDrawUseBox(vote8[playerid], true);
		TextDrawBoxColor(vote8[playerid], 0);
		TextDrawSetShadow(vote8[playerid], 0);
		TextDrawSetOutline(vote8[playerid], 1);
		TextDrawBackgroundColor(vote8[playerid], 51);
		TextDrawFont(vote8[playerid], 1);
		TextDrawSetProportional(vote8[playerid], 1);

		skorlar2[playerid] = TextDrawCreate(555.000000, 221.083328, "_");
		TextDrawLetterSize(skorlar2[playerid], 0.178125, 1.045833);
		TextDrawAlignment(skorlar2[playerid], 1);
		TextDrawColor(skorlar2[playerid], -1);
		TextDrawSetShadow(skorlar2[playerid], 0);
		TextDrawSetOutline(skorlar2[playerid], 1);
		TextDrawBackgroundColor(skorlar2[playerid], 51);
		TextDrawFont(skorlar2[playerid], 2);
		TextDrawSetProportional(skorlar2[playerid], 1);

		skorlar4[playerid] = TextDrawCreate(588.500000, 220.916671, "_");
		TextDrawLetterSize(skorlar4[playerid], 0.166875, 0.981666);
		TextDrawAlignment(skorlar4[playerid], 1);
		TextDrawColor(skorlar4[playerid], -1);
		TextDrawSetShadow(skorlar4[playerid], 0);
		TextDrawSetOutline(skorlar4[playerid], 1);
		TextDrawBackgroundColor(skorlar4[playerid], 51);
		TextDrawFont(skorlar4[playerid], 2);
		TextDrawSetProportional(skorlar4[playerid], 1);

		skorlar6[playerid] = TextDrawCreate(503.875000, 236.499893, "_");
		TextDrawLetterSize(skorlar6[playerid], 0.179374, 1.209166);
		TextDrawAlignment(skorlar6[playerid], 1);
		TextDrawColor(skorlar6[playerid], -1);
		TextDrawSetShadow(skorlar6[playerid], 0);
		TextDrawSetOutline(skorlar6[playerid], 1);
		TextDrawBackgroundColor(skorlar6[playerid], 51);
		TextDrawFont(skorlar6[playerid], 1);
		TextDrawSetProportional(skorlar6[playerid], 1);

		skorlar7[playerid] = TextDrawCreate(504.125000, 256.499908, "_");
		TextDrawLetterSize(skorlar7[playerid], 0.179374, 1.209166);
		TextDrawAlignment(skorlar7[playerid], 1);
		TextDrawColor(skorlar7[playerid], -1);
		TextDrawSetShadow(skorlar7[playerid], 0);
		TextDrawSetOutline(skorlar7[playerid], 1);
		TextDrawBackgroundColor(skorlar7[playerid], 51);
		TextDrawFont(skorlar7[playerid], 1);
		TextDrawSetProportional(skorlar7[playerid], 1);

		skorlar8[playerid] = TextDrawCreate(588.250000, 238.250000, "_");
		TextDrawLetterSize(skorlar8[playerid], 0.171874, 0.876666);
		TextDrawAlignment(skorlar8[playerid], 1);
		TextDrawColor(skorlar8[playerid], -1);
		TextDrawSetShadow(skorlar8[playerid], 0);
		TextDrawSetOutline(skorlar8[playerid], 1);
		TextDrawBackgroundColor(skorlar8[playerid], 51);
		TextDrawFont(skorlar8[playerid], 2);
		TextDrawSetProportional(skorlar8[playerid], 1);

		skorlar10[playerid] = TextDrawCreate(587.875000, 257.666656, "_");
		TextDrawLetterSize(skorlar10[playerid], 0.171874, 0.876666);
		TextDrawAlignment(skorlar10[playerid], 1);
		TextDrawColor(skorlar10[playerid], -1);
		TextDrawSetShadow(skorlar10[playerid], 0);
		TextDrawSetOutline(skorlar10[playerid], 1);
		TextDrawBackgroundColor(skorlar10[playerid], 51);
		TextDrawFont(skorlar10[playerid], 2);
		TextDrawSetProportional(skorlar10[playerid], 1);

		GostergeAsilHiz[playerid] = TextDrawCreate(62.298690, 292.666717, "~b~0 ~w~~h~~h~km/h");
		TextDrawLetterSize(GostergeAsilHiz[playerid], 0.275373, 1.722500);
		TextDrawAlignment(GostergeAsilHiz[playerid], 1);
		TextDrawColor(GostergeAsilHiz[playerid], -1);
		TextDrawSetShadow(GostergeAsilHiz[playerid], 0);
		TextDrawSetOutline(GostergeAsilHiz[playerid], 1);
		TextDrawBackgroundColor(GostergeAsilHiz[playerid], 255);
		TextDrawFont(GostergeAsilHiz[playerid], 2);
		TextDrawSetProportional(GostergeAsilHiz[playerid], 1);
		TextDrawSetShadow(GostergeAsilHiz[playerid], 0);

		NEWEXPText[playerid][0] = TextDrawCreate(524.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][0], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][0], 2);
		TextDrawColor(NEWEXPText[playerid][0], -1);
		TextDrawSetShadow(NEWEXPText[playerid][0], 0);
		TextDrawSetOutline(NEWEXPText[playerid][0], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][0], 255);
		TextDrawFont(NEWEXPText[playerid][0], 2);
		TextDrawSetProportional(NEWEXPText[playerid][0], 1);
		TextDrawSetShadow(NEWEXPText[playerid][0], 0);

		NEWEXPText[playerid][1] = TextDrawCreate(526.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][1], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][1], 2);
		TextDrawColor(NEWEXPText[playerid][1], -1);
		TextDrawSetShadow(NEWEXPText[playerid][1], 0);
		TextDrawSetOutline(NEWEXPText[playerid][1], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][1], 255);
		TextDrawFont(NEWEXPText[playerid][1], 2);
		TextDrawSetProportional(NEWEXPText[playerid][1], 1);
		TextDrawSetShadow(NEWEXPText[playerid][1], 0);

		NEWEXPText[playerid][2] = TextDrawCreate(528.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][2], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][2], 2);
		TextDrawColor(NEWEXPText[playerid][2], -1);
		TextDrawSetShadow(NEWEXPText[playerid][2], 0);
		TextDrawSetOutline(NEWEXPText[playerid][2], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][2], 255);
		TextDrawFont(NEWEXPText[playerid][2], 2);
		TextDrawSetProportional(NEWEXPText[playerid][2], 1);
		TextDrawSetShadow(NEWEXPText[playerid][2], 0);

		NEWEXPText[playerid][3] = TextDrawCreate(530.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][3], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][3], 2);
		TextDrawColor(NEWEXPText[playerid][3], -1);
		TextDrawSetShadow(NEWEXPText[playerid][3], 0);
		TextDrawSetOutline(NEWEXPText[playerid][3], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][3], 255);
		TextDrawFont(NEWEXPText[playerid][3], 2);
		TextDrawSetProportional(NEWEXPText[playerid][3], 1);
		TextDrawSetShadow(NEWEXPText[playerid][3], 0);

		NEWEXPText[playerid][4] = TextDrawCreate(532.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][4], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][4], 2);
		TextDrawColor(NEWEXPText[playerid][4], -1);
		TextDrawSetShadow(NEWEXPText[playerid][4], 0);
		TextDrawSetOutline(NEWEXPText[playerid][4], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][4], 255);
		TextDrawFont(NEWEXPText[playerid][4], 2);
		TextDrawSetProportional(NEWEXPText[playerid][4], 1);
		TextDrawSetShadow(NEWEXPText[playerid][4], 0);

		NEWEXPText[playerid][5] = TextDrawCreate(534.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][5], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][5], 2);
		TextDrawColor(NEWEXPText[playerid][5], -1);
		TextDrawSetShadow(NEWEXPText[playerid][5], 0);
		TextDrawSetOutline(NEWEXPText[playerid][5], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][5], 255);
		TextDrawFont(NEWEXPText[playerid][5], 2);
		TextDrawSetProportional(NEWEXPText[playerid][5], 1);
		TextDrawSetShadow(NEWEXPText[playerid][5], 0);

		NEWEXPText[playerid][6] = TextDrawCreate(536.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][6], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][6], 2);
		TextDrawColor(NEWEXPText[playerid][6], -1);
		TextDrawSetShadow(NEWEXPText[playerid][6], 0);
		TextDrawSetOutline(NEWEXPText[playerid][6], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][6], 255);
		TextDrawFont(NEWEXPText[playerid][6], 2);
		TextDrawSetProportional(NEWEXPText[playerid][6], 1);
		TextDrawSetShadow(NEWEXPText[playerid][6], 0);

		NEWEXPText[playerid][7] = TextDrawCreate(538.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][7], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][7], 2);
		TextDrawColor(NEWEXPText[playerid][7], -1);
		TextDrawSetShadow(NEWEXPText[playerid][7], 0);
		TextDrawSetOutline(NEWEXPText[playerid][7], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][7], 255);
		TextDrawFont(NEWEXPText[playerid][7], 2);
		TextDrawSetProportional(NEWEXPText[playerid][7], 1);
		TextDrawSetShadow(NEWEXPText[playerid][7], 0);

		NEWEXPText[playerid][8] = TextDrawCreate(540.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][8], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][8], 2);
		TextDrawColor(NEWEXPText[playerid][8], -1);
		TextDrawSetShadow(NEWEXPText[playerid][8], 0);
		TextDrawSetOutline(NEWEXPText[playerid][8], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][8], 255);
		TextDrawFont(NEWEXPText[playerid][8], 2);
		TextDrawSetProportional(NEWEXPText[playerid][8], 1);
		TextDrawSetShadow(NEWEXPText[playerid][8], 0);

		NEWEXPText[playerid][9] = TextDrawCreate(542.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][9], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][9], 2);
		TextDrawColor(NEWEXPText[playerid][9], -1);
		TextDrawSetShadow(NEWEXPText[playerid][9], 0);
		TextDrawSetOutline(NEWEXPText[playerid][9], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][9], 255);
		TextDrawFont(NEWEXPText[playerid][9], 2);
		TextDrawSetProportional(NEWEXPText[playerid][9], 1);
		TextDrawSetShadow(NEWEXPText[playerid][9], 0);

		NEWEXPText[playerid][10] = TextDrawCreate(544.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][10], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][10], 2);
		TextDrawColor(NEWEXPText[playerid][10], -1);
		TextDrawSetShadow(NEWEXPText[playerid][10], 0);
		TextDrawSetOutline(NEWEXPText[playerid][10], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][10], 255);
		TextDrawFont(NEWEXPText[playerid][10], 2);
		TextDrawSetProportional(NEWEXPText[playerid][10], 1);
		TextDrawSetShadow(NEWEXPText[playerid][10], 0);

		NEWEXPText[playerid][11] = TextDrawCreate(546.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][11], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][11], 2);
		TextDrawColor(NEWEXPText[playerid][11], -1);
		TextDrawSetShadow(NEWEXPText[playerid][11], 0);
		TextDrawSetOutline(NEWEXPText[playerid][11], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][11], 255);
		TextDrawFont(NEWEXPText[playerid][11], 2);
		TextDrawSetProportional(NEWEXPText[playerid][11], 1);
		TextDrawSetShadow(NEWEXPText[playerid][11], 0);

		NEWEXPText[playerid][12] = TextDrawCreate(548.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][12], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][12], 2);
		TextDrawColor(NEWEXPText[playerid][12], -1);
		TextDrawSetShadow(NEWEXPText[playerid][12], 0);
		TextDrawSetOutline(NEWEXPText[playerid][12], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][12], 255);
		TextDrawFont(NEWEXPText[playerid][12], 2);
		TextDrawSetProportional(NEWEXPText[playerid][12], 1);
		TextDrawSetShadow(NEWEXPText[playerid][12], 0);

		NEWEXPText[playerid][13] = TextDrawCreate(550.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][13], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][13], 2);
		TextDrawColor(NEWEXPText[playerid][13], -1);
		TextDrawSetShadow(NEWEXPText[playerid][13], 0);
		TextDrawSetOutline(NEWEXPText[playerid][13], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][13], 255);
		TextDrawFont(NEWEXPText[playerid][13], 2);
		TextDrawSetProportional(NEWEXPText[playerid][13], 1);
		TextDrawSetShadow(NEWEXPText[playerid][13], 0);

		NEWEXPText[playerid][14] = TextDrawCreate(552.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][14], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][14], 2);
		TextDrawColor(NEWEXPText[playerid][14], -1);
		TextDrawSetShadow(NEWEXPText[playerid][14], 0);
		TextDrawSetOutline(NEWEXPText[playerid][14], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][14], 255);
		TextDrawFont(NEWEXPText[playerid][14], 2);
		TextDrawSetProportional(NEWEXPText[playerid][14], 1);
		TextDrawSetShadow(NEWEXPText[playerid][14], 0);

		NEWEXPText[playerid][15] = TextDrawCreate(554.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][15], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][15], 2);
		TextDrawColor(NEWEXPText[playerid][15], -1);
		TextDrawSetShadow(NEWEXPText[playerid][15], 0);
		TextDrawSetOutline(NEWEXPText[playerid][15], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][15], 255);
		TextDrawFont(NEWEXPText[playerid][15], 2);
		TextDrawSetProportional(NEWEXPText[playerid][15], 1);
		TextDrawSetShadow(NEWEXPText[playerid][15], 0);

		NEWEXPText[playerid][16] = TextDrawCreate(556.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][16], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][16], 2);
		TextDrawColor(NEWEXPText[playerid][16], -1);
		TextDrawSetShadow(NEWEXPText[playerid][16], 0);
		TextDrawSetOutline(NEWEXPText[playerid][16], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][16], 255);
		TextDrawFont(NEWEXPText[playerid][16], 2);
		TextDrawSetProportional(NEWEXPText[playerid][16], 1);
		TextDrawSetShadow(NEWEXPText[playerid][16], 0);

		NEWEXPText[playerid][17] = TextDrawCreate(558.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][17], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][17], 2);
		TextDrawColor(NEWEXPText[playerid][17], -1);
		TextDrawSetShadow(NEWEXPText[playerid][17], 0);
		TextDrawSetOutline(NEWEXPText[playerid][17], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][17], 255);
		TextDrawFont(NEWEXPText[playerid][17], 2);
		TextDrawSetProportional(NEWEXPText[playerid][17], 1);
		TextDrawSetShadow(NEWEXPText[playerid][17], 0);

		NEWEXPText[playerid][18] = TextDrawCreate(560.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][18], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][18], 2);
		TextDrawColor(NEWEXPText[playerid][18], -1);
		TextDrawSetShadow(NEWEXPText[playerid][18], 0);
		TextDrawSetOutline(NEWEXPText[playerid][18], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][18], 255);
		TextDrawFont(NEWEXPText[playerid][18], 2);
		TextDrawSetProportional(NEWEXPText[playerid][18], 1);
		TextDrawSetShadow(NEWEXPText[playerid][18], 0);

		NEWEXPText[playerid][19] = TextDrawCreate(562.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][19], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][19], 2);
		TextDrawColor(NEWEXPText[playerid][19], -1);
		TextDrawSetShadow(NEWEXPText[playerid][19], 0);
		TextDrawSetOutline(NEWEXPText[playerid][19], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][19], 255);
		TextDrawFont(NEWEXPText[playerid][19], 2);
		TextDrawSetProportional(NEWEXPText[playerid][19], 1);
		TextDrawSetShadow(NEWEXPText[playerid][19], 0);

		NEWEXPText[playerid][20] = TextDrawCreate(564.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][20], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][20], 2);
		TextDrawColor(NEWEXPText[playerid][20], -1);
		TextDrawSetShadow(NEWEXPText[playerid][20], 0);
		TextDrawSetOutline(NEWEXPText[playerid][20], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][20], 255);
		TextDrawFont(NEWEXPText[playerid][20], 2);
		TextDrawSetProportional(NEWEXPText[playerid][20], 1);
		TextDrawSetShadow(NEWEXPText[playerid][20], 0);

		NEWEXPText[playerid][21] = TextDrawCreate(566.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][21], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][21], 2);
		TextDrawColor(NEWEXPText[playerid][21], -1);
		TextDrawSetShadow(NEWEXPText[playerid][21], 0);
		TextDrawSetOutline(NEWEXPText[playerid][21], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][21], 255);
		TextDrawFont(NEWEXPText[playerid][21], 2);
		TextDrawSetProportional(NEWEXPText[playerid][21], 1);
		TextDrawSetShadow(NEWEXPText[playerid][21], 0);

		NEWEXPText[playerid][22] = TextDrawCreate(568.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][22], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][22], 2);
		TextDrawColor(NEWEXPText[playerid][22], -1);
		TextDrawSetShadow(NEWEXPText[playerid][22], 0);
		TextDrawSetOutline(NEWEXPText[playerid][22], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][22], 255);
		TextDrawFont(NEWEXPText[playerid][22], 2);
		TextDrawSetProportional(NEWEXPText[playerid][22], 1);
		TextDrawSetShadow(NEWEXPText[playerid][22], 0);

		NEWEXPText[playerid][23] = TextDrawCreate(570.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][23], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][23], 2);
		TextDrawColor(NEWEXPText[playerid][23], -1);
		TextDrawSetShadow(NEWEXPText[playerid][23], 0);
		TextDrawSetOutline(NEWEXPText[playerid][23], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][23], 255);
		TextDrawFont(NEWEXPText[playerid][23], 2);
		TextDrawSetProportional(NEWEXPText[playerid][23], 1);
		TextDrawSetShadow(NEWEXPText[playerid][23], 0);

		NEWEXPText[playerid][24] = TextDrawCreate(572.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][24], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][24], 2);
		TextDrawColor(NEWEXPText[playerid][24], -1);
		TextDrawSetShadow(NEWEXPText[playerid][24], 0);
		TextDrawSetOutline(NEWEXPText[playerid][24], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][24], 255);
		TextDrawFont(NEWEXPText[playerid][24], 2);
		TextDrawSetProportional(NEWEXPText[playerid][24], 1);
		TextDrawSetShadow(NEWEXPText[playerid][24], 0);

		NEWEXPText[playerid][25] = TextDrawCreate(574.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][25], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][25], 2);
		TextDrawColor(NEWEXPText[playerid][25], -1);
		TextDrawSetShadow(NEWEXPText[playerid][25], 0);
		TextDrawSetOutline(NEWEXPText[playerid][25], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][25], 255);
		TextDrawFont(NEWEXPText[playerid][25], 2);
		TextDrawSetProportional(NEWEXPText[playerid][25], 1);
		TextDrawSetShadow(NEWEXPText[playerid][25], 0);

		NEWEXPText[playerid][26] = TextDrawCreate(576.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][26], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][26], 2);
		TextDrawColor(NEWEXPText[playerid][26], -1);
		TextDrawSetShadow(NEWEXPText[playerid][26], 0);
		TextDrawSetOutline(NEWEXPText[playerid][26], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][26], 255);
		TextDrawFont(NEWEXPText[playerid][26], 2);
		TextDrawSetProportional(NEWEXPText[playerid][26], 1);
		TextDrawSetShadow(NEWEXPText[playerid][26], 0);

		NEWEXPText[playerid][27] = TextDrawCreate(578.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][27], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][27], 2);
		TextDrawColor(NEWEXPText[playerid][27], -1);
		TextDrawSetShadow(NEWEXPText[playerid][27], 0);
		TextDrawSetOutline(NEWEXPText[playerid][27], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][27], 255);
		TextDrawFont(NEWEXPText[playerid][27], 2);
		TextDrawSetProportional(NEWEXPText[playerid][27], 1);
		TextDrawSetShadow(NEWEXPText[playerid][27], 0);

		NEWEXPText[playerid][28] = TextDrawCreate(580.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][28], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][28], 2);
		TextDrawColor(NEWEXPText[playerid][28], -1);
		TextDrawSetShadow(NEWEXPText[playerid][28], 0);
		TextDrawSetOutline(NEWEXPText[playerid][28], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][28], 255);
		TextDrawFont(NEWEXPText[playerid][28], 2);
		TextDrawSetProportional(NEWEXPText[playerid][28], 1);
		TextDrawSetShadow(NEWEXPText[playerid][28], 0);

		NEWEXPText[playerid][29] = TextDrawCreate(582.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][29], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][29], 2);
		TextDrawColor(NEWEXPText[playerid][29], -1);
		TextDrawSetShadow(NEWEXPText[playerid][29], 0);
		TextDrawSetOutline(NEWEXPText[playerid][29], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][29], 255);
		TextDrawFont(NEWEXPText[playerid][29], 2);
		TextDrawSetProportional(NEWEXPText[playerid][29], 1);
		TextDrawSetShadow(NEWEXPText[playerid][29], 0);

		NEWEXPText[playerid][30] = TextDrawCreate(584.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][30], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][30], 2);
		TextDrawColor(NEWEXPText[playerid][30], -1);
		TextDrawSetShadow(NEWEXPText[playerid][30], 0);
		TextDrawSetOutline(NEWEXPText[playerid][30], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][30], 255);
		TextDrawFont(NEWEXPText[playerid][30], 2);
		TextDrawSetProportional(NEWEXPText[playerid][30], 1);
		TextDrawSetShadow(NEWEXPText[playerid][30], 0);

		NEWEXPText[playerid][31] = TextDrawCreate(586.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][31], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][31], 2);
		TextDrawColor(NEWEXPText[playerid][31], -1);
		TextDrawSetShadow(NEWEXPText[playerid][31], 0);
		TextDrawSetOutline(NEWEXPText[playerid][31], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][31], 255);
		TextDrawFont(NEWEXPText[playerid][31], 2);
		TextDrawSetProportional(NEWEXPText[playerid][31], 1);
		TextDrawSetShadow(NEWEXPText[playerid][31], 0);

		NEWEXPText[playerid][32] = TextDrawCreate(588.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][32], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][32], 2);
		TextDrawColor(NEWEXPText[playerid][32], -1);
		TextDrawSetShadow(NEWEXPText[playerid][32], 0);
		TextDrawSetOutline(NEWEXPText[playerid][32], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][32], 255);
		TextDrawFont(NEWEXPText[playerid][32], 2);
		TextDrawSetProportional(NEWEXPText[playerid][32], 1);
		TextDrawSetShadow(NEWEXPText[playerid][32], 0);

		NEWEXPText[playerid][33] = TextDrawCreate(590.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][33], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][33], 2);
		TextDrawColor(NEWEXPText[playerid][33], -1);
		TextDrawSetShadow(NEWEXPText[playerid][33], 0);
		TextDrawSetOutline(NEWEXPText[playerid][33], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][33], 255);
		TextDrawFont(NEWEXPText[playerid][33], 2);
		TextDrawSetProportional(NEWEXPText[playerid][33], 1);
		TextDrawSetShadow(NEWEXPText[playerid][33], 0);

		NEWEXPText[playerid][34] = TextDrawCreate(592.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][34], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][34], 2);
		TextDrawColor(NEWEXPText[playerid][34], -1);
		TextDrawSetShadow(NEWEXPText[playerid][34], 0);
		TextDrawSetOutline(NEWEXPText[playerid][34], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][34], 255);
		TextDrawFont(NEWEXPText[playerid][34], 2);
		TextDrawSetProportional(NEWEXPText[playerid][34], 1);
		TextDrawSetShadow(NEWEXPText[playerid][34], 0);

		NEWEXPText[playerid][35] = TextDrawCreate(594.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][35], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][35], 2);
		TextDrawColor(NEWEXPText[playerid][35], -1);
		TextDrawSetShadow(NEWEXPText[playerid][35], 0);
		TextDrawSetOutline(NEWEXPText[playerid][35], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][35], 255);
		TextDrawFont(NEWEXPText[playerid][35], 2);
		TextDrawSetProportional(NEWEXPText[playerid][35], 1);
		TextDrawSetShadow(NEWEXPText[playerid][35], 0);

		NEWEXPText[playerid][36] = TextDrawCreate(596.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][36], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][36], 2);
		TextDrawColor(NEWEXPText[playerid][36], -1);
		TextDrawSetShadow(NEWEXPText[playerid][36], 0);
		TextDrawSetOutline(NEWEXPText[playerid][36], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][36], 255);
		TextDrawFont(NEWEXPText[playerid][36], 2);
		TextDrawSetProportional(NEWEXPText[playerid][36], 1);
		TextDrawSetShadow(NEWEXPText[playerid][36], 0);

		NEWEXPText[playerid][37] = TextDrawCreate(598.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][37], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][37], 2);
		TextDrawColor(NEWEXPText[playerid][37], -1);
		TextDrawSetShadow(NEWEXPText[playerid][37], 0);
		TextDrawSetOutline(NEWEXPText[playerid][37], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][37], 255);
		TextDrawFont(NEWEXPText[playerid][37], 2);
		TextDrawSetProportional(NEWEXPText[playerid][37], 1);
		TextDrawSetShadow(NEWEXPText[playerid][37], 0);

		NEWEXPText[playerid][38] = TextDrawCreate(600.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][38], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][38], 2);
		TextDrawColor(NEWEXPText[playerid][38], -1);
		TextDrawSetShadow(NEWEXPText[playerid][38], 0);
		TextDrawSetOutline(NEWEXPText[playerid][38], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][38], 255);
		TextDrawFont(NEWEXPText[playerid][38], 2);
		TextDrawSetProportional(NEWEXPText[playerid][38], 1);
		TextDrawSetShadow(NEWEXPText[playerid][38], 0);

		NEWEXPText[playerid][39] = TextDrawCreate(602.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][39], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][39], 2);
		TextDrawColor(NEWEXPText[playerid][39], -1);
		TextDrawSetShadow(NEWEXPText[playerid][39], 0);
		TextDrawSetOutline(NEWEXPText[playerid][39], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][39], 255);
		TextDrawFont(NEWEXPText[playerid][39], 2);
		TextDrawSetProportional(NEWEXPText[playerid][39], 1);
		TextDrawSetShadow(NEWEXPText[playerid][39], 0);

		NEWEXPText[playerid][40] = TextDrawCreate(604.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][40], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][40], 2);
		TextDrawColor(NEWEXPText[playerid][40], -1);
		TextDrawSetShadow(NEWEXPText[playerid][40], 0);
		TextDrawSetOutline(NEWEXPText[playerid][40], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][40], 255);
		TextDrawFont(NEWEXPText[playerid][40], 2);
		TextDrawSetProportional(NEWEXPText[playerid][40], 1);
		TextDrawSetShadow(NEWEXPText[playerid][40], 0);

		NEWEXPText[playerid][41] = TextDrawCreate(606.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][41], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][41], 2);
		TextDrawColor(NEWEXPText[playerid][41], -1);
		TextDrawSetShadow(NEWEXPText[playerid][41], 0);
		TextDrawSetOutline(NEWEXPText[playerid][41], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][41], 255);
		TextDrawFont(NEWEXPText[playerid][41], 2);
		TextDrawSetProportional(NEWEXPText[playerid][41], 1);
		TextDrawSetShadow(NEWEXPText[playerid][41], 0);

		NEWEXPText[playerid][42] = TextDrawCreate(608.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][42], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][42], 2);
		TextDrawColor(NEWEXPText[playerid][42], -1);
		TextDrawSetShadow(NEWEXPText[playerid][42], 0);
		TextDrawSetOutline(NEWEXPText[playerid][42], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][42], 255);
		TextDrawFont(NEWEXPText[playerid][42], 2);
		TextDrawSetProportional(NEWEXPText[playerid][42], 1);
		TextDrawSetShadow(NEWEXPText[playerid][42], 0);

		NEWEXPText[playerid][43] = TextDrawCreate(610.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][43], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][43], 2);
		TextDrawColor(NEWEXPText[playerid][43], -1);
		TextDrawSetShadow(NEWEXPText[playerid][43], 0);
		TextDrawSetOutline(NEWEXPText[playerid][43], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][43], 255);
		TextDrawFont(NEWEXPText[playerid][43], 2);
		TextDrawSetProportional(NEWEXPText[playerid][43], 1);
		TextDrawSetShadow(NEWEXPText[playerid][43], 0);

		NEWEXPText[playerid][44] = TextDrawCreate(612.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][44], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][44], 2);
		TextDrawColor(NEWEXPText[playerid][44], -1);
		TextDrawSetShadow(NEWEXPText[playerid][44], 0);
		TextDrawSetOutline(NEWEXPText[playerid][44], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][44], 255);
		TextDrawFont(NEWEXPText[playerid][44], 2);
		TextDrawSetProportional(NEWEXPText[playerid][44], 1);
		TextDrawSetShadow(NEWEXPText[playerid][44], 0);

		NEWEXPText[playerid][45] = TextDrawCreate(614.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][45], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][45], 2);
		TextDrawColor(NEWEXPText[playerid][45], -1);
		TextDrawSetShadow(NEWEXPText[playerid][45], 0);
		TextDrawSetOutline(NEWEXPText[playerid][45], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][45], 255);
		TextDrawFont(NEWEXPText[playerid][45], 2);
		TextDrawSetProportional(NEWEXPText[playerid][45], 1);
		TextDrawSetShadow(NEWEXPText[playerid][45], 0);

		NEWEXPText[playerid][46] = TextDrawCreate(616.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][46], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][46], 2);
		TextDrawColor(NEWEXPText[playerid][46], -1);
		TextDrawSetShadow(NEWEXPText[playerid][46], 0);
		TextDrawSetOutline(NEWEXPText[playerid][46], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][46], 255);
		TextDrawFont(NEWEXPText[playerid][46], 2);
		TextDrawSetProportional(NEWEXPText[playerid][46], 1);
		TextDrawSetShadow(NEWEXPText[playerid][46], 0);

		NEWEXPText[playerid][47] = TextDrawCreate(618.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][47], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][47], 2);
		TextDrawColor(NEWEXPText[playerid][47], -1);
		TextDrawSetShadow(NEWEXPText[playerid][47], 0);
		TextDrawSetOutline(NEWEXPText[playerid][47], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][47], 255);
		TextDrawFont(NEWEXPText[playerid][47], 2);
		TextDrawSetProportional(NEWEXPText[playerid][47], 1);
		TextDrawSetShadow(NEWEXPText[playerid][47], 0);

		NEWEXPText[playerid][48] = TextDrawCreate(620.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][48], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][48], 2);
		TextDrawColor(NEWEXPText[playerid][48], -1);
		TextDrawSetShadow(NEWEXPText[playerid][48], 0);
		TextDrawSetOutline(NEWEXPText[playerid][48], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][48], 255);
		TextDrawFont(NEWEXPText[playerid][48], 2);
		TextDrawSetProportional(NEWEXPText[playerid][48], 1);
		TextDrawSetShadow(NEWEXPText[playerid][48], 0);

		NEWEXPText[playerid][49] = TextDrawCreate(622.729370, 386.583343, "I");
		TextDrawLetterSize(NEWEXPText[playerid][49], 0.301609, 2.428333);
		TextDrawAlignment(NEWEXPText[playerid][49], 2);
		TextDrawColor(NEWEXPText[playerid][49], -1);
		TextDrawSetShadow(NEWEXPText[playerid][49], 0);
		TextDrawSetOutline(NEWEXPText[playerid][49], 0);
		TextDrawBackgroundColor(NEWEXPText[playerid][49], 255);
		TextDrawFont(NEWEXPText[playerid][49], 2);
		TextDrawSetProportional(NEWEXPText[playerid][49], 1);
		TextDrawSetShadow(NEWEXPText[playerid][49], 0);

		OlumText3[playerid] = TextDrawCreate(113.850677, 285.249938, "~y~Olduren: ~g~~h~flareoNNN");
		TextDrawLetterSize(OlumText3[playerid], 0.184816, 1.407500);
		TextDrawAlignment(OlumText3[playerid], 1);
		TextDrawColor(OlumText3[playerid], -1);
		TextDrawSetShadow(OlumText3[playerid], 0);
		TextDrawSetOutline(OlumText3[playerid], 1);
		TextDrawBackgroundColor(OlumText3[playerid], 51);
		TextDrawFont(OlumText3[playerid], 1);
		TextDrawSetProportional(OlumText3[playerid], 1);

		OlumText4[playerid] = TextDrawCreate(113.850677, 300.249938, "~y~Silah: ~g~~h~Desert Eagle");
		TextDrawLetterSize(OlumText4[playerid], 0.184816, 1.407500);
		TextDrawAlignment(OlumText4[playerid], 1);
		TextDrawColor(OlumText4[playerid], -1);
		TextDrawSetShadow(OlumText4[playerid], 0);
		TextDrawSetOutline(OlumText4[playerid], 1);
		TextDrawBackgroundColor(OlumText4[playerid], 51);
		TextDrawFont(OlumText4[playerid], 1);
		TextDrawSetProportional(OlumText4[playerid], 1);

		OlumText5[playerid] = TextDrawCreate(113.850677, 315.249938, "~y~Mesafe: ~g~~h~50 Metre");
		TextDrawLetterSize(OlumText5[playerid], 0.184816, 1.407500);
		TextDrawAlignment(OlumText5[playerid], 1);
		TextDrawColor(OlumText5[playerid], -1);
		TextDrawSetShadow(OlumText5[playerid], 0);
		TextDrawSetOutline(OlumText5[playerid], 1);
		TextDrawBackgroundColor(OlumText5[playerid], 51);
		TextDrawFont(OlumText5[playerid], 1);
		TextDrawSetProportional(OlumText5[playerid], 1);

		elegecirme[playerid] = TextDrawCreate(6.399953, 140.519821, "90 Saniye sonra Deneme bolgesini ele gecireceksiniz.");
		TextDrawLetterSize(elegecirme[playerid], 0.227599, 1.577600);
		TextDrawAlignment(elegecirme[playerid], 1);
		TextDrawColor(elegecirme[playerid], -16776961);
		TextDrawSetShadow(elegecirme[playerid], 0);
		TextDrawSetOutline(elegecirme[playerid], 1);
		TextDrawBackgroundColor(elegecirme[playerid], 51);
		TextDrawFont(elegecirme[playerid], 1);
		TextDrawSetProportional(elegecirme[playerid], 1);

		exptext1[playerid] = TextDrawCreate(523.338378, 377.999908, "Level: 30(1450/1450) EXP");
		TextDrawLetterSize(exptext1[playerid], 0.220893, 1.238334);
		TextDrawAlignment(exptext1[playerid], 1);
		TextDrawColor(exptext1[playerid], 16777215);
		TextDrawSetShadow(exptext1[playerid], 0);
		TextDrawSetOutline(exptext1[playerid], 1);
		TextDrawBackgroundColor(exptext1[playerid], 51);
		TextDrawFont(exptext1[playerid], 1);
		TextDrawSetProportional(exptext1[playerid], 1);

		FPSKismiText[playerid][0] = TextDrawCreate(519.500000, 360.489013, "box");
		TextDrawLetterSize(FPSKismiText[playerid][0], 0.000000, 0.900001);
		TextDrawTextSize(FPSKismiText[playerid][0], 611.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][0], 1);
		TextDrawColor(FPSKismiText[playerid][0], -1);
		TextDrawUseBox(FPSKismiText[playerid][0], 1);
		TextDrawBoxColor(FPSKismiText[playerid][0], 51);
		TextDrawSetShadow(FPSKismiText[playerid][0], 0);
		TextDrawSetOutline(FPSKismiText[playerid][0], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][0], 255);
		TextDrawFont(FPSKismiText[playerid][0], 1);
		TextDrawSetProportional(FPSKismiText[playerid][0], 1);
		TextDrawSetShadow(FPSKismiText[playerid][0], 0);

		FPSKismiText[playerid][1] = TextDrawCreate(519.500000, 346.800109, "box");
		TextDrawLetterSize(FPSKismiText[playerid][1], 0.000000, 0.900002);
		TextDrawTextSize(FPSKismiText[playerid][1], 611.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][1], 1);
		TextDrawColor(FPSKismiText[playerid][1], -1);
		TextDrawUseBox(FPSKismiText[playerid][1], 1);
		TextDrawBoxColor(FPSKismiText[playerid][1], 51);
		TextDrawSetShadow(FPSKismiText[playerid][1], 0);
		TextDrawSetOutline(FPSKismiText[playerid][1], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][1], 255);
		TextDrawFont(FPSKismiText[playerid][1], 1);
		TextDrawSetProportional(FPSKismiText[playerid][1], 1);
		TextDrawSetShadow(FPSKismiText[playerid][1], 0);

		FPSKismiText[playerid][2] = TextDrawCreate(520.500000, 359.866790, "box");
		TextDrawLetterSize(FPSKismiText[playerid][2], 0.000000, -1.982795);
		TextDrawTextSize(FPSKismiText[playerid][2], 528.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][2], 1);
		TextDrawColor(FPSKismiText[playerid][2], -1);
		TextDrawUseBox(FPSKismiText[playerid][2], 1);
		TextDrawBoxColor(FPSKismiText[playerid][2], 136);
		TextDrawSetShadow(FPSKismiText[playerid][2], 0);
		TextDrawSetOutline(FPSKismiText[playerid][2], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][2], 255);
		TextDrawFont(FPSKismiText[playerid][2], 1);
		TextDrawSetProportional(FPSKismiText[playerid][2], 1);
		TextDrawSetShadow(FPSKismiText[playerid][2], 0);

		FPSKismiText[playerid][3] = TextDrawCreate(518.063110, 343.611083, "hud:radar_ammugun");
		TextDrawLetterSize(FPSKismiText[playerid][3], 0.000000, 0.000000);
		TextDrawTextSize(FPSKismiText[playerid][3], 11.000000, 13.000000);
		TextDrawAlignment(FPSKismiText[playerid][3], 1);
		TextDrawColor(FPSKismiText[playerid][3], -1);
		TextDrawSetShadow(FPSKismiText[playerid][3], 0);
		TextDrawSetOutline(FPSKismiText[playerid][3], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][3], 255);
		TextDrawFont(FPSKismiText[playerid][3], 4);
		TextDrawSetProportional(FPSKismiText[playerid][3], 0);
		TextDrawSetShadow(FPSKismiText[playerid][3], 0);

		FPSKismiText[playerid][4] = TextDrawCreate(523.000000, 349.755645, "hud:radar_locosyndicate");
		TextDrawLetterSize(FPSKismiText[playerid][4], 0.000000, 0.000000);
		TextDrawTextSize(FPSKismiText[playerid][4], 6.000000, 7.000000);
		TextDrawAlignment(FPSKismiText[playerid][4], 1);
		TextDrawColor(FPSKismiText[playerid][4], -1);
		TextDrawSetShadow(FPSKismiText[playerid][4], 0);
		TextDrawSetOutline(FPSKismiText[playerid][4], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][4], 255);
		TextDrawFont(FPSKismiText[playerid][4], 4);
		TextDrawSetProportional(FPSKismiText[playerid][4], 0);
		TextDrawSetShadow(FPSKismiText[playerid][4], 0);

		FPSKismiText[playerid][5] = TextDrawCreate(531.500000, 343.688964, "K/D:");
		TextDrawLetterSize(FPSKismiText[playerid][5], 0.147000, 0.716444);
		TextDrawAlignment(FPSKismiText[playerid][5], 1);
		TextDrawColor(FPSKismiText[playerid][5], -1);
		TextDrawSetShadow(FPSKismiText[playerid][5], 0);
		TextDrawSetOutline(FPSKismiText[playerid][5], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][5], 255);
		TextDrawFont(FPSKismiText[playerid][5], 1);
		TextDrawSetProportional(FPSKismiText[playerid][5], 1);
		TextDrawSetShadow(FPSKismiText[playerid][5], 0);

		FPSKismiText[playerid][6] = TextDrawCreate(534.000000, 350.533416, "00");
		TextDrawLetterSize(FPSKismiText[playerid][6], 0.110500, 0.766221);
		TextDrawAlignment(FPSKismiText[playerid][6], 1);
		TextDrawColor(FPSKismiText[playerid][6], -16776961);
		TextDrawSetShadow(FPSKismiText[playerid][6], 0);
		TextDrawSetOutline(FPSKismiText[playerid][6], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][6], 255);
		TextDrawFont(FPSKismiText[playerid][6], 1);
		TextDrawSetProportional(FPSKismiText[playerid][6], 1);
		TextDrawSetShadow(FPSKismiText[playerid][6], 0);

		FPSKismiText[playerid][7] = TextDrawCreate(574.500000, 359.866790, "box");
		TextDrawLetterSize(FPSKismiText[playerid][7], 0.000000, -1.982795);
		TextDrawTextSize(FPSKismiText[playerid][7], 581.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][7], 1);
		TextDrawColor(FPSKismiText[playerid][7], -1);
		TextDrawUseBox(FPSKismiText[playerid][7], 1);
		TextDrawBoxColor(FPSKismiText[playerid][7], 136);
		TextDrawSetShadow(FPSKismiText[playerid][7], 0);
		TextDrawSetOutline(FPSKismiText[playerid][7], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][7], 255);
		TextDrawFont(FPSKismiText[playerid][7], 1);
		TextDrawSetProportional(FPSKismiText[playerid][7], 1);
		TextDrawSetShadow(FPSKismiText[playerid][7], 0);

		FPSKismiText[playerid][8] = TextDrawCreate(546.000000, 359.866790, "box");
		TextDrawLetterSize(FPSKismiText[playerid][8], 0.000000, -1.982795);
		TextDrawTextSize(FPSKismiText[playerid][8], 553.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][8], 1);
		TextDrawColor(FPSKismiText[playerid][8], -1);
		TextDrawUseBox(FPSKismiText[playerid][8], 1);
		TextDrawBoxColor(FPSKismiText[playerid][8], 136);
		TextDrawSetShadow(FPSKismiText[playerid][8], 0);
		TextDrawSetOutline(FPSKismiText[playerid][8], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][8], 255);
		TextDrawFont(FPSKismiText[playerid][8], 1);
		TextDrawSetProportional(FPSKismiText[playerid][8], 1);
		TextDrawSetShadow(FPSKismiText[playerid][8], 0);

		FPSKismiText[playerid][9] = TextDrawCreate(545.944641, 345.827575, "hud:radar_locosyndicate");
		TextDrawLetterSize(FPSKismiText[playerid][9], 0.000000, 0.000000);
		TextDrawTextSize(FPSKismiText[playerid][9], 7.000000, 10.000000);
		TextDrawAlignment(FPSKismiText[playerid][9], 1);
		TextDrawColor(FPSKismiText[playerid][9], -1);
		TextDrawSetShadow(FPSKismiText[playerid][9], 0);
		TextDrawSetOutline(FPSKismiText[playerid][9], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][9], 255);
		TextDrawFont(FPSKismiText[playerid][9], 4);
		TextDrawSetProportional(FPSKismiText[playerid][9], 0);
		TextDrawSetShadow(FPSKismiText[playerid][9], 0);

		FPSKismiText[playerid][10] = TextDrawCreate(531.500000, 343.688964, "K/D:");
		TextDrawLetterSize(FPSKismiText[playerid][10], 0.147000, 0.716444);
		TextDrawAlignment(FPSKismiText[playerid][10], 1);
		TextDrawColor(FPSKismiText[playerid][10], -1);
		TextDrawSetShadow(FPSKismiText[playerid][10], 0);
		TextDrawSetOutline(FPSKismiText[playerid][10], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][10], 255);
		TextDrawFont(FPSKismiText[playerid][10], 1);
		TextDrawSetProportional(FPSKismiText[playerid][10], 1);
		TextDrawSetShadow(FPSKismiText[playerid][10], 0);

		FPSKismiText[playerid][11] = TextDrawCreate(556.000000, 343.688964, "Olum:");
		TextDrawLetterSize(FPSKismiText[playerid][11], 0.147000, 0.716444);
		TextDrawAlignment(FPSKismiText[playerid][11], 1);
		TextDrawColor(FPSKismiText[playerid][11], -1);
		TextDrawSetShadow(FPSKismiText[playerid][11], 0);
		TextDrawSetOutline(FPSKismiText[playerid][11], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][11], 255);
		TextDrawFont(FPSKismiText[playerid][11], 1);
		TextDrawSetProportional(FPSKismiText[playerid][11], 1);
		TextDrawSetShadow(FPSKismiText[playerid][11], 0);

		FPSKismiText[playerid][12] = TextDrawCreate(560.500000, 350.533416, "00");
		TextDrawLetterSize(FPSKismiText[playerid][12], 0.110500, 0.766221);
		TextDrawAlignment(FPSKismiText[playerid][12], 1);
		TextDrawColor(FPSKismiText[playerid][12], -16776961);
		TextDrawSetShadow(FPSKismiText[playerid][12], 0);
		TextDrawSetOutline(FPSKismiText[playerid][12], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][12], 255);
		TextDrawFont(FPSKismiText[playerid][12], 1);
		TextDrawSetProportional(FPSKismiText[playerid][12], 1);
		TextDrawSetShadow(FPSKismiText[playerid][12], 0);

		FPSKismiText[playerid][13] = TextDrawCreate(560.500000, 350.533416, "00");
		TextDrawLetterSize(FPSKismiText[playerid][13], 0.110500, 0.766221);
		TextDrawAlignment(FPSKismiText[playerid][13], 1);
		TextDrawColor(FPSKismiText[playerid][13], -16776961);
		TextDrawSetShadow(FPSKismiText[playerid][13], 0);
		TextDrawSetOutline(FPSKismiText[playerid][13], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][13], 255);
		TextDrawFont(FPSKismiText[playerid][13], 1);
		TextDrawSetProportional(FPSKismiText[playerid][13], 1);
		TextDrawSetShadow(FPSKismiText[playerid][13], 0);

		FPSKismiText[playerid][14] = TextDrawCreate(574.000000, 345.399932, "hud:radar_emmetgun");
		TextDrawLetterSize(FPSKismiText[playerid][14], 0.000000, 0.000000);
		TextDrawTextSize(FPSKismiText[playerid][14], 8.000000, 10.000000);
		TextDrawAlignment(FPSKismiText[playerid][14], 1);
		TextDrawColor(FPSKismiText[playerid][14], -1);
		TextDrawSetShadow(FPSKismiText[playerid][14], 0);
		TextDrawSetOutline(FPSKismiText[playerid][14], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][14], 255);
		TextDrawFont(FPSKismiText[playerid][14], 4);
		TextDrawSetProportional(FPSKismiText[playerid][14], 0);
		TextDrawSetShadow(FPSKismiText[playerid][14], 0);

		FPSKismiText[playerid][15] = TextDrawCreate(583.500000, 343.688964, "Oldurme:");
		TextDrawLetterSize(FPSKismiText[playerid][15], 0.147000, 0.716444);
		TextDrawAlignment(FPSKismiText[playerid][15], 1);
		TextDrawColor(FPSKismiText[playerid][15], -1);
		TextDrawSetShadow(FPSKismiText[playerid][15], 0);
		TextDrawSetOutline(FPSKismiText[playerid][15], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][15], 255);
		TextDrawFont(FPSKismiText[playerid][15], 1);
		TextDrawSetProportional(FPSKismiText[playerid][15], 1);
		TextDrawSetShadow(FPSKismiText[playerid][15], 0);

		FPSKismiText[playerid][16] = TextDrawCreate(590.500000, 349.911193, "00");
		TextDrawLetterSize(FPSKismiText[playerid][16], 0.110500, 0.766221);
		TextDrawAlignment(FPSKismiText[playerid][16], 1);
		TextDrawColor(FPSKismiText[playerid][16], -16776961);
		TextDrawSetShadow(FPSKismiText[playerid][16], 0);
		TextDrawSetOutline(FPSKismiText[playerid][16], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][16], 255);
		TextDrawFont(FPSKismiText[playerid][16], 1);
		TextDrawSetProportional(FPSKismiText[playerid][16], 1);
		TextDrawSetShadow(FPSKismiText[playerid][16], 0);

		FPSKismiText[playerid][17] = TextDrawCreate(520.500000, 373.555694, "box");
		TextDrawLetterSize(FPSKismiText[playerid][17], 0.000000, -1.982795);
		TextDrawTextSize(FPSKismiText[playerid][17], 528.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][17], 1);
		TextDrawColor(FPSKismiText[playerid][17], -1);
		TextDrawUseBox(FPSKismiText[playerid][17], 1);
		TextDrawBoxColor(FPSKismiText[playerid][17], 136);
		TextDrawSetShadow(FPSKismiText[playerid][17], 0);
		TextDrawSetOutline(FPSKismiText[playerid][17], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][17], 255);
		TextDrawFont(FPSKismiText[playerid][17], 1);
		TextDrawSetProportional(FPSKismiText[playerid][17], 1);
		TextDrawSetShadow(FPSKismiText[playerid][17], 0);

		FPSKismiText[playerid][18] = TextDrawCreate(546.000000, 372.311248, "box");
		TextDrawLetterSize(FPSKismiText[playerid][18], 0.000000, -1.832795);
		TextDrawTextSize(FPSKismiText[playerid][18], 553.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][18], 1);
		TextDrawColor(FPSKismiText[playerid][18], -1);
		TextDrawUseBox(FPSKismiText[playerid][18], 1);
		TextDrawBoxColor(FPSKismiText[playerid][18], 136);
		TextDrawSetShadow(FPSKismiText[playerid][18], 0);
		TextDrawSetOutline(FPSKismiText[playerid][18], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][18], 255);
		TextDrawFont(FPSKismiText[playerid][18], 1);
		TextDrawSetProportional(FPSKismiText[playerid][18], 1);
		TextDrawSetShadow(FPSKismiText[playerid][18], 0);

		FPSKismiText[playerid][19] = TextDrawCreate(556.500000, 359.711212, "hud:radar_gangn");
		TextDrawLetterSize(FPSKismiText[playerid][19], 0.000000, 0.000000);
		TextDrawTextSize(FPSKismiText[playerid][19], -13.000000, 9.000000);
		TextDrawAlignment(FPSKismiText[playerid][19], 1);
		TextDrawColor(FPSKismiText[playerid][19], -1);
		TextDrawSetShadow(FPSKismiText[playerid][19], 0);
		TextDrawSetOutline(FPSKismiText[playerid][19], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][19], 255);
		TextDrawFont(FPSKismiText[playerid][19], 4);
		TextDrawSetProportional(FPSKismiText[playerid][19], 0);
		TextDrawSetShadow(FPSKismiText[playerid][19], 0);

		FPSKismiText[playerid][20] = TextDrawCreate(520.000000, 359.711212, "ld_none:warp");
		TextDrawLetterSize(FPSKismiText[playerid][20], 0.000000, 0.000000);
		TextDrawTextSize(FPSKismiText[playerid][20], 8.000000, 10.000000);
		TextDrawAlignment(FPSKismiText[playerid][20], 1);
		TextDrawColor(FPSKismiText[playerid][20], -1);
		TextDrawSetShadow(FPSKismiText[playerid][20], 0);
		TextDrawSetOutline(FPSKismiText[playerid][20], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][20], 255);
		TextDrawFont(FPSKismiText[playerid][20], 4);
		TextDrawSetProportional(FPSKismiText[playerid][20], 0);
		TextDrawSetShadow(FPSKismiText[playerid][20], 0);

		FPSKismiText[playerid][21] = TextDrawCreate(531.500000, 358.000091, "FPS:");
		TextDrawLetterSize(FPSKismiText[playerid][21], 0.147000, 0.716444);
		TextDrawAlignment(FPSKismiText[playerid][21], 1);
		TextDrawColor(FPSKismiText[playerid][21], -1);
		TextDrawSetShadow(FPSKismiText[playerid][21], 0);
		TextDrawSetOutline(FPSKismiText[playerid][21], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][21], 255);
		TextDrawFont(FPSKismiText[playerid][21], 1);
		TextDrawSetProportional(FPSKismiText[playerid][21], 1);
		TextDrawSetShadow(FPSKismiText[playerid][21], 0);

		FPSKismiText[playerid][22] = TextDrawCreate(533.500000, 364.222320, "00");
		TextDrawLetterSize(FPSKismiText[playerid][22], 0.110500, 0.766221);
		TextDrawAlignment(FPSKismiText[playerid][22], 1);
		TextDrawColor(FPSKismiText[playerid][22], -16776961);
		TextDrawSetShadow(FPSKismiText[playerid][22], 0);
		TextDrawSetOutline(FPSKismiText[playerid][22], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][22], 255);
		TextDrawFont(FPSKismiText[playerid][22], 1);
		TextDrawSetProportional(FPSKismiText[playerid][22], 1);
		TextDrawSetShadow(FPSKismiText[playerid][22], 0);

		FPSKismiText[playerid][23] = TextDrawCreate(555.500000, 358.622314, "Yetkililer:");
		TextDrawLetterSize(FPSKismiText[playerid][23], 0.147000, 0.716444);
		TextDrawAlignment(FPSKismiText[playerid][23], 1);
		TextDrawColor(FPSKismiText[playerid][23], -1);
		TextDrawSetShadow(FPSKismiText[playerid][23], 0);
		TextDrawSetOutline(FPSKismiText[playerid][23], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][23], 255);
		TextDrawFont(FPSKismiText[playerid][23], 1);
		TextDrawSetProportional(FPSKismiText[playerid][23], 1);
		TextDrawSetShadow(FPSKismiText[playerid][23], 0);

		FPSKismiText[playerid][24] = TextDrawCreate(563.062988, 364.183441, "00");
		TextDrawLetterSize(FPSKismiText[playerid][24], 0.110500, 0.766221);
		TextDrawAlignment(FPSKismiText[playerid][24], 1);
		TextDrawColor(FPSKismiText[playerid][24], -16776961);
		TextDrawSetShadow(FPSKismiText[playerid][24], 0);
		TextDrawSetOutline(FPSKismiText[playerid][24], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][24], 255);
		TextDrawFont(FPSKismiText[playerid][24], 1);
		TextDrawSetProportional(FPSKismiText[playerid][24], 1);
		TextDrawSetShadow(FPSKismiText[playerid][24], 0);

		FPSKismiText[playerid][25] = TextDrawCreate(583.000000, 372.933471, "box");
		TextDrawLetterSize(FPSKismiText[playerid][25], 0.000000, -1.932795);
		TextDrawTextSize(FPSKismiText[playerid][25], 590.000000, 0.000000);
		TextDrawAlignment(FPSKismiText[playerid][25], 1);
		TextDrawColor(FPSKismiText[playerid][25], -1);
		TextDrawUseBox(FPSKismiText[playerid][25], 1);
		TextDrawBoxColor(FPSKismiText[playerid][25], 136);
		TextDrawSetShadow(FPSKismiText[playerid][25], 0);
		TextDrawSetOutline(FPSKismiText[playerid][25], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][25], 255);
		TextDrawFont(FPSKismiText[playerid][25], 1);
		TextDrawSetProportional(FPSKismiText[playerid][25], 1);
		TextDrawSetShadow(FPSKismiText[playerid][25], 0);

		FPSKismiText[playerid][26] = TextDrawCreate(583.000000, 359.711212, "particle:lockonfire");
		TextDrawLetterSize(FPSKismiText[playerid][26], 0.000000, 0.000000);
		TextDrawTextSize(FPSKismiText[playerid][26], 6.000000, 9.000000);
		TextDrawAlignment(FPSKismiText[playerid][26], 1);
		TextDrawColor(FPSKismiText[playerid][26], -1);
		TextDrawSetShadow(FPSKismiText[playerid][26], 0);
		TextDrawSetOutline(FPSKismiText[playerid][26], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][26], 255);
		TextDrawFont(FPSKismiText[playerid][26], 4);
		TextDrawSetProportional(FPSKismiText[playerid][26], 0);
		TextDrawSetShadow(FPSKismiText[playerid][26], 0);

		FPSKismiText[playerid][27] = TextDrawCreate(593.000000, 358.000091, "Ping:");
		TextDrawLetterSize(FPSKismiText[playerid][27], 0.147000, 0.716444);
		TextDrawAlignment(FPSKismiText[playerid][27], 1);
		TextDrawColor(FPSKismiText[playerid][27], -1);
		TextDrawSetShadow(FPSKismiText[playerid][27], 0);
		TextDrawSetOutline(FPSKismiText[playerid][27], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][27], 255);
		TextDrawFont(FPSKismiText[playerid][27], 1);
		TextDrawSetProportional(FPSKismiText[playerid][27], 1);
		TextDrawSetShadow(FPSKismiText[playerid][27], 0);

		FPSKismiText[playerid][28] = TextDrawCreate(595.562988, 364.183441, "00");
		TextDrawLetterSize(FPSKismiText[playerid][28], 0.110500, 0.766221);
		TextDrawAlignment(FPSKismiText[playerid][28], 1);
		TextDrawColor(FPSKismiText[playerid][28], -16776961);
		TextDrawSetShadow(FPSKismiText[playerid][28], 0);
		TextDrawSetOutline(FPSKismiText[playerid][28], 0);
		TextDrawBackgroundColor(FPSKismiText[playerid][28], 255);
		TextDrawFont(FPSKismiText[playerid][28], 1);
		TextDrawSetProportional(FPSKismiText[playerid][28], 1);
		TextDrawSetShadow(FPSKismiText[playerid][28], 0);
	}
	return true;
}

forward HsTimer(playerid);
public HsTimer(playerid)
{
	ilkhs = true;
	SendClientMessageToAll(-1, "{FF0048}FirstHS » {FFFFFF}Görev baþladý! Headshot at ve ödülü kap!");
	return true;
}

forward GenelTimer1();
public GenelTimer1()
{
	foreach(new i:Player)
	{
	
		if(PlayerInfo[i][Jailed] == 1 && PlayerInfo[i][AFK] == false && PlayerInfo[i][JailTime] > 0) PlayerInfo[i][JailTime] -= 5000;
		else if(PlayerInfo[i][Jailed] == 1 && PlayerInfo[i][JailTime] <= 0)JailRelease(i);
		    online(i);
		    if(PlayerInfo[i][Giris] == 1) UpdateEXP(i);

	    if(IsPlayerConnected(i))
	    {
	        if(Zombiede[i] != 1 && DMZoneOyuncuModu[i] != PARKOUR)
	        {
	            if(GetPlayerHealth(i) > 100.0)
	            {
	                SetPlayerHealth(i,100.0);
	            }
	        }
	    }

	    if(PlayerInfo[i][AFK] == true && duelde[i] == 1)
	    {
	        OnPlayerSpawn(i);
	    }
	}

	return true;
}

public OnGameModeExit()
{
	new p = GetMaxPlayers();
	for (new i = 0; i < p; i++)
	{
		SetPVarInt(i, "laser", 0);
		RemovePlayerAttachedObject(i, 0);
	}

	foreach(new i: Player)
	{
	    SavePlayer(i);
	    OnPlayerDisconnect(i, 1);
		for(new qx = 0; qx < 41; qx++)
		{
			TextDrawHideForPlayer(i, AltTextler[qx]);
		}
	}
	print("» Tum oyuncular kaydedildi.");

	for(new playerid = 0; playerid <= GetMaxPlayers(); playerid++)
	{
	    TextSilEx(playerid);
	}

    Area_Delete(bolge1);
    Area_Delete(bolge2);
    Area_Delete(bolge3);
    Area_Delete(bolge4);
    Area_Delete(bolge5);

    RemovePlaylist(gEveryonesPlaylist);

    Yescount = 0;
    Nocount = 0;
    Voteactive = 0;

	foreach(new i: Houses)
	{
	    SaveHouse(i);
	}
	SaveAllCars();

    print(" ");
    print("=========================================");
    print(" ");
    print("flareoNNN Zombie System unLoaded.");
    print(" ");
    print("=========================================");
    print(" ");

    TumCeteleriKaydet();

    Delete3DTextLabel(Banks);
    DestroyPickup(Banka);

	for(new i; i < sizeof(GostergeText); i++)
	{
		TextDrawHideForAll(GostergeText[i]);
		TextDrawDestroy(GostergeText[i]);
	}

	print("» OnGameModExit baþarýlý.");
	return true;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{

	if(lKatildim[playerid] == 1 || lEtkinlikte[playerid] == 1) return true;
	if(Derbyde[playerid] == true) return true;
	if(PlayerInfo[playerid][Parkour] == true) return true;
	if(CSDe[playerid] == 1) return true;
	if(HungerGamede[playerid] == 1) return true;
	if(Zombiede[playerid] == 1) return true;
	if(GunGamedeAmk[playerid] == true) return true;
	if(Speedydeaglede[playerid] == true) return true;
	if(dmde[playerid] > 0 || dmyasagi[playerid] == 1) return true;
	if(PlayerInfo[playerid][Jailed] == 1) return true;
	if(Yarista[playerid] == true) return true;
	if(RaceDuelde[playerid] == true) return true;

	if(listid == skinlist)
	{
	    if(response)
	    {
		    SFM(playerid, -1, ""safaf"Skininiz %d olarak deðiþtirildi.", modelid);
		   	SetPlayerSkin(playerid, modelid);
			PlayerInfo[playerid][skinplayer] = GetPlayerSkin(playerid);
	    }
		return true;
	}

    if(listid == v1 || listid == v2 || listid == v3 || listid == v4 || listid == v5 || listid == v6 || listid == v7 || listid == v8 || listid == v9
	|| listid == v10 || listid == v11 || listid == v12 || listid == v13 || listid == v14 || listid == v15 || listid == v16 || listid == v17)
    {
        if(response)
        {
            new vehix[16];
            format(vehix, 16, "%d", modelid);
			cmd_veh(playerid, vehix);
		}
		if(!response)
		{
		    return true;
		}
	}

    if(listid == vehlist)
    {
		if(response)
		{
            new string[128];
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			new vehname[32];
			new components[14];
			format(vehname, sizeof(vehname), "%s", GetVehicleNameFromModelID(modelid));
			for(new i = 0; i < sizeof(TopVehiclePrices); i ++)
			{
			    if(!strcmp(vehname, TopVehiclePrices[i][VehicleName]))
			    {
			        if(GetPlayerMoney(playerid) < TopVehiclePrices[i][Price])
			        {
				     	return SendClientMessage(playerid, -1, ""safaf"Bu aracý almak için yeterli paranýz yok.");
					}
					else
					{
						AddVehicle(houseid, modelid, 0, random(128), random(128), components, -6222.2803,787.3855,-0.2063, 0.0);
					 	GivePlayerMoney(playerid, -TopVehiclePrices[i][Price]);
					 	format(string, sizeof(string), ""safaf" %s$  karþýlýðýnda {FFFFFF}%s adlý aracý satýn aldýnýz.", FormatMoney(TopVehiclePrices[i][Price]), vehname);
					 	SendClientMessage(playerid, -1, string);
					 	format(string, sizeof(string), ""safaf"/aracgetir {FFFFFF}ile çaðýrýp {FFFFFF}/park {FFFFFF}ile park edebilirsiniz.");
					 	return SendClientMessage(playerid, -1, string);
					}
				}
			}
            if(GetPlayerMoney(playerid) < 1000000)
   			{
     			return SendClientMessage(playerid, -1, ""safaf"Bu aracý almak için yeterli paranýz yok.");
			}
  			AddVehicle(houseid, modelid, 0, random(128), random(128), components, -6222.2803,787.3855,-0.2063, 0.0);
			GivePlayerMoney(playerid, -1000000);
			format(string,sizeof(string),""safaf" 1.000.000$ {FFFFFF}karþýlýðýnda {FFFFFF}%s {FFFFFF}adlý aracý satýn aldýnýz.", vehname);
			SendClientMessage(playerid, -1, string);
			format(string, sizeof(string), ""safaf"/aracgetir {FFFFFF}ile çaðýrýp {FFFFFF}/park {FFFFFF}ile park edebilirsiniz.");
			SendClientMessage(playerid, -1, string);
		}
		else
		{
  			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid,houseid);
		}
	}
	if(listid == tablelist)
	{
		if(response)
		{
			new price;
			for(new i = 0; i < sizeof(Tables); i++)
			{
				if(modelid == Tables[i][tid])
				{
					price = Tables[i][tableprice] * 1000;
					break;
				}
			}
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
			GivePlayerMoney(playerid, -price);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			GetXYInFrontOfPlayer(playerid, x, y, 1);
			new esya = AddEsya(houseid, modelid, x, y, z, 0, 0, 0, DIALOG_TABLE);
			EditDynamicObject(playerid, esya);
			SetPVarInt(playerid, "esyaduzenliyor", 1);
		}
		else
		{
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid, houseid);
		}
	}
	if(listid == chairlist)
	{
		if(response)
		{
			new price;
			for(new i = 0; i < sizeof(Chairs); i++)
			{
				if(modelid == Chairs[i][cid])
				{
					price = Chairs[i][chairprice] * 1000;
					break;
				}
			}
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
			GivePlayerMoney(playerid, -price);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			GetXYInFrontOfPlayer(playerid, x, y, 1);
			new esya = AddEsya(houseid, modelid, x, y, z, 0, 0, 0, DIALOG_CHAIR);
			EditDynamicObject(playerid, esya);
			SetPVarInt(playerid, "esyaduzenliyor", 1);
		}
		else
		{
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid, houseid);
		}
	}
	if(listid == bedlist)
	{
		if(response)
		{
			new price;
			for(new i = 0; i < sizeof(Beds); i++)
			{
				if(modelid == Beds[i][bid])
				{
					price = Beds[i][bedprice] * 1000;
					break;
				}
			}
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
			GivePlayerMoney(playerid, -price);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			GetXYInFrontOfPlayer(playerid, x, y, 1);
			new esya = AddEsya(houseid, modelid, x, y, z, 0, 0, 0, DIALOG_BED);
			EditDynamicObject(playerid, esya);
			SetPVarInt(playerid, "esyaduzenliyor", 1);
		}
		else
		{
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid, houseid);
		}
	}
	if(listid == sofalist)
	{
		if(response)
		{
			new price;
			for(new i = 0; i < sizeof(Sofas); i++)
			{
				if(modelid == Sofas[i][sid])
				{
					price = Sofas[i][sofaprice] * 1000;
					break;
				}
			}
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
			GivePlayerMoney(playerid, -price);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			GetXYInFrontOfPlayer(playerid, x, y, 1);
			new esya = AddEsya(houseid, modelid, x, y, z, 0, 0, 0, DIALOG_SOFA);
			EditDynamicObject(playerid, esya);
			SetPVarInt(playerid, "esyaduzenliyor", 1);
		}
		else
		{
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid, houseid);
		}
	}
	if(listid == declist)
	{
		if(response)
		{
			new price;
			for(new i = 0; i < sizeof(Decorations); i++)
			{
				if(modelid == Decorations[i][did])
				{
					price = Decorations[i][decprice] * 1000;
					break;
				}
			}
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
			GivePlayerMoney(playerid, -price);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			GetXYInFrontOfPlayer(playerid, x, y, 1);
			new esya = AddEsya(houseid, modelid, x, y, z, 0, 0, 0, DIALOG_DECORATION);
			EditDynamicObject(playerid, esya);
			SetPVarInt(playerid, "esyaduzenliyor", 1);
		}
		else
		{
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid, houseid);
		}
	}
	if(listid == applist)
	{
		if(response)
		{
			new price;
			for(new i = 0; i < sizeof(Appliances); i++)
			{
				if(modelid == Appliances[i][appid])
				{
					price = Appliances[i][appprice] * 1000;
					break;
				}
			}
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
			GivePlayerMoney(playerid, -price);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			GetXYInFrontOfPlayer(playerid, x, y, 1);
			new esya = AddEsya(houseid, modelid, x, y, z, 0, 0, 0, DIALOG_APPLIANCE);
			EditDynamicObject(playerid, esya);
			SetPVarInt(playerid, "esyaduzenliyor", 1);
		}
		else
		{
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid, houseid);
		}
	}

   	return true;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(GetPVarInt(playerid, "siracreqq") == 0)
	{
		SetPlayerPos(playerid,-1441.4991,393.8694,694.9886);
		SetPlayerFacingAngle(playerid,270.8115);
		SetPlayerTime(playerid,0,0);
		SetPlayerInterior(playerid, 0);
		InterpolateCameraPos(playerid, -1364.240356, 393.983825, 705.295043, -1413.108154, 394.089630, 698.621643, 7777);
		InterpolateCameraLookAt(playerid, -1369.161865, 394.075439, 704.417114, -1418.082763, 394.155029, 698.122802, 7777);
		SetPVarInt(playerid, "siracreqq", 1);
	}
	return true;
}

public OnPlayerConnect(playerid)
{
	new oyuncuisim[MAX_PLAYER_NAME], oyuncuisim2[MAX_PLAYER_NAME];
	GetPlayerName(playerid, oyuncuisim, sizeof(oyuncuisim));

	for(new i = 0; i < sizeof(fyasakisim); i++)
	{
		if(!strcmp(oyuncuisim, fyasakisim[i][0], true) || !strcmp(oyuncuisim, "con.", true, 4))
		{
		    format(oyuncuisim2, MAX_PLAYER_NAME, "oyuncu_%d", playerid);
		    SetPlayerName(playerid, oyuncuisim2);
			#if ISLEM == 1
				#if BANMESAJ
					SendClientMessage(playerid, YAZIRENGI, BANMESAJI);
				#endif
				Ban(playerid);
			#endif
			#if ISLEM == 2
				#if KICKMESAJ
					SendClientMessage(playerid, YAZIRENGI, KICKMESAJI);
				#endif
				Kick(playerid);
			#endif
		}
	}
	
	ArkadasIstek[playerid] = true;
	
	KillTimer(PlayerInfo[playerid][AFK_Timer]);
	PlayerInfo[playerid][money] = 0;
	
	LAGExitedVehicle[playerid] = 0;
	LAGExitTimeCheck[playerid] = 0;
	LAGPlayerExitingVehicle[playerid] = 0;
	
	siraclabel[playerid] = Create3DTextLabel("_", -1, 2524.6401, 2033.9243, 11.1755, 40, 0);
	
	Yarista[playerid] = false;

	PlayerTextDrawDestroy(playerid,InfoLabyrinth[playerid][countertext]);
    InfoLabyrinth[playerid][countertext]=CreatePlayerTextDraw(playerid,322.000000, 50.000000, "_");
    PlayerTextDrawAlignment(playerid,InfoLabyrinth[playerid][countertext], 2);
    PlayerTextDrawBackgroundColor(playerid,InfoLabyrinth[playerid][countertext], 255);
    PlayerTextDrawFont(playerid,InfoLabyrinth[playerid][countertext], 2);
    PlayerTextDrawLetterSize(playerid,InfoLabyrinth[playerid][countertext], 0.670000, 3.300000);
    PlayerTextDrawColor(playerid,InfoLabyrinth[playerid][countertext], -1);
    PlayerTextDrawSetOutline(playerid,InfoLabyrinth[playerid][countertext], 1);
    PlayerTextDrawSetProportional(playerid,InfoLabyrinth[playerid][countertext], 1);
    PlayerTextDrawUseBox(playerid,InfoLabyrinth[playerid][countertext], 1);
    PlayerTextDrawBoxColor(playerid,InfoLabyrinth[playerid][countertext], 0x0000155);
    PlayerTextDrawTextSize(playerid,InfoLabyrinth[playerid][countertext], 80.000000, 98.000000);
    PlayerTextDrawSetSelectable(playerid,InfoLabyrinth[playerid][countertext], 0);
    
    format(PlayerInfo[playerid][KisiselDurum], 850, "");

	RacePosition[playerid] = 0;
	KillTimer(RaceBasmaTimer[playerid]);
	RaceVites[playerid] = 0;
	KillTimer(RaceTabloTimer[playerid]);
	RaceDuelCP[playerid] = 0;
	RaceBastim[playerid] = false;
	RaceDuelVitesAtma[playerid] = false;
	VitesAtabilirsin[playerid] = false;
	KillTimer(RaceDuelTimer[playerid]);
	RaceDuelde[playerid] = false;
	CPrace_duel_cp[playerid] = 0;

    EkstraZiplama[playerid] = false;

    kabuletmezaman[playerid] = 0;
    
    duelatti[playerid] = false;

    wshizlanma[playerid] = false;

	SetPVarInt(playerid, "verildi", 0);

	SetPVarInt(playerid, "duello_istek", 1);
    SetPVarInt(playerid, "alinan_dukkan_id", -1);
    SetPVarInt(playerid, "satilan_dukkan_id", -1);

	Eglence[playerid] = false;

	SetPVarInt(playerid, "mdusme", 0);

	PlayerInfo[playerid][AWarings] = 0;

	SetPVarInt(playerid, "duello_silah1", -1);
	SetPVarInt(playerid, "duello_silah2", -1);
	SetPVarInt(playerid, "duello_skor", -1);
	SetPVarInt(playerid, "duello_para", -1);
	SetPVarInt(playerid, "duello_davetatilan", -1);
	SetPVarInt(playerid, "duello_davetatilan", -1);

    Bankada[playerid] = false;

    SetPVarInt(playerid, "CeteDuzenledigi", -1);

    //TextYukleEx(playerid);

	if(!strcmp(getName(playerid), "Yok", true))
	{
	    kickle(playerid, "Yasakli Isim");
	}

	IsUsingProxy[playerid] = false;

	new proxystring[500], ipss[50];
	GetPlayerIp(playerid, ipss, sizeof(ipss));
	format(proxystring, sizeof(proxystring), "proxy.mind-media.com/block/proxycheck.php?ip=%s", ipss);
	HTTP(playerid, HTTP_GET, proxystring, "", "HTTP_OnPlayerProxyCheck");

	PlayerInfo[playerid][Giris] = 0;

	for(new i; i < 160; i++)
	{
		GameTextForPlayer(playerid, "~w~~h~~h~YUKLENIYOR...~n~~y~BAN DURUMU KONTROL EDILIYOR", 500, 5);
	}

	SetPVarInt(playerid, "siracreqq", 0);

	MekanIcon(playerid);
	DukkanIcon(playerid);

    for(new a; a < 5; a++)
	{
		for(new i; i < 14; i++)
		VehicleSave[a][playerid][i] = 0;
		VehicleSave[a][playerid][14] = 3;
		VehicleSave[a][playerid][15] = -1;
		VehicleSave[a][playerid][16] = -1;
		VehicleSave[a][playerid][17] = 0;
	}

    spawnda[playerid] = false;

    new connecting_ip[32 + 1];
    GetPlayerIp(playerid, connecting_ip, 32);
    new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);
    if(num_players_on_ip >= 3)
    {
        printf("BOT ATMA GIRISIMI: %s(%d) oyuncusu %d veya daha fazla baglanti gonderdi. IP: %s", getName(playerid), playerid, 3, connecting_ip);
        banla(playerid, "BOT");
        return true;
    }

    gMyPlaylist[playerid] = INVALID_PLAYLIST_ID;

	new serialkontrol[72];
	gpci(playerid, serialkontrol, 72);
	format(estring, sizeof(estring), "UPDATE `oyuncular` SET `Serial` = '%s' WHERE `kullaniciadi` = '%s'", serialkontrol, getName(playerid));
	mysql_query(mysqlC, estring);

	new sql[500];
	format(sql, sizeof(sql), "UPDATE `oyuncular` SET `oyundaiste` = '1' WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, sql);

	format(sql, sizeof(sql), "UPDATE `oyuncular` SET `IP` = '%s' WHERE `kullaniciadi` = '%s'", connecting_ip, getName(playerid));
	mysql_query(mysqlC, sql);

	specdeyimaq[playerid] = 0;

	Speedydeaglede[playerid] = false;

	format(PlayerInfo[playerid][YetkiIsim], 500, "");

    SetPlayerColor(playerid, PlayerColors[random(sizeof(PlayerColors))]);

	new nbanQuery[2048];
    format(nbanQuery, sizeof(nbanQuery), "SELECT * FROM `banlog` WHERE `ip` = '%s'", getIp(playerid));
	mysql_query(mysqlC, nbanQuery);
	if(cache_num_rows() != 0)
	{
		new yazi[1024], admin[500], zaman[500], sebep[500], ip[55];
		cache_get_value_name(0, "admin", admin);
		cache_get_value_name(0, "times", zaman);
		cache_get_value_name(0, "sebep", sebep);
		cache_get_value_name(0, "ip", ip);
		new string4[500],strings[500],string2[500],string3[500],string5[500];
		format(string4,500,""wb"=========================== ["w" Banlandýnýz "wb"] ===========================\n");
		strcat(yazi,string4);
		format(strings,500,""w"Banlayan Yetkili: "wb"%s\n", admin);
		strcat(yazi,strings);
		format(string2,500,""w"Banlama Tarihi: "wb"%s\n", zaman);
		strcat(yazi,string2);
		format(string2,500,""w"Banlanan IP Adresi: "wb"%s\n", ip);
		strcat(yazi,string2);
		format(string3,500,""w"Ban Sebebi: "wb"%s\n", sebep);
		strcat(yazi,string3);
		format(string5,500,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
		strcat(yazi,string5);
		ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"Banlandýnýz",yazi,""ww"Kapat","");
		format(estring,sizeof(estring),"~r~~h~[Kicklendi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~Sistem ~w~~h~~h~tarafindan kicklendi. ~g~~h~~h~Sebep: ~r~~h~IP Ban",getName(playerid),playerid);
		TextMesaji(code(estring));
		new ba_ping = GetPlayerPing(playerid) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", playerid);
	}

	new sqlssa[500];
	format(sqlssa, sizeof(sqlssa), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, sqlssa);
	if(cache_num_rows() != 0)
	{
	    cache_get_value_name_int(0, "bannedxd", PlayerInfo[playerid][bannedxd]);
	}

	new nbanQuery2[2048];
    format(nbanQuery2, sizeof(nbanQuery2), "SELECT * FROM `nbanlog` WHERE `oyuncu` = '%s'", getName(playerid));
	mysql_query(mysqlC, nbanQuery2);
	if(cache_num_rows() != 0)
	{
		new gectimi; cache_get_value_name_int(0, "sure", gectimi);
		if(gettime() < gectimi)
		{
			new admin[500], zaman[500], sebep[500];
			cache_get_value_name(0, "admin", admin, 500);
			cache_get_value_name(0, "zaman", zaman, 500);
			cache_get_value_name(0, "sebep", sebep, 500);
			new gun; cache_get_value_name_int(0, "sure2", gun);
			new yazi[1024];
			new string4[500],strings[500],string2[500],string3[500],string5[500];
			format(string4,500,""wb"=========================== ["w" N-Banlandýnýz "wb"] ===========================\n");
			strcat(yazi,string4);
			format(strings,500,""w"N-Banlayan Yetkili: "wb"%s\n", admin);
			strcat(yazi,strings);
			format(string2,500,""w"N-Banlama Tarihi: "wb"%s\n", zaman);
			strcat(yazi,string2);
			format(string3,500,""w"N-Ban Süresi: "wb"%d gün\n", gun);
			strcat(yazi,string3);
			format(string3,500,""w"N-Ban Açýlmasýna Kalan: "wb"%s\n", ConvertTime(gectimi - gettime()));
			strcat(yazi,string3);
			format(string3,500,""w"N-Ban Sebebi: "wb"%s\n", sebep);
			strcat(yazi,string3);
			format(string5,500,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
			strcat(yazi,string5);
			ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"N-Banlandýnýz",yazi,""ww"Kapat","");
			format(estring,sizeof(estring),"~r~~h~[Kicklendi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~Sistem ~w~~h~~h~tarafindan kicklendi. ~g~~h~~h~Sebep: ~r~~h~Name Ban",getName(playerid),playerid);
			TextMesaji(code(estring));
			new ba_ping = GetPlayerPing(playerid) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", playerid);
		}
		else {
		    new sqlssxd[500];
		    format(sqlssxd, sizeof(sqlssxd), "DELETE FROM `nbanlog` WHERE `oyuncu` = '%s'", getName(playerid));
		    mysql_query(mysqlC, sqlssxd);
		    PlayerInfo[playerid][bannedxd] = 0;
		}
	}

	new nbanQuery3[2048];
	new serial[72];
	gpci(playerid,serial,72);
    format(nbanQuery3, sizeof(nbanQuery3), "SELECT * FROM `sbanlog` WHERE `serial` = '%s'", serial);
	mysql_query(mysqlC, nbanQuery3);
	if(cache_num_rows() != 0)
	{
		new yazi[1024], admin[500], zaman[500], sebep[500], serialadres[500];
		cache_get_value_name(0, "admin", admin);
		cache_get_value_name(0, "time", zaman);
		cache_get_value_name(0, "sebep", sebep);
		cache_get_value_name(0, "serial", serialadres);
		new string4[500],strings[500],string2[500],string3[500],string5[500];
		format(string4,500,""wb"=========================== ["w" S-Banlandýnýz "wb"] ===========================\n");
		strcat(yazi,string4);
		format(strings,500,""w"S-Banlayan Yetkili: "wb"%s\n", admin);
		strcat(yazi,strings);
		format(string2,500,""w"S-Banlama Tarihi: "wb"%s\n", zaman);
		strcat(yazi,string2);
		format(string2,500,""w"S-Banlanan Serial: "wb"%s\n", serialadres);
		strcat(yazi,string2);
		format(string3,500,""w"S-Ban Sebebi: "wb"%s\n", sebep);
		strcat(yazi,string3);
		format(string5,500,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
		strcat(yazi,string5);
		ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"S-Banlandýnýz",yazi,""ww"Kapat","");
		format(estring,sizeof(estring),"~r~~h~[Kicklendi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~Sistem ~w~~h~~h~tarafindan kicklendi. ~g~~h~~h~Sebep: ~r~~h~Serial Ban",getName(playerid),playerid);
		TextMesaji(code(estring));
		new ba_ping = GetPlayerPing(playerid) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", playerid);
	}

    teleport[playerid] = 0;

    SetPVarInt(playerid, "Godveh", 0);

    CSDe[playerid] = 0;
    CSTeamCT[playerid] = 0;
    CSTeamT[playerid] = 0;

    GunGamedeAmk[playerid] = false;
    GunGameSkor[playerid] = 0;

    ZombieTeamHuman[playerid] = 0;
    ZombieTeamZombie[playerid] = 0;
    Zombiede[playerid] = 0;

    SetPVarInt(playerid,"pmci",-1);

    duelde[playerid] = 0;
    dmde[playerid] = 0;

    AKA(playerid);

	PlayerInfo[playerid][Spawned] = 0;

    PlayerInfo[playerid][Kayitli] = 0;
    if(MySQLHesapKontrol(playerid) == 1)
	{
 		PlayerInfo[playerid][Kayitli] = 1;
 	}

	PlayerData[playerid][Homes][0] = -1;
	foreach(new i: Houses)
	{
	    if(!strcmp(HouseData[i][Owner], GetName(playerid)) && HouseData[i][Owned] == true)
	    {
	        PlayerData[playerid][Homes][0] = i;
		}
	}
	PlayerData[playerid][CurrentHouse] = -1;

    PlayerInfo[playerid][PlayerCeteID] = -1;
    PlayerInfo[playerid][exp] = 0;

	PlayerInfo[playerid][dLevel] = 0;

    SetPlayerMapIcon(playerid, 12, 2415.0154, 1123.6432, 10.8203, 52, 0, MAPICON_GLOBAL);

	new expkda[100];
	format(expkda,sizeof(expkda),"Dark/OyuncuBilgileri/%s.txt",getName(playerid));
	if(dini_Exists(expkda))
	{
		SpawnSilahiSecti[playerid] = dini_Int(expkda,"SpawnSilahiSecti");
		SetPVarInt(playerid,"spawnsilah1",dini_Int(expkda,"spawnsilah1"));
		SetPVarInt(playerid,"spawnsilah2",dini_Int(expkda,"spawnsilah2"));
		SetPVarInt(playerid,"spawnsilah3",dini_Int(expkda,"spawnsilah3"));
		SetPVarInt(playerid,"spawnsilah4",dini_Int(expkda,"spawnsilah4"));
		sarkisayim[playerid] = dini_Int(expkda,"sarkisayim");
	}
	if(!dini_Exists(expkda))
	{
		SpawnSilahiSecti[playerid] = 0;
		sarkisayim[playerid] = 0;
    }

    PlayerInfo[playerid][Parkour] = false;

    hizacik[playerid] = false;
    ziplamaacik[playerid] = false;

	PlayerInfo[playerid][Giris] = 0;

	new isim[MAX_PLAYER_NAME];
	GetPlayerName(playerid,isim,sizeof(isim));
	new baglandiisim[50];
	format(baglandiisim,sizeof(baglandiisim),"%s(%i)",getName(playerid),playerid);
	SetPlayerName(playerid,baglandiisim);
    SendDeathMessage(INVALID_PLAYER_ID,playerid,200);
    SetPlayerName(playerid,isim);

	StopAudioStreamForPlayer(playerid);
	PlayAudioStreamForPlayer(playerid, "https://bit.ly/2KdLP68");
	clearchat(playerid);
	SFM(playerid, -1, ""ww"GamerLity FR™ Türkiye Freeroam sunucusuna "wb"hoþgeldiniz, %s.", getName(playerid));
	SCM(playerid, -1, ""ww"Sunucumuzda iyi vakit geçirmenizi dileriz. "wb"Web sitemiz: forum.gamerlity.com");
	SCM(playerid, -1, ""ww"Sunucumuza girdiðiniz için teþekkür eder, iyi vakit geçirmenizi temenni ederiz.");
	new tarih[128];
	TimeStampTamTarih(SunucuRekoru_Tarih, tarih);
	SFM(playerid, -1, ""ww"Sunucu rekoru "ad"%d "w"oyuncu ile "ad"%s "w"tarihinde kýrýldý.", SunucuRekoru, tarih);

	if(SunucuRekoru < OnlineOyuncularr())
	{
	    SunucuRekoru = OnlineOyuncularr();
	    SunucuRekoru_Tarih = gettime();

	    new sqlxx[500];
	    format(sqlxx, sizeof(sqlxx), "UPDATE `sunucu_ayarlari` SET `rekor` = '%d', `rekortarih` = '%d'", SunucuRekoru, SunucuRekoru_Tarih);
	    mysql_query(mysqlC, sqlxx);

	    foreach(new i: Player)
	    {
	        SFM(i, -1, ""safaf"Yeni sunucu rekoru kýrýldý! "ad"%d oyuncu | Tarih: %s", SunucuRekoru, TarihCek());
	    }
	}

	PlayerInfo[playerid][language] = 0;

    isCbug[playerid] = 0;

 	new ipps[128];
	GetPlayerIp(playerid, ipps, sizeof(ipps));
	if(!strcmp(ipps, "255.255.255.255"))
	{
	    kickle(playerid, "Unban Hack");
	}

	return true;
}

forward kickle(playerid, string[]);
public kickle(playerid, string[])
{
	if(!strcmp(getName(playerid),"flareoNNN") || !strcmp(getName(playerid),"Ethernos") || !strcmp(getName(playerid),"Lordax"))
	{
	    new qwe[500];
	    format(qwe, sizeof(qwe), ""ad"az kalsýn kickleniyodun kankam. sebep: "wb"%s", string);
	    return SendClientMessage(playerid, -1, qwe);
	}
	if(PlayerInfo[playerid][dLevel] == 10) return true;
	new yazi[1024];
	new string4[156],strings[156],string2[156],string3[156],string5[156];
	format(string4,156,""wb"=========================== [ "w"Kicklendiniz"wb" ] ===========================\n");
	format(strings,156,""w"Kickleyen Yetkili: "wb"Sistem\n");
	format(string2,156,""w"Kickleme Tarihi: "wb"%s\n", TarihCek());
	format(string3,156,""w"Sebep: "wb"%s\n",string);
	format(string5,156,""wb"=========================== [ "w"GamerLity FR™"wb" ] =====================\n");
	strcat(yazi,string4);
	strcat(yazi,strings);
	strcat(yazi,string2);
	strcat(yazi,string3);
	strcat(yazi,string5);
	ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"Kicklendiniz",yazi,""ww"Kapat","");
	format(estring,sizeof(estring),"~r~~h~[Kicklendi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~Sistem ~w~~h~~h~tarafindan kicklendi. ~g~~h~~h~Sebep: ~r~~h~%s",getName(playerid),playerid,string);
	TextMesaji(code(estring));
	new sql[500];
	format(sql, sizeof(sql), "INSERT INTO `kicklog` (`oyuncu`, `admin`, `sebep`, `tarih`) VALUES ('%s', '%s', '%s', '%s')", getName(playerid), "Sistem", string,TarihCek());
	mysql_query(mysqlC, sql);
	printf("» %s(%d) Player Kicked! Reason : %s",getName(playerid),playerid,string);
	new ba_ping = GetPlayerPing(playerid) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", playerid);
	return true;
}

stock banla(playerid, string[])
{
	if(!strcmp(getName(playerid),"flareoNNN") || !strcmp(getName(playerid),"Ethernos") || !strcmp(getName(playerid),"Lordax"))
	{
	    return true;
	}
	if(PlayerInfo[playerid][dLevel] == 10) return true;
	new yazi[1024];
	new string4[156],strings[156],string2[156],string3[156],string5[156];
	format(string4,156,""wb"=========================== ["w" Banlandýnýz "wb"] ============================\n");
	format(strings,156,""w"Banlayan Yetkili: "wb"Sistem\n");
	format(string2,156,""w"Banlanma Tarihi: "wb"%s\n", TarihCek());
	format(string3,156,""w"Sebep: "wb"%s\n",string);
	format(string5,156,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
	strcat(yazi,string4);
	strcat(yazi,strings);
	strcat(yazi,string2);
	strcat(yazi,string3);
	strcat(yazi,string5);
	ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"Banlandýnýz",yazi,""ww"Kapat","");
	format(estring,sizeof(estring),"~r~~h~[Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~Sistem ~w~~h~~h~tarafindan banlandi. ~g~~h~~h~Sebep: ~r~~h~%s",getName(playerid),playerid,string);
	TextMesaji(code(estring));
	new str[800];
	format(str,800,"INSERT INTO `banlog`(`ip`,`player`,`times`,`sebep`,`admin`) VALUES('%s','%s','%s','%s','%s')",getIp(playerid), getName(playerid), TarihCek(), code(string), "Sistem");
	mysql_query(mysqlC, str);
	printf("» %s(%d) Player Banned! Reason : %s",getName(playerid),playerid,string);
 	new ba_ping = GetPlayerPing(playerid) + 150; SetTimerEx("BanMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", playerid);
	return true;
}

forward KickMag2(playerid);
public KickMag2(playerid)
{
	return Kick(playerid);
}

forward BanMag2(playerid);
public BanMag2(playerid)
{
	return Ban(playerid);
}

stock online(playerid)
{
	new satir[250];
	format(satir,sizeof(satir),"%02d",OnlineCS());
	TextDrawSetString(AltTextler[19],satir);
	format(satir,sizeof(satir),"%02d",OnlineToplamZombie());
	TextDrawSetString(AltTextler[20],satir);
	format(satir,sizeof(satir),"%02d",OnlineDerby());
	TextDrawSetString(AltTextler[21],satir);
	format(satir,sizeof(satir),"%02d",OnlineYaris());
	TextDrawSetString(AltTextler[22],satir);//race
	format(satir,sizeof(satir),"%02d",OnlineParkour());
	TextDrawSetString(AltTextler[23],satir);
	format(satir,sizeof(satir),"%02d",OnlineHungerGame());
	TextDrawSetString(AltTextler[24],satir);
	format(satir,sizeof(satir),"%02d",OnlineGunGame());
	TextDrawSetString(AltTextler[25],satir);
	format(satir,sizeof(satir),"%02d", OnlineSDG());
	TextDrawSetString(AltTextler[26], satir);
	format(satir,sizeof(satir),"%02d", OnlineSDG());
	TextDrawSetString(AltTextler[27], satir);
	format(satir,sizeof(satir),"%02d", OnlineDeagle());
	TextDrawSetString(AltTextler[37], satir);
	format(satir,sizeof(satir),"%02d", OnlineMG1());
	TextDrawSetString(AltTextler[38], satir);
	format(satir,sizeof(satir),"%02d", OnlineKnife());
	TextDrawSetString(AltTextler[39], satir);
	format(satir,sizeof(satir),"%02d", OnlineSniper());
	TextDrawSetString(AltTextler[40], satir);

	format(satir,sizeof(satir),"%s",FormatMoney(PlayerInfo[playerid][Oldurme]));
	TextDrawSetString(FPSKismiText[playerid][16],satir);
	format(satir,sizeof(satir),"%s",FormatMoney(PlayerInfo[playerid][Olum]));
	TextDrawSetString(FPSKismiText[playerid][13],satir);
	format(satir,sizeof(satir),"%d",PlayerInfo[playerid][ratio]);
	TextDrawSetString(FPSKismiText[playerid][6],satir);
	format(satir,sizeof(satir),"%d",PlayerInfo[playerid][ratio]);
	TextDrawSetString(FPSKismiText[playerid][12],satir);
	format(satir,sizeof(satir),"%s",FormatMoney(FPS2[playerid]-1));
	TextDrawSetString(FPSKismiText[playerid][22],satir);
	format(satir,sizeof(satir),"%s",FormatMoney(GetPlayerPing(playerid)));
	TextDrawSetString(FPSKismiText[playerid][28],satir);
	format(satir,sizeof(satir),"%s",FormatMoney(YetkiliSayisi()));
	TextDrawSetString(FPSKismiText[playerid][24],satir);

	if(PlayerInfo[playerid][dLevel] >= 1)
	{
		SetPlayerColor(playerid,COLOR_ADMIN);
	}
}

stock textshow(playerid)
{
	for(new i = 0; i < 41; i++)
	{
		TextDrawShowForPlayer(playerid, AltTextler[i]);
	}


	for(new i = 0; i < 29; i++)
	{
	    TextDrawShowForPlayer(playerid, FPSKismiText[playerid][i]);
	}

	TextDrawShowForPlayer(playerid,exptext0);
	TextDrawShowForPlayer(playerid,exptext1[playerid]);
    return true;
}

public OnPlayerSpawn(playerid)
{

    if(!GetPVarInt(playerid, "color")) SetPVarInt(playerid, "color", 18643);

    TextDrawShowForPlayer(playerid, pDateClock);

    for(new i; i < bolgecount + 1; i++)
    {
	    switch(bolgebilgi[i][bolgerenk])
	    {
        	case 1: GangZoneShowForPlayer(playerid, bolgebilgi[i][bolgezone], 0xAA3333AA);
        	case 2: GangZoneShowForPlayer(playerid, bolgebilgi[i][bolgezone], 0xFFFF00AA);
        	case 3: GangZoneShowForPlayer(playerid, bolgebilgi[i][bolgezone], 0x0000BBAA);
        	case 4: GangZoneShowForPlayer(playerid, bolgebilgi[i][bolgezone], 0x33AA33AA);
        	case 5: GangZoneShowForPlayer(playerid, bolgebilgi[i][bolgezone], 0xFFFFFFAA);
        	default: GangZoneShowForPlayer(playerid, bolgebilgi[i][bolgezone], 0xAA3333AA);
        }
    }

	if(PlayerInfo[playerid][skinplayer] != -1)
	{
		SetPlayerSkin(playerid,PlayerInfo[playerid][skinplayer]);
	}

	if(PlayerInfo[playerid][rengim] != 0)
	{
		if(PlayerInfo[playerid][dLevel] < 1) SetPlayerColor(playerid, PlayerInfo[playerid][rengim]);
	}

    RemovePlayerAttachedObject(playerid, 0);
    if(GetPVarInt(playerid, "sapkaacik") == 1)
    {
    	SetPlayerAttachedObject(playerid, 0, 19066, 2, 0.120999, 0.025000, 0.004000, 90.400062, 124.299926, 0.000000, 1.000000, 1.000000, 1.000000);
    }

    PlayerInfo[playerid][Spawned] = 1;

    spawn(playerid);

    if(SpawnSilahiSecti[playerid] != 1)
    {
        SetPVarInt(playerid,"spawnsilah1",24);
        SetPVarInt(playerid,"spawnsilah2",25);
        SetPVarInt(playerid,"spawnsilah3",31);
        SetPVarInt(playerid,"spawnsilah4",8);
    }

    if(PlayerInfo[playerid][VIP] > 0 && PlayerInfo[playerid][VIP_Sure] < gettime())
    {
        PlayerInfo[playerid][VIP] = 0;
        PlayerInfo[playerid][VIP_Sure] = 0;
        SavePlayer(playerid);
        SCM(playerid, -1, ""safaf"VIP süreniz dolmuþtur. Baðýþýnýz için "ad"teþekkürler.");
    }

    HungerGamede[playerid] = 0;
    Zombiede[playerid] = 0;
    ZombieTeamHuman[playerid] = 0;
    ZombieTeamZombie[playerid] = 0;

	if(GunGamedeAmk[playerid] == true)
	{
	    switch(random(6))
	    {
			case 0: SetPlayerPos(playerid, 1310.3135, 2185.9031, 11.0234);
			case 1: SetPlayerPos(playerid, 1334.8992, 2188.3469, 11.0234);
			case 2: SetPlayerPos(playerid, 1357.5551, 2188.4478, 11.0156);
			case 3: SetPlayerPos(playerid, 1358.9692, 2158.6802, 11.0156);
			case 4: SetPlayerPos(playerid, 1341.2158, 2151.2722, 11.0156);
			case 5: SetPlayerPos(playerid, 1320.0950, 2150.0845, 11.0234);
	 	}
	 	SetCameraBehindPlayer(playerid);
	 	SetPlayerVirtualWorld(playerid, GUN_GAME_WORLD);
	 	SetPlayerHealth(playerid, 100);
	 	SetPlayerArmour(playerid, 100);
	 	ResetPlayerWeapons(playerid);
	    GivePlayerWeapon(playerid, GetPVarInt(playerid, "GunGameWeap"), 500);
	    return true;
	} else {
	    GunGamedeAmk[playerid] = false;
	}

	if(Speedydeaglede[playerid] == true)
	{
	    SetPlayerHealth(playerid, 100.0);
	    SetPlayerArmour(playerid, 100.0);
		Speedydeaglede[playerid] = true;
		SetPlayerVirtualWorld(playerid, 124);
		destroyVehicle(playerid);
		SetPlayerPos(playerid, 1580.6970,1177.9991,10.8125);
		TogglePlayerControllable(playerid, 0);
		SetPVarInt(playerid, "God", 1);
		ResetPlayerWeapons(playerid);
		GameTextForPlayer(playerid, "~g~~h~Yukleniyor...", 1200, 5);
		SetTimerEx("suremdolduaq", 1200, false, "d", playerid);
		return true;
	} else {
	    Speedydeaglede[playerid] = false;
	}

	new playername[24];
	playername[0] = EOS;
	GetPlayerName(playerid,playername,24);

    PlayerInfo[playerid][Parkour] = false;
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerTeam(playerid,NO_TEAM);
	etkLocali[playerid] = 0;
	new carid;
	carid = GetPlayerVehicleID(playerid);
	IsGodCar[carid] = 0;
	SetPVarInt(playerid, "egodcar", 0);
	SetPVarInt(playerid, "aracengeli", 0);
	SetPVarInt(playerid, "aracengeliactim", 0);
	SetPVarInt(playerid, "motorengeli", 0);
	SetPVarInt(playerid, "motorengeliactim", 0);
	SetPVarInt(playerid, "dukkanaisinlandi", 0);
	DMZoneOyuncuModu[playerid] = YOK;
	lKatildim[playerid] = 0;
	lEtkinlikte[playerid] = 0;
	PlayerInfo[playerid][GodCar] = 0;
	SetPlayerMaxHealth(playerid, 100.0);
	SetPlayerMaxArmour(playerid, 100.0);
	Bankada[playerid] = false;

	if(duelde[playerid] == 1)
	{
		SetPlayerPos(playerid,duelpos[0][0],duelpos[0][1],duelpos[0][2]+1.5);
		GivePlayerWeapon(playerid,24,24);
		duelde[playerid] = 1;
		SetPlayerHealth(playerid,100.0);
		SetPlayerArmour(playerid,100.0);
		SetPlayerVirtualWorld(playerid,44);
	}
	else
	{
		duelde[playerid] = 0;
		takim[playerid] = 0;
		TextDrawHideForPlayer(playerid,skorlar0);
		TextDrawHideForPlayer(playerid,skorlar1);
		TextDrawHideForPlayer(playerid,skorlar2[playerid]);
		TextDrawHideForPlayer(playerid,skorlar3);
		TextDrawHideForPlayer(playerid,skorlar5);
		TextDrawHideForPlayer(playerid,skorlar6[playerid]);
		TextDrawHideForPlayer(playerid,skorlar7[playerid]);
		TextDrawHideForPlayer(playerid,skorlar8[playerid]);
		TextDrawHideForPlayer(playerid,skorlar9);
		TextDrawHideForPlayer(playerid,skorlar10[playerid]);
		TextDrawHideForPlayer(playerid,skorlar11);
		TextDrawHideForPlayer(playerid,skorlar12);
		TextDrawHideForPlayer(playerid,skorlar13);
		TextDrawHideForPlayer(playerid,skorlar14);
		SetPlayerVirtualWorld(playerid,0);
	}

    SetPlayerHealth(playerid,100.0);
    if(duelde[playerid] == 0) SetPlayerArmour(playerid, 0.0);
    lKatildim[playerid] = 0;

	if(dmde[playerid] > 0)
	{
        dmgit(playerid);
	}
	else
	{
	    yenispawnsilahlar(playerid);
	}

	if(CSDe[playerid] == 1 && CSTeamCT[playerid] == 1)
	{
	    ResetPlayerWeapons(playerid);
	    SetPlayerSkin(playerid,285);
	    SetPlayerPos(playerid,-2302.3467,-1517.1411,1287.8210+1);
	    CSTeamCT[playerid] = 1;
	    CSDe[playerid] = 1;
	    TogglePlayerControllable(playerid,0);
	    ShowPlayerDialog(playerid,12385,DIALOG_STYLE_LIST,""ww"CS Minigame Weapon Selection Menu",""ww"Deagle + Shotgun + Grenade\n"ww"M4 + Shotgun + Smoke Grenade\n"ww"MP5 + AK47 + Grenade\n"ww"Sniper + Shotgun + Smoke Grenade\n"ww"Country Rifle + AK47 + Grenade",""ww"Seç","");
		SetPlayerVirtualWorld(playerid,67);
	}

	if(CSDe[playerid] == 1 && CSTeamT[playerid] == 1)
	{
		ResetPlayerWeapons(playerid);
		SetPlayerSkin(playerid,114);
		SetPlayerPos(playerid,-2302.1980,-1566.1785,1287.8210+1);
		CSTeamT[playerid] = 1;
		CSDe[playerid] = 1;
 		TogglePlayerControllable(playerid,0);
    	ShowPlayerDialog(playerid,12385,DIALOG_STYLE_LIST,""ww"CS Minigame Weapon Selection Menu",""ww"Deagle + Shotgun + Grenade\n"ww"M4 + Shotgun + Smoke Grenade\n"ww"MP5 + AK47 + Grenade\n"ww"Sniper + Shotgun + Smoke Grenade\n"ww"Country Rifle + AK47 + Grenade",""ww"Seç","");
        SetPlayerVirtualWorld(playerid,67);
	}

	if(PlayerInfo[playerid][JailTime] > 0)
	{
		SetTimerEx("JailPlayer",5000,0,"d",playerid);
   		PlayerInfo[playerid][Jailed] = 1;
   	}

	for(new i=0;i<5;i++)TextDrawShowForPlayer(playerid,eMessage[0][i]);
	for(new i=0;i<5;i++)TextDrawShowForPlayer(playerid,eMessage[1][i]);

    new	Query3[1024];
	format(Query3, sizeof(Query3), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, Query3);
	if(cache_num_rows() > 0){
			new Float:moddata3;
        	cache_get_value_name_float(0,"pinfox",moddata3);
			PlayerInfo[playerid][pinfox] = moddata3;
	}

    new	Query4[1024];
	format(Query4, sizeof(Query4), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, Query4);
	if(cache_num_rows() > 0){
			new Float:moddata4;
        	cache_get_value_name_float(0,"pinfoy",moddata4);
			PlayerInfo[playerid][pinfoy] = moddata4;
	}

    new	Query5[1024];
	format(Query5, sizeof(Query5), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, Query5);
	if(cache_num_rows() > 0){
			new Float:moddata5;
        	cache_get_value_name_float(0,"pinfoz",moddata5);
			PlayerInfo[playerid][pinfoz] = moddata5;
	}

    textshow(playerid);

	Player_Fire_Enabled[playerid] = true;

	return true;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	SetPVarInt(playerid, "sp_Olum", 1);
	GetPlayerPos(playerid, sonpos[playerid][0], sonpos[playerid][1], sonpos[playerid][2]);
	GetPlayerFacingAngle(playerid, pos4[playerid]);

    if(killerid == INVALID_PLAYER_ID || killerid == playerid)
    {
        printf("» [INTIHAR] %s(%d)", getName(playerid), playerid);
        SendDeathMessage(INVALID_PLAYER_ID, playerid, reason);
        PlayerInfo[playerid][Olum]++;
        PlayerInfo[playerid][ratio] = floatround(PlayerInfo[playerid][Oldurme]/PlayerInfo[playerid][Olum]);
        return true;
    }

    else if(killerid != INVALID_PLAYER_ID)
    {
        if(GunGamedeAmk[playerid] == true)
        {
            PlayerPlaySound(killerid,1138,0.0,0.0,0.0);
            GunGameSkor[killerid]++;
            switch(GunGameSkor[killerid])
            {
                case 1:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 25, 500);
                    SetPVarInt(killerid, "GunGameWeap", 25);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~Shotgun", 2000, 3);
                }
                case 2:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 28, 500);
                    SetPVarInt(killerid, "GunGameWeap", 28);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~Uzi", 2000, 3);
                }
                case 3:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 31, 500);
                    SetPVarInt(killerid, "GunGameWeap", 31);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~M4", 2000, 3);
                }
                case 4:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 34, 500);
                    SetPVarInt(killerid, "GunGameWeap", 34);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~Sniper", 2000, 3);
                }
                case 5:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 16, 500);
                    SetPVarInt(killerid, "GunGameWeap", 16);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~Grenade", 2000, 3);
                }
                case 6:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 9, 500);
                    SetPVarInt(killerid, "GunGameWeap", 9);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~Chainsaw", 2000, 3);
                }
                case 7:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 24, 500);
                    SetPVarInt(killerid, "GunGameWeap", 24);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~Deagle", 2000, 3);
                }
                case 8,9,10,11,12,13,14,15:
                {
                    ResetPlayerWeapons(killerid);
                    GivePlayerWeapon(killerid, 24, 500);
                    SetPVarInt(killerid, "GunGameWeap", 24);
                    GameTextForPlayer(killerid, "~n~~n~~n~~g~~h~~h~Deagle", 2000, 3);
                }
            }
		}
	}

    if(killerid != INVALID_PLAYER_ID)
    {
		printf("(Mod OnPlayerDeath) » [OLDURDU] %s(%d) => %s(%d)", getName(killerid), killerid, getName(playerid), playerid);
		SendDeathMessage(killerid, playerid, reason);
		PlayerInfo[playerid][Olum]++;
		PlayerInfo[playerid][ratio] = floatround(PlayerInfo[playerid][Oldurme]/PlayerInfo[playerid][Olum]);
		PlayerInfo[killerid][Oldurme]++;

		OlumTextleri(playerid, killerid, reason);

		if(duelloda[playerid] == true)
		{
		    new kazanan = GetPVarInt(playerid, "duello_davetatilan");
		    duelloda[kazanan] = false;
		    duelloda[playerid] = false;
		    OnPlayerSpawn(kazanan);
		    GivePlayerMoney(kazanan, GetPVarInt(playerid, "duello_para"));
		    SetPlayerScore(kazanan, GetPlayerScore(kazanan) + GetPVarInt(playerid, "duello_skor"));
		    GivePlayerMoney(playerid, -GetPVarInt(playerid, "duello_para"));
		    SetPlayerScore(playerid, GetPlayerScore(playerid) - GetPVarInt(playerid, "duello_skor"));
		    SFM(playerid, -1, ""safaf"Düelloyu kaybettiniz. "wb"-%s skor ve -%s$", FormatMoney(GetPVarInt(playerid, "duello_skor")), FormatMoney(GetPVarInt(playerid, "duello_para")));
		    SFM(kazanan, -1, ""safaf"Tebrikler! Düelloyu kazandýnýz ve "ad"%s skor + %s$ "w"kazandýnýz.", FormatMoney(GetPVarInt(playerid, "duello_skor")), FormatMoney(GetPVarInt(playerid, "duello_para")));
		}

		new para = randomEx(1000, 2000);
		new skor = randomEx(1, 2);
		new exps = randomEx(150, 250);

		GivePlayerMoney(killerid, para);
		skorver(killerid, skor);
		expver(killerid, exps);

		new satir[128];
		format(satir,sizeof(satir),"~n~~n~~n~~n~~n~~n~~n~~r~%i~g~$ + ~r~%i ~g~skor + ~r~%i ~g~exp",para,skor,exps);
		GameTextForPlayer(killerid,satir,5500,5);

		if(PlayerInfo[killerid][Olum] != 0)
		{
			PlayerInfo[killerid][ratio] = floatround(PlayerInfo[killerid][Oldurme]/PlayerInfo[killerid][Olum]);
		}
		else
		{
			PlayerInfo[killerid][ratio] = 0;
		}

		if(Zombiede[playerid] == 1)
		{
			Zombiede[playerid] = 0;
			ZombieTeamHuman[playerid] = 0;
			ZombieTeamZombie[playerid] = 0;
			SendClientMessage(playerid,-1,""safaf"Zombie'den elendin.");
		}

		if(duelde[killerid] == 1 && takim[killerid] == 1 && duelde[playerid] == 1)
		{
			foreach(new i:Player)
			{
				takim1sayisi[i]++;
			}
		}

		if(duelde[killerid] == 1 && takim[killerid] == 2 && duelde[playerid] == 1)
		{
			foreach(new i:Player)
			{
				takim2sayisi[i]++;
			}
		}

		if(isCbug[playerid] == 1) isCbug[playerid] = 0;

		SCM(playerid,-1,""safaf"Son öldüðünüz yere gitmek isterseniz, "wb"/sonyer "w"yazabilirsiniz.");

		PlayerInfo[playerid][Spawned] = 0;
	}
    return true;
}

public OnPlayerDisconnect(playerid, reason)
{
	AutoBulletInfractions[playerid] = 0;
	
    SavePlayer(playerid);

	SetPVarInt(playerid, "laser", 0);
	RemovePlayerAttachedObject(playerid, 0);

	if(Derbyde[playerid] == true)
	{
		Derbyde[playerid] = false;
	}

	//TextSilEx(playerid);
	
	Delete3DTextLabel(siraclabel[playerid]);

    TextDrawHideForPlayer(playerid, pDateClock);

	duelatti[playerid] = false;

	if(duelloda[playerid] == true)
	{
	    new kazanan = GetPVarInt(playerid, "duello_davetatilan");
	    duelloda[kazanan] = false;
	    duelloda[playerid] = false;
	    OnPlayerSpawn(kazanan);
	    GivePlayerMoney(kazanan, GetPVarInt(playerid, "duello_para"));
	    SetPlayerScore(kazanan, GetPlayerScore(kazanan) + GetPVarInt(playerid, "duello_skor"));
	    GivePlayerMoney(playerid, -GetPVarInt(playerid, "duello_para"));
	    SetPlayerScore(playerid, GetPlayerScore(playerid) - GetPVarInt(playerid, "duello_skor"));
	    SFM(playerid, -1, ""safaf"Düelloyu kaybettiniz. "wb"-%s skor ve -%s$", FormatMoney(GetPVarInt(playerid, "duello_skor")), FormatMoney(GetPVarInt(playerid, "duello_para")));
	    SFM(kazanan, -1, ""safaf"Tebrikler! Düelloyu kazandýnýz ve "ad"%s skor + %s$ "w"kazandýnýz.", FormatMoney(GetPVarInt(playerid, "duello_skor")), FormatMoney(GetPVarInt(playerid, "duello_para")));
	}

	SetPVarInt(playerid, "duello_silah1", -1);
	SetPVarInt(playerid, "duello_silah2", -1);
	SetPVarInt(playerid, "duello_skor", -1);
	SetPVarInt(playerid, "duello_para", -1);
	SetPVarInt(playerid, "duello_davetatilan", -1);
	SetPVarInt(playerid, "duello_davetatilan", -1);

	Bankada[playerid] = false;

    SetPVarInt(playerid, "CeteDuzenledigi", -1);
	
    isCbug[playerid] = 0;

    RemoveNeon(playerid);

    spawnda[playerid] = false;

    KillTimer(dukkantimer[playerid]);

    TextDrawHideForPlayer(playerid, GostergeAsilHiz[playerid]);

    if(gMyPlaylist[playerid] != INVALID_PLAYLIST_ID)
	{
		RemovePlaylist(gMyPlaylist[playerid]);
		gTotalPlaylists--;
	}

	format(estring, 256, "UPDATE `oyuncular` SET `oyundaiste` = '0' WHERE `kullaniciadi` = '%s'",getName(playerid));
	mysql_query(mysqlC, estring);

    Player_Fire_Enabled[playerid] = false;
    Player_Key_Sprint_Time[playerid] = 0;

	Speedydeaglede[playerid] = false;

	format(estring, 256, "UPDATE `oyuncular` SET `oyundaiste` = '0' WHERE `kullaniciadi` = '%s'",getName(playerid));
	mysql_query(mysqlC, estring);

	TextDrawHideForPlayer(playerid,exptext0);
	TextDrawHideForPlayer(playerid,exptext1[playerid]);

    HungerGamede[playerid] = 0;

    CSDe[playerid] = 0;
    CSTeamCT[playerid] = 0;
    CSTeamT[playerid] = 0;

    GunGamedeAmk[playerid] = false;
    GunGameSkor[playerid] = 0;

    ZombieTeamHuman[playerid] = 0;
    ZombieTeamZombie[playerid] = 0;
    Zombiede[playerid] = 0;

    destroyVehicle(playerid);

	dmde[playerid] = 0;
	dmyasagi[playerid] = 0;
	duelde[playerid] = 0;

    PlayerInfo[playerid][Parkour] = false;
	TogglePlayerControllable(playerid, true);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerTeam(playerid,NO_TEAM);
	etkLocali[playerid] = 0;
	new carid;
	carid = GetPlayerVehicleID(playerid);
	IsGodCar[carid] = 0;
	PlayerInfo[playerid][GodCar] = 0;
	SetPVarInt(playerid, "aracengeli", 0);
	SetPVarInt(playerid, "egodcar", 0);
	SetPVarInt(playerid, "aracengeliactim", 0);
	SetPVarInt(playerid, "motorengeli", 0);
	SetPVarInt(playerid, "motorengeliactim", 0);
	SetPVarInt(playerid, "dukkanaisinlandi", 0);
	DMZoneOyuncuModu[playerid] = YOK;
	lKatildim[playerid] = 0;
	lEtkinlikte[playerid] = 0;

	new expkda[100];
	format(expkda,sizeof(expkda),"Dark/OyuncuBilgileri/%s.txt",getName(playerid));
	if(!dini_Exists(expkda))
	{
        dini_Create(expkda);
        dini_IntSet(expkda,"SpawnSilahiSecti",SpawnSilahiSecti[playerid]);
        dini_IntSet(expkda,"spawnsilah1",GetPVarInt(playerid,"spawnsilah1"));
        dini_IntSet(expkda,"spawnsilah2",GetPVarInt(playerid,"spawnsilah2"));
        dini_IntSet(expkda,"spawnsilah3",GetPVarInt(playerid,"spawnsilah3"));
        dini_IntSet(expkda,"spawnsilah4",GetPVarInt(playerid,"spawnsilah4"));
        dini_IntSet(expkda,"sarkisayim",sarkisayim[playerid]);
	}
	if(dini_Exists(expkda))
	{
        dini_IntSet(expkda,"SpawnSilahiSecti",SpawnSilahiSecti[playerid]);
        dini_IntSet(expkda,"spawnsilah1",GetPVarInt(playerid,"spawnsilah1"));
        dini_IntSet(expkda,"spawnsilah2",GetPVarInt(playerid,"spawnsilah2"));
        dini_IntSet(expkda,"spawnsilah3",GetPVarInt(playerid,"spawnsilah3"));
        dini_IntSet(expkda,"spawnsilah4",GetPVarInt(playerid,"spawnsilah4"));
        dini_IntSet(expkda,"sarkisayim",sarkisayim[playerid]);
	}

    hizacik[playerid] = false;
    ziplamaacik[playerid] = false;

    TextDrawDestroy(FPS[playerid]);

    foreach(new i:Player)
    {
        if(PlayerInfo[i][SpecID] == playerid)AdvanceSpectate(i);
    }

	for(new i = 0; i < 41; i++)
	{
		TextDrawHideForPlayer(playerid, AltTextler[i]);
	}

	new isim[MAX_PLAYER_NAME];
	GetPlayerName(playerid,isim,sizeof(isim));
	new baglandiisim[50];
	format(baglandiisim,sizeof(baglandiisim),"%s(%i)",getName(playerid),playerid);
	SetPlayerName(playerid,baglandiisim);
    SendDeathMessage(INVALID_PLAYER_ID,playerid,201);
    SetPlayerName(playerid,isim);
    return true;
}

public OnVehicleSpawn(vehicleid)
{
    printf("» Arac spawn oldu: %s", GetVehicleName(vehicleid));
	return true;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(vehicleid == UFO)
	{
	    DestroyObject(UFO_Obje);
		UFO_Obje = CreateObject(18846, 275.7478, 2058.0833, 17.6406, 0, 0, 0, 0);
		AttachObjectToVehicle(UFO_Obje, UFO, 0, 0, 0.3, 0, 0, 92);
	}
	return true;
}

public OnPlayerText(playerid, text[])
{

    new MMM[5000];

	if(PlayerInfo[playerid][Giris] == 0)
	{
		Hata(playerid,"Giriþ yapmadan yazý yazamazsýnýz.");
		return false;
	}

    if(PlayerInfo[playerid][Jailed] == 1)
	{
		SFM(playerid,-1,""ww"Hapiste konuþamazsýn. Kalan Zaman: "wb"%s"w".",TimeConverter(PlayerInfo[playerid][JailTime]));
		return false;
	}

	if(PlayerInfo[playerid][mute_] > gettime())
	{
		SFM(playerid, -1, ""safaf"Susturulmuþken konuþamazsýn! Kalan: "wb"%s", ConvertTime(PlayerInfo[playerid][mute_] - gettime()));
		return false;
	}

	if(gettime() < GetPVarInt(playerid, "chatzaman") + 3 && PlayerInfo[playerid][dLevel] < 8)
	{
		new mesajp[256];
		format(mesajp, sizeof mesajp, ""safaf"Sohbete tekrar yazý yazabilmek için "wb"%d "w"saniye beklemelisin.", ((GetPVarInt(playerid, "chatzaman") + 3) - gettime()));
		SCM(playerid, -1, mesajp);
		return false;
	}
	SetPVarInt(playerid, "chatzaman", gettime());

    if(IsTextCaps(text) && PlayerInfo[playerid][dLevel] < 8)
    {
        Hata(playerid,"Caps lock açýkken yazamazsýn.");
        return false;
    }

	new bakimtekraryaziyonmu[5000];
	GetPVarString(playerid,"chatyazi",bakimtekraryaziyonmu,5000);
	if(strlen(bakimtekraryaziyonmu) && !strcmp(bakimtekraryaziyonmu,text) && PlayerInfo[playerid][dLevel] < 8)
	{
	    Hata(playerid,"Ayný yazýyý tekrar gönderemezsin!");
		return false;
	}
	SetPVarString(playerid,"chatyazi",text);

	//------------------------------ Anti-IP ---------------------------------//

    if(CheckAdvertising(text))
	{
	    if(PlayerInfo[playerid][AWarings] != 4)
	    {
	        PlayerInfo[playerid][AWarings]++;

			SFM(playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[playerid][AWarings]);
			return false;
		}
		else
		{
		    SCM(playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun...");

		    return banla(playerid, "Reklam"), false;
		}
	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	new sa[256], ilkmesaj;
	format(sa, sizeof(sa), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, sa);

	cache_get_value_name_int(0, "basari_ilkmesaj", ilkmesaj);

	if(ilkmesaj == 0)
	{
	    SetPlayerScore(playerid, GetPlayerScore(playerid) + 5);
	    GivePlayerMoney(playerid, 5000);
	    PlayerInfo[playerid][score] = GetPlayerScore(playerid);
	    PlayerInfo[playerid][money] = GetPlayerMoney(playerid);

	    format(sa, sizeof(sa), "UPDATE `oyuncular` SET `basari_ilkmesaj` = '1' WHERE `kullaniciadi` = '%s'", getName(playerid));
	    mysql_query(mysqlC, sa);

	    SCM(playerid, -1, ""safaf"Ýlk mesaj baþarýsýný tamamladýn ve "wb"5 skor "w"+ "wb"5.000$ "w"kazandýn.");
	    SCM(playerid, -1, ""safaf"Tüm baþarýlarýna bakmak için "wb"/basarilarim "w"yazabilirsin.");
	}

		/*for(new i; i < 1024; i++)
		{
		    if(string[i] == '@')
		    {
		        if((string[i + 1] > 47) &&(string[i + 1] < 58))
		        {
		            new id = strval(string[i + 1]);
		            if(id <= 500)
		            {
		                if(IsPlayerConnected(id))
		                {
		                    new menohraca[MAX_PLAYER_NAME];
		                    GetPlayerName(id, menohraca, MAX_PLAYER_NAME);
		                    new j =(i + 1);
		                    while((j <(i + 5)) &&((string[j] > 47) &&(string[j] < 58)))
		                    j++;
		                    strdel(string, i, j);
		                    strins(string, menohraca, i, 128);
		                    } else {
		                    Hata(playerid,"Böyle bir ID yok");
		                    return false;
		                }
		                } else {
		                Hata(playerid,"Böyle bir ID yok");
		                return false;
		            }
		        }
			    SendClientMessageToAllEx(-1, string);
				return false;
		    }
		}*/

    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ChatLog(playerid, text);

	new sql[2048];
	format(sql, sizeof(sql), "INSERT INTO `chatlog` (`gonderen`, `mesaj`) VALUES ('%s', '%s')", getName(playerid), code(text));
	mysql_query(mysqlC, sql);

	if(text[0] == '!' && PlayerInfo[playerid][PlayerCeteID] > -1)
	{
		cmd_c(playerid, text[1]);
		return false;
	}

	if(!strcmp(RenkTest[strRenk], text, true))
	{
	    if(RenkTest[Durum] == true)
	    {
	        new pname[MAX_PLAYER_NAME], string[176];
	        GetPlayerName(playerid, pname, sizeof pname);
			new gStatu[56];
			switch(PlayerInfo[playerid][dLevel])
			{
			    case 0: format(gStatu,56,"Oyuncu");
			    case 1..10: format(gStatu,56,"OG");
			}
	        format(string, sizeof string, "{FF8000}Renk Testi » {FFFFFF}%s {%06x}%s(%i) "w"testi kazandý!", gStatu, GetPlayerColor(playerid) >>> 8, pname,playerid);
			SendClientMessageToAllEx(-1, string);
			GivePlayerMoney(playerid, RenkTest[Paraxx]);
			SetPlayerScore(playerid, GetPlayerScore(playerid)+RenkTest[Skor]);
			ColorTestEnd();
		}
	}

	if(!strcmp(text, ReactionTestString, true) && strlen(ReactionTestString) != 0)
	{
		if(ReactionTestWon == false)
		{
			GivePlayerMoney(playerid, 5000);
			PlayerInfo[playerid][money] = GetPlayerMoney(playerid);
			SetPlayerScore(playerid,GetPlayerScore(playerid)+5);
			PlayerInfo[playerid][score] = GetPlayerScore(playerid);
			ReactionTestWon = true;
			new gStatu[56];
			switch(PlayerInfo[playerid][dLevel])
			{
			    case 0: format(gStatu,56,"Oyuncu");
			    case 1..10: format(gStatu,56,"OG");
			}
			new tempstring[1024];
			format(tempstring,sizeof(tempstring),"{FF00CC}Fast Fingers »{FFFFFF} %s {%06x}%s(%i) "w"harfleri doðru yazdý ve "ad"$5.000, 5 skor "w"kazandý!",gStatu, GetPlayerColor(playerid) >>> 8, getName(playerid), playerid);
			SendClientMessageToAllEx(-1, tempstring);
		}
	}

    if(isenable && strval(text) == answer)
    {
	    new String[1024];
	    isenable = false;
		new gStatu[56];
		switch(PlayerInfo[playerid][dLevel])
		{
			case 0: format(gStatu,56,"Oyuncu");
			case 1..10: format(gStatu,56,"OG");
		}
	    format(String, sizeof(String),""safaf"Matematik » %s {%06x}%s(%i) "w"matematik sorusunu doðru cevapladý ve $5.000, 5 skor kazandý!",gStatu, GetPlayerColor(playerid) >>> 8, getName(playerid), playerid);
	    SendClientMessageToAllEx(-1, String);
	    SetPlayerScore(playerid, GetPlayerScore(playerid)+5);
	    GivePlayerMoney(playerid, 5000);
	    PlayerInfo[playerid][score] = GetPlayerScore(playerid);
	    PlayerInfo[playerid][money] = GetPlayerMoney(playerid);
    }

	if(SoruData[sAktif] == true)
	{
	    if(!strcmp(text, SoruData[sCevap], true) || !strcmp(text, code(SoruData[sCevap]), true) || !strcmp(code(text), SoruData[sCevap], true) || !strcmp(code(text), code(SoruData[sCevap]), true))
	    {
		    SoruData[sAktif] = false;
		    format(SoruData[sCevap], 500, "");
		    format(SoruData[sSoru], 1024, "");
	        new gStatu[56];
			switch(PlayerInfo[playerid][dLevel])
			{
				case 0: format(gStatu,56,"Oyuncu");
				case 1..10: format(gStatu,56,"OG");
			}
			new string[512];
			format(string, sizeof(string), "{00FFA2}Genel Kültür » {FFFFFF}%s {%06x}%s(%i) "w"soruyu doðru cevapladý !", gStatu, GetPlayerColor(playerid) >>> 8, getName(playerid), playerid);
			GivePlayerMoney(playerid, 5000);
			skorver(playerid, 5);
			KillTimer(SoruData[sTimer]);
			SendClientMessageToAll(-1, string);
	     	PlayerInfo[playerid][score] = GetPlayerScore(playerid);
	    	PlayerInfo[playerid][money] = GetPlayerMoney(playerid);
    	}
	}

    if(text[0] == '#' &&(PlayerInfo[playerid][dLevel] >= 1))
	{
	    new string[900]; GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"{00E5FF}» Oyun Görevlisi Sohbet >> {FFFF00}%s(%i): %s",getName(playerid),playerid,text[1]); MessageToAdmins(-1,string);
	    return false;
	}

	if(text[0] == '-' && (PlayerInfo[playerid][dLevel] >= 1 || PlayerInfo[playerid][VIP] >= 1))
	{
	    new string[900]; GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"{FF6600}» VIP Sohbet >> {FFFF00}%s(%i): %s",getName(playerid),playerid,text[1]); MessageToVIPs(-1,string);
	    return false;
	}

	if(text[0] == '+' &&(PlayerInfo[playerid][dLevel] >= 8))
	{
	    new string[900]; GetPlayerName(playerid,string,sizeof(string));
		format(string,sizeof(string),"{FF0000}» Üst Yönetim Sohbet >> {FFFF00}%s(%i): %s",getName(playerid),playerid,text[1]); MessageToUstYonetim(-1,string);
	    return false;
	}

    if(PlayerInfo[playerid][dLevel] >= 1)
	{
		if(PlayerInfo[playerid][PlayerCeteID] != -1)
		{

			new gsString1[MAX_PLAYER_NAME], qqqqqqq[2048];
			format(qqqqqqq, sizeof(qqqqqqq), "%s", text);
			
			new taggg[128];
			if(PlayerInfo[playerid][dLevel] == 10)
			{
				format(taggg, sizeof(taggg), "%s", (PlayerInfo[playerid][pCEO] == 1) ? ("CEO") : ("OWN"));
			}
			else
			{
			    format(taggg, sizeof(taggg), "OG");
			}

		    foreach(new i: Player)
		    {
			   	format(gsString, 10, "@%d@", i);
				if(strfind(text, gsString) != -1)
				{
				    format(gsString1, MAX_PLAYER_NAME + 1, "%s", getName(i));
					strreplaceID(qqqqqqq, gsString, gsString1);
	        		format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%s {%06x}» %s[%s](%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,taggg,GetPlayerColor(playerid) >>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],playerid,qqqqqqq);
		    		SendClientMessageToAllEx(-1, MMM);
	    			return false;
				}
			}

	        format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%s {%06x}» %s[%s](%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,taggg,GetPlayerColor(playerid) >>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],playerid,text);
		    SendClientMessageToAllEx(-1, MMM);
		    return false;
		}
		else if(PlayerInfo[playerid][PlayerCeteID] == -1)
		{

			new gsString1[MAX_PLAYER_NAME], qqqqqqq[2048];
			format(qqqqqqq, sizeof(qqqqqqq), "%s", text);

			new taggg[128];
			if(PlayerInfo[playerid][dLevel] == 10)
			{
				format(taggg, sizeof(taggg), "%s", (PlayerInfo[playerid][pCEO] == 1) ? ("CEO") : ("OWN"));
			}
			else
			{
			    format(taggg, sizeof(taggg), "OG");
			}

		    foreach(new i: Player)
		    {
			   	format(gsString, 5, "@%d@", i);
				if(strfind(text, gsString) != -1)
				{
				    format(gsString1, MAX_PLAYER_NAME + 1, "%s", getName(i));
					strreplaceID(qqqqqqq, gsString, gsString1);
	        		format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%s {%06x}» %s(%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,taggg,GetPlayerColor(playerid) >>>8,getName(playerid),playerid,qqqqqqq);
		    		SendClientMessageToAllEx(-1, MMM);
	    			return false;
				}
			}

	        format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%s {%06x}» %s(%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,taggg,GetPlayerColor(playerid) >>>8,getName(playerid),playerid,text);
		    SendClientMessageToAllEx(-1, MMM);
		    return false;
		}
	}

    if(PlayerInfo[playerid][VIP] >= 1)
	{
		if(PlayerInfo[playerid][PlayerCeteID] != -1)
		{

			new gsString1[MAX_PLAYER_NAME], qqqqqqq[2048];
			format(qqqqqqq, sizeof(qqqqqqq), "%s", text);

		    foreach(new i: Player)
		    {
			   	format(gsString, 5, "@%d@", i);
				if(strfind(text, gsString) != -1)
				{
				    format(gsString1, MAX_PLAYER_NAME + 1, "%s", getName(i));
					strreplaceID(qqqqqqq, gsString, gsString1);
	        		format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}VIP {%06x}» %s[%s](%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,GetPlayerColor(playerid) >>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],playerid,qqqqqqq);
		    		SendClientMessageToAllEx(-1, MMM);
	    			return false;
				}
			}

	        format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}VIP {%06x}» %s[%s](%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,GetPlayerColor(playerid) >>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],playerid,text);
		    SendClientMessageToAllEx(-1, MMM);
		    return false;
		}
		else if(PlayerInfo[playerid][PlayerCeteID] == -1)
		{

			new gsString1[MAX_PLAYER_NAME], qqqqqqq[2048];
			format(qqqqqqq, sizeof(qqqqqqq), "%s", text);

		    foreach(new i: Player)
		    {
			   	format(gsString, 5, "@%d@", i);
				if(strfind(text, gsString) != -1)
				{
				    format(gsString1, MAX_PLAYER_NAME + 1, "%s", getName(i));
					strreplaceID(qqqqqqq, gsString, gsString1);
	        		format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}VIP {%06x}» %s(%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,GetPlayerColor(playerid) >>>8,getName(playerid),playerid,qqqqqqq);
		    		SendClientMessageToAllEx(-1, MMM);
	    			return false;
				}
			}

	        format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}VIP {%06x}» %s(%i): {FFFFFF}%s",GetPlayerColor(playerid) >>>8,GetPlayerColor(playerid) >>>8,getName(playerid),playerid,text);
		    SendClientMessageToAllEx(-1, MMM);
		    return false;
		}
	}

 	if(PlayerInfo[playerid][dLevel] == 0)
	{
		if(PlayerInfo[playerid][PlayerCeteID] == -1)
		{

			new gsString1[MAX_PLAYER_NAME], qqqqqqq[2048];
			format(qqqqqqq, sizeof(qqqqqqq), "%s", text);

		    foreach(new i: Player)
		    {
			   	format(gsString, 5, "@%d@", i);
				if(strfind(text, gsString) != -1)
				{
				    format(gsString1, MAX_PLAYER_NAME + 1, "%s", getName(i));
					strreplaceID(qqqqqqq, gsString, gsString1);
	        		format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%i {%06x}» %s: {FFFFFF}%s",GetPlayerColor(playerid) >>>8,playerid,GetPlayerColor(playerid) >>>8,getName(playerid),qqqqqqq);
		    		SendClientMessageToAllEx(-1, MMM);
	    			return false;
				}
			}

	        format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%i {%06x}» %s: {FFFFFF}%s",GetPlayerColor(playerid) >>>8,playerid,GetPlayerColor(playerid) >>>8,getName(playerid),text);
		    SendClientMessageToAllEx(-1, MMM);
		    return false;
		}
		else if(PlayerInfo[playerid][PlayerCeteID] != -1)
		{

			new gsString1[MAX_PLAYER_NAME], qqqqqqq[2048];
			format(qqqqqqq, sizeof(qqqqqqq), "%s", text);

		    foreach(new i: Player)
		    {
			   	format(gsString, 5, "@%d@", i);
				if(strfind(text, gsString) != -1)
				{
				    format(gsString1, MAX_PLAYER_NAME + 1, "%s", getName(i));
					strreplaceID(qqqqqqq, gsString, gsString1);
	        		format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%i {%06x}» %s[%s]: {FFFFFF}%s",GetPlayerColor(playerid) >>>8,playerid,GetPlayerColor(playerid) >>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],qqqqqqq);
		    		SendClientMessageToAllEx(-1, MMM);
	    			return false;
				}
			}

	        format(MMM, sizeof(MMM),"{%06x}« {FFFFFF}%i {%06x}» %s[%s]: {FFFFFF}%s",GetPlayerColor(playerid) >>>8,playerid,GetPlayerColor(playerid) >>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],text);
		    SendClientMessageToAllEx(-1, MMM);
		    return false;
		}
	}

	return true;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{

	new modelid = GetVehicleModel(vehicleid);
	if(modelid == 520 || modelid ==  432 || modelid == 425)
	{
		if(PlayerInfo[playerid][GLKredi] < 7)
		{
		    HideModelSelectionMenu(playerid);
			RemovePlayerFromVehicle(playerid);
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(playerid,x,y,z);
		    SetPlayerPos(playerid,x,y,z+1);
		    Hata(playerid, "Bu aracý kullanmak için 7 GLKredi'ye ihtiyacýnýz var!");
	    }
	    else
	    {
	        HideModelSelectionMenu(playerid);
			ShowPlayerDialog(playerid,5598,DIALOG_STYLE_MSGBOX,""safaf"Unique Araç","\\c"ww"Bu aracý kullanmak için 7 GLKredi vermelisiniz.\n\\c"ww"Vermek istiyor musunuz?",""ww"Evet",""ww"Hayýr");
		}
	}

    new String[128];
    format(String,sizeof(String),"~g~%s",GetVehicleName(vehicleid));
    GameTextForPlayer(playerid,String,2000,1);

	return true;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{

	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT && Derbyde[playerid] == true && DerbyBasladi == true)
	{
		destroyVehicle(playerid);
		SCM(playerid, -1, ""safaf"Derby'den "wb"elendiniz.");
		Derbyde[playerid] = false;
		OnPlayerSpawn(playerid);
	}

	if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER && spawnda[playerid] == 1)
	{
	    destroyVehicle(playerid);
	    DestroyVehicle(GetPlayerVehicleID(playerid));
	    Hata(playerid, "Spawn bölgesinde araç almak yasaktýr.");
	}

    if(newstate == 2)
	{
		for(new i = 0; i != sizeof GostergeText; i++)
		{
			TextDrawColor(GostergeText[i], 0x66666644);
			TextDrawShowForPlayer(playerid, GostergeText[i]);
            TextDrawShowForPlayer(playerid, GostergeAsilHiz[playerid]);
		}
	}
	else {
		for(new i = 0; i != sizeof GostergeText; i++)
		{
			TextDrawHideForPlayer(playerid, GostergeText[i]);
            TextDrawHideForPlayer(playerid, GostergeAsilHiz[playerid]);
		}
	}

	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{
	    if(GetPVarInt(playerid, "aracengeli") == 1)
	    {
	        PutPlayerInVehicle(playerid, PlayerInfo[playerid][Arac], 0);
	        Hata(playerid, "Etkinlikte araçtan inmek engellenmiþ.");
	    }

	    if(GetPVarInt(playerid, "motorengeli") == 1)
	    {
			if(GetVehicleModel(PlayerInfo[playerid][Arac]) != 581 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 509 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 481 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 462 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 521 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 463 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 510 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 522 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 461 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 448 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 471 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 468) return true;
	        PutPlayerInVehicle(playerid, PlayerInfo[playerid][Arac], 0);
	        Hata(playerid, "Etkinlikte motordan inmek engellenmiþ.");
	    }

	    if(GetPVarInt(playerid, "mdusme") == 1)
	    {
			if(GetVehicleModel(PlayerInfo[playerid][Arac]) != 581 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 509 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 481 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 462 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 521 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 463 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 510 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 522 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 461 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 448 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 471 &&
			GetVehicleModel(PlayerInfo[playerid][Arac]) != 468) return true;
	        PutPlayerInVehicle(playerid, PlayerInfo[playerid][Arac], 0);
	    }
	}

	if(newstate == PLAYER_STATE_DRIVER)
	{
	    new vid = GetPlayerVehicleID(playerid);
		if(VehInHouseSystem[vid] == true)
		{
		    new carid = VehSystemID[vid];
		    new houseid = CarData[carid][HouseID];
			if(strcmp(HouseData[houseid][Owner], GetName(playerid)))
			{
			    new string[128];
				format(string, sizeof(string), ""safaf"Bu araç{FFFFFF} %s{FFFFFF} adlý kullanýcýya ait!", HouseData[houseid][Owner]);
				SendClientMessage(playerid, -1, string);
				RemovePlayerFromVehicle(playerid);
			}
		}
	}

	if(newstate == PLAYER_STATE_DRIVER)
	{
	    pvehicleid[playerid] = GetPlayerVehicleID(playerid);
	    pmodelid[playerid] = GetVehicleModel(pvehicleid[playerid]);
	}
	else
	{
	    pvehicleid[playerid] = 0;
	    pmodelid[playerid] = 0;
	}

	return true;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(CPrace_duel_cp[playerid] == race_duel_cp1)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp2;
		SetPlayerCheckpoint(playerid, race_duel_cp2_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp2)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp3;
		SetPlayerCheckpoint(playerid, race_duel_cp3_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp3)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp4;
		SetPlayerCheckpoint(playerid, race_duel_cp4_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp4)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp5;
		SetPlayerCheckpoint(playerid, race_duel_cp5_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp5)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp6;
		SetPlayerCheckpoint(playerid, race_duel_cp6_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp6)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp7;
		SetPlayerCheckpoint(playerid, race_duel_cp7_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp7)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp8;
		SetPlayerCheckpoint(playerid, race_duel_cp8_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp8)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp9;
		SetPlayerCheckpoint(playerid, race_duel_cp9_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp9)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp10;
		SetPlayerCheckpoint(playerid, race_duel_cp10_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp10)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp11;
		SetPlayerCheckpoint(playerid, race_duel_cp11_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}
	if(CPrace_duel_cp[playerid] == race_duel_cp11)
	{
		RaceDuelCP[playerid]++;
		CPrace_duel_cp[playerid] = race_duel_cp12;
		SetPlayerCheckpoint(playerid, race_duel_cp12_CO, 20.0);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		return true;
	}

	if(CPrace_duel_cp[playerid] == race_duel_cp12)
	{
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
	    new id = GetPVarInt(playerid, "raceduel_gonderen");
	    new para = GetPVarInt(playerid, "raceduel_para");
	    new skor = GetPVarInt(playerid, "raceduel_skor");
	    
		CPrace_duel_cp[playerid] = 0;
		CPrace_duel_cp[id] = 0;

		SFM(playerid, -1, ""safaf"Race duel'i kazandýnýz! "ad"(+%s$ ve +%s skor)", FormatMoney(para), FormatMoney(skor));
		SFM(id, -1, ""safaf"Race duel'i kaybettiniz. "wb"(-%s$ ve -%s skor)", FormatMoney(para), FormatMoney(skor));
		
		GivePlayerMoney(playerid, para);
		GivePlayerMoney(id, -para);
		
		SetPlayerScore(playerid, GetPlayerScore(playerid) + skor);
		SetPlayerScore(id, GetPlayerScore(id) - skor);
		
		RaceDuelde[id] = false;
		RaceDuelde[playerid] = false;
		
		OnPlayerSpawn(id);
		OnPlayerSpawn(playerid);
		
		DisablePlayerCheckpoint(playerid);
		DisablePlayerCheckpoint(id);
		return true;
	}

    if(Bankada[playerid] == true)
    {
        new str[1024];
        new str2[1024];
        format(str2,sizeof(str2),""ww"{FFFFFF}> Bakiye: $%s\n",FormatMoney(GetPlayerMoney(playerid)));
        strcat(str,""ww"{b2b2b2}Para Yatýr\n");
        strcat(str,""ww"{b2b2b2}Para Çek\n");
        strcat(str,""ww"{b2b2b2}Hesap Durumu\n");
        strcat(str,str2);
        ShowPlayerDialog(playerid,DIALOG_BANKA,DIALOG_STYLE_LIST,""safaf"Banka",str,""ww"Tamam",""ww"Ýptal");
    }

	if(PlayerInfo[playerid][Parkour] == true)
	{
	    new String[128];
	    format(String, sizeof(String), "~r~~h~[PARKOUR] ~w~~h~~h~%s(%i) adli oyuncu Parkouru birinci olarak tamamladi! ~r~~h~(5 skor, $10.000)", getName(playerid), playerid);
		TextMesaji(code(String));
		GivePlayerMoney(playerid, 10000);
		skorver(playerid, 5);
		DisablePlayerCheckpoint(playerid);
		ParkourInfo[Durum] = false;
		foreach(new x: Player)
		{
		    if(!IsPlayerConnected(x)) continue;
		    if(PlayerInfo[x][Parkour] == false) continue;
			OnPlayerSpawn(x);
			DisablePlayerCheckpoint(playerid);
		}
	    return true;
	}

	return true;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return true;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(CPDurum[playerid] == YarisToplamCP)
	{
	    destroyVehicle(playerid);
	    for(new i = 0; i < 4; i++)
	    {
	        TextDrawHideForPlayer(playerid, YarisBilgiText[playerid][i]);
	    }
	    new str[512];
	    YarisBitirmeSayim++;
	    Yarista[playerid] = false;
	    format(str, sizeof(str), "~r~~h~~h~[YARIS] %s(%d) ~w~~h~~h~isimli oyuncu yarisi ~r~~h~~h~%d. ~w~~h~~h~olarak bitirdi!", getName(playerid), playerid, YarisBitirmeSayim);
		TextMesaji(code(str));
		OnPlayerSpawn(playerid);
		CPDurum[playerid] = 1;
		DisablePlayerRaceCheckpoint(playerid);
		new Yaristalar = 0;
		foreach(new i: Player)
		{
		    if(Yarista[i] == true)
		    {
		        Yaristalar++;
		    }
		}
		if(Yaristalar == 0)
		{
		    KillTimer(RaceTextGuncelle_Timer);
		    YarisBasladi = false;
		    YarisAktif = false;
		}
		new dosya[100], Zaman;
		new timestamp;
		timestamp = gettime();
		Zaman = timestamp - RaceZamanTutum[playerid];
		format(dosya, sizeof(dosya), "Yaris/%s.txt", YarisDosyaIsim);
		new top1 = dini_Int(dosya, "Top1");
		new top2 = dini_Int(dosya, "Top2");
		new top3 = dini_Int(dosya, "Top3");
		new top4 = dini_Int(dosya, "Top4");
		new top5 = dini_Int(dosya, "Top5");
		if(Zaman < top1 || top1 == 0)
		{
		    new mesaj[512];
		    format(mesaj, sizeof(mesaj), ""safaf"{%06x}%s(%d), "wb"%s "w"ile "wb"%s "w"map "wb"Top 1 "w"rekorunu kýrdý!", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, ConvertTime(Zaman), YarisIsim);
			SendClientMessageToAll(-1, mesaj);
			dini_IntSet(dosya, "Top1", Zaman);
			dini_Set(dosya, "Top1Isim", getName(playerid));
		}
		else if(Zaman < top2 || top2 == 0)
		{
		    new mesaj[512];
		    format(mesaj, sizeof(mesaj), ""safaf"{%06x}%s(%d), "wb"%s "w"ile "wb"%s "w"map "wb"Top 2 "w"rekorunu kýrdý!", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, ConvertTime(Zaman), YarisIsim);
			SendClientMessageToAll(-1, mesaj);
			dini_IntSet(dosya, "Top2", Zaman);
			dini_Set(dosya, "Top2Isim", getName(playerid));
		}
		else if(Zaman < top3 || top3 == 0)
		{
		    new mesaj[512];
		    format(mesaj, sizeof(mesaj), ""safaf"{%06x}%s(%d), "wb"%s "w"ile "wb"%s "w"map "wb"Top 3 "w"rekorunu kýrdý!", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, ConvertTime(Zaman), YarisIsim);
			SendClientMessageToAll(-1, mesaj);
			dini_IntSet(dosya, "Top3", Zaman);
			dini_Set(dosya, "Top3Isim", getName(playerid));
		}
		else if(Zaman < top4 || top4 == 0)
		{
		    new mesaj[512];
		    format(mesaj, sizeof(mesaj), ""safaf"{%06x}%s(%d), "wb"%s "w"ile "wb"%s "w"map "wb"Top 4 "w"rekorunu kýrdý!", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, ConvertTime(Zaman), YarisIsim);
			SendClientMessageToAll(-1, mesaj);
			dini_IntSet(dosya, "Top4", Zaman);
			dini_Set(dosya, "Top4Isim", getName(playerid));
		}
		else if(Zaman < top5 || top5 == 0)
		{
		    new mesaj[512];
		    format(mesaj, sizeof(mesaj), ""safaf"{%06x}%s(%d), "wb"%s "w"ile "wb"%s "w"map "wb"Top 5 "w"rekorunu kýrdý!", GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, ConvertTime(Zaman), YarisIsim);
			SendClientMessageToAll(-1, mesaj);
			dini_IntSet(dosya, "Top5", Zaman);
			dini_Set(dosya, "Top5Isim", getName(playerid));
		}
	}
	else
	{
		CPDurum[playerid]++;
		CP_Pos[CPDurum[playerid]][3]++;
	    CP_Ayarla(playerid, CPDurum[playerid], CPDurum[playerid] + 1, YarisToplamCP, 0);
	    PlayerPlaySound(playerid, 1137, 0.0, 0.0, 0.0);
	}
	return true;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return true;
}

public OnRconCommand(cmd[])
{
	return true;
}

public OnPlayerRequestSpawn(playerid)
{
    if(PlayerInfo[playerid][Kayitli] == 0)
    {
	    cmd_kayit(playerid,"");
	    return false;
	}

	if(PlayerInfo[playerid][Kayitli] == 1 && PlayerInfo[playerid][Giris] == 0)
    {
        new string[1024];
		format(string,sizeof(string),"\\c"ww"Sunucuya hoþ geldin %s, seni tekrar aramýzda görmek çok güzel!\n\\c"ww"Þifreni yazarak oyuna giriþ yapabilirsin!\n\\c"ww"Þifreni 30 saniye içinde girmezsen sunucudan atýlacaksýn.",getName(playerid));
		ShowPlayerDialog(playerid,DIALOGID0+2,DIALOG_STYLE_PASSWORD,""safaf"Giriþ",string,""ww"Giriþ","");
		KillTimer(kickzamani_timer[playerid]);
		kickzamani_timer[playerid] = SetTimerEx("kickzamani", 30000, false, "d", playerid);
		return false;
    }

	if(caliniyor == 1)
	{
	    PlayAudioStreamForPlayer(playerid, calinanlink);
	}
	else
	{
	    PlayAudioStreamForPlayer(playerid,"http://radyo.dogannet.tv/turkpop");
	}

	SetPlayerTime(playerid, 10, 0);
	
	Attach3DTextLabelToPlayer(siraclabel[playerid], playerid, 0.0, 0.0, 1.2);

	for(new i; i < 5; i++) TextDrawShowForPlayer(playerid, eMessage[1][i]);

	if(PlayerInfo[playerid][skinplayer] != -1)
	{
		SetPlayerSkin(playerid,PlayerInfo[playerid][skinplayer]);
	}

	if(PlayerInfo[playerid][rengim] != 0)
	{
		SetPlayerColor(playerid, PlayerInfo[playerid][rengim]);
	}
	return true;
}

CB: kickzamani(playerid)
{
	if(PlayerInfo[playerid][Giris] == 1) return KillTimer(kickzamani_timer[playerid]);
	else
	{
		if(!IsPlayerConnected(playerid)) return KillTimer(kickzamani_timer[playerid]);
		KillTimer(kickzamani_timer[playerid]);
		kickle(playerid, "30 Saniye icinde sifre girilmedi.");
	}
	return true;
}

CMD:kayit(playerid,params[])
{

    if(PlayerInfo[playerid][Kayitli] == 0)
	{
	    new string[1500];
	    if(PlayerInfo[playerid][Giris] == 1) return Hata(playerid,"Zaten giriþ yapmýþ durumdasýnýz.");
		format(string,sizeof string,"\\c"ww"Merhaba,\n"ww"Dostum sunucu veri tabanýnda kaydýný göremedik eðer sende bu aileye katýlmak istiyorsan sunucumuza 'KAYIT' olmak zorundasýn.\n"ww"Kayýt olduðun zaman artýk sende bizdensin.\n"ww"Sunucuda iyi eðlenceler dileriz.",getName(playerid));
		ShowPlayerDialog(playerid, DIALOGID+99, DIALOG_STYLE_PASSWORD, ""safaf"Kayýt Ol", string,""ww"Kayýt Ol",""ww"Kapat");
  		return true;
    } else return Hata(playerid, "Zaten kayýt olmuþsunuz.");
}

CB: enustkapilarikapat()
{
	MoveDynamicObject(vip_enustkat_solkapi, -2160.2600, 1450.9520, 71.2554, 3.0);
	MoveDynamicObject(vip_enustkat_sagkapi, -2156.57568, 1447.15735, 71.24793, 3.0);
	return true;
}

public OnDynamicObjectMoved(objectid)
{
	if(objectid == vip_anaasansor)
	{
	    AsansorAktif = false;
	    if(AsansorKat == 20)
	    {
		    MoveDynamicObject(vip_enustkat_solkapi, -2162.1636, 1450.9355, 71.2554, 3.0);
		    MoveDynamicObject(vip_enustkat_sagkapi, -2154.0789, 1447.2592, 71.2479, 3.0);
		    SetTimer("enustkapilarikapat", 2000, false);
	    } else if(AsansorKat == 0)
	    {
			MoveDynamicObject(vip_anaasansor_solkapi, -2163.4348, 1450.1400, 7.7594, 3.0);
			MoveDynamicObject(vip_anaasansor_sagkapi, -2155.0962, 1446.4241, 7.7594, 3.0);
			SetTimer("asansorkapat", 2000, false);
	    }
	}
	return true;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return true;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(VehInHouseSystem[vehicleid] == true)
	{
	    new carid = VehSystemID[vehicleid];
		CarData[carid][Components][GetVehicleComponentType(componentid)] = componentid;
	}
	return true;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{

	if(VehInHouseSystem[vehicleid] == true)
	{
	    new carid = VehSystemID[vehicleid];
	    CarData[carid][Color1] = color1;
	    CarData[carid][Color2] = color2;
	}

    SetPVarInt(playerid,"Renk1", color1);
    SetPVarInt(playerid,"Renk2", color2);

	return true;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return true;
}

public OnPlayerExitedMenu(playerid)
{
	return true;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return true;
}

CB: asansorkapat()
{
	MoveDynamicObject(vip_anaasansor_solkapi, -2161.3403, 1450.0873, 7.7594, 3.0);
	MoveDynamicObject(vip_anaasansor_sagkapi, -2157.2961, 1446.3059, 7.7594, 3.0);
	return true;
}

CB: vip_enustkat_sagkapi_kapat(playerid)
{
	SCM(playerid, -1, ""safaf"Kapý kapanýyor...");
	MoveDynamicObject(vip_enustkat_sagdairekapi, -2168.54053, 1437.56177, 69.53742, 1.5);
	return true;
}

CB: vip_enustkat_solkapi_kapat(playerid)
{
	SCM(playerid, -1, ""safaf"Kapý kapanýyor...");
	MoveDynamicObject(vip_enustkat_soldairekapi, -2148.5337, 1437.6335, 69.2528, 1.5);
	return true;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys & KEY_CROUCH && RaceDuelde[playerid] == true && VitesAtabilirsin[playerid] == true && RaceBastim[playerid] == false)
	{
	    KillTimer(RaceBasmaTimer[playerid]);
	    RaceBastim[playerid] = true;
	    RaceVites[playerid]++;
	    RaceBasmaTimer[playerid] = SetTimerEx("racebasma", 1600, false, "d", playerid);
	}

    if(newkeys & KEY_YES && Voteactive == 1)
    {
        if(OyKullandi[playerid] == 1)
        {
            return true;
        }
        OyKullandi[playerid] = 1;
        Yescount++;
        foreach(new i: Player)
        {
	        new str[128];
	        format(str,sizeof(str),"Evet: %d",Yescount);
	        TextDrawSetString(vote7[i],str);
        }
        SCM(playerid,-1,""safaf"Baþarýyla oyunuzu kullandýnýz.");
    }

    if(newkeys & KEY_NO && Voteactive == 1)
    {
        if(OyKullandi[playerid] == 1)
        {
            return true;
        }
        OyKullandi[playerid] = 1;
        Nocount++;
        foreach(new i: Player)
        {
	        new str[128];
	        format(str,sizeof(str),"Hayir: %d",Nocount);
	        TextDrawSetString(vote8[i],str);
        }
        SCM(playerid,-1,""safaf"Baþarýyla oyunuzu kullandýnýz.");
    }

    if(EkstraZiplama[playerid] == true && Derbyde[playerid] == false && lEtkinlikte[playerid] == 0 && Zombiede[playerid] == 0 && CSDe[playerid] == 0 && GunGamedeAmk[playerid] == false && HungerGamede[playerid] == 0 && Speedydeaglede[playerid] == false)
    {
        if(PRESSED(KEY_JUMP))
        {
            if(spamProtect(playerid, "oJump", 5)) return true;
            new Float: P[3];
            GetPlayerPos(playerid, P[0], P[1], P[2]);
            GetPlayerVelocity(playerid, P[0], P[1], P[2]);
            SetPlayerVelocity(playerid, P[0], P[1], P[2] + 5.0);
        }
    }

	if(IsPlayerInAnyVehicle(playerid) && wshizlanma[playerid] == true)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
	    if(newkeys & 40 && oldkeys ^ 40) vJumpAngular[playerid] = GetTickCount();
	    if(newkeys & 8 && oldkeys && 8 && oldkeys & 32 && !(newkeys & 32) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	    	new Float:Xv, Float:Yv, Float:Zv, Float:absV;
	        GetVehicleVelocity(vehicleid, Xv, Yv, Zv);
	        absV = floatsqroot((Xv * Xv) + (Yv * Yv) + (Zv * Zv));

	    	if(absV < 0.04)
	    	{
	        	new Float:Zangle, Float:mp = floatdiv(GetTickCount() - vJumpAngular[playerid], 3000.0);
	        	if(mp > 2.0) mp = 2.0;
	            GetVehicleZAngle(vehicleid, Zangle);
	            Xv = (0.07 * floatsin(Zangle, degrees) * mp);
	            Yv = (0.07 * floatcos(Zangle, degrees) * mp);
	        	SetVehicleAngularVelocity(vehicleid, Yv, Xv, 0);
	            Xv = (0.23 * floatcos(Zangle, degrees) * mp);
	            Yv = (-0.23 * floatsin(Zangle, degrees) * mp);
	        	SetVehicleVelocity(vehicleid, Yv*2, Xv*2, 0);
	        }
	    }
	}

	if(newkeys & KEY_YES) // - Y ile daire kapýsý açma
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2, -2168.54053, 1437.56177, 69.53742))
	    {
	        if(PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][DaireIzin] != 1) return true;
	        MoveDynamicObject(vip_enustkat_sagdairekapi, -2168.54053, 1434.56177, 69.53742, 1.5);
	        SCM(playerid, -1, ""safaf"Kapý açýlýyor...");
	        SetTimerEx("vip_enustkat_sagkapi_kapat", 2500, false, "d", playerid);
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 2, -2148.5337, 1437.6335, 69.2528))
	    {
	        if(PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][DaireIzin] != 1) return true;
	        MoveDynamicObject(vip_enustkat_soldairekapi, -2148.6118, 1440.5549, 69.2528, 1.5);
	        SCM(playerid, -1, ""safaf"Kapý açýlýyor...");
	        SetTimerEx("vip_enustkat_solkapi_kapat", 2500, false, "d", playerid);
	    }
	}

	if(newkeys & KEY_YES) // - Y ile asansöre binme
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3, -2157.3411, 1447.5414, 5.8281))
	    {
	        if(PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][DaireIzin] != 1) return true;
	        if(AsansorAktif == true) return Hata(playerid, "Asansör baþkasý tarafýndan kullanýmda, lütfen bekleyiniz.");
	        SetDynamicObjectPos(vip_anaasansor, -2159.36719, 1450.12793, 7.75996);
	        MoveDynamicObject(vip_anaasansor_solkapi, -2163.4348, 1450.1400, 7.7594, 3.0);
	        MoveDynamicObject(vip_anaasansor_sagkapi, -2155.0962, 1446.4241, 7.7594, 3.0);
	        SetTimer("asansorkapat", 2000, false);
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3, -2156.6272, 1448.1221, 69.2705))
	    {
	        if(PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][DaireIzin] != 1) return true;
	        if(AsansorAktif == true) return Hata(playerid, "Asansör baþkasý tarafýndan kullanýmda, lütfen bekleyiniz.");
	    	SetDynamicObjectPos(vip_anaasansor, -2158.5466, 1451.1968, 71.1809);
		    MoveDynamicObject(vip_enustkat_solkapi, -2162.1636, 1450.9355, 71.2554, 3.0);
		    MoveDynamicObject(vip_enustkat_sagkapi, -2154.0789, 1447.2592, 71.2479, 3.0);
	        SetTimer("enustkapilarikapat", 2000, false);
	    }
	}

	if(newkeys & KEY_NO) // - N ile asansör katý seçme
	{
	    if(PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][DaireIzin] != 1) return true;
	    if(IsPlayerInRangeOfPoint(playerid, 3, -2157.3269, 1450.0746, 5.8340))
	    {
	        ShowPlayerDialog(playerid, DIALOG_ASANSOR, DIALOG_STYLE_LIST, ""safaf"Asansör Kat Menüsü", ""ww"Kat 20\n"ww"Kat 0", ""ww"Git", ""ww"Kapat");
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3, -2156.9919,1450.3467,70.3809))
	    {
	        ShowPlayerDialog(playerid, DIALOG_ASANSOR, DIALOG_STYLE_LIST, ""safaf"Asansör Kat Menüsü", ""ww"Kat 20\n"ww"Kat 0", ""ww"Git", ""ww"Kapat");
	    }
	}

    if(Player_Fire_Enabled[playerid])
    {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
            new vehicleid = GetPlayerVehicleID(playerid);
            if(vehicleid)
            {
                new vehicle_modelid = GetVehicleModel(vehicleid);
                if(FIRE_INFO[vehicle_modelid - 400][fire_VALID])
                {
                    if(PRESSED(KEY_SPRINT))
                    {
                        Player_Key_Sprint_Time[playerid] = gettime();
                    }
                    else if(RELEASED(KEY_SPRINT))
                    {
                        if(gettime() - Player_Key_Sprint_Time[playerid] > 2)
                        {
                            PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);

                            new effect_object = CreateObject(18695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), effect_object2 = -1;
                            AttachObjectToVehicle
                            (
                                effect_object, vehicleid,
                                FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_X], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Y], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Z],
                                FIRE_INFO[vehicle_modelid - 400][fire_ROT_X], FIRE_INFO[vehicle_modelid - 400][fire_ROT_Y], FIRE_INFO[vehicle_modelid - 400][fire_ROT_Z]
                            );

                            if(FIRE_INFO[vehicle_modelid - 400][fire_MIRROR])
                            {
                                effect_object2 = CreateObject(18695, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
                                AttachObjectToVehicle
                                (
                                    effect_object2, vehicleid,
                                    -FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_X], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Y], FIRE_INFO[vehicle_modelid - 400][fire_OFFSET_Z],
                                    FIRE_INFO[vehicle_modelid - 400][fire_ROT_X], -FIRE_INFO[vehicle_modelid - 400][fire_ROT_Y], -FIRE_INFO[vehicle_modelid - 400][fire_ROT_Z]
                                );
                            }

                            SetTimerEx("DestroyEffectObject", 100, false, "ii", effect_object, effect_object2);
                        }
                    }
                }
            }
        }
    }

    if(newkeys & KEY_SECONDARY_ATTACK && IsPlayerInRangeOfPoint(playerid,1.0,2315.4834,0.3538,26.7422))
    {
        destroyVehicle(playerid);
        SetPlayerPos(playerid,2151.2756,1479.9473,10.8203);
        SetPlayerVirtualWorld(playerid,0);
        DisablePlayerCheckpoint(playerid);
        SetCameraBehindPlayer(playerid);
        Bankada[playerid] = false;
        SCM(playerid,-1,""safaf"Bankadan ayrýldýnýz.");
    }

    if(newkeys & KEY_SECONDARY_ATTACK && IsPlayerInRangeOfPoint(playerid,1.0,2153.3083,1479.9667,10.8203))
    {
        destroyVehicle(playerid);
        SetPlayerPos(playerid,2315.1904,-1.0316,26.7422);
        SetCameraBehindPlayer(playerid);
        SetPlayerVirtualWorld(playerid,77);
        DisablePlayerCheckpoint(playerid);
		SetPlayerCheckpoint(playerid, 2310.6328,-8.1294,26.7422, 1.0);
		Bankada[playerid] = true;
        SCM(playerid,-1,""safaf"Bankaya hoþgeldiniz.");
    }

    if(newkeys == KEY_CTRL_BACK && spawnda[playerid] == 1)
    {
        if(spamProtect(playerid,"cz",25))
        {
            return true;
        }
        SetPlayerHealth(playerid, 100.0);
        SetPlayerArmour(playerid, 100.0);
        GameTextForPlayer(playerid,"~p~Can ~r~+ ~p~Zirh",2500,4);
    }

	if(newkeys & KEY_FIRE && IsPlayerInAnyVehicle(playerid) && hizacik[playerid] == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(lKatildim[playerid] == 1) return true;
	    if(Derbyde[playerid] == true) return true;
	    if(lEtkinlikte[playerid] == 1) return true;
	    if(Yarista[playerid] == true) return true;
		if(RaceDuelde[playerid] == true) return true;
		if(spamProtect(playerid,"speed",3)) return true;
	    new Float:vx,Float:vy,Float:vz;
	    GetVehicleVelocity(GetPlayerVehicleID(playerid),vx,vy,vz);
	    SetVehicleVelocity(GetPlayerVehicleID(playerid),vx*5,vy*5,vz);
	    return true;
	}

	if(newkeys & KEY_CROUCH && IsPlayerInAnyVehicle(playerid) && ziplamaacik[playerid] == true && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(lKatildim[playerid] == 1) return true;
	    if(lEtkinlikte[playerid] == 1) return true;
	    if(Derbyde[playerid] == true) return true;
	    if(Yarista[playerid] == true) return true;
		if(RaceDuelde[playerid] == true) return true;
	    if(spamProtect(playerid,"jump",3)) return true;
	    new Float:vx,Float:vy,Float:vz;
	    GetVehicleVelocity(GetPlayerVehicleID(playerid),vx,vy,vz);
	    SetVehicleVelocity(GetPlayerVehicleID(playerid),vx,vy,vz+1);
	    return true;
	}

 	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
		if(newkeys == KEY_JUMP) AdvanceSpectate(playerid);
		else if(newkeys == KEY_SPRINT) ReverseSpectate(playerid);
	}

    if(newkeys & KEY_YES && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid,"Araçta olmalýsýn.");
    	if(lKatildim[playerid] == 1) return true;
    	if(lEtkinlikte[playerid] == 1) return true;
	    if(Derbyde[playerid] == true) return true;
    	new Float:angle;
        GetVehicleZAngle(GetPlayerVehicleID(playerid),angle);
        SetVehicleZAngle(GetPlayerVehicleID(playerid),angle);
        return true;
	}

	if(isCbug[playerid] == 1)
	{
		if(GetPlayerWeapon(playerid) == 24)
		{
		    if(GetPlayerAmmo(playerid) == 7 && PRESSED(KEY_FIRE))
			{
			    ccount[0][playerid] = GetTickCount();
                disparou[playerid] = true;
			}
			else if(RELEASED(KEY_FIRE))
			{
			    if(GetPlayerAmmo(playerid) == 0)
			    {
					ccount[1][playerid] = GetTickCount();
					ccount[2][playerid] = ccount[1][playerid] - ccount[0][playerid];
					ccount[3][playerid] = ccount[2][playerid] / 1000;
					disparou[playerid] = false;
					format(sstr, sizeof(sstr), "~r~C-Bug Zamani~w~~h~~h~:~n~%0.4f~y~s", ccount[3][playerid]);
					GameTextForPlayer(playerid, sstr, 2000, 4);
					format(str1, sizeof(str1), "{FF0000}C-Bug Zamaný{FFFFFF}: %0.4f{FFFF00}s", ccount[3][playerid]);
					Msg(playerid, -1, str1);

					// Y_INI
                    INI_ParseFile(fileToWrite,"ini_%s_%s");
					if(ccount[3][playerid] < tops[4])
					{
					    new INI:iniFile = INI_Open(fileToWrite);
                        new nick[MAX_PLAYER_NAME+1];
                        format(nick, sizeof(nick), GetPlayerN(playerid));

                        if(ccount[3][playerid] < tops[0])
                        {
                            INI_SetTag(iniFile, "tempos");
							INI_WriteFloat(iniFile, "1", ccount[3][playerid], 4);
							INI_WriteFloat(iniFile, "2", tops[0], 4);
							INI_WriteFloat(iniFile, "3", tops[1], 4);
							INI_WriteFloat(iniFile, "4", tops[2], 4);
							INI_WriteFloat(iniFile, "5", tops[3], 4);
                            INI_SetTag(iniFile, "jogadores");
							INI_WriteString(iniFile, "j1", nick);
							INI_WriteString(iniFile, "j2", jogtops[0]);
							INI_WriteString(iniFile, "j3", jogtops[1]);
							INI_WriteString(iniFile, "j4", jogtops[2]);
							INI_WriteString(iniFile, "j5", jogtops[3]);

                            format(str1, sizeof(str1), "[CBug-Zamaný] {00FF00}%s{FFFFFF} þuanda {00FF00}1.sýrada{FFFFFF} þu süre ile : {00FF00}%0.4f{FFFFFF} saniye!", nick, ccount[3][playerid]);
			    			MsgAll(0xFF0000FF, str1);
			    			INI_Close(iniFile);
						}
          				else if(ccount[3][playerid] < tops[1])
                        {
                            INI_SetTag(iniFile, "tempos");
							INI_WriteFloat(iniFile, "2", ccount[3][playerid], 4);
							INI_WriteFloat(iniFile, "3", tops[1], 4);
							INI_WriteFloat(iniFile, "4", tops[2], 4);
							INI_WriteFloat(iniFile, "5", tops[3], 4);
	                        INI_SetTag(iniFile, "jogadores");
							INI_WriteString(iniFile, "j2", nick);
							INI_WriteString(iniFile, "j3", jogtops[1]);
							INI_WriteString(iniFile, "j4", jogtops[2]);
							INI_WriteString(iniFile, "j5", jogtops[3]);

							format(str1, sizeof(str1), "[CBug-Zamaný] {00FF00}%s{FFFFFF} þuanda {00FF00}2.sýrada{FFFFFF} þu süre ile : {00FF00}%0.4f{FFFFFF} saniye!", nick, ccount[3][playerid]);
				    		MsgAll(0xFF0000FF, str1);
				    		INI_Close(iniFile);
						}
      					else if(ccount[3][playerid] < tops[2])
                        {
                        	INI_SetTag(iniFile, "tempos");
							INI_WriteFloat(iniFile, "3", ccount[3][playerid], 4);
							INI_WriteFloat(iniFile, "4", tops[2], 4);
							INI_WriteFloat(iniFile, "5", tops[3], 4);
                            INI_SetTag(iniFile, "jogadores");
							INI_WriteString(iniFile, "j3", nick);
							INI_WriteString(iniFile, "j4", jogtops[2]);
							INI_WriteString(iniFile, "j5", jogtops[3]);

							format(str1, sizeof(str1), "[CBug-Zamaný] {00FF00}%s{FFFFFF} þuanda {00FF00}3.sýrada{FFFFFF} þu süre ile : {00FF00}%0.4f{FFFFFF} saniye!", nick, ccount[3][playerid]);
					    	MsgAll(0xFF0000FF, str1);
					    	INI_Close(iniFile);
						}
						else if(ccount[3][playerid] < tops[3])
                        {
                            INI_SetTag(iniFile, "tempos");
							INI_WriteFloat(iniFile, "4", ccount[3][playerid], 4);
							INI_WriteFloat(iniFile, "5", tops[3], 4);
                            INI_SetTag(iniFile, "jogadores");
							INI_WriteString(iniFile, "j4", nick);
							INI_WriteString(iniFile, "j5", jogtops[3]);

							format(str1, sizeof(str1), "[CBug-Zamaný] {00FF00}%s{FFFFFF} þuanda {00FF00}4.sýrada{FFFFFF} þu süre ile : {00FF00}%0.4f{FFFFFF} saniye!", nick, ccount[3][playerid]);
						    MsgAll(0xFF0000FF, str1);
						    INI_Close(iniFile);
						}
						else
						{
							INI_SetTag(iniFile, "tempos");
							INI_WriteFloat(iniFile, "5", ccount[3][playerid], 4);
	                        INI_SetTag(iniFile, "jogadores");
							INI_WriteString(iniFile, "j5", nick);

							format(str1, sizeof(str1), "[CBug-Zamaný] {00FF00}%s{FFFFFF} þuanda {00FF00}5.sýrada{FFFFFF} þu süre ile : {00FF00}%0.4f{FFFFFF} saniye!", nick, ccount[3][playerid]);
							MsgAll(0xFF0000FF, str1);

							INI_Close(iniFile);
						}
					}

					// Y_INI
					ccount[0][playerid] = 0; ccount[1][playerid] = 0; ccount[2][playerid] = 0; ccount[3][playerid] = 0;
					WaitReset(playerid);
				}
			}

		}
	}

    if(newkeys & KEY_LOOK_BEHIND && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(lEtkinlikte[playerid] == 1) return true;
	    if(lKatildim[playerid] == 1) return true;
	    if(Derbyde[playerid] == true) return true;
        if(!IsNosVehicle(GetPlayerVehicleID(playerid)))
		{
			RepairVehicle(GetPlayerVehicleID(playerid));
			GameTextForPlayer(playerid,"~r~~h~TAMIR EDILDI!",1000,3);
			PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		}
		AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
        RepairVehicle(GetPlayerVehicleID(playerid));
        if(PlayerInfo[playerid][GodCar] == 1) SetVehicleHealth(GetPlayerVehicleID(playerid),1000000);
        GameTextForPlayer(playerid,"~n~~n~~n~~r~~h~10X NOS ~w~~h~~h~+ ~r~~h~TAMIR",1000,3);
        PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		return true;
    }

	return true;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(success)
	{
	    foreach(new i: Player)
	    {
	        if(!strcmp(ip, getIp(i)))
	        {
	            ShowPlayerDialog(i, DIALOG_RCON, DIALOG_STYLE_INPUT, ""safaf"Rcon Güvenlik Sorusu", ""ww"NABER KANKS", ""ww"Cevapla", ""ww"Ban");
	        }
	    }
	}
	return true;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(hitid == playerid) return false;
	if(weaponid < 22 || weaponid > 38) return false;
	if(fX != fX || fY != fY || fZ != fZ)
	{
	    kickle(playerid, "Crash to Weapon");
	    return false;
	}
    if(!IsPlayerInAnyVehicle(playerid))
	{
		switch(weaponid)
		{
			case 27, 23, 25, 29, 30, 31, 33, 24, 38:
			{
				if(CheckSpeed(playerid))
				{
					if(gettime() - LastInfractionTime[playerid] >= AUTOBULLET_RESET_DELAY) AutoBulletInfractions[playerid] = 1;
					else AutoBulletInfractions[playerid]++;
					LastInfractionTime[playerid] = gettime();

					if(AutoBulletInfractions[playerid] == MAX_AUTOBULLET_INFRACTIONS)
					{
                        AutoBulletInfractions[playerid] = 0;
						CallLocalFunction("OnAntiCheatAutoBullet", "ii", playerid, weaponid);
						return false;
					}
				}
			}
		}
	}
    if(hittype != BULLET_HIT_TYPE_NONE)
    {
		if((fX <= -1000.0 || fX >= 1000.0) || (fY <= -1000.0 || fY >= 1000.0) || (fZ <= -1000.0 || fZ >= 1000.0) || ((hittype != BULLET_HIT_TYPE_PLAYER) && (hittype != BULLET_HIT_TYPE_VEHICLE) && (hittype != BULLET_HIT_TYPE_OBJECT) && (hittype != BULLET_HIT_TYPE_PLAYER_OBJECT)))
		{
			kickle(playerid, "Bullet Crash");
			return false;
		}
    }
	else
	{
        if(weaponid <= 0 || weaponid > 46) {kickle(playerid, "Bullet Crash 2"); return false; }
    }

	if(GetServerTickRate() < 100)
		return true;

	/*new
		magsize = WeaponMagSizes[weaponid - 22],
		weaponstate = GetPlayerWeaponState(playerid);

	PlayerShotCounter[playerid]++;

	if(PlayerSkillLevel[playerid] == 999)
	{
		if(weaponid == 22 || weaponid == 26 || weaponid == 28 || weaponid == 32)
			magsize *= 2;
	}

	if(PlayerShotCounter[playerid] == magsize && magsize > 1)
	{
		if(weaponstate != 1)
		{
			PlayerNoReloadInfractions[playerid]++;

			//if(PlayerNoReloadInfractions[playerid] == MAX_NORELOAD_INFRACTIONS)
				//CallLocalFunction("OnAntiCheatNoReload", "ii", playerid, PlayerShotCounter[playerid]);
		}
		else
		{
			PlayerShotCounter[playerid] = 0;
		}
		return false;
	}*/

	/*new
		interval = GetTickCountDifference(PlayerLastShotTick[playerid], GetTickCount()),
		weaponshotinterval = WeaponShotIntervals[weaponid - 22] - 20;

	if(PlayerSkillLevel[playerid] == 999)
	{
		switch(weaponid)
		{
			case 22: weaponshotinterval = 185;
			case 26: weaponshotinterval = 140;
			case 28: weaponshotinterval = 35;
			case 32: weaponshotinterval = 35;
		}
	}

	if(weaponid == 24)
	{
		if(GetTickCountDifference(PlayerLastCrouchTick[playerid], GetTickCount()) < 600)
			weaponshotinterval = 100;
	}

	if(interval < weaponshotinterval)
	{
		PlayerRapidFireInfractions[playerid]++;

		if(PlayerRapidFireInfractions[playerid] == MAX_NORELOAD_INFRACTIONS)
		{
			PlayerRapidFireInfractions[playerid] = 0;
			//CallLocalFunction("OnAntiCheatFireRate", "ddd", playerid, weaponid, interval);
		}
		return false;
	}
	PlayerLastShotTick[playerid] = GetTickCount();*/
	
	if(dmde[playerid] == 0)
	{
		if(weaponid == 38 || weaponid == 35 || weaponid == 36)
		{
			ResetPlayerWeapons(playerid);
			SendClientMessage(playerid, -1, ""safaf"Bu silahýn kullanýmý yasaktýr.");
			return false;
		}
	}
	return true;
}

public OnPlayerUpdate(playerid)
{
	static lastweapon;
	new currentweapon = GetPlayerWeapon(playerid);

	if(lastweapon != currentweapon)
	{
		PlayerShotCounter[playerid] = 0;
		lastweapon = currentweapon;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new Float: vec[3];
		GetPlayerCameraFrontVector(playerid, vec[0], vec[1], vec[2]);
		for(new i = 0; i < sizeof(vec); i++)
			if(floatabs(vec[i]) > 10.0) return false;
	}
	new keys[3];
	GetPlayerKeys(playerid, keys[0], keys[1], keys[2]);
	if(keys[0] & KEY_FIRE)
	{
	    new Float: cPos[3];
	    GetPlayerCameraPos(playerid, cPos[0], cPos[1], cPos[2]);
	    if(floatabs(cPos[0]) > 99999.0 || floatabs(cPos[1]) > 99999.0 || floatabs(cPos[2]) > 99999.0)
	    {
	        kickle(playerid, "Weapon Crash");
	        return false;
	    }
	}

	new vehid = GetPlayerVehicleID(playerid);
	if(vehid > 0 && vehid != INVALID_VEHICLE_ID)
	{
	    if(vehid != GetPVarInt(playerid, "LastVehID"))
	    {
	        if(GetTickCount() - GetPVarInt(playerid, "VehChangeTime") < 1000)
	        {
	            SetPVarInt(playerid, "VehChange", GetPVarInt(playerid, "VehChange") + 1);
	            if(GetPVarInt(playerid, "VehChange") > 5)
	            {
					SetPVarInt(playerid, "suphe7", GetPVarInt(playerid, "suphe7") + 1);
					if(GetPVarInt(playerid, "suphe7") >= 6) kickle(playerid, "Troll Hack");
					SetPVarInt(playerid, "VehChange",1);
	                return false;
	            }
	        }
	        else SetPVarInt(playerid, "VehChange",1);
			SetPVarInt(playerid, "LastVehID", vehid);
			return true;
	    }
	    SetPVarInt(playerid, "VehChangeTime", GetTickCount());
	} else SetPVarInt(playerid, "VehChangeTime", GetTickCount());
    
	if(Speedydeaglede[playerid] == true && !IsPlayerInArea(playerid,1552.8579,1156.5227,1619.6653,1221.9309))
	{
	    Hata(playerid, "Lütfen bölgenin dýþýna çýkmayýn.");
	    SetPlayerPos(playerid, 1580.6970,1177.9991,10.8125);
	}

	if (GetPVarInt(playerid, "laser")) {
	                RemovePlayerAttachedObject(playerid, 0);
	                if ((IsPlayerInAnyVehicle(playerid)) || (IsPlayerInWater(playerid))) return true;
	                switch (GetPlayerWeapon(playerid)) {
	                        case 23: {
	                                if (IsPlayerAiming(playerid)) {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP standing aiming
	                                                0.108249, 0.030232, 0.118051, 1.468254, 350.512573, 364.284240);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP crouched aiming
	                                                0.108249, 0.030232, 0.118051, 1.468254, 349.862579, 364.784240);
	                                        }
	                                } else {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP standing not aiming
	                                                0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SP crouched not aiming
	                                                0.078248, 0.027239, 0.113051, -11.131746, 350.602722, 362.384216);
	                        }       }       }
	                        case 27: {
	                                if (IsPlayerAiming(playerid)) {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS standing aiming
	                                                0.588246, -0.022766, 0.138052, -11.531745, 347.712585, 352.784271);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS crouched aiming
	                                                0.588246, -0.022766, 0.138052, 1.468254, 350.712585, 352.784271);
	                                        }
	                                } else {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS standing not aiming
	                                                0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // SPAS crouched not aiming
	                                                0.563249, -0.01976, 0.134051, -11.131746, 351.602722, 351.384216);
	                        }       }       }
	                        case 30: {
	                                if (IsPlayerAiming(playerid)) {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK standing aiming
	                                                0.628249, -0.027766, 0.078052, -6.621746, 352.552642, 355.084289);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK crouched aiming
	                                                0.628249, -0.027766, 0.078052, -1.621746, 356.202667, 355.084289);
	                                        }
	                                } else {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK standing not aiming
	                                                0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK crouched not aiming
	                                                0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
	                        }       }       }
	                        case 31: {
	                                if (IsPlayerAiming(playerid)) {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing aiming
	                                                0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched aiming
	                                                0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
	                                        }
	                                } else {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing not aiming
	                                                0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched not aiming
	                                                0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
	                        }       }       }
				case 34: {
					if (IsPlayerAiming(playerid)) {
						/*if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
							SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper standing aiming
							0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
						} else {
							SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper crouched aiming
							0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
						}*/
						return true;
					} else {
						if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
							SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper standing not aiming
							0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
						} else {
							SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // Sniper crouched not aiming
							0.658248, -0.03276, 0.133051, -11.631746, 355.302673, 353.584259);
				}	}	}
	                        case 29: {
	                                if (IsPlayerAiming(playerid)) {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing aiming
	                                                0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched aiming
	                                                0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
	                                        }
	                                } else {
	                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing not aiming
	                                                0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
	                                        } else {
	                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched not aiming
	                                                0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
	        }       }       }       }       }

	if(Eglence[playerid] == false && GetPVarInt(playerid, "laser") == 0)
	{
		if(GetTickCount() - armedbody_pTick[playerid] > 113){
			new
				weaponid[13],weaponammo[13],pArmedWeapon;
			pArmedWeapon = GetPlayerWeapon(playerid);
			GetPlayerWeaponData(playerid,1,weaponid[1],weaponammo[1]);
			GetPlayerWeaponData(playerid,2,weaponid[2],weaponammo[2]);
			GetPlayerWeaponData(playerid,4,weaponid[4],weaponammo[4]);
			GetPlayerWeaponData(playerid,5,weaponid[5],weaponammo[5]);
			#if ARMEDBODY_USE_HEAVY_WEAPON
			GetPlayerWeaponData(playerid,7,weaponid[7],weaponammo[7]);
			#endif
			if(weaponid[1] && weaponammo[1] > 0){
				if(pArmedWeapon != weaponid[1]){
					if(!IsPlayerAttachedObjectSlotUsed(playerid,0)){
						SetPlayerAttachedObject(playerid,0,GetWeaponModel(weaponid[1]),1, 0.199999, -0.139999, 0.030000, 0.500007, -115.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					}
				}
				else {
					if(IsPlayerAttachedObjectSlotUsed(playerid,0)){
						RemovePlayerAttachedObject(playerid,0);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,0)){
				RemovePlayerAttachedObject(playerid,0);
			}
			if(weaponid[2] && weaponammo[2] > 0){
				if(pArmedWeapon != weaponid[2]){
					if(!IsPlayerAttachedObjectSlotUsed(playerid,1)){
						SetPlayerAttachedObject(playerid,1,GetWeaponModel(weaponid[2]),8, -0.079999, -0.039999, 0.109999, -90.100006, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					}
				}
				else {
					if(IsPlayerAttachedObjectSlotUsed(playerid,1)){
						RemovePlayerAttachedObject(playerid,1);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,1)){
				RemovePlayerAttachedObject(playerid,1);
			}
			if(weaponid[4] && weaponammo[4] > 0){
				if(pArmedWeapon != weaponid[4]){
					if(!IsPlayerAttachedObjectSlotUsed(playerid,2)){
						SetPlayerAttachedObject(playerid,2,GetWeaponModel(weaponid[4]),7, 0.000000, -0.100000, -0.080000, -95.000000, -10.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					}
				}
				else {
					if(IsPlayerAttachedObjectSlotUsed(playerid,2)){
						RemovePlayerAttachedObject(playerid,2);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,2)){
				RemovePlayerAttachedObject(playerid,2);
			}
			if(weaponid[5] && weaponammo[5] > 0){
				if(pArmedWeapon != weaponid[5]){
					if(!IsPlayerAttachedObjectSlotUsed(playerid,3)){
						SetPlayerAttachedObject(playerid,3,GetWeaponModel(weaponid[5]),1, 0.200000, -0.119999, -0.059999, 0.000000, 206.000000, 0.000000, 1.000000, 1.000000, 1.000000);
					}
				}
				else {
					if(IsPlayerAttachedObjectSlotUsed(playerid,3)){
						RemovePlayerAttachedObject(playerid,3);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,3)){
				RemovePlayerAttachedObject(playerid,3);
			}
			#if ARMEDBODY_USE_HEAVY_WEAPON
			if(weaponid[7] && weaponammo[7] > 0){
				if(pArmedWeapon != weaponid[7]){
					if(!IsPlayerAttachedObjectSlotUsed(playerid,4)){
						SetPlayerAttachedObject(playerid,4,GetWeaponModel(weaponid[7]),1,-0.100000, 0.000000, -0.100000, 84.399932, 112.000000, 10.000000, 1.099999, 1.000000, 1.000000);
					}
				}
				else {
					if(IsPlayerAttachedObjectSlotUsed(playerid,4)){
						RemovePlayerAttachedObject(playerid,4);
					}
				}
			}
			else if(IsPlayerAttachedObjectSlotUsed(playerid,4)){
				RemovePlayerAttachedObject(playerid,4);
			}
			#endif
			armedbody_pTick[playerid] = GetTickCount();
		}
	}
	
	new drunk2 = GetPlayerDrunkLevel(playerid);
	if(drunk2 < 100)
	{
		SetPlayerDrunkLevel(playerid, 2000);
	}
	else
	{
		if(DLlast[playerid] != drunk2)
		{
			new fps = DLlast[playerid] - drunk2;

			if((fps > 0) &&(fps < 200))
			FPS2[playerid] = fps;
			DLlast[playerid] = drunk2;
		}
	}

	if(dmde[playerid] == 0)
	{
		if(GetPlayerWeapon(playerid) == 38 || GetPlayerWeapon(playerid) == 35 || GetPlayerWeapon(playerid) == 36)
		{
			ResetPlayerWeapons(playerid);
			SendClientMessage(playerid, -1, ""safaf"Bu silahýn kullanýmý yasaktýr.");
		}
	}
	return true;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return true;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return true;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return true;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return true;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(GetPVarInt(playerid, "AntiFloodDialogflareoNNN") > GetTickCount())
	{
		if(dialogflood{playerid} > 6)
		{
			kickle(playerid, "Dialog Flood");
			return true;
		}
		dialogflood{playerid}++;
	} else {
		dialogflood{playerid} = 0;
	}
	SetPVarInt(playerid, "AntiFloodDialogflareoNNN", GetTickCount() + 300);

	if(dialogid == DIALOG_DUKKANIM)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0..5: return cmd_dukkanim(playerid, "");
	            case 7: return cmd_dukkanim(playerid, "");
	            case 6:
	            {
					new id = PlayerInfo[playerid][dukkanivar];
					if(DukkanInfo[id][dMevcut] == false) return Hata(playerid, "Bu ID'de bir dükkan yok.");
					if(PlayerInfo[playerid][dukkanivar] != id) return Hata(playerid, "Bu dükkan size ait deðil.");
					if(DukkanInfo[id][dBirikenPara] == 0) return Hata(playerid, "Dükkanda hiç para birikmemiþ.");
					if(PlayerInfo[playerid][onlinet] < 43200) return Hata(playerid, "Dükkandan para çekebilmek için en az 12 saat online süreniz olmalý.");
					if(spamProtect(playerid, "dukkancek", 30)) return true;
					else {
					    GivePlayerMoney(playerid, DukkanInfo[id][dBirikenPara]);
					    SFM(playerid, -1, ""safaf"Dükkanýnýzda biriken "ad"%s$ "w"parayý baþarýyla çektiniz.", FormatMoney(DukkanInfo[id][dBirikenPara]));
					    DukkanInfo[id][dBirikenPara] = 0;
					    new sql[500];
					    format(sql, sizeof(sql), "UPDATE `dukkanlar` SET `birikenpara` = '0' WHERE `sahip` = '%d'", PlayerInfo[playerid][sqlid]);
					    mysql_query(mysqlC, sql);
					    DukkanLabelGuncelle(id);
					}
	            }
	            case 8:
	            {
					new id = PlayerInfo[playerid][dukkanivar];
				    if(id == -1) return Hata(playerid, "Bir dükkanýnýz yok!");
				    if(DukkanInfo[id][dMevcut] == false) return Hata(playerid, "Bu ID'de bir dükkan mevcut deðil.");
				    if(PlayerInfo[playerid][dukkanivar] != id) return Hata(playerid, "Bu dükkan sizin deðil.");
				    if(PlayerInfo[playerid][dukkanivar] == -1) return Hata(playerid, "Zaten bir dükkanýnýz yok.");
				    if(PlayerInfo[playerid][onlinet] < 43200) return Hata(playerid, "Dükkan satabilmek için en az 12 saat online süreniz olmalý.");
				    if(PlayerInfo[playerid][dukkansatimzaman] > gettime()) return Hata(playerid, "2 günde bir dükkan satabilirsiniz.");
				    else {
				        new dialog[2048], formatstr[500];
				        strcat(dialog, ""ww"Þu anda dükkanýnýzý satmak üzeresiniz!\n\n");
				        format(formatstr, sizeof(formatstr), ""ww"Dükkan ID: "ad"%d\n", id);
				        strcat(dialog, formatstr);
				        Get2DZone(DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], getGPSForPlayer[playerid], MAX_ZONE_NAME);
				        format(formatstr, sizeof(formatstr), ""ww"Dükkan Bölgesi: "ad"%s\n", getGPSForPlayer[playerid]);
				        strcat(dialog, formatstr);
				        format(formatstr, sizeof(formatstr), ""ww"Dükkan Fiyatý: "ad"$%s\n", FormatMoney(DukkanInfo[id][dFiyat]));
				        strcat(dialog, formatstr);
				        format(formatstr, sizeof(formatstr), ""ww"Dükkan'ýn Saat Baþý Geliri: "ad"$%s\n", FormatMoney(DukkanInfo[id][dFiyat] / 100));
				        strcat(dialog, formatstr);
				        format(formatstr, sizeof(formatstr), ""ww"DÜKKANI SATINCA ALACAÐINIZ ÜCRET: "ad"$%s\n\n", FormatMoney(DukkanInfo[id][dFiyat] / 2));
				        strcat(dialog, formatstr);
				        strcat(dialog, ""ww"Bu dükkaný satmak istiyor musunuz?");
				        SetPVarInt(playerid, "satilan_dukkan_id", id);
				        ShowPlayerDialog(playerid, DUKKAN_SATIM, DIALOG_STYLE_MSGBOX, ""safaf"Dükkan Satýmý", dialog, ""ww"Evet", ""ww"Hayýr");
				    }
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_CETE_RUTBEISIMD)
	{
	    if(!response) return cmd_cete(playerid, "");
	    if(response)
	    {
	        SetPVarInt(playerid, "EditledigiRutbe", listitem + 1);
	        
	        ShowPlayerDialog(playerid, DIALOG_CETE_RUTBEISIMD2, DIALOG_STYLE_INPUT, ""safaf"Çete - Rütbe Ýsim Deðiþtirme", ""ww"Rütbenin yeni ismini girin:\n", ""ww"Deðiþtir", ""ww"Ýptal");
	    }
	}

	if(dialogid == DIALOG_CETE_RUTBEISIMD2)
	{
	    if(!response) return OnDialogResponse(playerid, CETE_HOME, 1, 10, "");
	    if(response)
	    {
	        new editlenen = GetPVarInt(playerid, "EditledigiRutbe"), onceki[50], str[512], sql[500];
	        
	        switch(editlenen)
	        {
	            case 1:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank1` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 2:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank2` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 3:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank3` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 4:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank4` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 5:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank5` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 6:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank6` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 7:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank7` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 8:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank8` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 9:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank9` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	            case 10:
	            {
			        format(onceki, sizeof(onceki), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
			        format(str, sizeof(str), "Baþarýyla "wb"%s "w"rütbesini "wb"%s "w"olarak deðiþtirdiniz.", onceki, inputtext);
			        Bilgi(playerid, str);

			        format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10], 50, "%s", inputtext);

			        format(sql, sizeof(sql), "UPDATE `ceteler` SET `rank10` = '%s' WHERE `ID` = '%d'", inputtext, PlayerInfo[playerid][PlayerCeteID] + 1);
					mysql_query(mysqlC, sql);
	            }
	        }
	        OnDialogResponse(playerid, CETE_HOME, 1, 10, "");
		}
	}

	if(dialogid == DIALOG_RACEDUEL)
	{
	    if(!response)
	    {
	        new id = GetPVarInt(playerid, "raceduel_gonderen");
	        SCM(playerid, -1, ""safaf"Race duel isteðini reddettiniz.");
	        return Hata(id, "Rakip race duel isteðini kabul etmedi.");
	    }
	    if(response)
	    {
	        new gonderen = GetPVarInt(playerid, "raceduel_gonderen");
	        
	        RaceDuelde[gonderen] = true;
	        RaceDuelde[playerid] = true;
	        
	        destroyVehicle(playerid);
	        destroyVehicle(gonderen);
	        
	        RaceDuelCP[playerid] = 0;
	        RaceDuelCP[gonderen] = 0;
	        RaceVites[playerid] = 0;
	        RaceVites[gonderen] = 0;
	        
	        SetPlayerVirtualWorld(playerid, playerid + 13);
	        SetPlayerVirtualWorld(gonderen, playerid + 13);
	        
	        TogglePlayerControllable(playerid, false);
	        TogglePlayerControllable(gonderen, false);
	        
	        for(new i = 0; i < 4; i++)
	        {
	            TextDrawShowForPlayer(playerid, RaceDuel_Gosterge[playerid][i]);
	            TextDrawShowForPlayer(gonderen, RaceDuel_Gosterge[gonderen][i]);
	        }
	        
	        new str[256];
	        format(str, sizeof(str), "~r~~h~Checkpoint: ~g~~h~%d", RaceDuelCP[playerid]);
	        TextDrawSetString(RaceDuel_Gosterge[playerid][1], str);
	        format(str, sizeof(str), "~r~~h~Sira: ~g~~h~N/A");
	        TextDrawSetString(RaceDuel_Gosterge[playerid][2], str);
	        format(str, sizeof(str), "~r~~h~Vites: ~g~~h~N");
	        TextDrawSetString(RaceDuel_Gosterge[playerid][3], str);

	        format(str, sizeof(str), "~r~~h~Checkpoint: ~g~~h~%d", RaceDuelCP[gonderen]);
	        TextDrawSetString(RaceDuel_Gosterge[gonderen][1], str);
	        format(str, sizeof(str), "~r~~h~Sira: ~g~~h~N/A");
	        TextDrawSetString(RaceDuel_Gosterge[gonderen][2], str);
	        format(str, sizeof(str), "~r~~h~Vites: ~g~~h~N");
	        TextDrawSetString(RaceDuel_Gosterge[gonderen][3], str);
	        
	        SetPlayerPos(playerid, -513.5755,-3790.0557,3.3342);
	        SetPlayerFacingAngle(playerid, 358.7761);
	        SetPlayerPos(gonderen, -530.1357,-3790.1980,3.3347);
	        SetPlayerFacingAngle(gonderen, 0.4026);
	        
	        SetCameraBehindPlayer(playerid);
	        SetCameraBehindPlayer(gonderen);
	        
	        SetTimerEx("racearacav", 1000, false, "d", playerid);
	        SetTimerEx("racearacav", 1000, false, "d", gonderen);
			
			PlayerInfo[gonderen][Etkinlik_Sayac] = 6;
			KillTimer(PlayerInfo[gonderen][Etkinlik_Timer]);
		 	PlayerInfo[gonderen][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", gonderen);
		 	
			PlayerInfo[playerid][Etkinlik_Sayac] = 6;
			KillTimer(PlayerInfo[playerid][Etkinlik_Timer]);
		 	PlayerInfo[playerid][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", playerid);
			
			RaceDuelVitesAtma[playerid] = false;
			RaceDuelVitesAtma[gonderen] = false;
			
			RaceYakinTimer[playerid] = SetTimerEx("raceyakin1", 1000, true, "d", playerid);
			RaceYakinTimer[gonderen] = SetTimerEx("raceyakin2", 1000, true, "d", gonderen);
			
			AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
			AddVehicleComponent(GetPlayerVehicleID(gonderen), 1010);
			RepairVehicle(GetPlayerVehicleID(playerid));
			RepairVehicle(GetPlayerVehicleID(gonderen));
			
			RaceDuelTimer[playerid] = SetTimerEx("RaceVites_Duel", 5500, true, "d", playerid);
			RaceDuelTimer[gonderen] = SetTimerEx("RaceVites_Duel", 5500, true, "d", gonderen);
			
			SCM(playerid, -1, ""safaf"Race duel birazdan baþlýyor!");
			SCM(gonderen, -1, ""safaf"Race duel birazdan baþlýyor!");
	    }
	}

	if(dialogid == DIALOG_SORULAR)
	{
	    if(!response) return true;
	    if(response)
	    {
			if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
			if(listitem == 10)
			{
				new sql[500], satir[10000], toplamsatir[10000], id, soru[1024], cevap[500];
				format(sql, sizeof(sql), "SELECT * FROM `sorular` LIMIT %d, 10", sorular_limit[playerid]);
				mysql_query(mysqlC, sql);
				sorular_limit[playerid] += 10;

				strcat(toplamsatir, ""ww"ID\t"ww"Soru\t"ww"Cevap\n");

				if(cache_num_rows())
				{
				    for(new i = 0; i < cache_num_rows(); i++)
				    {
				        cache_get_value_name_int(i, "ID", id);
				        cache_get_value_name(i, "Soru", soru, 1024);
				        cache_get_value_name(i, "Cevap", cevap, 500);
				        format(satir, sizeof(satir), "%s"ww"%d\t"ww"%s\t"ww"%s\n", satir, id, soru, cevap);
				    }
				    strcat(toplamsatir, satir);
				}
				else
				{
				    return Hata(playerid, "Hiç soru eklenmemiþ.");
				}

				mysql_query(mysqlC, "SELECT * FROM `sorular`");
				if(cache_num_rows() > sorular_limit[playerid])
				{
				    strcat(toplamsatir, ""ww"» Diðer Sayfa");
				}

				ShowPlayerDialog(playerid, DIALOG_SORULAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Soru Listesi", toplamsatir, ""ww"Kapat", "");
			}
	    }
	}

	if(dialogid == DIALOG_SORULAR_EKLE)
	{
	    if(!response) return true;
	    if(response)
	    {

	        if(!strlen(inputtext)) return Hata(playerid, "Hatalý deðer girdiniz."), ShowPlayerDialog(playerid, DIALOG_SORULAR_EKLE, DIALOG_STYLE_INPUT, ""safaf"Soru Listesi - Ekle (1/2)", ""ww"Eklenecek soruyu yazýn:\n", ""ww"Ýlerle", ""ww"Ýptal");

	    	format(sorular_ekle[playerid], 1024, inputtext);
	    	ShowPlayerDialog(playerid, DIALOG_SORULAR_EKLE_CEVAP, DIALOG_STYLE_INPUT, ""safaf"Soru Lisetsi - Ekle (2/2)", ""ww"Sorunun cevabýný giriniz:\n", ""ww"Ekle", ""ww"Ýptal");
	    }
	}

	if(dialogid == DIALOG_SORULAR_EKLE_CEVAP)
	{
	    if(!response) return true;
	    if(response)
	    {

	        if(!strlen(inputtext)) return Hata(playerid, "Hatalý deðer girdiniz."), ShowPlayerDialog(playerid, DIALOG_SORULAR_EKLE_CEVAP, DIALOG_STYLE_INPUT, ""safaf"Soru Lisetsi - Ekle (2/2)", ""ww"Sorunun cevabýný giriniz:\n", ""ww"Ekle", ""ww"Ýptal");

			new sql[500];
			format(sql, sizeof(sql), "INSERT INTO `sorular` (`Soru`, `Cevap`) VALUES ('%s', '%s')", sorular_ekle[playerid], inputtext);
			mysql_query(mysqlC, sql);

			SCM(playerid, -1, ""safaf"Soru baþarýlý bir þekilde "ad"eklendi!");
		}
	}

	if(dialogid == DIALOG_SORULAR_SIL)
	{
	    if(!response) return true;
	    if(response)
	    {

	        if(!strlen(inputtext)) return Hata(playerid, "Hatalý deðer girdiniz."), ShowPlayerDialog(playerid, DIALOG_SORULAR_SIL, DIALOG_STYLE_INPUT, ""safaf"Soru Listesi - Sil", ""ww"Silinecek sorunun ID'sini girin:\n", ""ww"Sil", ""ww"Ýptal");
	        if(!IsNumeric(inputtext)) return Hata(playerid, "Hatalý deðer girdiniz."), ShowPlayerDialog(playerid, DIALOG_SORULAR_SIL, DIALOG_STYLE_INPUT, ""safaf"Soru Listesi - Sil", ""ww"Silinecek sorunun ID'sini girin:\n", ""ww"Sil", ""ww"Ýptal");
	        if(strval(inputtext) < 0) return Hata(playerid, "Hatalý deðer girdiniz."), ShowPlayerDialog(playerid, DIALOG_SORULAR_SIL, DIALOG_STYLE_INPUT, ""safaf"Soru Listesi - Sil", ""ww"Silinecek sorunun ID'sini girin:\n", ""ww"Sil", ""ww"Ýptal");
	        if(strval(inputtext) > 1000) return Hata(playerid, "Hatalý deðer girdiniz."), ShowPlayerDialog(playerid, DIALOG_SORULAR_SIL, DIALOG_STYLE_INPUT, ""safaf"Soru Listesi - Sil", ""ww"Silinecek sorunun ID'sini girin:\n", ""ww"Sil", ""ww"Ýptal");

	        new sql[500];
	        format(sql, sizeof(sql), "DELETE FROM `sorular` WHERE `ID` = '%d'", strval(inputtext));
	        mysql_query(mysqlC, sql);

	        SFM(playerid, -1, ""safaf""ad"%d "w"ID'li soru baþarýlý bir þekilde "ad"silindi!", strval(inputtext));
	    }
	}

	if(dialogid == DIALOG_KISISEL_DURUM)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(!strlen(inputtext)) return Hata(playerid, "Lütfen kutucuðu boþ býrakmayýnýz.");

	        new sql[2048], str[2048];
	        format(sql, sizeof(sql), "UPDATE `oyuncular` SET `Kisisel_Durum` = '%s' WHERE `kullaniciadi` = '%s'", inputtext, getName(playerid));
	        mysql_query(mysqlC, sql);

	        format(PlayerInfo[playerid][KisiselDurum], 850, "%s", inputtext);

	        format(str, sizeof(str), ""safaf"Kiþisel durumunuz baþarýyla "ad"%s "w"olarak deðiþtirildi.", inputtext);
	        SendClientMessageEx(playerid, -1, str);
	    }
	}

	if(dialogid == DUKKAN_SATIM)
	{
	    if(!response) return SCM(playerid, -1, ""safaf"Dükkan satma iþlemini iptal ettiniz.");
	    if(response)
	    {
	        new id = GetPVarInt(playerid, "satilan_dukkan_id");

	        if(id == -1) return true;

			DukkanInfo[id][dSahip] = -1;

		    new sql[500];
	        format(sql, sizeof(sql), "UPDATE `dukkanlar` SET `sahip` = '-1' WHERE `ID` = '%d'", id);
	        mysql_query(mysqlC, sql);

	        format(sql, sizeof(sql), "UPDATE `oyuncular` SET `dukkanivar` = '-1' WHERE `kullaniciadi` = '%s'", getName(playerid));
	        mysql_query(mysqlC, sql);

	        PlayerInfo[playerid][dukkanivar] = -1;

	        DukkanLabelGuncelle(id);

	        GivePlayerMoney(playerid, DukkanInfo[id][dFiyat] / 2);

	        PlayerInfo[playerid][dukkansatimzaman] = gettime() + 2 * 86400;

	        SavePlayer(playerid);

	        SFM(playerid, -1, ""safaf""wb"%d "w"ID'li dükkaný "wb"%d$ "w"karþýlýðýnda sattýnýz!", id, DukkanInfo[id][dFiyat] / 2);
	    }
	}

	if(dialogid == DUKKAN_ALIM)
	{
	    if(!response) return SCM(playerid, -1, ""safaf"Dükkan alma iþlemini iptal ettiniz.");
	    if(response)
	    {

	        new id = GetPVarInt(playerid, "alinan_dukkan_id");

	        if(id == -1) return true;
	        
	        DukkanInfo[id][dSahip] = PlayerInfo[playerid][sqlid];

		    new sql[500];
	        format(sql, sizeof(sql), "UPDATE `dukkanlar` SET `sahip` = '%d' WHERE `ID` = '%d'", PlayerInfo[playerid][sqlid], id);
	        mysql_query(mysqlC, sql);

	        format(sql, sizeof(sql), "UPDATE `oyuncular` SET `dukkanivar` = '%d' WHERE `kullaniciadi` = '%s'", id, getName(playerid));
	        mysql_query(mysqlC, sql);

	        PlayerInfo[playerid][dukkanivar] = id;

	        DukkanLabelGuncelle(id);

	        PlayerInfo[playerid][dukkanalimzaman] = gettime() + 2 * 86400;

	        GivePlayerMoney(playerid, -DukkanInfo[id][dFiyat]);

	        SavePlayer(playerid);

	        SFM(playerid, -1, ""safaf""wb"%d "w"ID'li dükkaný "wb"%d$ "w"karþýlýðýnda aldýnýz!", id, DukkanInfo[id][dFiyat]);
	        Bilgi(playerid, "Artýk dükkanýnýzý "wb"/dukkanim "w"komutu ile yönetebilirsiniz.");
	    }
	}

	if(dialogid == DIALOG_CETELER_YENI)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(listitem == 15)
	        {
				new isim[50], tag[16], uyesayisi, bolgesayisi, str[5000], sonstr[5000], id, sql[500], top[500];
				format(top, sizeof(top), ""ww"Çete ID\t"ww"Çete Ýsimi\t"ww"Çete Tagý\t"ww"Çete Üyeleri\t"ww"Çete Bölgeleri\n");
				strcat(sonstr, top);
				format(sql, sizeof(sql), "SELECT * FROM `ceteler` ORDER BY `cetebolgesayisi` DESC, `ID` DESC LIMIT %d, 15", ceteler_sayim[playerid]);
				mysql_query(mysqlC, sql);
				ceteler_sayim[playerid] += 15;
				for(new i; i < cache_num_rows(); i++)
				{
				    cache_get_value_name_int(i, "ID", id);
				    cache_get_value_name(i, "Isim", isim);
				    cache_get_value_name(i, "Tag", tag);
				    cache_get_value_name_int(i, "uyesayisi", uyesayisi);
				    cache_get_value_name_int(i, "cetebolgesayisi", bolgesayisi);
				    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\t"ww"%d\t"ww"%d\n", str, id - 1, isim, tag, uyesayisi, bolgesayisi);
				}
				strcat(sonstr, str);
				mysql_query(mysqlC, "SELECT * FROM `ceteler`");
				if(cache_num_rows() > ceteler_sayim[playerid])
				    strcat(sonstr, ""ad"»»»» Sonraki Sayfa");
				ShowPlayerDialog(playerid, DIALOG_CETELER_YENI, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Listesi", sonstr, ""ww"Devam", ""ww"Kapat");
			}
	    }
	}

	if(dialogid == DIALOG_ILERLE)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(listitem == 15)
	        {
		        new sqls[500];
		        format(sqls, sizeof(sqls), "SELECT * FROM `oyuncular` ORDER BY `sqlid` ASC LIMIT %d, 15", kullanici_sayi[playerid]);
		        mysql_query(mysqlC, sqls);

				new str[10000], sql, isim[24], toplamstr[10000];

				strcat(toplamstr, ""ww"SQL ID\t"ww"Kullanýcý Adý\n");

				kullanici_sayi[playerid] += 15;

				for(new i; i < cache_num_rows(); i++)
				{
				    cache_get_value_name_int(i, "sqlid", sql);
				    cache_get_value_name(i, "kullaniciadi", isim);
				    format(str, sizeof(str), "%s"ww"%s\t"ww"%s\n", str, FormatMoney(sql), isim);
				}

				strcat(toplamstr, str);

	            mysql_query(mysqlC, "SELECT * FROM `oyuncular`");

				if(cache_num_rows() > kullanici_sayi[playerid])
				{
				    strcat(toplamstr, ""wb"» "ad"Sonraki Sayfa "wb"«");
				}

				ShowPlayerDialog(playerid, DIALOG_ILERLE, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Tüm Kullanýcýlar", toplamstr, ""ww"Ýleri", ""ww"Kapat");
			}
	    }
	}

	if(dialogid == DIALOG_DUELLO_SILAH1)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                SetPVarInt(playerid, "duello_silah1", 24);
	            }
	            case 1:
	            {
	                SetPVarInt(playerid, "duello_silah1", 26);
	            }
	            case 2:
	            {
	                SetPVarInt(playerid, "duello_silah1", 25);
	            }
	            case 3:
	            {
	                SetPVarInt(playerid, "duello_silah1", 34);
	            }
	            case 4:
	            {
	                SetPVarInt(playerid, "duello_silah1", 29);
	            }
	            case 5:
	            {
	                SetPVarInt(playerid, "duello_silah1", 16);
	            }
	            case 6:
	            {
	                SetPVarInt(playerid, "duello_silah1", 28);
	            }
	            case 7:
	            {
	                SetPVarInt(playerid, "duello_silah1", 30);
	            }
	            case 8:
	            {
	                SetPVarInt(playerid, "duello_silah1", 31);
	            }
	        }
	        new str[1024];
			format(str, sizeof(str), "\
			"ww"Desert Eagle\n\
			"ww"Sawn-off Shotgun\n\
			"ww"Shotgun\n\
			"ww"Sniper\n\
			"ww"MP5\n\
			"ww"Grenade\n\
			"ww"UZI\n\
			"ww"AK-47\n\
			"ww"M4");
	        ShowPlayerDialog(playerid, DIALOG_DUELLO_SILAH2, DIALOG_STYLE_LIST, ""safaf"Düello - Silah 2", str, ""ww"Seç", ""ww"Kapat");
	    }
	}

	if(dialogid == DIALOG_DUELLO_SILAH2)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                SetPVarInt(playerid, "duello_silah2", 24);
	            }
	            case 1:
	            {
	                SetPVarInt(playerid, "duello_silah2", 26);
	            }
	            case 2:
	            {
	                SetPVarInt(playerid, "duello_silah2", 25);
	            }
	            case 3:
	            {
	                SetPVarInt(playerid, "duello_silah2", 34);
	            }
	            case 4:
	            {
	                SetPVarInt(playerid, "duello_silah2", 29);
	            }
	            case 5:
	            {
	                SetPVarInt(playerid, "duello_silah2", 16);
	            }
	            case 6:
	            {
	                SetPVarInt(playerid, "duello_silah2", 28);
	            }
	            case 7:
	            {
	                SetPVarInt(playerid, "duello_silah2", 30);
	            }
	            case 8:
	            {
	                SetPVarInt(playerid, "duello_silah2", 31);
	            }
	        }
	        ShowPlayerDialog(playerid, DIALOG_DUELLO_SKOR, DIALOG_STYLE_INPUT, ""safaf"Düello - Skor Seçimi", ""ww"Düelloyu kazananýn kaç skor alacaðýný seçin:", ""ww"Devam", ""ww"Ýptal");
	    }
	}

	if(dialogid == DIALOG_DUELLO_SKOR)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(!strlen(inputtext)) return Hata(playerid, "Bir deðer girmelisiniz.");
	        if(!IsNumeric(inputtext)) return Hata(playerid, "Sayýsal bir deðer girmelisiniz.");
	        if(strval(inputtext) < 0) return Hata(playerid, "En az 0 skor yazabilirsiniz.");
	        if(strval(inputtext) > 100) return Hata(playerid, "En fazla 100 skor yazabilirsiniz.");
	        if(strval(inputtext) > GetPlayerScore(playerid)) return Hata(playerid, "Yeterli skorunuz yok.");
	        if(strval(inputtext) > GetPlayerScore(GetPVarInt(playerid, "duello_davetatilan"))) return Hata(playerid, "Rakibin yeterli skoru yok.");

			SetPVarInt(playerid, "duello_skor", strval(inputtext));
			SetPVarInt(GetPVarInt(playerid, "duello_davetatilan"), "duello_skor", strval(inputtext));
			ShowPlayerDialog(playerid, DIALOG_DUELLO_PARA, DIALOG_STYLE_INPUT, ""safaf"Düello - Para Seçimi", ""ww"Düelloyu kazananýn kaç para alacaðýný seçin:", ""ww"Devam", ""ww"Ýptal");
		}
	}

	if(dialogid == DIALOG_DUELLO_PARA)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(!strlen(inputtext)) return Hata(playerid, "Bir deðer girmelisiniz.");
	        if(!IsNumeric(inputtext)) return Hata(playerid, "Sayýsal bir deðer girmelisiniz.");
	        if(strval(inputtext) < 0) return Hata(playerid, "En az 0$ yazabilirsiniz.");
	        if(strval(inputtext) > 500000) return Hata(playerid, "En fazla 500.000$ yazabilirsiniz.");
	        if(strval(inputtext) > GetPlayerMoney(playerid)) return Hata(playerid, "Yeterli paranýz yok.");
	        if(strval(inputtext) > GetPlayerMoney(GetPVarInt(playerid, "duello_davetatilan"))) return Hata(playerid, "Rakibin yeterli parasý yok.");
			new atilan = GetPVarInt(playerid, "duello_davetatilan");
			SetPVarInt(playerid, "duello_para", strval(inputtext));
			SetPVarInt(atilan, "duello_para", strval(inputtext));

			new str[500];
			format(str, sizeof(str), "\
			"ww"{%06x}%s(%d) "w"adlý oyuncu sizi düelloya davet ediyor.\n{FFFFFF}({%06x}%s "w"vs {%06x}%s{FFFFFF})\n\n\
			"ww"Düello silahý 1: %s\n\
			"ww"Düello silahý 2: %s\n\
			"ww"Düello ödül skoru: %s\n\
			"ww"Düello ödül parasý: %s$\n\n\
			"ww"Düelloyu kabul ediyor musunuz?",
			GetPlayerColor(playerid) >>> 8, getName(playerid), playerid, GetPlayerColor(playerid) >>> 8, getName(playerid), GetPlayerColor(atilan) >>> 8, getName(atilan), aWeaponNames[GetPVarInt(playerid, "duello_silah1")],
			aWeaponNames[GetPVarInt(playerid, "duello_silah2")], FormatMoney(GetPVarInt(playerid, "duello_skor")), FormatMoney(GetPVarInt(playerid, "duello_para")));
			ShowPlayerDialog(atilan, DIALOG_DUELLO_KABULRED, DIALOG_STYLE_MSGBOX, ""safaf"Düello daveti", str, ""ww"Kabul Et", ""ww"Reddet");

			kabuletmezaman[atilan] = gettime() + 30;
			
			SetTimerEx("duelkabuletmedi", 30000, false, "d", playerid);

			SCM(playerid, -1, ""safaf"Düello daveti baþarýyla gönderildi.");
		}
	}

	if(dialogid == DIALOG_DUELLO_KABULRED)
	{
	    if(!response)
	    {
	        SCM(GetPVarInt(playerid, "duello_davetatilan"), -1, ""safaf"Rakip düello davetini kabul etmedi.");
	        duelatti[GetPVarInt(playerid, "duello_davetatilan")] = false;
	        SetPVarInt(playerid, "duello_silah1", -1);
	        SetPVarInt(playerid, "duello_silah2", -1);
	        SetPVarInt(playerid, "duello_skor", -1);
	        SetPVarInt(playerid, "duello_para", -1);
	        SetPVarInt(playerid, "duello_davetatilan", -1);
	        SetPVarInt(playerid, "duello_davetatilan", -1);
	        return true;
	    }
	    if(response)
	    {
	        new davetci = GetPVarInt(playerid, "duello_davetatilan");

	        if(!IsPlayerConnected(davetci)) return Hata(playerid, "Düello isteði gönderen oyuncu oyundan ayrýlmýþ.");

	        if(gettime() > kabuletmezaman[playerid]) return Hata(playerid, "Düello isteðini 30 saniye içerisinde kabul etmelisiniz.");
	        
	        duelatti[playerid] = false;
	        duelatti[davetci] = false;

	        SetPlayerVirtualWorld(playerid, playerid + 11);
	        SetPlayerVirtualWorld(davetci, playerid + 11);

	        HideModelSelectionMenu(davetci);
	        HideModelSelectionMenu(playerid);
	        
	        SetPVarInt(playerid, "God", 0);
	        SetPVarInt(davetci, "God", 0);

	        duelloda[playerid] = true;
	        duelloda[davetci] = true;

	        destroyVehicle(playerid);
	        destroyVehicle(davetci);

	        SetPlayerPos(playerid, duelpos[0][0], duelpos[0][1], duelpos[0][2]);
	        SetPlayerPos(davetci, duelpos[1][0], duelpos[1][1], duelpos[1][2]);

	        TogglePlayerControllable(playerid, 0);
	        TogglePlayerControllable(davetci, 0);

	        ResetPlayerWeapons(playerid);
	        ResetPlayerWeapons(davetci);

	        SetPlayerHealth(playerid, 100.0);
	        SetPlayerHealth(davetci, 100.0);
	        SetPlayerArmour(playerid, 100.0);
	        SetPlayerArmour(davetci, 100.0);

	        GivePlayerWeapon(playerid, GetPVarInt(davetci, "duello_silah1"), 5000);
	        GivePlayerWeapon(playerid, GetPVarInt(davetci, "duello_silah2"), 5000);
	        GivePlayerWeapon(davetci, GetPVarInt(davetci, "duello_silah1"), 5000);
	        GivePlayerWeapon(davetci, GetPVarInt(davetci, "duello_silah2"), 5000);

	        SetCameraBehindPlayer(playerid);
	        SetCameraBehindPlayer(davetci);

			PlayerInfo[playerid][Etkinlik_Sayac] = 6;
			KillTimer(PlayerInfo[playerid][Etkinlik_Timer]);
			PlayerInfo[playerid][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", playerid);

			PlayerInfo[davetci][Etkinlik_Sayac] = 6;
			KillTimer(PlayerInfo[davetci][Etkinlik_Timer]);
			PlayerInfo[davetci][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", davetci);

			SCM(playerid, -1, ""safaf"Düello birazdan baþlayacak! Bol þans.");
			SCM(davetci, -1, ""safaf"Düello birazdan baþlayacak! Bol þans.");
	    }
	}

	if(dialogid == DIALOG_OYUNCU_EDIT_RUTBE)
	{
	    if(!response) return CeteOfflineOyuncular(playerid);
	    if(response)
	    {
			if(PlayerInfo[playerid][PlayerCeteRutbeID] < 8) return CeteAnaSayfasi(playerid);
			
            new sql[500], isim[MAX_PLAYER_NAME], rutbesii;
            format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `sqlid` = '%d'", GetPVarInt(playerid, "CeteDuzenledigi"));
            mysql_query(mysqlC, sql);

            cache_get_value_name(0, "kullaniciadi", isim);
            cache_get_value_name_int(0, "ceterutbe", rutbesii);
            
            if(rutbesii > PlayerInfo[playerid][PlayerCeteRutbeID]) return Hata(playerid, "Oyuncu sizden daha yüksek yetkide!");
            if(GetPlayerID(isim) == playerid && listitem > PlayerInfo[playerid][PlayerCeteRutbeID]) return Hata(playerid, "Kendinizden yüksek bir rütbe yapamazsýnýz.");

            new bul = GetPlayerID(isim);
            if(IsPlayerConnected(bul))
            {
                PlayerInfo[bul][PlayerCeteRutbeID] = listitem;
                SCM(bul, -1, ""safaf"Çete yetkilisi rütbenizi deðiþtirdi.");
                SCM(playerid, -1, ""safaf"Oyuncunun rütbesini deðiþtirdiniz.");
                SavePlayer(bul);
            }
            else
			{
                format(sql, sizeof(sql), "UPDATE `oyuncular` SET `ceterutbe` = '%d' WHERE `kullaniciadi` = '%s'", listitem, isim);
                mysql_query(mysqlC, sql);
                SCM(playerid, -1, ""safaf"Oyuncunun yetkisini baþarýyla deðiþtirdiniz.");
            }
	    }
	}

	if(dialogid == DIALOG_OYUNCU_EDIT)
	{
	    if(!response) return OnDialogResponse(playerid, CETE_HOME, 1, 2, "");
	    if(response)
	    {
	        if(PlayerInfo[playerid][PlayerCeteRutbeID] < 8) return CeteAnaSayfasi(playerid);
	        switch(listitem)
	        {
	            case 0: // - Yetki Deðiþtirme
	            {
	                new dialog[2048], str[1024];
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
				    strcat(dialog, str);
				    
	                ShowPlayerDialog(playerid, DIALOG_OYUNCU_EDIT_RUTBE, DIALOG_STYLE_LIST, ""safaf"Oyuncu Rütbesini Düzenle", dialog, ""ww"Seç", ""ww"Ýptal");
	            }
	            case 1: // - Çeteden Atma
	            {
	                new sql[500], isim[MAX_PLAYER_NAME], rutbesii;
	                format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `sqlid` = '%d'", GetPVarInt(playerid, "CeteDuzenledigi"));
	                mysql_query(mysqlC, sql);

	                cache_get_value_name(0, "kullaniciadi", isim);
	                cache_get_value_name_int(0, "ceterutbe", rutbesii);
	                
	                if(rutbesii > PlayerInfo[playerid][PlayerCeteRutbeID]) return Hata(playerid, "Oyuncunun yetkisi sizden daha yüksek!");

	                new bul = GetPlayerID(isim);
	                if(IsPlayerConnected(bul))
	                {
						PlayerInfo[bul][PlayerCeteID] = -1;
						PlayerInfo[bul][PlayerCeteRutbeID] = 0;
						SCM(bul, -1, ""safaf"Çete yetkilisi sizi çeteden attý.");
						SavePlayer(bul);
	                }
	                else
					{
	                    format(sql, sizeof(sql), "UPDATE `oyuncular` SET `cete` = '-1', `ceterutbe` = '0' WHERE `kullaniciadi` = '%s'", isim);
	                    mysql_query(mysqlC, sql);
	                    SCM(playerid, -1, ""safaf"Oyuncuyu baþarýyla çeteden attýnýz.");
	                }
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_CETELER)
	{
	    if(!response) return true;
	    if(listitem == 15)
	    {
			new isim[50], tag[16], uyesayisi, bolgesayisi, str[5000], sonstr[5000], id;
			strcat(sonstr, ""ww"Çete ID\t"ww"Çete Ýsimi\t"ww"Çete Tagý\t"ww"Çete Üyeleri\t"ww"Çete Bölgeleri\n");
			mysql_query(mysqlC, "SELECT * FROM `ceteler` ORDER BY `cetebolgesayisi` DESC, `ID` DESC LIMIT 15, 15");
			for(new i; i < cache_num_rows(); i++)
			{
			    cache_get_value_name_int(i, "ID", id);
			    cache_get_value_name(i, "Isim", isim);
			    cache_get_value_name(i, "Tag", tag);
			    cache_get_value_name_int(i, "uyesayisi", uyesayisi);
			    cache_get_value_name_int(i, "cetebolgesayisi", bolgesayisi);
			    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\t"ww"%d\t"ww"%d\n", str, id - 1, isim, tag, uyesayisi, bolgesayisi);
			}
			strcat(sonstr, str);
			mysql_query(mysqlC, "SELECT * FROM `ceteler`");
			if(cache_num_rows() > 30)
			    strcat(sonstr, ""ad"»»»» Sonraki Sayfa");
			ShowPlayerDialog(playerid, DIALOG_CETELER_2, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Listesi", sonstr, ""ww"Kapat", "");
	    }
	}

	if(dialogid == DIALOG_CETELER_2)
	{
	    if(!response) return true;
	    if(listitem == 15)
	    {
			new isim[50], tag[16], uyesayisi, bolgesayisi, str[5000], sonstr[5000], id;
			strcat(sonstr, ""ww"Çete ID\t"ww"Çete Ýsimi\t"ww"Çete Tagý\t"ww"Çete Üyeleri\t"ww"Çete Bölgeleri\n");
			mysql_query(mysqlC, "SELECT * FROM `ceteler` ORDER BY `cetebolgesayisi` DESC, `ID` DESC LIMIT 30, 15");
			for(new i; i < cache_num_rows(); i++)
			{
			    cache_get_value_name_int(i, "ID", id);
			    cache_get_value_name(i, "Isim", isim);
			    cache_get_value_name(i, "Tag", tag);
			    cache_get_value_name_int(i, "uyesayisi", uyesayisi);
			    cache_get_value_name_int(i, "cetebolgesayisi", bolgesayisi);
			    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\t"ww"%d\t"ww"%d\n", str, id - 1, isim, tag, uyesayisi, bolgesayisi);
			}
			strcat(sonstr, str);
			mysql_query(mysqlC, "SELECT * FROM `ceteler`");
			if(cache_num_rows() > 45)
			    strcat(sonstr, ""ad"»»»» Sonraki Sayfa");
			ShowPlayerDialog(playerid, DIALOG_CETELER_3, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Listesi", sonstr, ""ww"Kapat", "");
	    }
	}

	if(dialogid == DIALOG_CETELER_3)
	{
	    if(!response) return true;
	    if(listitem == 15)
	    {
			new isim[50], tag[16], uyesayisi, bolgesayisi, str[5000], sonstr[5000], id;
			strcat(sonstr, ""ww"Çete ID\t"ww"Çete Ýsimi\t"ww"Çete Tagý\t"ww"Çete Üyeleri\t"ww"Çete Bölgeleri\n");
			mysql_query(mysqlC, "SELECT * FROM `ceteler` ORDER BY `cetebolgesayisi` DESC, `ID` DESC LIMIT 45, 15");
			for(new i; i < cache_num_rows(); i++)
			{
			    cache_get_value_name_int(i, "ID", id);
			    cache_get_value_name(i, "Isim", isim);
			    cache_get_value_name(i, "Tag", tag);
			    cache_get_value_name_int(i, "uyesayisi", uyesayisi);
			    cache_get_value_name_int(i, "cetebolgesayisi", bolgesayisi);
			    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\t"ww"%d\t"ww"%d\n", str, id - 1, isim, tag, uyesayisi, bolgesayisi);
			}
			strcat(sonstr, str);
			mysql_query(mysqlC, "SELECT * FROM `ceteler`");
			if(cache_num_rows() > 60)
			    strcat(sonstr, ""ad"»»»» Sonraki Sayfa");
			ShowPlayerDialog(playerid, DIALOG_CETELER_4, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Listesi", sonstr, ""ww"Kapat", "");
	    }
	}

	if(dialogid == DIALOG_CETELER_4)
	{
	    if(!response) return true;
	    if(listitem == 15)
	    {
			new isim[50], tag[16], uyesayisi, bolgesayisi, str[5000], sonstr[5000], id;
			strcat(sonstr, ""ww"Çete ID\t"ww"Çete Ýsimi\t"ww"Çete Tagý\t"ww"Çete Üyeleri\t"ww"Çete Bölgeleri\n");
			mysql_query(mysqlC, "SELECT * FROM `ceteler` ORDER BY `cetebolgesayisi` DESC, `ID` DESC LIMIT 60, 15");
			for(new i; i < cache_num_rows(); i++)
			{
			    cache_get_value_name_int(i, "ID", id);
			    cache_get_value_name(i, "Isim", isim);
			    cache_get_value_name(i, "Tag", tag);
			    cache_get_value_name_int(i, "uyesayisi", uyesayisi);
			    cache_get_value_name_int(i, "cetebolgesayisi", bolgesayisi);
			    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\t"ww"%d\t"ww"%d\n", str, id - 1, isim, tag, uyesayisi, bolgesayisi);
			}
			strcat(sonstr, str);
			mysql_query(mysqlC, "SELECT * FROM `ceteler`");
			if(cache_num_rows() > 75)
			    strcat(sonstr, ""ad"»»»» Sonraki Sayfa");
			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Listesi", sonstr, ""ww"Kapat", "");
	    }
	}

	////////////////////////////////////////////////////

	if(dialogid == DIALOG_CETE_TUMUYELER)
	{
	    if(!response) return cmd_cete(playerid, "");
	    if(listitem == 25)
	    {
			new sql[500], str[10000], topstr[500], strtopla[10000], strson[10000], isim[50], oyundastr[500], rutbe, Cache:Veri, rutbestr[100];
			format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `cete` = '%d' LIMIT %d, 25", PlayerInfo[playerid][PlayerCeteID], Cete_Tumuyeler[playerid]);
			Veri = mysql_query(mysqlC, sql);

			format(topstr, sizeof(topstr), ""ww"Oyuncu Ýsmi\t"ww"Oyuncu Durumu\t"ww"Oyuncu Yetkisi\n");

		    Cete_Tumuyeler[playerid] += 25;

			for(new i; i < cache_num_rows(); i++)
			{
			    cache_get_value_name(i, "kullaniciadi", isim);
			    cache_get_value_name_int(i, "ceterutbe", rutbe);
			    cache_get_value_name_int(i, "sqlid", tumceteoyuncular[playerid][i]);
			    new bul = GetPlayerID(isim);
			    switch(IsPlayerConnected(bul))
			    {
			        case 0:
			        {
			            format(oyundastr, sizeof(oyundastr), ""ww"{FF0000}Oyunda deðil");
			        }
			        case 1:
			        {
			            format(oyundastr, sizeof(oyundastr), ""ww"{00F600}Oyunda");
			        }
			    }
			    switch(rutbe)
			    {
			        case 0: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
				    case 1: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
				    case 2: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
				    case 3: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
				    case 4: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
				    case 5: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
				    case 6: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
				    case 7: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
				    case 8: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
				    case 9: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
			    }
			    format(str, sizeof(str), "%s"ww"%s\t%s\t"ww"%s\n", str, isim, oyundastr, rutbestr);
			}
			cache_delete(Veri);
			strcat(strtopla, str);

			format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `cete` = '%d'", PlayerInfo[playerid][PlayerCeteID]);
			mysql_query(mysqlC, sql);
			if(cache_num_rows() > Cete_Tumuyeler[playerid])
				strcat(strtopla, ""ad"»»»» Sonraki Sayfa");

			format(strson, sizeof(strson), "%s%s", topstr, strtopla);

			ShowPlayerDialog(playerid, DIALOG_CETE_TUMUYELER, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Üyeleri", strson, ""ww"Seç", ""ww"Kapat");
	    }
	    else {
	        if(PlayerInfo[playerid][PlayerCeteRutbeID] < 8) return CeteOfflineOyuncular(playerid);
	        SetPVarInt(playerid, "CeteDuzenledigi", tumceteoyuncular[playerid][listitem]);
	        new dia[850];
	        strcat(dia, ""ww"Oyuncu Yetkisini Deðiþtir\n");
	        strcat(dia, ""ww"Oyuncuyu At\n");
	        ShowPlayerDialog(playerid, DIALOG_OYUNCU_EDIT, DIALOG_STYLE_LIST, ""safaf"Oyuncu Düzenle", dia, ""ww"Seç", ""ww"Ýptal");
	    }
	}

	if(dialogid == DIALOG_CETE_TUMUYELER_2)
	{
	    if(!response) return cmd_cete(playerid, "");
	    if(listitem == 25)
	    {
			new sql[500], isim[500], rutbe, str[10000], strtopla[10000], topstr[500], oyundastr[500], rutbestr[100];
			format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `cete` = '%d' LIMIT 50, 25", PlayerInfo[playerid][PlayerCeteID]);
			mysql_query(mysqlC, sql);

			format(topstr, sizeof(topstr), ""ww"Oyuncu Ýsmi\t"ww"Oyuncu Durumu\t"ww"Oyuncu Yetkisi\n");
			strcat(strtopla, topstr);

			for(new i; i < cache_num_rows(); i++)
			{
				cache_get_value_name(i, "kullaniciadi", isim, 500);
				cache_get_value_name_int(i, "ceterutbe", rutbe);
				cache_get_value_name_int(i, "sqlid", tumceteoyuncular[playerid][i]);
				new bul = GetPlayerID(isim);
				switch(IsPlayerConnected(bul))
				{
					case 0:
					{
						format(oyundastr, sizeof(oyundastr), ""ww"{FF0000}Oyunda deðil");
					}
					case 1:
					{
						format(oyundastr, sizeof(oyundastr), ""ww"{00F600}Oyunda");
					}
				}
				switch(rutbe)
			    {
			        case 0: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
				    case 1: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
				    case 2: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
				    case 3: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
				    case 4: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
				    case 5: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
				    case 6: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
				    case 7: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
				    case 8: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
				    case 9: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
			    }
				format(str, sizeof(str), ""ww"%s\t%s\t"ww"%s\n", isim, oyundastr, rutbestr);
				strcat(strtopla, str);
			}

			format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `cete` = '%d'", PlayerInfo[playerid][PlayerCeteID]);
			mysql_query(mysqlC, sql);
			if(cache_num_rows() > 75)
				strcat(strtopla, ""ad"»»»» Sonraki Sayfa");

			ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete üyeleri", strtopla, ""ww"Seç", ""ww"Kapat");
		}
		else {
		    if(PlayerInfo[playerid][PlayerCeteRutbeID] < 3) return CeteAnaSayfasi(playerid);
			SetPVarInt(playerid, "CeteDuzenledigi", tumceteoyuncular[playerid][listitem]);
			new dia[850];
	        strcat(dia, ""ww"Oyuncu Yetkisini Deðiþtir\n");
	        strcat(dia, ""ww"Oyuncuyu At\n");
			ShowPlayerDialog(playerid, DIALOG_OYUNCU_EDIT, DIALOG_STYLE_LIST, ""safaf"Oyuncu Düzenle", dia, ""ww"Seç", ""ww"Ýptal");
		}
	}

	if(dialogid == ETK_KOMUTLARI_2)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(listitem == 23)
	        {
	            cmd_e(playerid, "");
	        }
	    }
	}

	if(dialogid == ETK_KOMUTLARI)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(listitem == 22)
	        {
				if(PlayerInfo[playerid][dLevel] < 2) return true;
				new str[10000];
				strcat(str, ""ww"Komut\t"ww"Açýklama\n");
				strcat(str, ""ww"/eslap\t"ww"Yanýnýzdakilere osmanlý tokadý atar.\n");
				strcat(str, ""ww"/edisarm\t"ww"Yanýnýzdaki oyuncularýn silahlarýný siler.\n");
				strcat(str, ""ww"/edondur\t"ww"ID'sini girdðiniz oyuncuyu dondurur.\n");
				strcat(str, ""ww"/ecoz\t"ww"ID'sini girdiðiniz oyuncuyu çözer.\n");
				strcat(str, ""ww"/edondurall\t"ww"Yanýnýzdaki oyuncularý dondurur.\n");
				strcat(str, ""ww"/ecozall\t"ww"Yanýnýzdaki oyuncularý çözer.\n");
				strcat(str, ""ww"/epara\t"ww"Yanýnýzdakilere para verir.\n");
				strcat(str, ""ww"/ezirh\t"ww"Yanýnýzdakilerin zýrhýný ayarlar.\n");
				strcat(str, ""ww"/ecan\t"ww"Yanýnýzdakilerin canýný ayarlar.\n");
				strcat(str, ""ww"/elocalkapat\t"ww"Yanýnýzdaki oyuncularýn localdan konuþmasýný kapatýr.\n");
				strcat(str, ""ww"/elocalac\t"ww"Yanýnýzdaki oyuncularýn localdan konuþmasýný açar..\n");
				strcat(str, ""ww"/eyumrukkapat\t"ww"Yanýnýzdaki oyuncularýn birbirine hasar vermesini kapatýr.\n");
				strcat(str, ""ww"/eyumrukac\t"ww"Yanýnýzdaki oyuncularýn birbirine hasar vermesini açar.\n");
				strcat(str, ""ww"/esilah\t"ww"Yanýnýzdaki oyunculara silah verir.\n");
				strcat(str, ""ww"/earac\t"ww"Yanýnýzdaki oyunculara araç verir.\n");
				strcat(str, ""ww"/erenk\t"ww"Yanýnýzdaki oyuncularýn rengini ayarlar.\n");
				strcat(str, ""ww"/eskor\t"ww"Yanýnýzdaki oyunculara skor verir.\n");
				strcat(str, ""ww"/eskin\t"ww"Yanýnýzdaki oyuncularýn skinini deðiþtirir.\n");
				strcat(str, ""ww"/earacsil\t"ww"Yanýnýzdaki oyuncularýn araçlarýný siler.\n");
				strcat(str, ""ww"/esay\t"ww"Geri sayýmý baþlatýr.\n");
				strcat(str, ""ww"/ezaman\t"ww"Yanýnýzdaki oyuncularýn zamanýný ayarlar.\n");
				strcat(str, ""ww"/ehava\t"ww"Yanýnýzdaki oyuncularýn havasýný ayarlar.\n");
				strcat(str, ""ww"/ejetpack\t"ww"Yanýnýzdaki oyunculara jetpack verir.\n");
				strcat(str, ""ad"<<<<<<<< ARKA SAYFA\n");
				ShowPlayerDialog(playerid, ETK_KOMUTLARI_2, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Etkinlik Komutlarý (2/2)", str, ""ww"Kapat", "");
	        }
	    }
	}

	if(dialogid == 94)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            new bolgid = GetBolgeID(playerid);
	            if(bolgid == -1) return true;
	            if(bolgebilgi[bolgid][bolgesaldiri] == true) return true;
	            if(PlayerInfo[playerid][PlayerCeteID] != bolgebilgi[bolgid][sahipceteid]) return true;
	            if(bolgebilgi[bolgid][bolgeseviye] < 2) return Hata(playerid, "Bölge ismini deðiþtirmek için bölge 2. seviyede olmalýdýr.");
	            if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] < 500000) return Hata(playerid, "Çete bankasýnda 500.000$ olmalidir.");
	            ShowPlayerDialog(playerid, 95, DIALOG_STYLE_INPUT, ""safaf"Bölge Ýsim Deðiþtirme", ""ww"Lütfen yeni isimi girin:", ""ww"Deðiþtir", ""ww"Geri");
	        }
	        if(listitem == 1)
	        {
	            new bolgid = GetBolgeID(playerid);
             	if(bolgid == -1) return true;
	            if(bolgebilgi[bolgid][bolgesaldiri] == true) return true;
	            new string[500];
	            format(string, sizeof(string), ""safaf"Bu bölgeyi "ad"%d "w"para karþýlýðýnda geliþtirmek istediðinize emin misiniz?\n\n"ww"Bölge ele geçirme süresi +90 artacak\n"ww"Bölge ele geçirme gereksinimi artacak.\n"ww"NOT: %d$ Para çete bankasýnda olmalýdýr.", 1500000*bolgebilgi[bolgid][bolgeseviye], 1500000*bolgebilgi[bolgid][bolgeseviye]);
	            ShowPlayerDialog(playerid, 96, DIALOG_STYLE_MSGBOX, ""safaf"Bölge Seviye Artýrma", string, ""ww"Evet", ""ww"Geri");
	        }
	        if(listitem == 2)
	        {
         		new bolgid = GetBolgeID(playerid);
	            if(bolgid == -1) return true;
	            if(bolgebilgi[bolgid][bolgesaldiri] == true) return true;
	            if(PlayerInfo[playerid][PlayerCeteID] != bolgebilgi[bolgid][sahipceteid]) return true;
	            ShowPlayerDialog(playerid, 97, DIALOG_STYLE_LIST, ""safaf"Bölge Renk Deðiþtirme", "{AA3333}Kýrmýzý\n{FFFF00}Sarý\n{0000BB}Mavi\n{33AA33}Yeþil\n{FFFFFF}Beyaz", ""ww"Seç",""ww"Geri");
	        }
	    }
	}

	if(dialogid == 95)
	{
	    if(response)
	    {
	        new bolgid = GetBolgeID(playerid);
         	if(bolgid == -1) return true;
          	if(bolgebilgi[bolgid][bolgesaldiri] == true) return true;
          	if(PlayerInfo[playerid][PlayerCeteID] != bolgebilgi[bolgid][sahipceteid]) return true;
          	if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 95, DIALOG_STYLE_INPUT, ""safaf"Bölge Ýsim Deðiþtirme",""ww"Lütfen yeni isimi girin:", ""ww"Deðiþtir", ""ww"Geri");
          	if(strlen(inputtext) > 30) return ShowPlayerDialog(playerid, 95, DIALOG_STYLE_INPUT, ""safaf"Bölge Ýsim Deðiþtirme", ""ww"Lütfen yeni isimi girin:", ""ww"Deðiþtir", ""ww"Geri");
          	new query[150];
          	format(query, sizeof(query), "UPDATE `bolgeler` SET `bolgeisim` = '%s' WHERE `bolgeid` = '%d'", trcar(inputtext), bolgid);
          	mysql_query(mysqlC, query);
          	BolgeYukle(bolgid);
          	SCM(playerid, -1, ""safaf"Bölge ismi baþarýyla deðiþtirildi.");
          	Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] -= 500000;
          	format(query, sizeof(query), "UPDATE `ceteler` SET `Kasa` = '%d' WHERE `ID` = '%d'", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa], PlayerInfo[playerid][PlayerCeteID] + 1);
          	mysql_query(mysqlC, query);
	    }
	    if(!response)
	    {
	        ShowPlayerDialog(playerid, 94, DIALOG_STYLE_LIST, ""safaf"Bölge Yönetim Paneli", ""ww"Bölge Ýsmini Deðiþtir\n"ww"Bölgeyi Seviye Atlat\n"ww"Bölge Rengini Deðiþtir", ""ww"Seç", ""ww"Kapat");
	    }
	}

	if(dialogid == 96)
	{
	    if(!response) return ShowPlayerDialog(playerid, 94, DIALOG_STYLE_LIST, ""safaf"Bölge Yönetim Paneli", ""ww"Bölge Ýsmini Deðiþtir\n"ww"Bölgeyi Seviye Atlat\n"ww"Bölge Rengini Deðiþtir", ""ww"Seç", ""ww"Kapat");
	    if(response)
	    {
	        new bolgid = GetBolgeID(playerid);
        	if(bolgid == -1) return true;
         	if(bolgebilgi[bolgid][bolgesaldiri] == true) return true;
         	if(PlayerInfo[playerid][PlayerCeteID] != bolgebilgi[bolgid][sahipceteid]) return true;
         	if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] < 1500000 * bolgebilgi[bolgid][bolgeseviye]) return Hata(playerid, "Seviye atlatmak için çete bankasýnda yeterli para yok.");
         	new query[150];
			Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] -= 1500000 * bolgebilgi[bolgid][bolgeseviye];
			format(query, sizeof(query), "UPDATE `ceteler` SET `Kasa` = '%d' WHERE `ID` = '%d'", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa], PlayerInfo[playerid][PlayerCeteID] + 1);
			mysql_query(mysqlC, query);
			bolgebilgi[bolgid][bolgeseviye]++;
			format(query, sizeof(query), "UPDATE `bolgeler` SET `bolgeseviye` = '%d' WHERE `bolgeid` = '%d'", bolgebilgi[bolgid][bolgeseviye], bolgid);
			mysql_query(mysqlC, query);
			BolgeYukle(bolgid);
			SCM(playerid, -1, ""safaf"Bölgeniz baþarýyla seviye atladý! Tebrikler!");
	    }
	}

	if(dialogid == 97)
	{
	    if(!response) return ShowPlayerDialog(playerid, 94, DIALOG_STYLE_LIST, ""safaf"Bölge Yönetim Paneli", ""ww"Bölge Ýsmini Deðiþtir\n"ww"Bölgeyi Seviye Atlat\n"ww"Bölge Rengini Deðiþtir", ""ww"Seç", ""ww"Kapat");
		if(response)
		{
			new bolgid = GetBolgeID(playerid);
  			if(bolgid == -1) return true;
    		if(bolgebilgi[bolgid][bolgesaldiri] == true) return true;
     		if(PlayerInfo[playerid][PlayerCeteID] != bolgebilgi[bolgid][sahipceteid]) return true;
     		new query[150];
		    if(listitem == 0)
		    {
	          	format(query, sizeof(query), "UPDATE `bolgeler` SET `bolgerenk` = '1' WHERE `bolgeid` = '%d'", bolgid);
	          	mysql_query(mysqlC, query);
		    }
		    if(listitem == 1)
			{
	          	format(query, sizeof(query), "UPDATE `bolgeler` SET `bolgerenk` = '2' WHERE `bolgeid` = '%d'", bolgid);
	          	mysql_query(mysqlC, query);
		    }
		    if(listitem == 2)
		    {
	          	format(query, sizeof(query), "UPDATE `bolgeler` SET `bolgerenk` = '3' WHERE `bolgeid` = '%d'", bolgid);
	          	mysql_query(mysqlC, query);
		    }
		    if(listitem == 3)
		    {
		        format(query, sizeof(query), "UPDATE `bolgeler` SET `bolgerenk` = '4' WHERE `bolgeid` = '%d'", bolgid);
	          	mysql_query(mysqlC, query);
		    }
		    if(listitem == 4)
		    {
		        format(query, sizeof(query), "UPDATE `bolgeler` SET `bolgerenk` = '5' WHERE `bolgeid` = '%d'", bolgid);
	          	mysql_query(mysqlC, query);
		    }
		    BolgeYukle(bolgid);
			SendClientMessage(playerid, -1, ""safaf"Bölge rengi deðiþtirildi.");
		}
	}

	if(dialogid == DIALOG_ARKADASLARIM)
	{
	    if(!response) return true;
	    if(response)
	    {
   	 		if(listitem == GetPVarInt(playerid, "arkadas_sonsatir"))
	        {
	            ShowPlayerDialog(playerid, DIALOG_ARKADASLARIM_EKLE, DIALOG_STYLE_INPUT, ""safaf"Arkadaþlarým - Ekle", ""ww"Arkadaþ olarak eklemek istediðiniz kiþinin ID'sini girin:", ""ww"Ekle", ""ww"Ýptal");
	        }
	        else if(listitem == GetPVarInt(playerid, "arkadas_sonsatir") + 1)
	        {
	            ShowPlayerDialog(playerid, DIALOG_ARKADASLARIM_SIL, DIALOG_STYLE_INPUT, ""safaf"Arkadaþlarým - Sil", ""ww"Arkadaþlýktan silmek istediðiniz kiþinin ID'sini girin:", ""ww"Sil", ""ww"Ýptal");
	        }
	        //if(listitem < GetPVarInt(playerid, "arkadas_sonsatir"))
	        else
	        {
	            new id = Arkadaslar[playerid][listitem];
	            new sql[500], arkadasisim[MAX_PLAYER_NAME];
	            format(sql, sizeof(sql), "SELECT * FROM `arkadaslar` WHERE `ID` = '%d'", id);
	            mysql_query(mysqlC, sql);

	            cache_get_value_name(0, "arkadas", arkadasisim);
	            new idx = GetPlayerID(arkadasisim);
	            if(IsPlayerConnected(idx))
	            {
					if(lKatildim[idx] == 1 || lEtkinlikte[idx] == 1) return Hata(playerid, "Oyuncu þu anda etkinlikte.");
					if(Derbyde[idx] == true) return Hata(playerid,"Oyuncu þu anda derby'de.");
					if(PlayerInfo[idx][Parkour] == true) return Hata(playerid, "Oyuncu þu anda parkur'da.");
					if(CSDe[idx] == 1) return Hata(playerid,"Oyuncu þu an CS Minigame'de.");
					if(HungerGamede[idx] == 1) return Hata(playerid,"Oyuncu þu an Hunger Game'de.");
					if(Zombiede[idx] == 1) return Hata(playerid,"Oyuncu þu an Zombie'de.");
					if(GunGamedeAmk[idx] == true) return Hata(playerid,"Oyuncu þu an GunGame'de.");
					if(Speedydeaglede[idx] == true) return Hata(playerid, "Oyuncu þu an SpeedyDeagle'de.");
					if(dmde[idx] > 0 || dmyasagi[idx] == 1) return Hata(playerid, "Oyuncu þu an DM'de.");
					if(Bankada[idx] == true) return Hata(playerid, "Oyuncu þu anda bankada.");
					if(PlayerInfo[idx][Jailed] == 1) return Hata(playerid, "Oyuncu þu an hapiste.");
					if(duelloda[idx] == true) return Hata(playerid, "Oyuncu þu an düelloda.");
					if(Yarista[idx] == true) return Hata(playerid, "Oyuncu þu anda yarýþta.");
					if(RaceDuelde[idx] == true) return Hata(playerid, "Oyuncu þu anda race duelde.");

	                new Float: x, Float: y, Float: z;
	                GetPlayerPos(idx, x, y, z);
	                SetPlayerPos(playerid, x, y, z);
	                SetPlayerInterior(playerid, GetPlayerInterior(idx));
	                SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(idx));

	                SCM(playerid, -1, ""safaf"Arkadaþýnýza baþarýyla ýþýnlandýnýz.");
	            } else {
	                Hata(playerid, "Oyuncu oyunda deðil.");
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_ARKADASLARIM_EKLE)
	{
	    if(!response) return cmd_arkadaslarim(playerid, "");
	    if(response)
	    {
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARKADASLARIM_EKLE, DIALOG_STYLE_INPUT, ""safaf"Arkadaþlarým - Ekle", ""ww"Arkadaþ olarak eklemek istediðiniz kiþinin ID'sini girin:", ""ww"Ekle", ""ww"Ýptal"), Hata(playerid, "ID girmediniz.");
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARKADASLARIM_EKLE, DIALOG_STYLE_INPUT, ""safaf"Arkadaþlarým - Ekle", ""ww"Arkadaþ olarak eklemek istediðiniz kiþinin ID'sini girin:", ""ww"Ekle", ""ww"Ýptal"), Hata(playerid, "Sayýsal bir deðer girmelisiniz.");

	        new id = strval(inputtext);
	        if(ArkadasIstek[playerid] == false) return Hata(playerid, "Arkadaþ isteði almýyorken istek atamazsýnýz.");
	        if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	        if(id == playerid) return Hata(playerid, "Kendinizi arkadaþ olarak ekleyemezsiniz.");
	        if(ArkadasIstek[id] == false) return Hata(playerid, "Oyuncu arkadaþ isteklerini kapatmýþ.");
	        
	        new slm[500];
	        format(slm, sizeof(slm), "SELECT * FROM `arkadaslar` WHERE `arkadas` = '%s' AND `kullanici` = '%s'", getName(id), getName(playerid));
	        mysql_query(mysqlC, slm);
	        
	        if(cache_num_rows() > 0)
	        {
	            return Hata(playerid, "Kullanýcý zaten arkadaþýnýz.");
	        }
	        
	        format(slm, sizeof(slm), "SELECT * FROM `arkadaslar` WHERE `arkadas` = '%s' AND `kullanici` = '%s'", getName(playerid), getName(id));
	        mysql_query(mysqlC, slm);

	        if(cache_num_rows() > 0)
	        {
	            return Hata(playerid, "Kullanýcý zaten arkadaþýnýz.");
	        }

	        SetPVarInt(id, "Arkadaslik_Davetci", playerid);
	        new str[500];
	        format(str, sizeof(str), ""ww"%s(%d) adlý oyuncu sizi arkadaþ listesine eklemek istiyor.\n"ww"Kabul ediyor musunuz?\n"ww"(Ýstediði zaman size ýþýnlanabilecek.)", getName(playerid), playerid);
			ShowPlayerDialog(id, DIALOG_ARKADASLARIM_KABULRED, DIALOG_STYLE_MSGBOX, ""safaf"Arkadaþlýk Ýsteði", str, ""ww"Kabul Et", ""ww"Reddet");

			new sa[256], ilkmesaj;
			format(sa, sizeof(sa), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
			mysql_query(mysqlC, sa);
			
			SCM(playerid, -1, ""safaf"Arkadaþlýk isteði baþarýyla gönderildi.");

			cache_get_value_name_int(0, "basari_ilkarkadas", ilkmesaj);

			if(ilkmesaj == 0)
			{
			    SetPlayerScore(playerid, GetPlayerScore(playerid) + 5);
			    GivePlayerMoney(playerid, 5000);
			    PlayerInfo[playerid][score] = GetPlayerScore(playerid);
			    PlayerInfo[playerid][money] = GetPlayerMoney(playerid);

			    format(sa, sizeof(sa), "UPDATE `oyuncular` SET `basari_ilkarkadas` = '1' WHERE `kullaniciadi` = '%s'", getName(playerid));
			    mysql_query(mysqlC, sa);

			    SCM(playerid, -1, ""safaf"Ýlk arkadaþ baþarýsýný tamamladýn ve "wb"5 skor "w"+ "wb"5.000$ "w"kazandýn.");
			    SCM(playerid, -1, ""safaf"Tüm baþarýlarýna bakmak için "wb"/basarilarim "w"yazabilirsin.");
			}
		}
	}

	if(dialogid == DIALOG_ARKADASLARIM_KABULRED)
	{
	    if(!response)
	    {
	        SFM(GetPVarInt(playerid, "Arkadaslik_Davetci"), -1, ""safaf"%s(%d) adlý oyuncu arkadaþlýk isteðinizi kabul etmedi.", getName(playerid), playerid);
	    }
	    if(response)
	    {
	        if(IsPlayerConnected(GetPVarInt(playerid, "Arkadaslik_Davetci")))
	        {
		        new sql[500];
		        format(sql, sizeof(sql), "INSERT INTO `arkadaslar` (`arkadas`, `kullanici`) VALUES ('%s', '%s')", getName(playerid), getName(GetPVarInt(playerid, "Arkadaslik_Davetci")));
		        mysql_query(mysqlC, sql);

		        format(sql, sizeof(sql), "INSERT INTO `arkadaslar` (`arkadas`, `kullanici`) VALUES ('%s', '%s')", getName(GetPVarInt(playerid, "Arkadaslik_Davetci")), getName(playerid));
		        mysql_query(mysqlC, sql);

				SCM(playerid, -1, ""safaf"Arkadaþlýk isteðini baþarýyla kabul ettiniz. Arkadaþlarýnýzý görmek için "ad"/arkadaslarim "w"yazabilirsiniz.");
				SCM(GetPVarInt(playerid, "Arkadaslik_Davetci"), -1, ""safaf"Arkadaþlýk isteðiniz kabul edildi. Arkadaþlarýnýzý görmek için "ad"/arkadaslarim "w"yazabilirsiniz.");
			}
	    }
	}

	if(dialogid == DIALOG_ARKADASLARIM_SIL)
	{
	    if(!response) return cmd_arkadaslarim(playerid, "");
	    if(response)
	    {
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARKADASLARIM_SIL, DIALOG_STYLE_INPUT, ""safaf"Arkadaþlarým - Sil", ""ww"Arkadaþlýktan silmek istediðiniz kiþinin ID'sini girin:", ""ww"Sil", ""ww"Ýptal"), Hata(playerid, "ID girmediniz.");
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, DIALOG_ARKADASLARIM_SIL, DIALOG_STYLE_INPUT, ""safaf"Arkadaþlarým - Sil", ""ww"Arkadaþlýktan silmek istediðiniz kiþinin ID'sini girin:", ""ww"Sil", ""ww"Ýptal"), Hata(playerid, "Sayýsal bir deðer girmelisiniz.");

	        new id = strval(inputtext);
	        if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	        if(id == playerid) return Hata(playerid, "Kendinizi arkadaþ olarak ekleyemezsiniz.");

	        new str[500];
	        format(str, sizeof(str), "DELETE FROM `arkadaslar` WHERE `kullanici` = '%s' AND `arkadas` = '%s'", getName(playerid), getName(id));
	        mysql_query(mysqlC, str);

	        format(str, sizeof(str), "DELETE FROM `arkadaslar` WHERE `arkadas` = '%s' AND `kullanici` = '%s'", getName(playerid), getName(id));
	        mysql_query(mysqlC, str);

	        SFM(playerid, -1, ""safaf"%s(%d) adlý oyuncuyu baþarýyla arkadaþlýktan sildiniz.", getName(id), id);
	        SFM(id, -1, ""safaf"%s(%d) adlý oyuncu sizi arkadaþlýktan sildi.", getName(playerid), playerid);
	    }
	}

	if(dialogid == DIALOG_ASANSOR)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(AsansorAktif == true) return Hata(playerid, "Asansör baþkasý tarafýndan kullanýmda, lütfen bekleyiniz.");
	        switch(listitem)
	        {
	            case 0:
	            {
	                AsansorAktif = true;
	                AsansorKat = 20;
	                MoveDynamicObject(vip_anaasansor, -2158.5466, 1451.1968, 71.1809, 2.5);
	            }
	            case 1:
	            {
	                AsansorAktif = true;
	                AsansorKat = 0;
	                MoveDynamicObject(vip_anaasansor, -2159.36719, 1450.12793, 7.75996, 2.5);
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_SANSPAKETLERI)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(PlayerInfo[playerid][BitCoin] < 5) return Hata(playerid, "Bu paketi almak için yeterli BTC'niz bulunmamakta!");
	                KillTimer(KucukSansPaketiTimer[playerid]);
	                KucukSansPaketiSayim[playerid] = 0;
	                KucukSansPaketiTimer[playerid] = SetTimerEx("KucukSansPaketiAktif", 200, true, "d", playerid);
	                SCM(playerid, -1, ""safaf"Küçük boy þans paketi satýn aldýnýz. Þansýnýz bol olsun.");
	                PlayerInfo[playerid][BitCoin] -= 5;
	                SavePlayer(playerid);
	            }
	            case 1:
	            {
	                if(PlayerInfo[playerid][BitCoin] < 10) return Hata(playerid, "Bu paketi almak için yeterli BTC'niz bulunmamakta!");
	                KillTimer(OrtaSansPaketiTimer[playerid]);
	                OrtaSansPaketiSayim[playerid] = 0;
	                OrtaSansPaketiTimer[playerid] = SetTimerEx("OrtaSansPaketiAktif", 200, true, "d", playerid);
	                SCM(playerid, -1, ""safaf"Orta boy þans paketi satýn aldýnýz. Þansýnýz bol olsun.");
	                PlayerInfo[playerid][BitCoin] -= 10;
	                SavePlayer(playerid);
	            }
	            case 2:
	            {
	                if(PlayerInfo[playerid][BitCoin] < 15) return Hata(playerid, "Bu paketi almak için yeterli BTC'niz bulunmamakta!");
	                KillTimer(BuyukSansPaketiTimer[playerid]);
	                BuyukSansPaketiSayim[playerid] = 0;
	                BuyukSansPaketiTimer[playerid] = SetTimerEx("BuyukSansPaketiAktif", 200, true, "d", playerid);
	                SCM(playerid, -1, ""safaf"Büyük boy þans paketi satýn aldýnýz. Þansýnýz bol olsun.");
	                PlayerInfo[playerid][BitCoin] -= 15;
	                SavePlayer(playerid);
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_ASAYLIST_SECIM)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
			        new str[10000];
			        for(new i; i < sizeof(genel_bilgilendirme_asay); i++)
			        {
			            format(str, sizeof(str), "%s"ww"%s\n", str, genel_bilgilendirme_asay[i]);
			        }
					ShowPlayerDialog(playerid, DIALOG_ASAYLIST_GENELBILGILENDIRME, DIALOG_STYLE_LIST, ""safaf"Asay List - Genel Bilgilendirme", str, ""ww"Gönder", ""ww"Geri");
	            }
	            case 1:
	            {
	                new str[10000];
			        for(new i; i < sizeof(etkinlik_asay); i++)
			        {
			            format(str, sizeof(str), "%s"ww"%s\n", str, etkinlik_asay[i]);
			        }
	                ShowPlayerDialog(playerid, DIALOG_ASAYLIST_ETKINLIK, DIALOG_STYLE_LIST, ""safaf"Asay List - Etkinlik", str, ""ww"Gönder", ""ww"Geri");
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_ASAYLIST_GENELBILGILENDIRME)
	{
	    if(!response) return cmd_asaylist(playerid, "");
	    if(response)
	    {
	        cmd_asay(playerid, genel_bilgilendirme_asay[listitem]);
	    }
	}

	if(dialogid == DIALOG_ASAYLIST_ETKINLIK)
	{
	    if(!response) return cmd_asaylist(playerid, "");
	    if(response)
	    {
	        cmd_asay(playerid, etkinlik_asay[listitem]);
	    }
	}

	if(dialogid == DIALOG_BITCOIN_GENEL)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                new str[10000], satan[50], fiyat, id, toplamstr[10000], miktar;
	                mysql_query(mysqlC, "SELECT * FROM `bitcoin_satim` ORDER BY `fiyat` DESC LIMIT 500");

	                if(cache_num_rows() == 0) return Hata(playerid, "Satýþta hiç bitcoin yok!");

	                strcat(toplamstr, ""ww"ID\t"ww"Satan\t"ww"Miktar\t"ww"Fiyat\n");
	                for(new i; i < cache_num_rows(); ++i)
	                {
	                    cache_get_value_name_int(i, "ID", id);
	                    cache_get_value_name(i, "satici", satan);
	                    cache_get_value_name_int(i, "fiyat", fiyat);
	                    cache_get_value_name_int(i, "miktar", miktar);
	                    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s BTC\t"ww"$%s\n", str, id, satan, FormatMoney(miktar), FormatMoney(fiyat));
	                    BTC_al[playerid][i] = id;
	                }
	                strcat(toplamstr, str);

	                ShowPlayerDialog(playerid, DIALOG_BITCOIN_GENEL_ALIM, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Bitcoin Menüsü - Alým", toplamstr, ""ww"Al", ""ww"Ýptal");
	            }
	            case 1:
	            {
	                ShowPlayerDialog(playerid, DIALOG_BITCOIN_GENEL_SATIM1, DIALOG_STYLE_INPUT, ""safaf"Bitcoin Menüsü - Satým", ""ww"Satýlacak bitcoin sayýsý:", ""ww"Devam", ""ww"Çýkýþ");
	            }
	            case 2:
	            {
	                new str[500], toplamstr[1000];
	                format(str, sizeof(str), "\
					"ww"Bitcoin » Skor\n\
					"ww"Bitcoin » Para\n\
					"ad"==== BORSA ====\n");
					strcat(toplamstr, str);

					format(str, sizeof(str), ""ww"1 Bitcoin: "ad"%s"w"$\n"ww"1 Bitcoin: "ad"%s "w"skor", FormatMoney(borsadurumpara * 1), FormatMoney(borsadurumskor * 1));
					strcat(toplamstr, str);

					ShowPlayerDialog(playerid, DIALOG_BITCOIN_GENEL_DONUSTUR, DIALOG_STYLE_LIST, ""safaf"Bitcoin Menüsü - Dönüþtürme", toplamstr, ""ww"Seç", ""ww"Kapat");
	            }
	            case 3:
	            {
	                new str[500], toplam[800];

	                format(str, sizeof(str), "\\c"ad"Bitcoin Bilgilerim\n");
	                strcat(toplam, str);
	                format(str, sizeof(str), ""ww"Bitcoinlerim: %s\n", FormatMoney(PlayerInfo[playerid][BitCoin]));
	                strcat(toplam, str);
	                format(str, sizeof(str), ""ww"1 Bitcoin: %s$\n", FormatMoney(borsadurumpara * 1));
	                strcat(toplam, str);
	                format(str, sizeof(str), ""ww"1 Bitcoin: %s skor\n", FormatMoney(borsadurumskor * 1));
	                strcat(toplam, str);

	                ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Bitcoin Bilgilerim", toplam, ""ww"Kapat", "");
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_BITCOIN_GENEL_DONUSTUR)
	{
	    if(!response) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                ShowPlayerDialog(playerid, DIALOG_BITCOIN_GENEL_DONUSTUR11, DIALOG_STYLE_INPUT, ""safaf"Bitcoin Menüsü - Dönüþtürme", ""ww"Dönüþtürülecek bitcoin miktarýný girin:", ""ww"Dönüþtür", ""ww"Kapat");
	            }
	            case 1:
	            {
	                ShowPlayerDialog(playerid, DIALOG_BITCOIN_GENEL_DONUSTUR22, DIALOG_STYLE_INPUT, ""safaf"Bitcoin Menüsü - Dönüþtürme", ""ww"Dönüþtürülecek bitcoin miktarýný girin:", ""ww"Dönüþtür", ""ww"Kapat");
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_BITCOIN_GENEL_DONUSTUR22)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(!strlen(inputtext)) return Hata(playerid, "Bir deðer girmediniz.");
	        if(!IsNumeric(inputtext)) return Hata(playerid, "Sayýsal bir deðer girmelisiniz.");
	        if(PlayerInfo[playerid][BitCoin] < strval(inputtext)) return Hata(playerid, "Yeteri kadar bitcoin'iniz yok!");

	        GivePlayerMoney(playerid, borsadurumpara * strval(inputtext));
	        PlayerInfo[playerid][BitCoin] -= strval(inputtext);
	        SCM(playerid, -1, ""safaf"Dönüþüm baþarýyla tamamlandý.");
	    }
	}

	if(dialogid == DIALOG_BITCOIN_GENEL_DONUSTUR11)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(!strlen(inputtext)) return Hata(playerid, "Bir deðer girmediniz.");
	        if(!IsNumeric(inputtext)) return Hata(playerid, "Sayýsal bir deðer girmelisiniz.");
	        if(strval(inputtext) <= 0) return Hata(playerid, "En az 1 BTC dönüþtürebilirsiniz.");
	        if(strval(inputtext) > 5) return Hata(playerid, "En fazla 5 BTC dönüþtürebilirsiniz.");
	        if(PlayerInfo[playerid][BitCoin] < strval(inputtext)) return Hata(playerid, "Yeteri kadar bitcoin'iniz yok!");

	        SetPlayerScore(playerid, GetPlayerScore(playerid) + borsadurumskor * strval(inputtext));
	        PlayerInfo[playerid][BitCoin] -= strval(inputtext);
	        SCM(playerid, -1, ""safaf"Dönüþüm baþarýyla tamamlandý.");
	    }
	}

	if(dialogid == DIALOG_BITCOIN_GENEL_SATIM1)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(!strlen(inputtext)) return Hata(playerid, "Bir deðer girmelisiniz.");
	        if(!IsNumeric(inputtext)) return Hata(playerid, "Sayýsal bir deðer girmelisiniz.");
	        if(PlayerInfo[playerid][BitCoin] < strval(inputtext)) return Hata(playerid, "Yeterli bitcoin'iniz yok.");
	        if(strval(inputtext) <= 0) return Hata(playerid, "0 BTC ve altýný satamazsýnýz.");
	        if(strval(inputtext) > 5) return Hata(playerid, "Tek seferde en fazla 5 BTC satabilirsiniz.");

	        SetPVarInt(playerid, "bitcoinsatim_deger", strval(inputtext));
	        ShowPlayerDialog(playerid, DIALOG_BITCOIN_GENEL_SATIM2, DIALOG_STYLE_INPUT, ""safaf"Bitcoin Menüsü - Satým", ""ww"Satým fiyatý girin:", ""ww"Devam", ""ww"Çýkýþ");
	    }
	}

	if(dialogid == DIALOG_BITCOIN_GENEL_SATIM2)
	{
	    if(!response) return true;
	    if(response)
	    {
	        new xd = GetPVarInt(playerid, "bitcoinsatim_deger");
	        if(!strlen(inputtext)) return Hata(playerid, "Bir deðer girmelisiniz.");
	        if(!IsNumeric(inputtext)) return Hata(playerid, "Sayýsal bir deðer girmelisiniz.");
	        if(strval(inputtext) <= 0) return Hata(playerid, "Girdiðiniz ücret çok az.");
	        if(strval(inputtext) < (xd * borsadurumpara)) return Hata(playerid, "Girdiðiniz ücret çok az.");
	        if(strval(inputtext) > (xd * borsadurumpara) * 2) return Hata(playerid, "Girdiðiniz ücret çok fazla.");

	        new query[500], miktar = GetPVarInt(playerid, "bitcoinsatim_deger");
	        format(query, sizeof(query), "INSERT INTO `bitcoin_satim` (`miktar`, `satici`, `fiyat`) VALUES ('%d', '%s', '%d')", miktar, getName(playerid), strval(inputtext));
			mysql_query(mysqlC, query);

			PlayerInfo[playerid][BitCoin] -= miktar;

			SCM(playerid, -1, ""safaf"Bitcoinlerinizi baþarýyla satýþa çýkarttýnýz. Satýlmasýný bekleyin.");
		}
	}

	if(dialogid == DIALOG_BITCOIN_GENEL_ALIM)
	{
	    if(!response) return true;
	    if(response)
	    {
	        new sql[500], fiyat, miktar, satan[50];
	        new id = BTC_al[playerid][listitem];

	        format(sql, sizeof(sql), "SELECT * FROM `bitcoin_satim` WHERE `ID` = '%i'", id);
	        mysql_query(mysqlC, sql);

	        cache_get_value_name_int(0, "fiyat", fiyat);
	        cache_get_value_name_int(0, "miktar", miktar);
	        cache_get_value_name(0, "satici", satan);

	        if(GetPlayerMoney(playerid) < fiyat) return Hata(playerid, "Bunu alabilmek için paranýz yetersiz.");

	        new satanibul = GetPlayerID(satan);
	        if(IsPlayerConnected(satanibul))
	        {
	            GivePlayerMoney(satanibul, fiyat);
	            SCM(satanibul, -1, ""safaf"Satýþa çýkardýðýnýz bitcoin baþarýyla satýldý!");
	            SavePlayer(satanibul);
	        } else {
	            format(sql, sizeof(sql), "UPDATE `oyuncular` SET `money` = money+%d WHERE `kullaniciadi` = '%s'", fiyat, satan);
	            mysql_query(mysqlC, sql);
	        }

	        PlayerInfo[playerid][BitCoin] += miktar;

	        GivePlayerMoney(playerid, -fiyat);

			format(sql, sizeof(sql), "DELETE FROM `bitcoin_satim` WHERE `ID` = '%d'", id);
			mysql_query(mysqlC, sql);

	        SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s "w"bitcoin satýn aldýnýz.", FormatMoney(miktar));

	        SavePlayer(playerid);
	    }
	}

	if(dialogid == DIALOG_RCON)
	{
	    if(!response)
	    {
	        SCM(playerid, -1, ""safaf"Rcon giriþi "wb"baþarýsýz.");
	        kickle(playerid, "Yanlis Rcon");
	    }
	    if(response)
	    {
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_RCON, DIALOG_STYLE_INPUT, ""safaf"Rcon Güvenlik Sorusu", ""ww"NABER KANKS", ""ww"Cevapla", ""ww"Ban");
	        if(strlen(inputtext) < 1) return ShowPlayerDialog(playerid, DIALOG_RCON, DIALOG_STYLE_INPUT, ""safaf"Rcon Güvenlik Sorusu", ""ww"NABER KANKS", ""ww"Cevapla", ""ww"Ban");

	        if(!strcmp(inputtext, "yardimedin"))
	        {
	            SCM(playerid, -1, ""safaf"Rcon giriþi "ad"baþarýlý.");
	        }
	    }
	}

	if(dialogid == DIALOG_DUKKANGIT)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(listitem == 20)
	        {
				if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid, 5);
				
				new str[10000], toplamstr[10000], topstr[200], fiyat, id, sahipsTr[100], sql[500], sahip;
				
				format(sql, sizeof(sql), "SELECT * FROM `dukkanlar` ORDER BY `ID` ASC LIMIT %d, 20", dukkanlar_sayim[playerid]);
				mysql_query(mysqlC, sql);
				
				new xd;
				cache_get_row_count(xd);

				dukkanlar_sayim[playerid] += 20;

				format(topstr, sizeof(topstr), ""ww"ID\t"ww"Sahip\t"ww"Fiyat\n");
				strcat(toplamstr, topstr);

				new i = 0;
				while(i < xd)
				{
					format(sql, sizeof(sql), "SELECT * FROM `dukkanlar` ORDER BY `ID` ASC LIMIT %d, 20", dukkanlar_sayim[playerid]-20);
					mysql_query(mysqlC, sql);
				    cache_get_value_name_int(i, "sahip", sahip);
				    cache_get_value_name_int(i, "fiyat", fiyat);
				    cache_get_value_name_int(i, "ID", id);
				    dukkanlarx[playerid][i] = id;
				    switch(sahip)
			        {
			            case -1: sahipsTr = "Yok";
			            default: format(sahipsTr, sizeof(sahipsTr), "%s", SQL_Isim_Cek(sahip));
			        }
				    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\n", str,  id, sahipsTr, FormatMoney(fiyat));
				    i++;
				}
				strcat(toplamstr, str);

				mysql_query(mysqlC, "SELECT * FROM `dukkanlar`");
				if(cache_num_rows() > dukkanlar_sayim[playerid])
				{
				    strcat(toplamstr, ""wb"» "ad"Sonraki Sayfa "wb"«");
				}

				ShowPlayerDialog(playerid, DIALOG_DUKKANGIT, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Dükkan Listesi", toplamstr, ""ww"Seç", ""ww"Çýkýþ");
	        }
	        else
	        {
		        new sql[500], Float: ggX, Float: ggY, Float: ggZ;
		        format(sql, sizeof(sql), "SELECT * FROM `dukkanlar` WHERE `ID` = '%d'", dukkanlarx[playerid][listitem]);
		        mysql_query(mysqlC, sql);

		        cache_get_value_name_float(0, "X", ggX);
		        cache_get_value_name_float(0, "Y", ggY);
		        cache_get_value_name_float(0, "Z", ggZ);

		        SetPlayerPos(playerid, ggX, ggY, ggZ);
		        SCM(playerid, -1, ""safaf"Seçtiðiniz dükkana baþarýyla ýþýnlandýnýz.");
	        }
	    }
	}

	if(dialogid == DIALOG_CETEMEKANINAGIT)
	{
	    if(!response) return true;
	    if(response)
	    {
	        if(listitem == 20)
	        {
				if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid, 5);
				new str[10000], toplamstr[10000], topstr[200], fiyat, id, sql[500];
				new sahip;
				format(sql, sizeof(sql), "SELECT * FROM `cetemekanlari` ORDER BY `ID` ASC LIMIT %d, 20", cetemekan_sayim[playerid]);
				mysql_query(mysqlC, sql);

				cetemekan_sayim[playerid] += 20;

				format(topstr, sizeof(topstr), ""ww"ID\t"ww"Sahip\t"ww"Fiyat\n");

				for(new i; i < cache_num_rows(); i++)
				{
				    cache_get_value_name_int(i, "sahipcete", sahip);
				    cache_get_value_name_int(i, "fiyat", fiyat);
				    cache_get_value_name_int(i, "ID", id);
				    cetemekanlarix[playerid][i] = id;
				    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\n", str, id, Ceteler[sahip][cIsim], FormatMoney(fiyat));
				}

				strcat(toplamstr, topstr);
				strcat(toplamstr, str);

				mysql_query(mysqlC, "SELECT * FROM `cetemekanlari`");
				if(cache_num_rows() > cetemekan_sayim[playerid])
				    strcat(toplamstr, ""wb"» "ad"Sonraki Sayfa "wb"«");

				ShowPlayerDialog(playerid, DIALOG_CETEMEKANINAGIT, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Mekaný Listesi", toplamstr, ""ww"Seç", ""ww"Çýkýþ");
	        }
	        else
	        {
		        new sql[500], Float: ggX, Float: ggY, Float: ggZ;
		        format(sql, sizeof(sql), "SELECT * FROM `cetemekanlari` WHERE `ID` = '%d'", cetemekanlarix[playerid][listitem]);
		        mysql_query(mysqlC, sql);

		        cache_get_value_name_float(0, "X", ggX);
		        cache_get_value_name_float(0, "Y", ggY);
		        cache_get_value_name_float(0, "Z", ggZ);

		        SetPlayerPos(playerid, ggX, ggY, ggZ);
		        SCM(playerid, -1, ""safaf"Seçtiðiniz çete mekanýna baþarýyla ýþýnlandýnýz.");
	        }
	    }
	}

	if(dialogid == 9999) // savecar
	{
	    if(!response) return true;
		if(GetVehicleModel(PlayerInfo[playerid][Arac]) == 520 || GetVehicleModel(PlayerInfo[playerid][Arac]) == 425 || GetVehicleModel(PlayerInfo[playerid][Arac]) == 432)
		{
		    Hata(playerid, "Bu aracý kaydedemezsiniz!");
		    return false;
		}
		if(400 <= VehicleSave[listitem][playerid][17] <= 611)
		{
		    SetPVarInt(playerid, "modsecimid",listitem);
			ShowPlayerDialog(playerid, 9998 , DIALOG_STYLE_MSGBOX, ""safaf"Araç Kaydet", "\\c"ww"Bu bölme dolu. Üzerine yazýlsýn mý?",""ww"Yazýlsýn",""ww"Yazýlmasýn");
			return true;
		}
		for(new i;i<14;i++)
		{
			VehicleSave[listitem][playerid][i] = GetVehicleComponentInSlot(PlayerInfo[playerid][Arac], i);
		}
		VehicleSave[listitem][playerid][5]=0;
		VehicleSave[listitem][playerid][14] = GetVehiclePaintJob(PlayerInfo[playerid][Arac]);
		new color[2];
		GetVehicleColor(PlayerInfo[playerid][Arac], color[0], color[1]);
		VehicleSave[listitem][playerid][15] = color[0];
		VehicleSave[listitem][playerid][16] = color[1];
		VehicleSave[listitem][playerid][17] = GetVehicleModel(PlayerInfo[playerid][Arac]);
		SCM(playerid, -1, ""safaf"Aracýnýz baþarýlý bir þekilde kaydedildi.");
		return true;
 	}

 	if(dialogid == 9998) // uzerineyaz
 	{
 	    if(!response) return true;
		if(GetVehicleModel(PlayerInfo[playerid][Arac]) == 520 || GetVehicleModel(PlayerInfo[playerid][Arac]) == 425 || GetVehicleModel(PlayerInfo[playerid][Arac]) == 432)
		{
		    Hata(playerid, "Bu aracý kaydedemezsiniz!");
		    return false;
		}
		new modsecimid = GetPVarInt(playerid, "modsecimid");
		for(new i;i<14;i++)
		{
			VehicleSave[modsecimid][playerid][i] = GetVehicleComponentInSlot(PlayerInfo[playerid][Arac], i);
		}
		VehicleSave[modsecimid][playerid][5]=0;
  		VehicleSave[modsecimid][playerid][14] = GetVehiclePaintJob(PlayerInfo[playerid][Arac]);
		new color[2];
		GetVehicleColor(PlayerInfo[playerid][Arac], color[0], color[1]);
		VehicleSave[modsecimid][playerid][15] = color[0];
		VehicleSave[modsecimid][playerid][16] = color[1];
		VehicleSave[modsecimid][playerid][17] = GetVehicleModel(PlayerInfo[playerid][Arac]);
		SCM(playerid, -1, ""safaf"Aracýnýz baþarýlý bir þekilde kaydedildi.");
		return true;
 	}

 	if(dialogid == 9997) // loadcar
 	{
 	    if(!response) return true;
 	    if(!(400 <= VehicleSave[listitem][playerid][17] <= 611))
		{
			Hata(playerid, "Bu bölme boþ. Bir araç kaydetmeden çaðýramazsýnýz.");
			return true;
		}
		if(GetVehicleModel(VehicleSave[listitem][playerid][17]) == 520 || GetVehicleModel(VehicleSave[listitem][playerid][17]) == 425 || GetVehicleModel(VehicleSave[listitem][playerid][17]) == 432)
		{
		    Hata(playerid, "Bu aracý bu þekilde alamazsýnýz!");
		    return false;
		}
		CreatePlayerVehicle(playerid, VehicleSave[listitem][playerid][17]);
		for(new i; i < 14;i++)
		{
			if(VehicleSave[listitem][playerid][i] != 0) AddVehicleComponent(PlayerInfo[playerid][Arac], VehicleSave[listitem][playerid][i]);
		}
		if(VehicleSave[listitem][playerid][14] != 3)ChangeVehiclePaintjob(PlayerInfo[playerid][Arac], VehicleSave[listitem][playerid][14]);
		ChangeVehicleColor(PlayerInfo[playerid][Arac], VehicleSave[listitem][playerid][15],VehicleSave[listitem][playerid][16]);
		if(GetVehicleModel(PlayerInfo[playerid][Arac]) == 520 || GetVehicleModel(PlayerInfo[playerid][Arac]) == 425 || GetVehicleModel(PlayerInfo[playerid][Arac]) == 432)
		{
		    destroyVehicle(PlayerInfo[playerid][Arac]);
		    return Hata(playerid, "Bu aracý bu þekilde alamazsýnýz!");
		}
		SCM(playerid, -1, ""safaf"Aracýnýz baþarýlý bir þekilde çaðýrýldý. Keyifli sürüþler.");
		return true;
 	}

	if(dialogid == DIALOG_TOPTABLOLAR)
	{
	    if(!response)
	    {
	        return true;
	    }
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 1.11:
	            {
	                return cmd_topnoob(playerid, "");
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_SEARCH_AND_PLAY)
	{
	    if(!response)
	    {
	        return true;
	    }
	    if(response)
	    {
	        if(IsYouTubeVideoPlaying(gYoutubeIDForAll)) return Hata(playerid, "Zaten bir þarký çalýyor.");
			if(SearchResults[playerid][listitem][Link][0] == EOS) return false;
			gYoutubeIDForAll = PlayYoutubeVideoFor(SearchResults[playerid][listitem][Link]);
			SCM(playerid, -1, ""safaf"Ýsteðiniz iþleme alýndý. Þarký birazdan açýlacaktýr.");
            caliniyor = 1;
		}
	}

	if(dialogid == DIALOG_SARKILAR)
	{
	    if(!response)
	    {
	        return true;
	    }
	    else if(response)
	    {
            if(listitem == 25)
            {
			    if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
				new sql[500], topstr[1024], str[10000], strtopla[10000], strtopla2[10000], isim[500], id;
				format(sql, sizeof(sql), "SELECT `Isim`, `ID` FROM `sarkilar` LIMIT %d, 25", sarkilar_sayi[playerid]);
				mysql_query(mysqlC, sql);
				format(topstr, sizeof(topstr), ""ww"ID\t"ww"Ýsim");
				sarkilar_sayi[playerid] += 25;
				for(new i; i < cache_num_rows(); i++)
				{
				    cache_get_value_name_int(i, "ID",id);
				    cache_get_value_name(i, "Isim", isim, 500);
				    sarkilar[playerid][i] = id;
				    format(str, sizeof(str), ""ww"%d\t"ww"%s\n", id, code(isim));
				    strcat(strtopla, str);
				}
				mysql_query(mysqlC, "SELECT * FROM `sarkilar`");
				format(strtopla2, sizeof(strtopla2), "%s\n%s", topstr, strtopla);
				if(cache_num_rows() > sarkilar_sayi[playerid])
				    strcat(strtopla2, ""wb"» "ad"Sonraki Sayfa "wb"«");
				ShowPlayerDialog(playerid, DIALOG_SARKILAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Þarkýlar", strtopla2, ""ww"Aç", ""ww"Ýptal");
            } else {

            	if(IsYouTubeVideoPlaying(gYoutubeIDForAll)) return Hata(playerid, "Zaten bir þarký çalýyor.");

                new sql[500], link[1024], isim[500];
                format(sql, sizeof(sql), "SELECT * FROM `sarkilar` WHERE `ID` = '%d'", sarkilar[playerid][listitem]);
                mysql_query(mysqlC, sql);

                cache_get_value_name(0, "link", link, 1024);
                cache_get_value_name(0, "Isim", isim, 500);

                foreach(new i: Player)
                {
                    StopAudioStreamForPlayer(i);
                    PlayAudioStreamForPlayer(i, link);
                    SFM(i, -1, ""safaf"Yetkili "wb"%s(%i), %s "w"þarkýsýný açtý.", getName(playerid), playerid, code(isim));
                }

                SFM(playerid, -1, ""safaf"Seçtiðiniz "wb"%s "w"þarkýsý çalýnýyor.", code(isim));

                sarkisayim[playerid]++;
            }
	    }
	}

    if(dialogid == 7899)
    {
        if(!response)
        {
            return true;
        }
        if(response)
        {
            switch(listitem)
            {
                case 0:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_parkur(playerid,"");
                }
                case 1:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_derbykatil(playerid,"");
                }
                case 2:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    //cmd_tdmkatil(playerid,"");
                }
                case 3:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_cs(playerid,"");
                }
                case 4:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_gungame(playerid,"");
                }
                case 5:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_hg(playerid,"");
                }
                case 6:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_zombie(playerid,"");
                }
                 case 7:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_speedydeagle(playerid,"");
                }
                case 8:
                {
                	ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_labirent(playerid,"");
                }
				case 9:
				{
					ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_yarisgit(playerid,"");
				}
            }
        }
    }

	if(dialogid == 18745)
	{
		if(!response)
		{
			return true;
		}
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					new str[500];
					strcat(str,""ww"Desert Eagle\n");
					strcat(str,""ww"Shotgun\n");
					strcat(str,""ww"Sniper Rifle\n");
					strcat(str,""ww"Sawnoff Shotgun\n");
					strcat(str,""ww"Micro SMG/Uzi\n");
					strcat(str,""ww"Tec-9\n");
					strcat(str,""ww"Combat Shotgun\n");
					strcat(str,""ww"M4\n");
					strcat(str,""ww"AK-47\n");
					ShowPlayerDialog(playerid,18746,DIALOG_STYLE_LIST,""safaf"Spawn silahý seç",str,""ww"Seç",""ww"Kapat");
				}
				case 1:
				{
					new str[500];
					strcat(str,""ww"Desert Eagle\n");
					strcat(str,""ww"Shotgun\n");
					strcat(str,""ww"Sniper Rifle\n");
					strcat(str,""ww"Sawnoff Shotgun\n");
					strcat(str,""ww"Micro SMG/Uzi\n");
					strcat(str,""ww"Tec-9\n");
					strcat(str,""ww"Combat Shotgun\n");
					strcat(str,""ww"M4\n");
					strcat(str,""ww"AK-47\n");
					ShowPlayerDialog(playerid,18747,DIALOG_STYLE_LIST,""safaf"Spawn silahý seç",str,""ww"Seç",""ww"Kapat");
				}
				case 2:
				{
					new str[500];
					strcat(str,""ww"Desert Eagle\n");
					strcat(str,""ww"Shotgun\n");
					strcat(str,""ww"Sniper Rifle\n");
					strcat(str,""ww"Sawnoff Shotgun\n");
					strcat(str,""ww"Micro SMG/Uzi\n");
					strcat(str,""ww"Tec-9\n");
					strcat(str,""ww"Combat Shotgun\n");
					strcat(str,""ww"M4\n");
					strcat(str,""ww"AK-47\n");
					ShowPlayerDialog(playerid,18748,DIALOG_STYLE_LIST,""safaf"Spawn silahý seç",str,""ww"Seç",""ww"Kapat");
				}
				case 3:
				{
					new str[500];
					strcat(str,""ww"Desert Eagle\n");
					strcat(str,""ww"Shotgun\n");
					strcat(str,""ww"Sniper Rifle\n");
					strcat(str,""ww"Sawnoff Shotgun\n");
					strcat(str,""ww"Micro SMG/Uzi\n");
					strcat(str,""ww"Tec-9\n");
					strcat(str,""ww"Combat Shotgun\n");
					strcat(str,""ww"M4\n");
					strcat(str,""ww"AK-47\n");
					ShowPlayerDialog(playerid,18749,DIALOG_STYLE_LIST,""safaf"Spawn silahý seç",str,""ww"Seç",""ww"Kapat");
				}
			}
		}
	}

	if(dialogid == 18746)
	{
		if(!response)
		{
			return cmd_spawnsilahlari(playerid,"");
		}
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SetPVarInt(playerid,"spawnsilah1",24);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 1:
				{
					SetPVarInt(playerid,"spawnsilah1",25);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 2:
				{
					SetPVarInt(playerid,"spawnsilah1",34);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 3:
				{
					SetPVarInt(playerid,"spawnsilah1",26);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 4:
				{
					SetPVarInt(playerid,"spawnsilah1",28);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 5:
				{
					SetPVarInt(playerid,"spawnsilah1",32);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 6:
				{
					SetPVarInt(playerid,"spawnsilah1",27);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 7:
				{
					SetPVarInt(playerid,"spawnsilah1",31);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 8:
				{
					SetPVarInt(playerid,"spawnsilah1",30);
					SpawnSilahiSecti[playerid] = 1;
				}
			}
		}
	}

	if(dialogid == 18747)
	{
		if(!response)
		{
			return cmd_spawnsilahlari(playerid,"");
		}
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SetPVarInt(playerid,"spawnsilah2",24);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 1:
				{
					SetPVarInt(playerid,"spawnsilah2",25);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 2:
				{
					SetPVarInt(playerid,"spawnsilah2",34);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 3:
				{
					SetPVarInt(playerid,"spawnsilah2",26);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 4:
				{
					SetPVarInt(playerid,"spawnsilah2",28);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 5:
				{
					SetPVarInt(playerid,"spawnsilah2",32);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 6:
				{
					SetPVarInt(playerid,"spawnsilah2",27);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 7:
				{
					SetPVarInt(playerid,"spawnsilah2",31);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 8:
				{
					SetPVarInt(playerid,"spawnsilah2",30);
					SpawnSilahiSecti[playerid] = 1;
				}
			}
		}
	}

	if(dialogid == 18748)
	{
		if(!response)
		{
			return cmd_spawnsilahlari(playerid,"");
		}
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SetPVarInt(playerid,"spawnsilah3",24);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 1:
				{
					SetPVarInt(playerid,"spawnsilah3",25);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 2:
				{
					SetPVarInt(playerid,"spawnsilah3",34);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 3:
				{
					SetPVarInt(playerid,"spawnsilah3",26);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 4:
				{
					SetPVarInt(playerid,"spawnsilah3",28);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 5:
				{
					SetPVarInt(playerid,"spawnsilah3",32);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 6:
				{
					SetPVarInt(playerid,"spawnsilah3",27);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 7:
				{
					SetPVarInt(playerid,"spawnsilah3",31);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 8:
				{
					SetPVarInt(playerid,"spawnsilah3",30);
					SpawnSilahiSecti[playerid] = 1;
				}
			}
		}
	}

	if(dialogid == 18749)
	{
		if(!response)
		{
			return cmd_spawnsilahlari(playerid,"");
		}
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SetPVarInt(playerid,"spawnsilah4",24);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 1:
				{
					SetPVarInt(playerid,"spawnsilah4",25);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 2:
				{
					SetPVarInt(playerid,"spawnsilah4",34);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 3:
				{
					SetPVarInt(playerid,"spawnsilah4",26);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 4:
				{
					SetPVarInt(playerid,"spawnsilah4",28);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 5:
				{
					SetPVarInt(playerid,"spawnsilah4",32);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 6:
				{
					SetPVarInt(playerid,"spawnsilah4",27);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 7:
				{
					SetPVarInt(playerid,"spawnsilah4",31);
					SpawnSilahiSecti[playerid] = 1;
				}
				case 8:
				{
					SetPVarInt(playerid,"spawnsilah4",30);
					SpawnSilahiSecti[playerid] = 1;
				}
			}
		}
	}

    if(dialogid == 12385)
    {
        if(!response)
        {
            return ShowPlayerDialog(playerid,12385,DIALOG_STYLE_LIST,""ww"CS Minigame Weapon Selection Menu",""ww"Deagle + Shotgun + Grenade\n"ww"M4 + Shotgun + Smoke Grenade\n"ww"MP5 + AK47 + Grenade\n"ww"Sniper + Shotgun + Smoke Grenade\n"ww"Country Rifle + AK47 + Grenade",""ww"Seç","");
        }
        if(response)
        {
            switch(listitem)
            {
                case 0:
                {
                    ResetPlayerWeapons(playerid);
                    GivePlayerWeapon(playerid,24,5000);
                    GivePlayerWeapon(playerid,25,5000);
                    GivePlayerWeapon(playerid,16,1);
                    TogglePlayerControllable(playerid,1);
                    SetPlayerHealth(playerid,100.0);
                    SetPlayerArmour(playerid,100.0);
                    SetPlayerVirtualWorld(playerid,67);
                }
                case 1:
                {
                    ResetPlayerWeapons(playerid);
                    GivePlayerWeapon(playerid,31,5000);
                    GivePlayerWeapon(playerid,25,5000);
                    GivePlayerWeapon(playerid,17,1);
                    TogglePlayerControllable(playerid,1);
                    SetPlayerHealth(playerid,100.0);
                    SetPlayerArmour(playerid,100.0);
                    SetPlayerVirtualWorld(playerid,67);
                }
                case 2:
                {
                    ResetPlayerWeapons(playerid);
                    GivePlayerWeapon(playerid,29,5000);
                    GivePlayerWeapon(playerid,30,5000);
                    GivePlayerWeapon(playerid,16,1);
                    TogglePlayerControllable(playerid,1);
                    SetPlayerHealth(playerid,100.0);
                    SetPlayerArmour(playerid,100.0);
                    SetPlayerVirtualWorld(playerid,67);
                }
                case 3:
                {
                    ResetPlayerWeapons(playerid);
                    GivePlayerWeapon(playerid,25,5000);
                    GivePlayerWeapon(playerid,34,5000);
                    GivePlayerWeapon(playerid,17,1);
                    TogglePlayerControllable(playerid,1);
                    SetPlayerHealth(playerid,100.0);
                    SetPlayerArmour(playerid,100.0);
                    SetPlayerVirtualWorld(playerid,67);
                }
                case 4:
                {
                    ResetPlayerWeapons(playerid);
                    GivePlayerWeapon(playerid,33,5000);
                    GivePlayerWeapon(playerid,30,5000);
                    GivePlayerWeapon(playerid,16,1);
                    TogglePlayerControllable(playerid,1);
                    SetPlayerHealth(playerid,100.0);
                    SetPlayerArmour(playerid,100.0);
                    SetPlayerVirtualWorld(playerid,67);
                }
            }
        }
    }

    if(dialogid == 12384)
    {
        if(!response)
        {
            return true;
        }
        if(response)
        {
            HideModelSelectionMenu(playerid);
            switch(listitem)
            {
                case 0:
                {
                    HideModelSelectionMenu(playerid);
                    ResetPlayerWeapons(playerid);
                    SetPlayerSkin(playerid,285);
                    SetPlayerPos(playerid,-2302.3467,-1517.1411,1287.8210);
                    CSTeamCT[playerid] = 1;
                    CSDe[playerid] = 1;
                    format(estring, sizeof estring, "~r~~h~[CS] ~w~~h~~h~%s(%i) adli oyuncu CS'ye katildi! ~r~~h~(/cs)", getName(playerid), playerid);
                    TextMesaji(code(estring));
                    TogglePlayerControllable(playerid,0);
                    SetCameraBehindPlayer(playerid);
                    ShowPlayerDialog(playerid,12385,DIALOG_STYLE_LIST,""ww"CS Minigame Weapon Selection Menu",""ww"Deagle + Shotgun + Grenade\n"ww"M4 + Shotgun + Smoke Grenade\n"ww"MP5 + AK47 + Grenade\n"ww"Sniper + Shotgun + Smoke Grenade\n"ww"Country Rifle + AK47 + Grenade",""ww"Seç","");
                }
                case 1:
                {
                    HideModelSelectionMenu(playerid);
                    ResetPlayerWeapons(playerid);
                    SetPlayerSkin(playerid,114);
                    SetPlayerPos(playerid,-2302.1980,-1566.1785,1287.8210);
                    CSTeamT[playerid] = 1;
                    CSDe[playerid] = 1;
                    format(estring, sizeof estring, "~r~~h~[CS] ~w~~h~~h~%s(%i) adli oyuncu CS'ye katildi! ~r~~h~(/cs)", getName(playerid), playerid);
                    TextMesaji(code(estring));
                    TogglePlayerControllable(playerid,0);
                    SetCameraBehindPlayer(playerid);
                    ShowPlayerDialog(playerid,12385,DIALOG_STYLE_LIST,""ww"CS Minigame Weapon Selection Menu",""ww"Deagle + Shotgun + Grenade\n"ww"M4 + Shotgun + Smoke Grenade\n"ww"MP5 + AK47 + Grenade\n"ww"Sniper + Shotgun + Smoke Grenade\n"ww"Country Rifle + AK47 + Grenade",""ww"Seç","");
                }
            }
        }
    }

    if(dialogid == 17178)
    {
        if(!response)
        {
            return true;
        }
        if(response)
        {
            HideModelSelectionMenu(playerid);
            switch(listitem)
            {
                case 0:
                {
                    SetPlayerSkin(playerid,162);
                    SetPlayerPos(playerid,-1792.4313,811.4731,342.1284);
                    ResetPlayerWeapons(playerid);
                    GivePlayerWeapon(playerid,4,500);
                    GivePlayerWeapon(playerid,8,500);
                    GivePlayerWeapon(playerid,9,500);
                    SetPlayerMaxHealth(playerid, 200.0);
                    SetPlayerHealth(playerid,200.0);
                    HideModelSelectionMenu(playerid);
                    SetPlayerArmour(playerid,100.0);
                    ZombieTeamZombieCount++;
                    ZombieTeamZombie[playerid] = 1;
                    Zombiede[playerid] = 1;
                    format(estring, sizeof estring, "~r~~h~[ZOMBIE] ~w~~h~~h~%s(%i) adli oyuncu Zombie'ye katildi! ~r~~h~(/zombie)", getName(playerid), playerid);
                    TextMesaji(estring);
                    TogglePlayerControllable(playerid,0);
                }
                case 1:
                {
                    SetPlayerSkin(playerid,286);
                    SetPlayerPos(playerid,-1762.6693,880.4736,342.1284);
                    ResetPlayerWeapons(playerid);
                    GivePlayerWeapon(playerid,24,500);
                    GivePlayerWeapon(playerid,30,500);
                    SetPlayerMaxHealth(playerid, 150.00);
                    HideModelSelectionMenu(playerid);
                    SetPlayerHealth(playerid,150.0);
                    SetPlayerArmour(playerid,100.0);
                    ZombieTeamHuman[playerid] = 1;
                    ZombieTeamHumanCount++;
                    Zombiede[playerid] = 1;
                    format(estring, sizeof estring, "~r~~h~[ZOMBIE] ~w~~h~~h~%s(%i) adli oyuncu Zombie'ye katildi! ~r~~h~(/zombie)", getName(playerid), playerid);
                    TextMesaji(estring);
                    TogglePlayerControllable(playerid,0);
                }
            }
        }
    }

    if(dialogid == 1717)
    {
        if(!response)
        {
            return true;
        }
        if(response)
        {
            new idd = GetPVarInt(playerid,"pmci");
            if(idd == -1)
            {
                return true;
            }
            if(!strlen(inputtext))
            {
                return Hata(playerid,"Bir deðer girmelisiniz.");
            }
            new MMM[500];
            format(MMM, sizeof(MMM),""ww""wb"[PM] "w"%s(%i) "wb"> "w"%s(%i) "wb": "w"%s",getName(playerid),playerid,getName(idd),idd,inputtext);
            SendClientMessage(playerid,-1,MMM);
            SendClientMessage(idd,-1,MMM);
        }
    }

    if(dialogid == 17547)
    {
        if(!response)
        {
            return true;
        }
        if(response)
        {
            switch(listitem)
            {
                case 0:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_nickdegistir(playerid,"");
                }
                case 1:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_sifredegistir(playerid,"");
                }
                case 2:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    new str[50];
                    format(str,sizeof(str),"%d",playerid);
                    cmd_stats(playerid,str);
                }
                case 3:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_skoryolla(playerid,"");
                }
                case 4:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_parayolla(playerid,"");
                }
                case 5:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_glkrediyolla(playerid,"");
                }
                case 6:
                {
                    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
                    cmd_expyolla(playerid,"");
                }
                case 7:
                {
				    switch(GetPVarInt(playerid, "duello_istek"))
				    {
				        case 0:
				        {
				            SetPVarInt(playerid, "duello_istek", 1);
				            cmd_omenu(playerid, "");
				        }
				        case 1:
				        {
				            SetPVarInt(playerid, "duello_istek", 0);
				            cmd_omenu(playerid, "");
				        }
				    }
                }
                case 8:
                {
				    switch(wshizlanma[playerid])
				    {
				        case false:
				        {
				            wshizlanma[playerid] = true;
				            cmd_omenu(playerid, "");
				        }
				        case true:
				        {
				            wshizlanma[playerid] = false;
				            cmd_omenu(playerid, "");
				        }
				    }
                }
                case 9:
                {
				    switch(EkstraZiplama[playerid])
				    {
				        case false:
				        {
				            EkstraZiplama[playerid] = true;
				            cmd_omenu(playerid, "");
				        }
				        case true:
				        {
				            EkstraZiplama[playerid] = false;
				            cmd_omenu(playerid, "");
				        }
				    }
                }
                case 10:
                {
				    switch(ArkadasIstek[playerid])
				    {
				        case false:
				        {
				            ArkadasIstek[playerid] = true;
				            cmd_omenu(playerid, "");
				        }
				        case true:
				        {
				            ArkadasIstek[playerid] = false;
				            cmd_omenu(playerid, "");
				        }
				    }
                }
                case 11:
                {
                    ShowPlayerDialog(playerid, DIALOG_KISISEL_DURUM, DIALOG_STYLE_INPUT, ""safaf"Kiþisel Durum", ""ww"Yeni kiþisel durumunuzu girin:", ""ww"Tamam", ""ww"Ýptal");
                }
            }
        }
    }

	if(dialogid == 556)
	{
	if(!response)
	return true;
	if(response)
	{
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~sarki acti.",getName(playerid),playerid);
	TextMesaji(code(estring));
	SetTimer("textt2",500,false);
	sarkisayim[playerid]++;
	foreach(new x:Player)
	{
		StopAudioStreamForPlayer(x);
	}
	switch(listitem)
{
    case 0:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/813d54vk46/Sagopa_Kajmer_-_366.G_n_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Sagopa Kajmer - 366.Gün", getName(playerid), playerid);


   SendClientMessageToAll(-1, string);
    }
    case 1:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/q2f3qscbny/Sagopa_Kajmer_-_Sertlik_Kan_nda_Var_Hayat_n_Official_Video_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Sagopa Kajmer - Sertlik Kanýnda Var Hayatýn", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 2:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/vofm54lnou/Kolera_-_Pespaye_Video_Klip_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Kolera - Pespaye", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 3:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/3cqdb7xr0k/Lariss_-_Dale_Papi_Official_Video_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Lariss - Dale Papi", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 4:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/w8hou1k0ei/Calvin_Harris_feat._Ellie_Goulding_-_Outside_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Calvin Harris - Outside ft. Ellie Goulding", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 5:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/03s8vptmet/No.1_-_i_eklerde_bir_tela_var_official_video_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: No.1 - Çiçeklerde bir telaþ var", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 6:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/x2szj7wq56/Norm_Ender_-_Kakt_s_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Norm Ender - Kaktüs", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 7:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://radyo.dogannet.tv/turkpop");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Radyo - HITPLAY", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 8:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://radyo.dogannet.tv/turkrap");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Radyo - RAP", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
   }
    case 9:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/imx3pn6zeq/Heijan_feat_Muti_-_Davay_Davay_2017_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Heijan feat Muti - Davay Davay(2017)", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 10:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/z762fhx8lv/a_atay_Akman_-_Sensin_Benim_En_Derin_Kuyum_Official_Video_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Çaðatay Akman - Sensin Benim En Derin Kuyum", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 11:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/zb3hscvdj6/INNA_-_Gimmie_Gimmie_-_Official_Music_Video_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: INNA - Gimmie Gimmie", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 12:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/mrtsb3zxfw/Bitti_Art_k_Bu_Sevda_BERAT_TOKS_Z_ft._Bar_Ko_ak_s_zleri_asa_da_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Bitti Artýk Bu Sevda BERAT TOKSÖZ(ft. Barýþ Koçak)", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 13:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/jk2csxgbfn/Kolera_Feat._Sagopa_Kajmer_-_H_r_nlar_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Kolera Feat. Sagopa Kajmer - Hýrçýnlar", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
    case 14:
    {
	for(new u; u < MAX_PLAYERS; u++)
	{
		PlayAudioStreamForPlayer(u, "http://k003.kiwi6.com/hotlink/yjft4wtvp6/Super_Sako_Ft_Spitakci_Hayko_-_Mi_Gna_-_from_YouTube.mp3");
	}
	new string[1000];

   format(string, sizeof(string), ""safaf"%s(%i) adlý yetkili þarký açtý: Super Sako Mi Gna - ft: Hayko", getName(playerid), playerid);

   SendClientMessageToAll(-1, string);
    }
	}
	}
	}

	if(dialogid == DIALOG_TOPLIST)
	{
		if(!response)
		{
		    return true;
		}
		if(response)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            cmd_topscore(playerid,"");
		        }
		        case 1:
		        {
		            cmd_topmoney(playerid,"");
		        }
		        case 2:
		        {
		            cmd_topkill(playerid,"");
		        }
		        case 3:
		        {
		            cmd_toponline(playerid,"");
		        }
                case 4:
                {
                    cmd_topnoob(playerid, "");
                }
                case 5:
                {
                    cmd_topheadshot(playerid, "");
                }
                case 6:
                {
                    cmd_topbtc(playerid, "");
                }
                case 7:
                {
                    cmd_toplevel(playerid, "");
                }
		    }
		}
	}

	if(dialogid == 5121)
	{
	    if(!response){
	    return true;}
		if(response)
		{
			SetPlayerPos(playerid, sonpos[playerid][0], sonpos[playerid][1], sonpos[playerid][2]);
			SetPlayerFacingAngle(playerid, pos4[playerid]);
			SetCameraBehindPlayer(playerid);
			SendClientMessage(playerid, -1, ""safaf"Baþarýyla son öldüðünüz yere ýþýnlandýnýz.");
		}
	}

	if(dialogid == 67)
	{
		if(!response) return cmd_shop(playerid, "");
		switch(listitem)
		{
			case 0:
			{
				if(spamProtect(playerid, "50kredi", 60))return true;
				if(PlayerInfo[playerid][GLKredi] < 200) return SendClientMessage(playerid, -1, ""safaf"50 Skor alabilmek için yeterli GLKredi'niz yok.");
				new s;
				s = PlayerInfo[playerid][GLKredi];
				PlayerInfo[playerid][GLKredi] = s-200;
				SetPlayerScore(playerid, GetPlayerScore(playerid) + 50);
				SendClientMessage(playerid, 0x0000FFAA, ""safaf"Baþarýyla 50 skor satýn aldýnýz.");
				SavePlayer(playerid);
			}
			case 1:
			{
				if(spamProtect(playerid, "100kredi", 60))return true;
				if(PlayerInfo[playerid][GLKredi] < 250) return SendClientMessage(playerid, -1, ""safaf"100 Skor alabilmek için yeterli GLKredi'niz yok.");
				new s;
				s = PlayerInfo[playerid][GLKredi];
				PlayerInfo[playerid][GLKredi] = s-250;
				SetPlayerScore(playerid, GetPlayerScore(playerid) + 100);
				SendClientMessage(playerid, 0x33FF00AA, ""safaf"Baþarýyla skor aldýnýz.");
				SavePlayer(playerid);
			}
			case 2:
			{
				if(spamProtect(playerid, "250kredi", 60))return true;
				if(PlayerInfo[playerid][GLKredi] < 400) return SendClientMessage(playerid, -1, ""safaf"250 Skor alabilmek için yeterli GLKredi'niz yok.");
				new s;
				s = PlayerInfo[playerid][GLKredi];
				PlayerInfo[playerid][GLKredi] = s-400;
				SetPlayerScore(playerid, GetPlayerScore(playerid) + 250);
				SendClientMessage(playerid, 0x0000FFAA, ""safaf"Baþarýyla 250 skor satýn aldýnýz.");
				SavePlayer(playerid);
			}
		}
	}

	if(dialogid == 78)
	{
	if(!response)
	return cmd_shop(playerid,"");
	switch(listitem)
{
    case 0:
    {
    if(GetPlayerScore(playerid) < 5000 || PlayerInfo[playerid][onlinet] < 259200)return Hata(playerid,"50 Ölüm silmeniz için '5.000' skor ve '3 gün' online süren olmalýdýr!");
    if((PlayerInfo[playerid][Olum] < 50))return Hata(playerid,""safaf"Ölüm sayýnýz zaten 50'den az.");
	new s;
	s = PlayerInfo[playerid][Olum];
	PlayerInfo[playerid][Olum] = s-50;
	format(fstring, 256, "UPDATE `oyuncular` SET Deaths = '%d' WHERE `kullaniciadi` = '%s'", s-50, getName(playerid));
 	mysql_query(mysqlC, fstring);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)-5000);
 	SendClientMessage(playerid,-1,""safaf"Baþarýyla 50 ölüm sildiniz.");
 	SavePlayer(playerid);
    }
    case 1:
    {
    if(GetPlayerScore(playerid) < 3000 || PlayerInfo[playerid][onlinet] < 259200)return Hata(playerid,"30 Ölüm silmeniz için {FF0000}'3.000'{FFFFFF} skor ve {FF0000}'3 gün'{FFFFFF} online süren olmalýdýr!");
    if((PlayerInfo[playerid][Olum] < 30))return Hata(playerid,""safaf"Ölüm sayýnýz zaten 30'dan az.");
	new s;
	s = PlayerInfo[playerid][Olum];
	PlayerInfo[playerid][Olum] = s-30;
	format(fstring, 256, "UPDATE `oyuncular` SET Deaths = '%d' WHERE `kullaniciadi` = '%s'", s-30, getName(playerid));
 	mysql_query(mysqlC, fstring);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)-3000);
 	SendClientMessage(playerid,-1,""safaf"Baþarýyla 30 ölüm sildiniz.");
 	SavePlayer(playerid);
    }
    case 2:
    {
    if(GetPlayerScore(playerid) < 1000 || PlayerInfo[playerid][onlinet] < 86400)return Hata(playerid,"15 Ölüm silmeniz için {FF0000}'1.000'{FFFFFF} skor ve {FF0000}'1 gün'{FFFFFF} online süren olmalýdýr!");
    if((PlayerInfo[playerid][Olum] < 15))return Hata(playerid,""safaf"Ölüm sayýnýz zaten 15'ten az.");
	new s;
	s = PlayerInfo[playerid][Olum];
	PlayerInfo[playerid][Olum] = s-15;
	format(fstring, 256, "UPDATE `oyuncular` SET Deaths = '%d' WHERE `kullaniciadi` = '%s'", s-15, getName(playerid));
 	mysql_query(mysqlC, fstring);
	SetPlayerScore(playerid, GetPlayerScore(playerid)-1000);
	SendClientMessage(playerid,-1,""safaf"Baþarýyla 15 ölüm sildiniz.");
	SavePlayer(playerid);
    }
    case 3:
    {
    }
    case 4:
    {
    if(PlayerInfo[playerid][GLKredi] < 500 || PlayerInfo[playerid][onlinet] < 259200)return Hata(playerid,"50 Ölüm silmeniz için {FF0000}'500'{FFFFFF} GLKredi ve {FF0000}'3 gün'{FFFFFF} online süren olmalýdýr!");
    if((PlayerInfo[playerid][Olum] < 50))return Hata(playerid,""safaf"Ölüm sayýnýz zaten 50'den az.");
	new s;
	s = PlayerInfo[playerid][Olum];
	PlayerInfo[playerid][Olum] = s-50;
	format(fstring, 256, "UPDATE `oyuncular` SET Deaths = '%d' WHERE `kullaniciadi` = '%s'", s-50, getName(playerid));
 	mysql_query(mysqlC, fstring);
	new x;
	x = PlayerInfo[playerid][GLKredi];
	PlayerInfo[playerid][GLKredi] = x-500;
 	SendClientMessage(playerid,-1,""safaf"Baþarýyla 50 ölüm sildiniz.");
 	SavePlayer(playerid);
    }
    case 5:
    {
    if(PlayerInfo[playerid][GLKredi] < 300 || PlayerInfo[playerid][onlinet] < 259200)return Hata(playerid,"30 Ölüm silmeniz için {FF0000}'300'{FFFFFF} GLKredi ve {FF0000}'3 gün'{FFFFFF} online süren olmalýdýr!");
    if((PlayerInfo[playerid][Olum] < 30))return Hata(playerid,""safaf"Ölüm sayýnýz zaten 30'dan az.");
	new s;
	s = PlayerInfo[playerid][Olum];
	PlayerInfo[playerid][Olum] = s-30;
	format(fstring, 256, "UPDATE `oyuncular` SET Deaths = '%d' WHERE `kullaniciadi` = '%s'", s-30, getName(playerid));
 	mysql_query(mysqlC, fstring);
	new x;
	x = PlayerInfo[playerid][GLKredi];
	PlayerInfo[playerid][GLKredi] = x-300;
 	SendClientMessage(playerid,-1,""safaf"Baþarýyla 30 ölüm sildiniz.");
 	SavePlayer(playerid);
    }
    case 6:
    {
    if(PlayerInfo[playerid][GLKredi] < 150 || PlayerInfo[playerid][onlinet] < 86400)return Hata(playerid,"15 Ölüm silmeniz için {FF0000}'150'{FFFFFF} GLKredi ve {FF0000}'1 gün'{FFFFFF} online süren olmalýdýr!");
    if((PlayerInfo[playerid][Olum] < 15))return Hata(playerid,""safaf"Ölüm sayýnýz zaten 15'den az.");
	new s;
	s = PlayerInfo[playerid][Olum];
	PlayerInfo[playerid][Olum] = s-15;
	format(fstring, 256, "UPDATE `oyuncular` SET Deaths = '%d' WHERE `kullaniciadi` = '%s'", s-15, getName(playerid));
 	mysql_query(mysqlC, fstring);
	new x;
	x = PlayerInfo[playerid][GLKredi];
	PlayerInfo[playerid][GLKredi] = x-150;
 	SendClientMessage(playerid,-1,""safaf"Baþarýyla 15 ölüm sildiniz.");
 	SavePlayer(playerid);
    }
	}
	}

	if(dialogid == 478)
	{
		if(!response) return Hata(cetedueldavetci[playerid],"Karþý taraf çete düellosunu reddetti."), true;
		if(response)
		{
		    if(cetesavasidurum == 1) return Hata(playerid,"Þuan aktif bir çete savaþý var. Lütfen daha sonra tekrar deneyin.");
		    cetesavasidurum = 1;
		    for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
			{
				new satir[128];
				format(satir,sizeof satir,"%s",Ceteler[PlayerInfo[cetedueldavetci[playerid]][PlayerCeteID]][cIsim]);
				takim1cetesi[i] = satir;
				new satir2[128];
				format(satir2,sizeof satir2,"%s",Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim]);
				takim2cetesi[i] = satir2;

			    //davetçinin adamlarý
				if(PlayerInfo[cetedueldavetci[playerid]][PlayerCeteID] == PlayerInfo[i][PlayerCeteID])
				{
					if(takim1say > 3) return true;
					takim1say++;
					SetPlayerPos(i,duelpos[0][0],duelpos[0][1],duelpos[0][2]);
					GivePlayerWeapon(i,24,24);
					duelde[i] = 1;
					takim[i] = 1;
					takim1sayisi[i] = 0;
					takim2sayisi[i] = 0;
					TextDrawShowForPlayer(i,skorlar0);
					TextDrawShowForPlayer(i,skorlar1);
					TextDrawShowForPlayer(i,skorlar2[i]);
					TextDrawShowForPlayer(i,skorlar3);
					//TextDrawShowForPlayer(i,skorlar4[i]);
					TextDrawShowForPlayer(i,skorlar5);
					TextDrawShowForPlayer(i,skorlar6[i]);
					TextDrawShowForPlayer(i,skorlar7[i]);
					TextDrawShowForPlayer(i,skorlar8[i]);
					TextDrawShowForPlayer(i,skorlar9);
					TextDrawShowForPlayer(i,skorlar10[i]);
					TextDrawShowForPlayer(i,skorlar11);
					TextDrawShowForPlayer(i,skorlar12);
					TextDrawShowForPlayer(i,skorlar13);
					TextDrawShowForPlayer(i,skorlar14);
					SetPlayerHealth(i,100.0);
					SetPlayerArmour(i,100.0);
					SetPlayerVirtualWorld(i,44);
				}
			}
			foreach(new s:Player)
			{
			    //davet edilenin adamlarý
				if(PlayerInfo[s][PlayerCeteID] == karsitarafidsi)
				{
					if(takim2say > 3) return true;
					takim2say++;
					takim1sayisi[s] = 0;
					takim2sayisi[s] = 0;
					SetPlayerPos(s,duelpos[1][0],duelpos[1][1],duelpos[1][2]);
					GivePlayerWeapon(s,24,24);
					duelde[s] = 1;
					takim[s] = 2;
					SetPlayerHealth(s,100.0);
					SetPlayerArmour(s,100.0);
					TextDrawShowForPlayer(s,skorlar0);
					TextDrawShowForPlayer(s,skorlar1);
					TextDrawShowForPlayer(s,skorlar2[s]);
					TextDrawShowForPlayer(s,skorlar3);
					//TextDrawShowForPlayer(s,skorlar4[s]);
					TextDrawShowForPlayer(s,skorlar5);
					TextDrawShowForPlayer(s,skorlar6[s]);
					TextDrawShowForPlayer(s,skorlar7[s]);
					TextDrawShowForPlayer(s,skorlar8[s]);
					TextDrawShowForPlayer(s,skorlar9);
					TextDrawShowForPlayer(s,skorlar10[s]);
					TextDrawShowForPlayer(s,skorlar11);
					TextDrawShowForPlayer(s,skorlar12);
					TextDrawShowForPlayer(s,skorlar13);
					TextDrawShowForPlayer(s,skorlar14);
					SetPlayerVirtualWorld(s,44);
				}
				if(duelde[s] == 1)
				{
				    TogglePlayerControllable(s,false);
					PlayerInfo[s][Etkinlik_Sayac] = 6;
					KillTimer(PlayerInfo[s][Etkinlik_Timer]);
				 	PlayerInfo[s][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim2", 1000, true, "i", s);
		  		}
			}
		}
	}

	if(dialogid == DIALOG_HOUSE)
	{
	    new houseid = PlayerData[playerid][CurrentHouse];
	    if(response)
	    {
	        if(houseid == -1) return true;
		    switch(listitem)
		    {
	     		case 0:
	       		{
	         		if(HouseData[houseid][HouseOpened] == true)
	           		{
	             		HouseData[houseid][HouseOpened] = false;
						ShowHouseDialog(playerid, houseid);
					}
					else
					{
	    				HouseData[houseid][HouseOpened] = true;
					    ShowHouseDialog(playerid, houseid);
					}
					foreach(new i: Houses)
					{
					    SaveHouse(i);
					}
					SaveAllCars();
				}
			    case 1:
	      		{
					ShowPlayerDialog(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_INPUT, ""safaf"Ev - Ýsim deðiþtir", ""ww"Yeni ismi giriniz:", ""ww"Tamam", ""ww"Kapat");
				}
				case 2:
				{
				    new yazi[512];
				    format(yazi, sizeof(yazi), ""ww"Evi satmak istediðinize emin misiniz ?");
					ShowPlayerDialog(playerid, DIALOG_HOUSESALE, DIALOG_STYLE_MSGBOX, ""safaf"Ev - Sat", yazi, ""ww"Evet", ""ww"Hayýr");
				}
				case 3:
				{
				    if(houseid == -1) return true;
					if(GetHouseEsyaCount(houseid) >=(HouseData[houseid][CarSlots] + 20))
					{
					    Hata(playerid,"Evinize alabileceðiniz eþya limitini doldurdunuz!");
					    return ShowHouseDialog(playerid, houseid);
					}
					ShowPlayerDialog(playerid, DIALOG_ESYABILGI, DIALOG_STYLE_MSGBOX, ""safaf"Ev - Eþya", ""ww"Evinize eþya alýp istediðiniz gibi düzenleyebilirsiniz.", ""ww"Sýralý", ""ww"Görsel");
				}
				case 4:
				{
				    new yazi[2048];
				    new name[64];
				    new price;
				    new index;
				    if(houseid == -1) return true;
				    for(new i = 0; i < 30; i ++)
				    {
				        if(IsValidDynamicObject(HouseData[houseid][EsyaIDs][i]))
				        {
				            switch(HouseData[houseid][EsyaType][i])
				            {
				                case DIALOG_TABLE:
				                {
				                    for(new n = 0; n < sizeof(Tables); n++)
				                    {
				                        if(HouseData[houseid][EsyaModel][i] == Tables[n][tid])
				                        {
				                            format(name, sizeof(name), Tables[n][tablename]);
				                            price =(Tables[n][tableprice] * 1000) / 2;
				                            GetObject[playerid][index][1] = price;
										}
									}
								}
								case DIALOG_CHAIR:
  								{
  								    for(new n = 0; n < sizeof(Chairs); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Chairs[n][cid])
				                        {
				                            format(name, sizeof(name), Chairs[n][chairname]);
				                            price =(Chairs[n][chairprice] * 1000) / 2;
				                            GetObject[playerid][index][1] = price;
										}
									}
								}
								case DIALOG_BED:
								{
								    for(new n = 0; n < sizeof(Beds); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Beds[n][bid])
				                        {
				                            format(name, sizeof(name), Beds[n][bedname]);
				                            price =(Beds[n][bedprice] * 1000) / 2;
				                            GetObject[playerid][index][1] = price;
										}
									}
								}
								case DIALOG_SOFA:
								{
								    for(new n = 0; n < sizeof(Sofas); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Sofas[n][sid])
				                        {
				                            format(name, sizeof(name), Sofas[n][sofaname]);
				                            price =(Sofas[n][sofaprice] * 1000) / 2;
				                            GetObject[playerid][index][1] = price;
										}
									}
								}
								case DIALOG_DECORATION:
								{
								    for(new n = 0; n < sizeof(Decorations); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Decorations[n][did])
				                        {
				                            format(name, sizeof(name), Decorations[n][decname]);
				                            price =(Decorations[n][decprice] * 1000) / 2;
				                            GetObject[playerid][index][1] = price;
										}
									}
								}
								case DIALOG_APPLIANCE:
								{
								    for(new n = 0; n < sizeof(Appliances); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Appliances[n][appid])
				                        {
				                            format(name, sizeof(name), Appliances[n][appname]);
				                            price =(Appliances[n][appprice] * 1000) / 2;
				                            GetObject[playerid][index][1] = price;
										}
									}
								}
							}
	    					format(yazi, sizeof(yazi), "%s%s(%s$)\n", yazi, name, FormatMoney(price));
	    					GetObject[playerid][index][0] = i;
	    					index ++;
						}
					}
					if(strlen(yazi))
					{
				    	ShowPlayerDialog(playerid, DIALOG_ESYASAT, DIALOG_STYLE_LIST, ""safaf"Ev - Eþya Sat", yazi, ""ww"Tamam", ""ww"Kapat");
					}
					else
	 				{
						if(houseid == -1) return true;
						Hata(playerid,"Hiç eþyanýz bulunmuyor!");
						ShowHouseDialog(playerid, houseid);
					}
				}
				case 5:
				{
    				new yazi[2048];
				    new name[64];
				    new index;
				    if(houseid == -1) return true;
				    for(new i = 0; i < 30; i ++)
				    {
				        if(IsValidDynamicObject(HouseData[houseid][EsyaIDs][i]))
				        {
				            switch(HouseData[houseid][EsyaType][i])
				            {
				                case DIALOG_TABLE:
				                {
				                    for(new n = 0; n < sizeof(Tables); n++)
				                    {
				                        if(HouseData[houseid][EsyaModel][i] == Tables[n][tid])
				                        {
				                            format(name, sizeof(name), Tables[n][tablename]);
										}
									}
								}
								case DIALOG_CHAIR:
  								{
  								    for(new n = 0; n < sizeof(Chairs); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Chairs[n][cid])
				                        {
				                            format(name, sizeof(name), Chairs[n][chairname]);
										}
									}
								}
								case DIALOG_BED:
								{
								    for(new n = 0; n < sizeof(Beds); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Beds[n][bid])
				                        {
				                            format(name, sizeof(name), Beds[n][bedname]);
										}
									}
								}
								case DIALOG_SOFA:
								{
								    for(new n = 0; n < sizeof(Sofas); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Sofas[n][sid])
				                        {
				                            format(name, sizeof(name), Sofas[n][sofaname]);
										}
									}
								}
								case DIALOG_DECORATION:
								{
								    for(new n = 0; n < sizeof(Decorations); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Decorations[n][did])
				                        {
				                            format(name, sizeof(name), Decorations[n][decname]);
										}
									}
								}
								case DIALOG_APPLIANCE:
								{
								    for(new n = 0; n < sizeof(Appliances); n++)
									{
                                        if(HouseData[houseid][EsyaModel][i] == Appliances[n][appid])
				                        {
				                            format(name, sizeof(name), Appliances[n][appname]);
										}
									}
								}
							}
	    					format(yazi, sizeof(yazi), "%s%s\n", yazi, name);
	    					GetObject[playerid][index][0] = i;
	    					index ++;
						}
					}
					if(strlen(yazi))
					{
				    	ShowPlayerDialog(playerid, DIALOG_ESYADUZENLE, DIALOG_STYLE_LIST, ""safaf"Ev - Eþya Düzenle", yazi, ""ww"Tamam", ""ww"Kapat");
					}
					else
	 				{
						if(houseid == -1) return true;
						Hata(playerid,"Hiç eþyanýz bulunmuyor!");
						ShowHouseDialog(playerid, houseid);
					}
				}
				case 6:
				{
					ExitHouse(playerid, houseid);
					foreach(new i: Houses)
					{
					    SaveHouse(i);
					}
					SaveAllCars();
				}
			}
		}
	}
	if(dialogid == DIALOG_ESYADUZENLE)
	{
	    if(response)
	    {
	        new houseid = PlayerData[playerid][CurrentHouse];
		    if(houseid == -1) return true;
		    new slot = GetObject[playerid][listitem][0];
		    EditDynamicObject(playerid, HouseData[houseid][EsyaIDs][slot]);
		    SetPVarInt(playerid, "esyaduzenliyor", 1);
		}
		else
		{
		    new houseid = PlayerData[playerid][CurrentHouse];
		    if(houseid == -1) return true;
		    ShowHouseDialog(playerid, houseid);
		    SetPVarInt(playerid, "esyaduzenliyor", 0);
		}
	}
	if(dialogid == DIALOG_ESYASAT)
	{
	    if(response)
	    {
		    new houseid = PlayerData[playerid][CurrentHouse];
		    if(houseid == -1) return true;
			new slot = GetObject[playerid][listitem][0];
			new price = GetObject[playerid][listitem][1];
			GivePlayerMoney(playerid, price);
			new yazi[128];
			format(yazi, sizeof(yazi), ""safaf"%s$ karþýlýðýnda eþyayý sattýnýz!", FormatMoney(price));
			SendClientMessage(playerid, -1, yazi);
			DeleteHouseEsya(houseid, slot);
		}
		else
		{
		    new houseid = PlayerData[playerid][CurrentHouse];
		    if(houseid == -1) return true;
		    ShowHouseDialog(playerid, houseid);
		}
	}
	if(dialogid == DIALOG_ESYABILGI)
	{
	    if(response)
	    {
	        new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowPlayerDialog(playerid, DIALOG_FURNITURE, DIALOG_STYLE_LIST, ""safaf"Ev - Mobilyalar", ""ww"Masa\n"ww"Sandalye\n"ww"Yatak\n"ww"Koltuk\n"ww"Dekorasyon\n"ww"Alet", ""ww"Tamam", ""ww"Kapat");
		}
		else
  		{
  		    new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowPlayerDialog(playerid, DIALOG_FURNITURE2, DIALOG_STYLE_LIST, ""safaf"Ev - Mobilyalar", ""ww"Masa\n"ww"Sandalye\n"ww"Yatak\n"ww"Koltuk\n"ww"Dekorasyon\n"ww"Alet", ""ww"Tamam", ""ww"Kapat");
  		}
	}
	if(dialogid == DIALOG_FURNITURE2)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
                    defer MasaGoster(playerid);
				}
				case 1:
				{
                    defer SandalyeGoster(playerid);
				}
				case 2:
				{
				    defer YatakGoster(playerid);
				}
				case 3:
				{
					defer KoltukGoster(playerid);
				}
				case 4:
				{
					defer DekorasyonGoster(playerid);
				}
				case 5:
				{
					defer AletGoster(playerid);
				}
			}
		}
		else
		{
	  		new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
		}
	}
	if(dialogid == DIALOG_FURNITURE)
	{
	    new yazi[1024];
	    new houseid = PlayerData[playerid][CurrentHouse];
		if(houseid == -1) return true;
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
			 	{
			 	    for(new i; i < sizeof(Tables); i++)
		 			{
			 	    	format(yazi, sizeof yazi, "%s"ww"%s(%s$)\n", yazi,Tables[i][tablename], FormatMoney(Tables[i][tableprice] * 1000));
					}
		 	    	ShowPlayerDialog(playerid, DIALOG_TABLE, DIALOG_STYLE_LIST, ""safaf"Ev - Masalar", yazi, ""ww"Tamam", ""ww"Kapat");
				}
				case 1:
				{
				    for(new i; i < sizeof(Chairs); i++)
				    {
				        format(yazi, sizeof yazi, "%s"ww"%s(%s$)\n", yazi, Chairs[i][chairname], FormatMoney(Chairs[i][chairprice] * 1000));
					}
					ShowPlayerDialog(playerid, DIALOG_CHAIR, DIALOG_STYLE_LIST, ""safaf"Ev - Sandalyeler", yazi, ""ww"Tamam", ""ww"Kapat");
				}
				case 2:
				{
				    for(new i; i < sizeof(Beds); i++)
				    {
				        format(yazi, sizeof yazi, "%s"ww"%s(%s$)\n", yazi, Beds[i][bedname], FormatMoney(Beds[i][bedprice] * 1000));
					}
					ShowPlayerDialog(playerid, DIALOG_BED, DIALOG_STYLE_LIST, ""safaf"Ev - Yataklar", yazi, ""ww"Tamam", ""ww"Kapat");
				}
				case 3:
				{
				    for(new i; i < sizeof(Sofas); i++)
				    {
				        format(yazi, sizeof yazi, "%s%s(%s$)\n", yazi, Sofas[i][sofaname], FormatMoney(Sofas[i][sofaprice] * 1000));
					}
					ShowPlayerDialog(playerid, DIALOG_SOFA, DIALOG_STYLE_LIST, ""safaf"Ev - Koltuk", yazi, ""ww"Tamam", ""ww"Kapat");
				}
				case 4:
				{
				    for(new i; i < sizeof(Decorations); i++)
				    {
				        format(yazi, sizeof yazi, "%s%s(%s$)\n", yazi, Decorations[i][decname], FormatMoney(Decorations[i][decprice] * 1000));
					}
					ShowPlayerDialog(playerid, DIALOG_DECORATION, DIALOG_STYLE_LIST, ""safaf"Ev - Dekorasyon", yazi, ""ww"Tamam", ""ww"Kapat");
				}
				case 5:
				{
				    for(new i; i < sizeof(Appliances); i++)
				    {
				        format(yazi, sizeof yazi, "%s%s(%s$)\n", yazi, Appliances[i][appname], FormatMoney(Appliances[i][appprice] * 1000));
					}
					ShowPlayerDialog(playerid, DIALOG_APPLIANCE, DIALOG_STYLE_LIST, ""safaf"Ev - Aletler", yazi, ""ww"Tamam", ""ww"Kapat");
				}

			}
		}
		else
		{
			if(houseid == -1) return true;
			ShowHouseDialog(playerid, houseid);
		}
	}
	switch(dialogid)
	{
	    case DIALOG_TABLE:
	    {
			if(response)
			{
			    new houseid = PlayerData[playerid][CurrentHouse];
				if(houseid == -1) return true;
				new price = Tables[listitem][tableprice] * 1000;
				if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
				GivePlayerMoney(playerid, -price);
			    new Float:x, Float:y, Float:z;
			    GetPlayerPos(playerid, x, y, z);
			    GetXYInFrontOfPlayer(playerid, x, y, 1);
			    new esya = AddEsya(houseid, Tables[listitem][tid], x, y, z, 0, 0, 0, DIALOG_TABLE);
			    EditDynamicObject(playerid, esya);
				SetPVarInt(playerid, "esyaduzenliyor", 1);
			}
		}
		case DIALOG_CHAIR:
		{
		    if(response)
			{
			    new houseid = PlayerData[playerid][CurrentHouse];
				if(houseid == -1) return true;
				new price = Chairs[listitem][chairprice] * 1000;
				if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
				GivePlayerMoney(playerid, -price);
			    new Float:x, Float:y, Float:z;
			    GetPlayerPos(playerid, x, y, z);
			    GetXYInFrontOfPlayer(playerid, x, y, 1);
			    new esya = AddEsya(houseid, Chairs[listitem][cid], x, y, z, 0, 0, 0, DIALOG_CHAIR);
			    EditDynamicObject(playerid, esya);
			    SetPVarInt(playerid, "esyaduzenliyor", 1);
			}
		}
		case DIALOG_BED:
		{
		    if(response)
			{
			    new houseid = PlayerData[playerid][CurrentHouse];
				if(houseid == -1) return true;
				new price = Beds[listitem][bedprice] * 1000;
				if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
				GivePlayerMoney(playerid, -price);
			    new Float:x, Float:y, Float:z;
			    GetPlayerPos(playerid, x, y, z);
			    GetXYInFrontOfPlayer(playerid, x, y, 1);
			    new esya = AddEsya(houseid, Beds[listitem][bid], x, y, z, 0, 0, 0, DIALOG_BED);
			    EditDynamicObject(playerid, esya);
			    SetPVarInt(playerid, "esyaduzenliyor", 1);
			}
		}
		case DIALOG_SOFA:
		{
		    if(response)
			{
			    new houseid = PlayerData[playerid][CurrentHouse];
				if(houseid == -1) return true;
				new price = Sofas[listitem][sofaprice] * 1000;
				if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
				GivePlayerMoney(playerid, -price);
			    new Float:x, Float:y, Float:z;
			    GetPlayerPos(playerid, x, y, z);
			    GetXYInFrontOfPlayer(playerid, x, y, 1);
			    new esya = AddEsya(houseid, Sofas[listitem][sid], x, y, z, 0, 0, 0, DIALOG_SOFA);
			    EditDynamicObject(playerid, esya);
			    SetPVarInt(playerid, "esyaduzenliyor", 1);
			}
		}
		case DIALOG_DECORATION:
  		{
  		    if(response)
			{
			    new houseid = PlayerData[playerid][CurrentHouse];
				if(houseid == -1) return true;
				new price = Decorations[listitem][decprice] * 1000;
				if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
				GivePlayerMoney(playerid, -price);
			    new Float:x, Float:y, Float:z;
			    GetPlayerPos(playerid, x, y, z);
			    GetXYInFrontOfPlayer(playerid, x, y, 1);
			    new esya = AddEsya(houseid, Decorations[listitem][did], x, y, z, 0, 0, 0, DIALOG_DECORATION);
			    EditDynamicObject(playerid, esya);
			    SetPVarInt(playerid, "esyaduzenliyor", 1);
			}
		}
		case DIALOG_APPLIANCE:
  		{
  		    if(response)
			{
			    new houseid = PlayerData[playerid][CurrentHouse];
				if(houseid == -1) return true;
				new price = Appliances[listitem][appprice] * 1000;
				if(GetPlayerMoney(playerid) < price) return SendClientMessage(playerid, -1, ""safaf"Malesef bunu alabilmek için yeterli paranýz yok.");
				GivePlayerMoney(playerid, -price);
			    new Float:x, Float:y, Float:z;
			    GetPlayerPos(playerid, x, y, z);
			    GetXYInFrontOfPlayer(playerid, x, y, 1);
			    new esya = AddEsya(houseid, Appliances[listitem][appid], x, y, z, 0, 0, 0, DIALOG_APPLIANCE);
			    EditDynamicObject(playerid, esya);
			    SetPVarInt(playerid, "esyaduzenliyor", 1);
			}
		}
	}
	if(dialogid == DIALOG_HOUSESALE)
	{
	    if(response)
	    {
		    new yazi[128];
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
	        if(strcmp(HouseData[houseid][Owner], GetName(playerid))) return SendClientMessage(playerid, -1, ""safaf"Bu ev size ait deðil.");
			if(!response) return ShowHouseDialog(playerid, houseid);
			format(yazi, sizeof(yazi), ""safaf"Eviniz %s$ karþýlýðýnda satýldý!", FormatMoney(HouseData[houseid][HousePrice] / 2));
			SendClientMessage(playerid, -1, yazi);
			GivePlayerMoney(playerid, HouseData[houseid][HousePrice] / 2);
			ExitHouse(playerid, houseid);
			EvictHouse(houseid);
			PlayerData[playerid][Homes][0] = -1;
			foreach(new i: Houses)
			{
			    SaveHouse(i);
			}
			SaveAllCars();
		}
		else
		{
		    new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid,houseid);
		}
	}
	if(dialogid == DIALOG_FORSALE)
	{
	    new yazi[128];
		new houseid = PlayerData[playerid][CurrentHouse];
		if(houseid == -1) return true;
        if(strcmp(HouseData[houseid][Owner], GetName(playerid))) return SendClientMessage(playerid, -1, ""safaf"Bu ev size ait deðil!");
		if(!response) return ShowHouseDialog(playerid, houseid);
		new price = strval(inputtext);
		if(price < 0) return ShowPlayerDialog(playerid, DIALOG_FORSALE, DIALOG_STYLE_INPUT, ""safaf"Ev - Evi Satýlýða Çýkar", ""ww"Deðer 0'dan küçük olamaz!", ""ww"Tamam", ""ww"Kapat");
		if(price == 0)
		{
		    HouseData[houseid][HouseForSale] = false;
		    HouseData[houseid][HouseSalePrice] = 0;
			SendClientMessage(playerid, -1, ""safaf"Eviniz satýlýk deðil!");
		}
		else
		{
		    HouseData[houseid][HouseForSale] = true;
		    HouseData[houseid][HouseSalePrice] = price;
		    format(yazi, sizeof(yazi), ""safaf"Eviniz %s$ fiyata satýlýða çýkarýldý.", FormatMoney(price));
		    SendClientMessage(playerid, -1, yazi);
		}
		ShowHouseDialog(playerid, houseid);
		UpdateEntrance(houseid);
	}
	if(dialogid == DIALOG_CARSALE)
	{
	    new yazi[128];
	    new vehname[32];
	    new vid = GetCar[playerid][listitem];
	    new houseid = PlayerData[playerid][Homes][0];
	    if(response)
	    {
	        if(IsValidVehicle(HouseData[houseid][VehicleIDs][vid]))
	        {
	            new model = GetVehicleModel(HouseData[houseid][VehicleIDs][vid]);
				format(vehname, sizeof(vehname), GetVehicleNameFromModelID(model));
	            for(new i = 0; i < sizeof(TopVehiclePrices); i ++)
				{
				    if(!strcmp(vehname, TopVehiclePrices[i][VehicleName]))
				    {
						DeleteHouseVehicle(houseid, vid);
						format(yazi, sizeof(yazi), ""safaf"%s$ karþýlýðýnda %s adlý aracý sattýnýz.", FormatMoney(TopVehiclePrices[i][Price] / 2), vehname);
						SendClientMessage(playerid, -1, yazi);
						ShowHouseDialog(playerid, houseid);
						GivePlayerMoney(playerid, TopVehiclePrices[i][Price] / 2);
						return true;
					}
				}
				DeleteHouseVehicle(houseid, vid);
				format(yazi, sizeof(yazi), ""safaf"500.000$ karþýlýðýnda %s adlý aracý sattýnýz.", vehname);
				SendClientMessage(playerid, -1, yazi);
				ShowHouseDialog(playerid, houseid);
				GivePlayerMoney(playerid, 500000);
			}
		}
		else
		{
			if(houseid == -1) return true;
			ShowHouseDialog(playerid,houseid);
		}
	}
	if(dialogid == 4647)
	{
	    if(response)
	    {
		    new yazi[512];
			for(new i = 0; i < sizeof(TopVehiclePrices); i ++)
			{
			    format(yazi, sizeof(yazi), "{FFFFFF}%s%s  =  %s$\n",yazi, TopVehiclePrices[i][VehicleName], FormatMoney(TopVehiclePrices[i][Price]));
			}
			ShowPlayerDialog(playerid, DIALOG_SHOWPRICES, DIALOG_STYLE_MSGBOX, ""safaf"Ev - Fiyat Listesi", yazi, ""ww"Resimli Menü", ""ww"Sýralý Menü");
		}
		if(!response)
		{
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid,houseid);
		}
	}
	if(dialogid == DIALOG_LISTMENU)
	{
	   	if(response)
		{
		    new modelid = VehicleList[listitem];
			new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			new vehname[32];
			new components[14];
			new yazi[128];
			format(vehname, sizeof(vehname), "%s", GetVehicleNameFromModelID(modelid));
			for(new i = 0; i < sizeof(TopVehiclePrices); i ++)
			{
			    if(!strcmp(vehname, TopVehiclePrices[i][VehicleName]))
			    {
			        if(GetPlayerMoney(playerid) < TopVehiclePrices[i][Price])
			        {
				     	return SendClientMessage(playerid, -1, ""safaf"Bu aracý almak için yeterli paranýz yok.");
					}
					else
					{
						AddVehicle(houseid, modelid, 0, random(128), random(128), components, -6222.2803,787.3855,-0.2063, 0.0);
					 	GivePlayerMoney(playerid, -TopVehiclePrices[i][Price]);
					 	format(yazi, sizeof(yazi), ""safaf"%s$ karþýlýðýnda %s adlý aracý satýn aldýnýz.", FormatMoney(TopVehiclePrices[i][Price]), vehname);
					 	SendClientMessage(playerid, -1, yazi);
					 	format(yazi, sizeof(yazi), ""safaf"/aracgetir ile çaðýrýp /park ile park edebilirsiniz.");
					 	return SendClientMessage(playerid, -1, yazi);
					}
				}
			}
            if(GetPlayerMoney(playerid) < 1000000)
   			{
     			return SendClientMessage(playerid, -1, ""safaf"Bu aracý almak için yeterli paranýz yok.");
			}
  			AddVehicle(houseid, modelid, 0, random(128), random(128), components, -6222.2803,787.3855,-0.2063, 0.0);
			GivePlayerMoney(playerid, -1000000);
			format(yazi,sizeof(yazi),""safaf"1.000.000$ karþýlýðýnda %s {FFFFFF}adlý aracý satýn aldýnýz.", vehname);
			SendClientMessage(playerid, -1, yazi);
			format(yazi, sizeof(yazi), ""safaf"/aracgetir ile çaðýrýp /park ile park edebilirsiniz.");
			SendClientMessage(playerid, -1, yazi);
		}
		else
		{
		    new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
			ShowHouseDialog(playerid,houseid);
		}
	}
	if(dialogid == DIALOG_SHOWPRICES)
	{
	    if(response)
	    {
	        new houseid = PlayerData[playerid][CurrentHouse];
	        if(houseid == -1) return true;
	        if(GetFreeCarSlot(houseid) == -1)
	        {
				SendClientMessage(playerid, -1, ""safaf"Alabileceðiniz araç limitine ulaþtýnýz!");
				return ShowHouseDialog(playerid, houseid);
			}
	    	ShowModelSelectionMenu(playerid, vehlist, "Araclar");
		}
		else
		{
		    new houseid = PlayerData[playerid][CurrentHouse];
	        if(houseid == -1) return true;
	        if(GetFreeCarSlot(houseid) == -1)
	        {
				SendClientMessage(playerid, -1, ""safaf"Alabileceðiniz araç limitine ulaþtýnýz!");
				return ShowHouseDialog(playerid, houseid);
			}
   			new yazi[1500];
		    for(new i = 0; i < sizeof(VehicleList); i ++)
		    {
		        format(yazi, sizeof(yazi), "%s"ww"%s\n", yazi, GetVehicleNameFromModelID(VehicleList[i]));
			}
			ShowPlayerDialog(playerid, DIALOG_LISTMENU, DIALOG_STYLE_LIST, ""safaf"Ev - Araçlar", yazi, ""ww"Tamam", ""ww"Kapat");
		}
	}
	if(dialogid == DIALOG_CHANGENAME)
	{
	    if(response)
	    {
	        new yazi[128];
            new houseid = PlayerData[playerid][CurrentHouse];
			if(houseid == -1) return true;
	        if(strcmp(HouseData[houseid][Owner], GetName(playerid))) return SendClientMessage(playerid, -1, ""safaf"Bu ev size ait deðil");
			if(!response) return ShowHouseDialog(playerid, houseid);
		    if(strlen(inputtext) > 64 || strlen(inputtext) < 3) return ShowPlayerDialog(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_INPUT, "{FFFFFF}Ýsim deðiþtir", "{FFFFFF}Hata: {FFFFFF}Ýsim uzunluðu {FFFFFF}3-64 {FFFFFF}karakter arasý olmalýdýr!\n{FFFFFF}Yeni ismi giriniz:", "Tamam", "Kapat");
		    if(strfind(inputtext, "%") != -1) return ShowPlayerDialog(playerid, DIALOG_CHANGENAME, DIALOG_STYLE_INPUT, "{FFFFFF}Ýsim deðiþtir", "{FFFFFF}Hata: {FFFFFF}Ýsimde uygunsuz karakterler bulunuyor!\n{FFFFFF}Yeni ismi giriniz:", "Tamam", "Kapat");
			if(houseid == -1) return SendClientMessage(playerid, -1, ""safaf"Evin içinde deðilsiniz!");
			format(yazi, sizeof(yazi), ""safaf"%s adlý evinizin adý %s olarak deðiþtirildi.", HouseData[houseid][HouseName], inputtext);
			format(HouseData[houseid][HouseName], 64, inputtext);
			SendClientMessage(playerid, -1, yazi);
			ShowHouseDialog(playerid, houseid);
			UpdateEntrance(houseid);

			foreach(new i: Houses)
			{
			    SaveHouse(i);
			}
			SaveAllCars();
		}
	}
	if(dialogid == DIALOG_GETCAR)
	{
	    if(response)
	    {
	        if(GetPlayerInterior(playerid) != 0 || PlayerData[playerid][CurrentHouse] != -1) return SendClientMessage(playerid, COLOR_ERROR, "Önce dýþarý çýkýn!");
	        new idx = GetCar[playerid][listitem];
	        new houseid = PlayerData[playerid][Homes][0];
			new Float:x, Float:y, Float:z, Float:rot;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, rot);
			SetVehiclePos(HouseData[houseid][VehicleIDs][idx], x, y, z);
			PutPlayerInVehicle(playerid, HouseData[houseid][VehicleIDs][idx], 0);
			SetVehicleZAngle(HouseData[houseid][VehicleIDs][idx], rot);
			SetPVarInt(playerid, "aracsure", GetTickCount() + 60000);
		}
	}
	if(dialogid == DIALOG_VISITOR)
	{
	    if(response && PlayerData[playerid][CurrentHouse] != -1)
	    {
			ExitHouse(playerid, PlayerData[playerid][CurrentHouse]);
		}
	}

	if(dialogid == 1577)
	{
		new Float:x,Float:y,Float:z,Float:aBakis;
		SetVehicleNumberPlate(GetPlayerVehicleID(playerid), inputtext);
		GetVehiclePos(GetPlayerVehicleID(playerid),x, y, z);
		GetVehicleZAngle(GetPlayerVehicleID(playerid),aBakis);
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		SetVehiclePos(GetPlayerVehicleID(playerid),x, y, z);
		SetVehicleZAngle(GetPlayerVehicleID(playerid),aBakis);
		PutPlayerInVehicle(playerid,GetPlayerVehicleID(playerid),0);
		SendClientMessage(playerid, -1, ""safaf"Plaka deðiþtirildi.");
	}

	if(dialogid == 1234)
	{
		new String[4096], Yazi[4096];
		format(String, sizeof(String), ""ww"Chat Komutlarý:\n"ww"(/l)ocal: Localdan konuþmanýzý saðlar.\n"ww"/pm: Özelden konuþmanýzý saðlar.\n"ww"/pmac: Özel mesaj alýmýný açmanýzý saðlar.\n"ww"/pmkapat: Özel mesaj alýmýný kapamanýzý saðlar.\n"ww"/c: Çete sohbetten konuþabilirsiniz.");
		strcat(Yazi, String);
		format(String, sizeof(String), "\n\n"ww"Iþýnlanma Komutlarý:\n"ww"/teles: Teleport menüsünü açar.\n"ww"/teleac: Teleportunuzu açmanýzý saðlar.\n"ww"/telekapat: Teleportunuzu kapatmanýzý saðlar.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/goto: Oyuncuya ýþýnlanmanýzý saðlar.\n"ww"/etkgit: Etkinliðe katýlmanýzý saðlar.\n"ww"/etkcik: Etkinlikten ayrýlmanýzý saðlar.\n"ww"/t: Iþýnlanmanýzý saðlar.");
		strcat(Yazi, String);
		format(String, sizeof(String), "\n"ww"/dmler: DM bölgelerine gitmenizi saðlar.\n"ww"/cik: DM bölgesinden ayrýlmanýzý saðlar.\n\n"ww"Çete Komutlarý:\n"ww"/cete: Çete oluþturmanýzý saðlar.\n"ww"/ceteduello: Çete düellosu yapmanýzý saðlar.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/cete: Çete bilgilerini görmenizi saðlar.\n"ww"/ceteler: Çete listesini görmenizi saðlar.\n\n"ww"Diðer Komutlar:\n"ww"/duello: Oyuncuyu düelloya davet etmenizi saðlar.\n"ww"/nickdegistir: Ýsminizi deðiþtirmenizi saðlar.\n"ww"/sifredegistir: Þifrenizi deðiþtirmenizi saðlar.\n"ww"/stats: Ýstatistiklerinizi görmenizi saðlar.");
		strcat(Yazi, String);
		if(response) return ShowPlayerDialog(playerid, 1235, DIALOG_STYLE_MSGBOX, ""safaf"Komutlar", Yazi, ""ww"Geri",""ww"Kapat");
		else return true;
	}

	if(dialogid == 1235)
	{
	    new String[4096], Yazi[4096];
		format(String, sizeof(String), ""ww"Araç Komutlarý:\n"ww"/veh: Bu komut ile istediðiniz aracý indirebilirsiniz.\n"ww"/cevir: Aracýnýzý çevirmenizi saðlar.(Yada Y tuþu)\n"ww"/tamir: Aracýnýzý tamir etmenizi saðlar.(Yada 2 tuþu)\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/kilit: Aracýnýzý kilitlemenizi saðlar.\n"ww"/kilitac: Aracýnýzýn kilidini açmanýzý saðlar.\n"ww"/renk: Aracýnýzýn rengini deðiþtirmenizi saðlar.\n"ww"/plaka: Aracýnýzýn plakasýný deðiþtirmenizi saðlar.\n"ww"/alarm: Aracýnýzýn alarmýný açmanýzý saðlar.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/bagaj: Aracýnýzýn bagajýný açmanýzý saðlar.\n"ww"/kaput: Aracýnýzýn kaputunu açmanýzý saðlar.\n"ww"/far: Aracýnýzýn farýný açmanýzý saðlar.\n"ww"/speed: Hýz özelliðini açmanýzý, kapamanýzý saðlar.\n"ww"/jump: Zýpla özelliðini açmanýzý, kapamanýzý saðlar.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/m1-/m28: Araç indirmenizi saðlar.\n"ww"/v1-/v17: Araç indirmenizi saðlar.\n"ww"2 tuþuyla aracýnýzý tamir edip, nos takabilirsiniz.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"Ateþ etme tuþuyla hýzlanma özelliðini kullanabilirsiniz.\n"ww"Y tuþuyla ters dönen aracýnýzý düzeltebilirsiniz.\n\n"ww"Oyuncu Komutlarý:\n"ww"/kill: Ýntihar etmenizi saðlar.\n"ww"/rapor: Kurallarý uymayanlarý bildirmenizi saðlar.\n"ww"/bugrapor: Bulduðunuz açýklarý bildirmenizi saðlar.\n"ww"/etkistek: Ýstek etkinlikte bulunmanýzý saðlar.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/admins: Aktif oyun görevlilerini görmenizi saðlar.\n"ww"/mkapat: Çalan þarkýyý kapatmanýzý saðlar.\n"ww"/credits: Sunucu hakkýnda bilgi edinmenizi saðlar.\n"ww"/myskin: Skininizi deðiþtirmenizi saðlar.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/zamanim: Oyun saatinizi deðiþtirmenizi saðlar.\n"ww"/havam: Oyun havanýzý deðiþtirmenizi saðlar.\n"ww"/time: Saati ve tarihi görmenizi saðlar.\n"ww"/saveskin: Skininizi kaydetmenizi saðlar.\n");
		strcat(Yazi, String);
		format(String, sizeof(String), ""ww"/savecolor: Nick renginizi kaydetmenizi saðlar.\n"ww"/shop: Marketi açmanýzý saðlar.\n"ww"/skoryolla: Skor yollamanýzý saðlar.\n"ww"/parayolla: Para yollamanýzý saðlar.");
		strcat(Yazi, String);
	    if(response) return ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_MSGBOX, ""safaf"Komutlar", Yazi, ""ww"Ýleri",""ww"Kapat");
		else return true;
	}

	if(dialogid == DIALOG_SHOP)
	{
		if(!response) return true;
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					ShowPlayerDialog(playerid,DIALOG_SHOP+1,DIALOG_STYLE_TABLIST_HEADERS,""safaf"Shop",""ww"Paket\t"ww"Fiyat\n"ww"Can Paketi\t1.000$\n"ww"Zýrh Paketi\t1.000$",""ww"Seç",""ww"Geri");
				}
				case 1:
				{
					cmd_silahlar(playerid,"");
				}
				case 2:
				{
					cmd_renkler(playerid,"");
				}
				case 3:
				{
					cmd_skordukkani(playerid,"");
				}
				case 4:
				{
					cmd_olumsil(playerid,"");
				}
				case 5:
				{
				    new dialog[500];
				    strcat(dialog,""ww"Ýsim\t"ww"Komut\n");
				    strcat(dialog,""ww"Ýsim deðiþtir\t"ww"[/nickdegistir]\n");
				    strcat(dialog,""ww"Þifre deðiþtir\t"ww"[/sifredegistir]\n");
				    ShowPlayerDialog(playerid,1484,DIALOG_STYLE_TABLIST_HEADERS,""safaf"Hesap Ýþlemleri",dialog,""ww"Seç",""ww"Geri");
				}
				case 6:
				{
				    new dialog[500];
				    strcat(dialog,""ww"Yiyecek\t"ww"Verdiði Can\t"ww"Fiyat\n");
				    strcat(dialog,""ww"Elma\t"ww"5 Can\t"ww"500$\n");
				    strcat(dialog,""ww"Patates\t"ww"15 Can\t"ww"750$\n");
				    strcat(dialog,""ww"Hamburger\t"ww"20 Can\t"ww"800$\n");
				    strcat(dialog,""ww"Hamburger + Patates\t"ww"35 Can\t"ww"850$\n");
				    ShowPlayerDialog(playerid,1485,DIALOG_STYLE_TABLIST_HEADERS,""safaf"Yiyecekler",dialog,""ww"Satýn Al",""ww"Geri");
		        }
		        case 7:
		        {
		            cmd_eglence(playerid, "");
		        }
		        case 8:
		        {
		            cmd_sanspaketleri(playerid, "");
		        }
			}
		}
	}

    if(dialogid == 1485)
    {
        if(!response)
        {
            return cmd_shop(playerid,"");
        }
        if(response)
        {
            switch(listitem)
            {
                case 0:
                {
                    if(GetPlayerMoney(playerid) < 500) return Hata(playerid,"Elma alabilmek için 500$'niz olmalýdýr."),cmd_shop(playerid,"");
                    new Float:can;
                    GetPlayerHealth(playerid,can);
                    SetPlayerHealth(playerid,can+5);
                    GivePlayerMoney(playerid,-500);
                    if(GetPlayerHealth(playerid) > 100.0)
                    {
                        SetPlayerHealth(playerid,100.0);
                    }
                    SendClientMessage(playerid,-1,""safaf"500$ karþýlýðýnda elma aldýnýz ve 5 can kazandýnýz.");
                }
                case 1:
                {
                    if(GetPlayerMoney(playerid) < 750) return Hata(playerid,"Patates alabilmek için 750$'niz olmalýdýr."),cmd_shop(playerid,"");
                    new Float:can;
                    GetPlayerHealth(playerid,can);
                    SetPlayerHealth(playerid,can+15);
                    GivePlayerMoney(playerid,-750);
                    if(GetPlayerHealth(playerid) > 100.0)
                    {
                        SetPlayerHealth(playerid,100.0);
                    }
                    SendClientMessage(playerid,-1,""safaf"750$ karþýlýðýnda patates aldýnýz ve 15 can kazandýnýz.");
                }
                case 2:
                {
                    if(GetPlayerMoney(playerid) < 800) return Hata(playerid,"Patates alabilmek için 800$'niz olmalýdýr."),cmd_shop(playerid,"");
                    new Float:can;
                    GetPlayerHealth(playerid,can);
                    SetPlayerHealth(playerid,can+20);
                    GivePlayerMoney(playerid,-800);
                    if(GetPlayerHealth(playerid) > 100.0)
                    {
                        SetPlayerHealth(playerid,100.0);
                    }
                    SendClientMessage(playerid,-1,""safaf"800$ karþýlýðýnda hamburger aldýnýz ve 20 can kazandýnýz.");
                }
                case 3:
                {
                    if(GetPlayerMoney(playerid) < 850) return Hata(playerid,"Patates alabilmek için 850$'niz olmalýdýr."),cmd_shop(playerid,"");
                    new Float:can;
                    GetPlayerHealth(playerid,can);
                    SetPlayerHealth(playerid,can+35);
                    GivePlayerMoney(playerid,-850);
                    if(GetPlayerHealth(playerid) > 100.0)
                    {
                        SetPlayerHealth(playerid,100.0);
                    }
                    SendClientMessage(playerid,-1,""safaf"850$ karþýlýðýnda hamburger + patates aldýnýz ve 35 can kazandýnýz.");
                }
            }
        }
    }

	if(dialogid == 1484)
	{
	    if(!response)
	    {
	        return cmd_shop(playerid,"");
	    }
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                cmd_nickdegistir(playerid,"");
	                ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
	            }
	            case 1:
	            {
	                cmd_sifredegistir(playerid,"");
	                ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,"","","","");
	            }
	        }
	    }
	}

	if(dialogid == DIALOG_SHOP+1)
	{
		if(!response) return cmd_shop(playerid,"");
		if(response)
		{
		switch(listitem)
		{
		case 0:
		{
		if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Can almak için $1.000 paranýz olmalýdýr.");
		new Float:can;
		GetPlayerHealth(playerid,can);
		if(can == 100.0) return Hata(playerid,"Zaten canýnýz dolu.");
		if(spamProtect(playerid, "can", 30)) return true;
		SetPlayerHealth(playerid,100.0);
		GivePlayerMoney(playerid,-1000);
		SCM(playerid,-1,""safaf"$1.000 karþýlýðýnda canýnýzý fullediniz.");
		}
		case 1:
		{
		if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Zýrh almak için $1.000 paranýz olmalýdýr.");
		new Float:zirh;
		GetPlayerArmour(playerid,zirh);
		if(zirh == 100.0) return Hata(playerid,"Zaten zýrhýnýz dolu.");
		if(spamProtect(playerid, "zirh", 30)) return true;
		SetPlayerArmour(playerid,100.0);
		GivePlayerMoney(playerid,-1000);
		SCM(playerid,-1,""safaf"$1.000 karþýlýðýnda zýrhýnýzý fullediniz.");
		}
		}
		}
	}


	if(dialogid == CETE_KUR)
	{
	    if(response)
	    {
			ShowPlayerDialog(playerid, CETE_KUR_NAME, DIALOG_STYLE_INPUT, ""safaf"Çete - Ýsim", ""ww"Çetenin ismini belirleyin:", ""ww"Ýleri", ""ww"Ýptal");
		}
	}

	if(dialogid == CETE_KUR_NAME)
	{
	    if(response)
	    {
			new	Querys[1024];
			format(Querys, sizeof(Querys), "SELECT * FROM ceteler WHERE Isim = '%s'", inputtext);
			mysql_query(mysqlC, Querys);
			if(cache_num_rows() != 0)
			{
			    return ShowPlayerDialog(playerid, CETE_KUR_NAME, DIALOG_STYLE_INPUT, ""safaf"Çete - Ýsim", ""ww"Çetenin ismini belirleyin:", ""ww"Ýleri", ""ww"Ýptal"), Hata(playerid, "Bu isimde bir çete zaten mevcut.");
			}
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_KUR_NAME, DIALOG_STYLE_INPUT, ""safaf"Çete - Ýsim", ""ww"Çetenin ismini belirleyin:", ""ww"Ýleri", ""ww"Ýptal"), Hata(playerid, "Lütfen isim kýsmýný boþ býrakmayýn.");
			if(!strcmp(inputtext, "Yok")) return ShowPlayerDialog(playerid, CETE_KUR_NAME, DIALOG_STYLE_INPUT, ""safaf"Çete - Ýsim", ""ww"Çetenin ismini belirleyin:", ""ww"Ýleri", ""ww"Ýptal"), Hata(playerid, "Bu isimi seçemezsiniz.");
			format(KurulusIsmi[playerid], 100, inputtext);

			ShowPlayerDialog(playerid, CETE_KUR_TAG, DIALOG_STYLE_INPUT, ""safaf"Çete - Tag", ""ww"Aþaðýdaki kutucuða çete tagýný giriniz.\n"ww"Max. 6 karakter.", ""ww"Ýleri", ""ww"Ýptal");
	    }
	}

	if(dialogid == CETE_KUR_TAG)
	{
	    if(response)
	    {
	    	new	Querys[1024];
			format(Querys, sizeof(Querys), "SELECT * FROM ceteler WHERE Tag = '%s'", inputtext);
			mysql_query(mysqlC, Querys);
			if(cache_num_rows() != 0)
			{
			    return ShowPlayerDialog(playerid, CETE_KUR_TAG, DIALOG_STYLE_INPUT, ""safaf"Çete - Tag", ""ww"Aþaðýdaki kutucuða çete tagýný giriniz.\n"ww"Max. 6 karakter.", ""ww"Ýleri", ""ww"Ýptal"), Hata(playerid, "Bu tag'ý kullanan bir çete zaten mevcut.");
			}
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_KUR_TAG, DIALOG_STYLE_INPUT, ""safaf"Çete - Tag", ""ww"Çetenin tagýný belirleyin:\n"ww"Max. 6 karakter.", ""ww"Ýleri", ""ww"Ýptal"), Hata(playerid, "Lütfen tag kýsmýný boþ býrakmayýn.");
			if(strlen(inputtext) > 6) return ShowPlayerDialog(playerid, CETE_KUR_TAG, DIALOG_STYLE_INPUT, ""safaf"Çete - Tag", ""ww"Çetenin tagýný belirleyin:\n"ww"Max. 6 karakter.", ""ww"Ýleri", ""ww"Ýptal"), Hata(playerid, "En fazla 6 karakter girebilirsiniz.");
			format(SecilencTag[playerid], 7, inputtext);

			new DiaYazi[512];

			for(new i; i < sizeof(CeteColor); i++)
			{
			    format(DiaYazi, 512, "%s{%s}%s\n", DiaYazi, CeteColor[i][cInffrenk2], CeteColor[i][cInffisim]);
			}

			ShowPlayerDialog(playerid, CETE_KUR_RENK, DIALOG_STYLE_LIST, ""safaf"Çete - Renk", DiaYazi, ""ww"Ýleri", ""ww"Ýptal");
	    }
	}

	if(dialogid == CETE_KUR_RENK)
	{
		PlayerInfo[playerid][PlayerCeteID] = CeteyiKur(KurulusIsmi[playerid], SecilencTag[playerid], listitem);
		PlayerInfo[playerid][PlayerCeteRutbeID] = 9;
		SetPlayerColor(playerid, CeteColor[listitem][cInffrenkkodu]);
		GivePlayerMoney(playerid, -1000000);
		SCM(playerid,-1, ""safaf"Çeteniz baþarýyla kuruldu. Rekabet ortamýnda bol þans.");
		SetPlayerScore(playerid, GetPlayerScore(playerid) - 1000);
		Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKayit] = 1;
		Ceteler[PlayerInfo[playerid][PlayerCeteID]][cetebolgesayisi] = 0;
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1], 50, "Rütbe1");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2], 50, "Rütbe2");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3], 50, "Rütbe3");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4], 50, "Rütbe4");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5], 50, "Rütbe5");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6], 50, "Rütbe6");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7], 50, "Rütbe7");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8], 50, "Rütbe8");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9], 50, "Rütbe9");
		format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10], 50, "Rütbe10");
		Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] = -1;
		SavePlayer(playerid);

		new sql[500];
		format(sql, sizeof(sql), "UPDATE `oyuncular` SET `cete` = '%d', `ceterutbe` = '%d' WHERE `kullaniciadi` = '%s'", PlayerInfo[playerid][PlayerCeteID], PlayerInfo[playerid][PlayerCeteRutbeID], getName(playerid));
		mysql_query(mysqlC, sql);

		format(sql, sizeof(sql), "UPDATE `ceteler` SET `uyesayisi` = '1' WHERE `ID` = '%d'", PlayerInfo[playerid][PlayerCeteID] + 1);
		mysql_query(mysqlC, sql);
	}

	if(dialogid == CETE_HOME)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(PlayerInfo[playerid][PlayerCeteRutbeID] < 8) return Hata(playerid,"Bunun için yetkiniz bulunmuyor."),CeteAnaSayfasi(playerid);
	                if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] < 100000) return CeteAnaSayfasi(playerid), Hata(playerid, "Bu iþlemi yapabilmek için çete kasanýzda 100.000$ olmalýdýr.");
	                ShowPlayerDialog(playerid, CETE_ISIM, DIALOG_STYLE_INPUT, ""safaf"Çete - Ýsim Deðiþtir", ""ww"Yeni çete ismi:", ""ww"Deðiþtir", ""ww"Ýptal");
	            }

				case 1:
				{
	                if(PlayerInfo[playerid][PlayerCeteRutbeID] < 8) return Hata(playerid,"Bunun için yetkiniz bulunmuyor."),CeteAnaSayfasi(playerid);
	                if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] < 100000) return CeteAnaSayfasi(playerid), Hata(playerid, "Bu iþlemi yapabilmek için çete kasanýzda 100.000$ olmalýdýr.");
	                ShowPlayerDialog(playerid, CETE_TAG, DIALOG_STYLE_INPUT, ""safaf"Çete - Tag Deðiþtir", ""ww"Yeni çete tagý:\n"ww"Max. 6 karakter", ""ww"Deðiþtir", ""ww"Ýptal");
				}

				case 2:
				{
				    CeteOfflineOyuncular(playerid);
				}

				case 3:
				{
				    new DiaYazi[10000], slot;
				    
				    strcat(DiaYazi, ""ww"Oyuncu\t"ww"Rütbe\n");

				    foreach(new i : Player)
				    {
						if(PlayerInfo[i][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
						{
							ceteidsi[playerid][slot] = i;
							slot++;
							format(DiaYazi, sizeof(DiaYazi), "%s"ww"%s\t"ww"%s\n", DiaYazi, getName(i), CeteRutbeCek(i));
						}
					}

					ShowPlayerDialog(playerid, CETE_UYELER, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete - Üyeler", DiaYazi, ""ww"Seç", ""ww"Geri");
				}

				case 4:
				{
	                if(PlayerInfo[playerid][PlayerCeteRutbeID] < 5) return Hata(playerid,"Bunun için yetkiniz bulunmuyor."),CeteAnaSayfasi(playerid);
	                //if(CeteuyeleriniSay(PlayerInfo[playerid][PlayerCeteID]) == 50) return CeteAnaSayfasi(playerid), Hata(playerid, "Çetedeki oyuncu sayýsý fazla!");
	                ShowPlayerDialog(playerid, CETE_DAVET, DIALOG_STYLE_INPUT, ""safaf"Çete - Oyuncu Davet Et", ""ww"Davet edilecek kiþinin ID'si:", ""ww"Davet Et", ""ww"Geri");
				}

				case 5:
				{
					new Baslik[60];
					format(Baslik, 60, ""safaf"Çete - Kasa");

					if(PlayerInfo[playerid][PlayerCeteRutbeID] < 5)
	                {
						ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Kasaya para yatýr", ""ww"Seç", ""ww"Geri");
	                }else{
						ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Kasaya para yatýr\n"ww"Kasadan para çek", ""ww"Seç", ""ww"Geri");
	                }
				}

				case 6:
				{
	                if(PlayerInfo[playerid][PlayerCeteRutbeID] < 5) return Hata(playerid,"Bunun için yetkiniz bulunmuyor."),CeteAnaSayfasi(playerid);
	                if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] < 50000) return CeteAnaSayfasi(playerid), Hata(playerid, "Bu iþlemi yapabilmek için çete kasanýzda 50.000$ olmalýdýr.");

					new DiaYazi[512];

					for(new i; i < sizeof(CeteColor); i++)
					{
			   		 	format(DiaYazi, 512, "%s{FFFFFF}%s\n", DiaYazi, CeteColor[i][cInffisim]);
					}

					ShowPlayerDialog(playerid, CETE_RENK, DIALOG_STYLE_LIST, ""safaf"Çete - Renk Deðiþtir", DiaYazi, ""ww"Seç", ""ww"Geri");
				}

				case 7:
				{
	                if(PlayerInfo[playerid][PlayerCeteRutbeID] < 8) return Hata(playerid,"Bunun için yetkiniz bulunmuyor."),CeteAnaSayfasi(playerid);
	                if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] < 20000) return CeteAnaSayfasi(playerid), Hata(playerid, "Bu iþlemi yapabilmek için çete kasanýzda 20.000$ olmalýdýr.");
	                ShowPlayerDialog(playerid, CETE_SKIN, DIALOG_STYLE_INPUT, ""safaf"Çete - Skin Deðiþtir", ""ww"Skin ID'sini giriniz:", ""ww"Deðiþtir", ""ww"Ýptal");
				}

				case 8:
				{
				    new Yazi[700];
				    format(Yazi, 700, ""ww"Çete Adý: \t%s\n"ww"Çete Tagý: \t%s\n"ww"Çete Rengi: \t{%s}%s\n"ww"Çete Kasasý: \t$%d\n"ww"Çete EXP'i: \t%i",
					       Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag], CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2], CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffisim], Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cExp]);

					ShowPlayerDialog(playerid, CETE_DURUM, DIALOG_STYLE_MSGBOX, ""safaf"Çete - Durum", Yazi, ""ww"Geri", "");
				}

				case 9:
				{
				    if(PlayerInfo[playerid][PlayerCeteRutbeID] == 9)
				    {
				        if(CeteuyeleriniSay(PlayerInfo[playerid][PlayerCeteID]) == 1)
				        {
							PlayerInfo[playerid][PlayerCeteRutbeID] = 0;
							if(PlayerInfo[playerid][pSkin] == 6) { PlayerInfo[playerid][pSkin] = 0; }

							new query[500];
					        format(query, sizeof(query), "UPDATE `bolgeler` SET `sahipceteid` = '-1', `sahipname` = 'Yok', `bolgerenk` = '1' WHERE `sahipceteid` = '%d'", PlayerInfo[playerid][PlayerCeteID]);
					        mysql_query(mysqlC, query);

							Ceteler[PlayerInfo[playerid][PlayerCeteID]][cetebolgesayisi] = 0;
							Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] = -1;
							CeteMekanInfo[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID]][cmSahip] = -1;

                            SavePlayer(playerid);

    						CeteyiSil(PlayerInfo[playerid][PlayerCeteID]);

		                    new sql[800];
							format(sql, sizeof(sql), "UPDATE `oyuncular` SET `cete` = '-1', `ceterutbe` = '0' WHERE `kullaniciadi` = '%s'", getName(playerid));
							mysql_query(mysqlC, sql);

							PlayerInfo[playerid][PlayerCeteID] = -1;

							Bilgi(playerid, "Çeteden baþarýyla ayrýldýnýz.");

							CeteMekanlariYenile();
				        }else{

							new sql2[500];
							format(sql2, sizeof(sql2), "UPDATE `ceteler` SET `uyesayisi` = uyesayisi-1 WHERE `ID` = '%d'", PlayerInfo[playerid][PlayerCeteID] + 1);
							mysql_query(mysqlC, sql2);


							PlayerInfo[playerid][PlayerCeteRutbeID] = 0;
							if(PlayerInfo[playerid][pSkin] == 6) { PlayerInfo[playerid][pSkin] = 0; }
                            SavePlayer(playerid);
							Bilgi(playerid, "Çeteden baþarýyla ayrýldýnýz.");

							PlayerInfo[playerid][PlayerCeteID] = -1;

							new sql[800];
							format(sql, sizeof(sql), "UPDATE `oyuncular` SET `cete` = '-1', `ceterutbe` = '0' WHERE `kullaniciadi` = '%s'", getName(playerid));
							mysql_query(mysqlC, sql);

							CeteMekanlariYenile();
				        }
				    }else{

						new sql2[500];
						format(sql2, sizeof(sql2), "UPDATE `ceteler` SET `uyesayisi` = uyesayisi-1 WHERE `ID` = '%d'", PlayerInfo[playerid][PlayerCeteID] + 1);
						mysql_query(mysqlC, sql2);

						PlayerInfo[playerid][PlayerCeteRutbeID] = 0;
						if(PlayerInfo[playerid][pSkin] == 6) { PlayerInfo[playerid][pSkin] = 0; }
						OnPlayerSpawn(playerid);
                        SavePlayer(playerid);
						Bilgi(playerid, "Çeteden baþarýyla ayrýldýnýz.");
						PlayerInfo[playerid][PlayerCeteID] = -1;

						new sql[800];
						format(sql, sizeof(sql), "UPDATE `oyuncular` SET `cete` = '-1', `ceterutbe` = '0' WHERE `kullaniciadi` = '%s'", getName(playerid));
						mysql_query(mysqlC, sql);

						CeteMekanlariYenile();
				    }
				}

				case 10:
				{
				    if(PlayerInfo[playerid][PlayerCeteRutbeID] < 9) return cmd_cete(playerid, "");
				
				    new dialog[2048], str[1024];
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
				    strcat(dialog, str);
				    
				    ShowPlayerDialog(playerid, DIALOG_CETE_RUTBEISIMD, DIALOG_STYLE_LIST, ""safaf"Çete - Rütbe Ýsimleri", dialog, ""ww"Seç", ""ww"Ýptal");
				}

				case 11:
				{
				    new Sorgu[1024];
					format(Sorgu, 1024, "UPDATE `oyuncular` SET `cete` = '%d', `ceterutbe` = '%d' WHERE `cete` = '%d'", -1, 0, PlayerInfo[playerid][PlayerCeteID]);
					mysql_query(mysqlC, Sorgu);

					new query[500];
			        format(query, sizeof(query), "UPDATE `bolgeler` SET `sahipceteid` = '-1', `sahipname` = 'Yok', `bolgerenk` = '1' WHERE `sahipceteid` = '%d'", PlayerInfo[playerid][PlayerCeteID]);
			        mysql_query(mysqlC, query);

					CeteMekanInfo[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID]][cmSahip] = -1;
					Ceteler[PlayerInfo[playerid][PlayerCeteID]][cetebolgesayisi] = 0;
					Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] = -1;
					PlayerInfo[playerid][PlayerCeteRutbeID] = 0;

					foreach(new i: Player)
					{
						if(PlayerInfo[i][PlayerCeteID] != -1 && PlayerInfo[playerid][PlayerCeteID] == PlayerInfo[i][PlayerCeteID])
						{

							if(i == playerid) continue;

						    PlayerInfo[i][PlayerCeteRutbeID] = 0;
						    PlayerInfo[playerid][PlayerCeteRutbeID] = 0;
						    if(PlayerInfo[i][pSkin] == 6) { PlayerInfo[i][pSkin] = 0; }
						    
                            SavePlayer(i);

                            PlayerInfo[i][PlayerCeteID] = -1;

						    Bilgi(i, "Çete sahibi tarafýndan çete silindi.");
						    SavePlayer(i);
						    SavePlayer(playerid);

						}
					}
					
					Bilgi(playerid, "Çete sahibi tarafýndan çete silindi.");

					CeteMekanlariYenile();
					CeteyiSil(PlayerInfo[playerid][PlayerCeteID]);

					PlayerInfo[playerid][PlayerCeteID] = -1;
					
					SavePlayer(playerid);
				}
			}
	    }
	}

	if(dialogid == 889)
	{
	    if(!response) return CeteAnaSayfasi(playerid);
	    if(response)
	    {
	        if(!strlen(inputtext)) return Hata(playerid,"Lütfen bir deðer girin.");
	        new Para = strval(inputtext);
	        if(Para < 0) return Hata(playerid,"Bu kadar EXP yatýramazsýnýz.");
	        if(Para > 50) return Hata(playerid,"Tek seferde en fazla 50 EXP yatýrabilirsiniz.");
	        new a;
	        a = PlayerInfo[playerid][exp];
	        PlayerInfo[playerid][exp] = a-Para;
	        new b;
	        b = Ceteler[PlayerInfo[playerid][PlayerCeteID]][cExp];
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cExp] = b+Para;
	        SFM(playerid,-1,""safaf"Baþarýyla çetenize %i EXP yatýrdýnýz.",Para);
	    }
	}

	if(dialogid == CETE_DAVET)
	{
	    if(response)
	    {
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_DAVET, DIALOG_STYLE_INPUT, ""safaf"Çete - Oyuncu Davet Et", ""ww"Oyuncunun ID'sini giriniz:", "Davet Et", "Geri"), Hata(playerid, "Lütfen ID kýsmýný boþ býrakmayýnýz.");
			new id = strval(inputtext);

			if(!IsPlayerConnected(id)) return ShowPlayerDialog(playerid, CETE_DAVET, DIALOG_STYLE_INPUT, ""safaf"Çete - Oyuncu Davet Et", ""ww"Oyuncunun ID'sini giriniz:", ""ww"Davet Et", ""ww"Geri"), Hata(playerid, "Oyuncu oyunda deðil.");
			if(PlayerInfo[id][Giris] == 0) return ShowPlayerDialog(playerid, CETE_DAVET, DIALOG_STYLE_INPUT, ""safaf"Çete - Oyuncu Davet Et", ""ww"Oyuncunun ID'sini giriniz:", ""ww"Davet Et", ""ww"Geri"), Hata(playerid, "Oyuncu kayýtlý deðil veya giriþ yapmamýþ.");
			if(PlayerInfo[id][PlayerCeteID] != -1) return ShowPlayerDialog(playerid, CETE_DAVET, DIALOG_STYLE_INPUT, ""safaf"Çete - Oyuncu Davet Et", ""ww"Oyuncunun ID'sini giriniz:", ""ww"Davet Et", ""ww"Geri"), Hata(playerid, "Oyuncunun zaten bir çetesi var.");

			CeteDaveet[id] = playerid;

			new Yazi[200];
			format(Yazi, 200, ""ww"%s(%d) adlý oyuncu, sizi {%s}%s "w"adlý çeteye davet etti.\n"ww"Çeteye katýlmak istiyor musunuz?", getName(playerid), playerid, CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2], Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim]);
			ShowPlayerDialog(id, CETE_DEGERLENDIR, DIALOG_STYLE_MSGBOX, ""safaf"Çete - Davet", Yazi, ""ww"Evet", ""ww"Hayýr");

			Bilgi(playerid, "Oyuncuya çete daveti gönderildi.");

	        CeteAnaSayfasi(playerid);
	    }else{
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == CETE_DEGERLENDIR)
	{
	    if(response)
	    {
			new Yazi[150];
			format(Yazi, 150, "%s(%d) adlý oyuncu çete davetinizi kabul etti.", getName(playerid), playerid);
			Bilgi(CeteDaveet[playerid], Yazi);

			PlayerInfo[playerid][PlayerCeteID] = PlayerInfo[CeteDaveet[playerid]][PlayerCeteID];
			PlayerInfo[playerid][PlayerCeteRutbeID] = 0;
			SetPlayerColor(playerid, CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenkkodu]);

			format(Yazi, 150, ""safaf"%s(%d) adlý oyuncu çeteye katýldý.", getName(playerid), playerid);
			CetedekilereMesaj(PlayerInfo[playerid][PlayerCeteID], Yazi);

			SavePlayer(CeteDaveet[playerid]);

			CeteDaveet[playerid] = -1;

			Bilgi(playerid, "Çete davetini baþarýyla kabul ettiniz.");

			SavePlayer(playerid);

			new sql[500];
			format(sql, sizeof(sql), "UPDATE `oyuncular` SET `cete` = '%d', `ceterutbe` = '0' WHERE `kullaniciadi` = '%s'", PlayerInfo[playerid][PlayerCeteID], getName(playerid));
			mysql_query(mysqlC, sql);

			new sql2[500];
			format(sql2, sizeof(sql2), "UPDATE `ceteler` SET `uyesayisi` = uyesayisi+1 WHERE `ID` = '%d'", PlayerInfo[playerid][PlayerCeteID] + 1);
			mysql_query(mysqlC, sql2);

            CeteMekanlariYenile();

	    }else{
			new Yazi[150];
			format(Yazi, 150, "%s(%d) adlý oyuncu, çete davetinizi reddetti.", getName(playerid), playerid);
			Bilgi(CeteDaveet[playerid], Yazi);

			CeteDaveet[playerid] = -1;

			Bilgi(playerid, "Çete davetini reddettiniz.");
	    }
	}

	if(dialogid == CETE_KASA)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
					ShowPlayerDialog(playerid, CETE_KASA_YATIR, DIALOG_STYLE_INPUT, ""safaf"Çete - Kasaya para yatýr", ""ww"Çete kasasýna yatýrmak istediðiniz miktar:", ""ww"Yatýr", ""ww"Geri");
	            }

	            case 1:
	            {
					ShowPlayerDialog(playerid, CETE_KASA_CEK, DIALOG_STYLE_INPUT, ""safaf"Çete - Kasadan para çek", ""ww"Çete kasasýndan çekmek istediðiniz miktar:", ""ww"Çek", ""ww"Geri");
	            }
	        }
	    }else{
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == CETE_KASA_YATIR)
	{
	    if(response)
	    {
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_KASA_YATIR, DIALOG_STYLE_INPUT, ""safaf"Çete - Para Yatýr", ""ww"Kasaya yatýracaðýnýz miktar:", ""ww"Yatýr", ""ww"Geri"), Hata(playerid, "Lütfen yatýrým bölümünü boþ býrakmayýn.");
			new Para = strval(inputtext);

			if(GetPlayerMoney(playerid) < Para) return ShowPlayerDialog(playerid, CETE_KASA_YATIR, DIALOG_STYLE_INPUT, ""safaf"Çete - Para Yatýr", ""ww"Kasaya yatýracaðýnýz miktar:", ""ww"Yatýr", ""ww"Geri"), Hata(playerid, "O kadar paranýz yok.");
			if(GetPlayerMoney(playerid) < 0) return ShowPlayerDialog(playerid, CETE_KASA_YATIR, DIALOG_STYLE_INPUT, ""safaf"Çete - Para Yatýr", ""ww"Kasaya yatýracaðýnýz miktar:", ""ww"Yatýr", ""ww"Geri"), Hata(playerid, "O kadar paranýz yok.");
			if(Para < 0) return ShowPlayerDialog(playerid, CETE_KASA_YATIR, DIALOG_STYLE_INPUT, ""safaf"Çete - Para Yatýr", ""ww"Kasaya yatýracaðýnýz miktar:", ""ww"Yatýr", ""ww"Geri"), Hata(playerid, "0$'dan az yatýrým yapamazsýnýz.");
			if(Para > 150000) return Hata(playerid,"Tek seferde en fazla 150.000 yatýrabilirsiniz.");

			GivePlayerMoney(playerid, -Para);
			Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] += Para;
			Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKayit] = 1;

			Bilgi(playerid, "Çete kasasýna baþarýyla para yatýrdýnýz.");

			new Baslik[60];
			format(Baslik, 60, ""safaf"Çete - Kasa $%d", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa]);

			if(PlayerInfo[playerid][PlayerCeteRutbeID] < 5)
   			{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Kasaya para yatýr", ""ww"Seç", ""ww"Geri");
    		}else{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Kasaya para yatýr\n"ww"Kasadan para çek", ""ww"Seç", ""ww"Geri");
    		}
	    }else{
			new Baslik[60];
			format(Baslik, 60, ""safaf"Çete - Kasa $%d", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa]);

			if(PlayerInfo[playerid][PlayerCeteRutbeID] < 5)
   			{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Kasaya para yatýr", ""ww"Seç", ""ww"Geri");
    		}else{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Kasaya para yatýr\n"ww"Kasadan para çek", ""ww"Seç", ""ww"Geri");
    		}
	    }
	}

	if(dialogid == CETE_KASA_CEK)
	{
	    if(response)
	    {
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_KASA_CEK, DIALOG_STYLE_INPUT, ""safaf"Çete - Para Çek", ""ww"Kasadan çekmek istediðiniz miktarý kutucuða giriniz.", ""ww"Çek", ""ww"Geri"), Hata(playerid, "Herhangi bir deðer girmediniz.");
			new Para = strval(inputtext);

			if(Para > Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa]) return ShowPlayerDialog(playerid, CETE_KASA_CEK, DIALOG_STYLE_INPUT, ""safaf"Çete - Para Çek", ""ww"Kasadan çekmek istediðiniz miktarý kutucuða giriniz.", ""ww"Çek", ""ww"Geri"), Hata(playerid, "Kasada yeterli miktarda para bulunmuyor!");
			if(Para < 0) return ShowPlayerDialog(playerid, CETE_KASA_CEK, DIALOG_STYLE_INPUT, ""safaf"Çete - Para Çek", ""ww"Kasadan çekmek istediðiniz miktarý kutucuða giriniz.", ""ww"Çek", ""ww"Geri"), Hata(playerid, "Hatalý deðer girdiniz.");

			GivePlayerMoney(playerid, Para);
			Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] -= Para;
			Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKayit] = 1;

			Bilgi(playerid, "Çete kasasýndan para çektiniz.");

			new Baslik[60];
			format(Baslik, 60, ""safaf"Çete - Kasa $%d", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa]);

			if(PlayerInfo[playerid][PlayerCeteRutbeID] < 5)
   			{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Para Yatýr", ""ww"Seç", ""ww"Geri");
    		}else{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Kasa", ""ww"Para Yatýr\nPara Çek", ""ww"Seç", ""ww"Geri");
    		}
	    }else{
			new Baslik[60];
			format(Baslik, 60, ""safaf"Çete - Kasa $%d", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa]);

			if(PlayerInfo[playerid][PlayerCeteRutbeID] < 5)
   			{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Para Yatýr", ""ww"Para Yatýr", ""ww"Seç", ""ww"Geri");
    		}else{
				ShowPlayerDialog(playerid, CETE_KASA, DIALOG_STYLE_LIST, ""safaf"Çete - Para Yatýr", ""ww"Para Yatýr\n"ww"Para Çek", ""ww"Seç", ""ww"Geri");
    		}
	    }
	}

	if(dialogid == CETE_UYELER)
	{
	    if(response)
	    {
         	if(PlayerInfo[playerid][PlayerCeteRutbeID] < 8)
         	{
					new DiaYazi[10000], slot;

				    strcat(DiaYazi, ""ww"Oyuncu\t"ww"Rütbe\n");

				    foreach(new i : Player)
				    {
						if(PlayerInfo[i][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
						{
							ceteidsi[playerid][slot] = i;
							slot++;
							format(DiaYazi, sizeof(DiaYazi), "%s"ww"%s\t"ww"%s\n", DiaYazi, getName(i), CeteRutbeCek(i));
						}
					}

					ShowPlayerDialog(playerid, CETE_UYELER, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete - Üyeler", DiaYazi, ""ww"Seç", ""ww"Geri");

			}else{
				cetedekiuye[playerid] = ceteidsi[playerid][listitem];

				if(PlayerInfo[cetedekiuye[playerid]][PlayerCeteRutbeID] > PlayerInfo[playerid][PlayerCeteRutbeID]) return true;

				new Baslik[100];
				format(Baslik, 100, ""safaf"Çete - Yetki Deðiþtir", getName(cetedekiuye[playerid]));

				ShowPlayerDialog(playerid, CETE_UYEYONET, DIALOG_STYLE_LIST, Baslik, ""ww"Yetki Deðiþtir\n"ww"Çeteden At", ""ww"Seç", ""ww"Geri");
			}
	    }else{
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == CETE_UYEYONET)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
					new dialog[2048], str[1024];
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
				    strcat(dialog, str);
				    format(str, sizeof(str), ""ww"%s\n", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
				    strcat(dialog, str);

					ShowPlayerDialog(playerid, CETE_UYERUTBE, DIALOG_STYLE_LIST, ""safaf"Çete - Yetki Deðiþtir", dialog, ""ww"Seç", ""ww"Geri");
	            }

	            case 1:
	            {
					PlayerInfo[cetedekiuye[playerid]][PlayerCeteID] = -1;
					PlayerInfo[cetedekiuye[playerid]][PlayerCeteRutbeID] = 0;
					Bilgi(cetedekiuye[playerid], "Çete yetkilisi sizi çeteden attý.");

					new sql[500];
					format(sql, sizeof(sql), "UPDATE `oyuncular` SET `cete` = '-1', `ceterutbe` = '0' WHERE `kullaniciadi` = '%s'", getName(cetedekiuye[playerid]));
					mysql_query(mysqlC, sql);

					Bilgi(playerid, "Oyuncuyu baþarýyla çeteden attýnýz.");

							new sql2[500];
							format(sql2, sizeof(sql2), "UPDATE `ceteler` SET `uyesayisi` = uyesayisi-1 WHERE `ID` = '%d'", PlayerInfo[playerid][PlayerCeteID] + 1);
							mysql_query(mysqlC, sql2);

                    SavePlayer(cetedekiuye[playerid]);

				    new DiaYazi[1024], slot;

				    foreach(new i : Player)
				    {
						if(PlayerInfo[i][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
						{
							ceteidsi[playerid][slot] = i;
							slot++;
							format(DiaYazi, 1024, "%s"ww"%s \t%s\n", DiaYazi, getName(i), CeteRutbeCek(i));
						}
					}

					ShowPlayerDialog(playerid, CETE_UYELER, DIALOG_STYLE_LIST, ""safaf"Çete - Üyeler", DiaYazi, ""ww"Seç", ""ww"Geri");
				}
	        }
	    }else{
			new DiaYazi[10000], slot;

		    strcat(DiaYazi, ""ww"Oyuncu\t"ww"Rütbe\n");

		    foreach(new i : Player)
		    {
				if(PlayerInfo[i][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
				{
					ceteidsi[playerid][slot] = i;
					slot++;
					format(DiaYazi, sizeof(DiaYazi), "%s"ww"%s\t"ww"%s\n", DiaYazi, getName(i), CeteRutbeCek(i));
				}
			}

			ShowPlayerDialog(playerid, CETE_UYELER, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete - Üyeler", DiaYazi, ""ww"Seç", ""ww"Geri");
	    }
	}

	if(dialogid == CETE_UYERUTBE)
	{
	    if(response)
	    {

	        if(PlayerInfo[cetedekiuye[playerid]][PlayerCeteRutbeID] > PlayerInfo[playerid][PlayerCeteRutbeID]) return true;

	        PlayerInfo[cetedekiuye[playerid]][PlayerCeteRutbeID] = listitem;
	        Bilgi(cetedekiuye[playerid], "Çete yetkilisi yetkinizi deðiþtirdi.");

	        Bilgi(playerid, "Oyuncunun yetkisi baþarýyla deðiþtirildi.");

            SavePlayer(cetedekiuye[playerid]);

			new Baslik[100];
			format(Baslik, 100, ""safaf"Çete - Yetki Deðiþtir", getName(cetedekiuye[playerid]));

			ShowPlayerDialog(playerid, CETE_UYEYONET, DIALOG_STYLE_LIST, Baslik, ""ww"Yetki Deðiþtir\n"ww"Çeteden At", ""ww"Seç", ""ww"Geri");
	    }else{
			new Baslik[100];
			format(Baslik, 100, ""safaf"Çete - Yetki Deðiþtir", getName(cetedekiuye[playerid]));

			ShowPlayerDialog(playerid, CETE_UYEYONET, DIALOG_STYLE_LIST, Baslik, ""ww"Yetki Deðiþtir\n"ww"Çeteden At", ""ww"Seç", ""ww"Geri");
		}
	}

	if(dialogid == CETE_ISIM)
	{
	    if(response)
	    {
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_ISIM, DIALOG_STYLE_INPUT, ""safaf"Çete - Çete Ýsmini Deðiþtir", ""ww"Çete ismini girin:", ""ww"Deðiþtir", ""ww"Ýptal"), Hata(playerid, "Lütfen isim bölümünü boþ býrakmayýn.");
	        new sd[500];
	        format(sd, sizeof(sd), "SELECT * FROM `ceteler` WHERE `Isim` = '%s'", inputtext);
	        mysql_query(mysqlC, sd);

	        if(cache_num_rows() > 0)
	        {
	            return Hata(playerid, "Bu isimde bir zaten çete var.");
	        }
	        new eskiname[500];
	        format(eskiname, 500, "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim]);
			format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], 100, inputtext);
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] -= 100000;
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKayit] = 1;

			new sql[500];
			format(sql, sizeof(sql), "UPDATE `ceteler` SET `Isim` = '%s' WHERE `ID` = '%d'", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], PlayerInfo[playerid][PlayerCeteID] + 1);
			mysql_query(mysqlC, sql);

	        Bilgi(playerid, "Çete ismi baþarýyla deðiþtirildi.");

			new query[500];
			format(query, sizeof(query), "UPDATE `bolgeler` SET `sahipname` = '%s' WHERE `sahipceteid` = '%d'", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], PlayerInfo[playerid][PlayerCeteID]);
	        mysql_query(mysqlC, query);

	        for(new i; i < bolgecount + 1; i++)
	        {
	            if(bolgebilgi[i][sahipceteid] == PlayerInfo[playerid][PlayerCeteID] && bolgebilgi[i][bolgesaldiri] == false)
				{
				    BolgeYukle(i);
				}
	        }

			CeteMekanlariYenile();

			CeteAnaSayfasi(playerid);
	    }else{
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == CETE_TAG)
	{
	    if(response)
	    {
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_TAG, DIALOG_STYLE_INPUT, ""safaf"Çete - Çete Tagýný Deðiþtir", ""ww"Çete tagýný girin:\n"ww"Max. 6 karakter.", ""ww"Deðiþtir", ""ww"Ýptal"), Hata(playerid, "Lütfen tag bölümünü boþ býrakmayýn.");
			if(strlen(inputtext) > 6) return ShowPlayerDialog(playerid, CETE_TAG, DIALOG_STYLE_INPUT, ""safaf"Çete - Çete Tagýný Deðiþtir", ""ww"Çete tagýný girin:\n"ww"Max. 6 karakter.", ""ww"Deðiþtir", ""ww"Ýptal"), Hata(playerid, "Tag en fazla 6 karakterden oluþabilir.");
	        new sd[500];
	        format(sd, sizeof(sd), "SELECT * FROM `ceteler` WHERE `Tag` = '%s'", inputtext);
	        mysql_query(mysqlC, sd);

	        if(cache_num_rows() > 0)
	        {
	            return Hata(playerid, "Bu tagda bir zaten çete var.");
	        }
			format(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag], 7, inputtext);
			new sql[500];
			format(sql, sizeof(sql), "UPDATE `ceteler` SET `Tag` = '%s' WHERE `ID` = '%d'", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag], PlayerInfo[playerid][PlayerCeteID] + 1);
			mysql_query(mysqlC, sql);
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] -= 100000;
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKayit] = 1;

	        Bilgi(playerid, "Çete tagý baþarýyla deðiþtirildi.");
	        CeteAnaSayfasi(playerid);
	    }else{
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == CETE_SKIN)
	{
	    if(response)
	    {
	        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, CETE_SKIN, DIALOG_STYLE_INPUT, ""safaf"Çete - Çete Skini Deðiþtir", ""ww"Skinin ID'sini girin:", ""ww"Deðiþtir", ""ww"Ýptal"), Hata(playerid, "Lütfen skin bölümünü boþ býrakmayýn.");
			if(!IsValidSkin(strval(inputtext))) return ShowPlayerDialog(playerid, CETE_SKIN, DIALOG_STYLE_INPUT, ""safaf"Çete - Çete Skini Deðiþtir", ""ww"Skinin ID'sini girin:", ""ww"Deðiþtir", ""ww"Ýptal"), Hata(playerid, "Böyle bir skin yok.");

			Ceteler[PlayerInfo[playerid][PlayerCeteID]][cSkin] = strval(inputtext);
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] -= 20000;
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKayit] = 1;

	        Bilgi(playerid, "Çete skini baþarýyla deðiþtirildi.");
	        CeteAnaSayfasi(playerid);
	    }else{
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == CETE_RENK)
	{
	    if(response)
	    {
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk] = listitem;
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa] -= 50000;
	        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKayit] = 1;

	        foreach(new i : Player)
	        {
				if(PlayerInfo[i][PlayerCeteID] != -1 && PlayerInfo[i][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
				{
				    SetPlayerColor(playerid, CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenkkodu]);
				    Bilgi(playerid, "Çete rengi baþarýyla deðiþtirildi.");
				}
	        }
	    }else{
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == CETE_DURUM)
	{
	    if(response)
	    {
	        CeteAnaSayfasi(playerid);
	    }
	}

	if(dialogid == 5598)
	{
		if(!response)
		{
		    HideModelSelectionMenu(playerid);
			RemovePlayerFromVehicle(playerid);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPlayerPos(playerid,x,y,z+1);
			Hata(playerid,"Bu aracý kullanmak için 7 GLKredi vermelisiniz!");
		}
		if(response)
		{
		    HideModelSelectionMenu(playerid);
			if(PlayerInfo[playerid][GLKredi] < 7) return Hata(playerid,"Bu aracý kullanmak için 25 GLKredi'ye ihtiyacýnýz var!");
			HideModelSelectionMenu(playerid);
			PlayerInfo[playerid][GLKredi] -= 7;
			SCM(playerid,-1,""safaf"7 GLKredi hesabýnýzdan tahsil edildi.");
		}
	}

	if(dialogid == DIALOG_BANKA)
	{
	if(!response)
	{
	return true;
	}
	if(response)
	if(listitem == 0)
	{
	ShowPlayerDialog(playerid, DIALOG_BANKA_PARAYATIR, DIALOG_STYLE_INPUT, ""safaf"Para Yatýr", ""ww"Yatýrmak istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
	}
	if(listitem == 1)
	{
	ShowPlayerDialog(playerid, DIALOG_BANKA_PARACEK, DIALOG_STYLE_INPUT, ""safaf"Para Çek", ""ww"Çekmek istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
	}
	if(listitem == 2)
	{
	new String[128];
	format(String, sizeof(String), ""ww"Hesabýnýzda þuan $%s bulunuyor.", FormatMoney(PlayerInfo[playerid][bank]));
	ShowPlayerDialog(playerid, DIALOG_BANKA_HESAPDURUMU, DIALOG_STYLE_MSGBOX, ""safaf"Hesap Durumu", String, ""ww"Tamam", ""ww"Geri");
	}
	if(listitem == 3)
	{
	new str[1024];
    new str2[1024];
    format(str2,sizeof(str2),""ww"{FFFFFF}> Bakiye: $%s\n",FormatMoney(GetPlayerMoney(playerid)));
    strcat(str,""ww"{b2b2b2}Para Yatýr\n");
    strcat(str,""ww"{b2b2b2}Para Çek\n");
    strcat(str,""ww"{b2b2b2}Hesap Durumu\n");
    strcat(str,str2);
    ShowPlayerDialog(playerid,DIALOG_BANKA,DIALOG_STYLE_LIST,""safaf"Banka",str,""ww"Tamam",""ww"Ýptal");
	}
	}

	if(dialogid == DIALOG_BANKA_PARAYATIR)
	{
		if(!response)
		{
	        new str[1024];
	        new str2[1024];
	        format(str2,sizeof(str2),""ww"{FFFFFF}> Bakiye: $%s\n",FormatMoney(GetPlayerMoney(playerid)));
	        strcat(str,""ww"{b2b2b2}Para Yatýr\n");
	        strcat(str,""ww"{b2b2b2}Para Çek\n");
	        strcat(str,""ww"{b2b2b2}Hesap Durumu\n");
	        strcat(str,str2);
	        ShowPlayerDialog(playerid,DIALOG_BANKA,DIALOG_STYLE_LIST,""safaf"Banka",str,""ww"Tamam",""ww"Ýptal");
			return true;
		}
		if(!strlen(inputtext))
		{
			Hata(playerid,"Herhangi bir deðer girmediniz.");
			ShowPlayerDialog(playerid, DIALOG_BANKA_PARAYATIR, DIALOG_STYLE_INPUT, ""safaf"Para Yatýr", ""ww"Yatýrmak istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
		else if(GetPlayerMoney(playerid) < strval(inputtext))
		{
			Hata(playerid,"Yeterli miktarda paranýz bulunmuyor!");
			ShowPlayerDialog(playerid, DIALOG_BANKA_PARAYATIR, DIALOG_STYLE_INPUT, ""safaf"Para Yatýr", ""ww"Yatýrmak istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
	    else if(!IsNumeric(inputtext))
		{
			Hata(playerid,"Hatalý bir deðer girdiniz!");
			ShowPlayerDialog(playerid, DIALOG_BANKA_PARAYATIR, DIALOG_STYLE_INPUT, ""safaf"Para Yatýr", ""ww"Yatýrmak istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
		else if(strval(inputtext) < 5000 || strval(inputtext) > 5000000)
		{
			Hata(playerid,"Tek seferde en az $5,000, en fazla $5,000,000 yatýrabilirsiniz.");
			ShowPlayerDialog(playerid, DIALOG_BANKA_PARAYATIR, DIALOG_STYLE_INPUT, ""safaf"Para Yatýr", ""ww"Yatýrmak istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
		else
		{
	    	new String[128];
	    	GivePlayerMoney(playerid, -strval(inputtext));
			PlayerInfo[playerid][bank] = PlayerInfo[playerid][bank] + strval(inputtext);
			format(String, sizeof(String), ""safaf"Hesabýnýza $%d yatýrdýnýz.", strval(inputtext));
			SendClientMessage(playerid, -1, String);
		}
	}

	if(dialogid == DIALOG_BANKA_PARACEK)
	{
		if(!response)
		{
	        new str[1024];
	        new str2[1024];
	        format(str2,sizeof(str2),""ww"{FFFFFF}> Bakiye: $%s\n",FormatMoney(GetPlayerMoney(playerid)));
	        strcat(str,""ww"{b2b2b2}Para Yatýr\n");
	        strcat(str,""ww"{b2b2b2}Para Çek\n");
	        strcat(str,""ww"{b2b2b2}Hesap Durumu\n");
	        strcat(str,str2);
	        ShowPlayerDialog(playerid,DIALOG_BANKA,DIALOG_STYLE_LIST,""safaf"Banka",str,""ww"Tamam",""ww"Ýptal");
			return true;
		}
		if(!strlen(inputtext))
		{
			Hata(playerid,"Herhangi bir deðer girdiniz.");
			ShowPlayerDialog(playerid, DIALOG_BANKA_PARACEK, DIALOG_STYLE_INPUT, ""safaf"Para Çek", ""ww"Çekmek istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
		else if(strval(inputtext) > PlayerInfo[playerid][bank])
		{
			Hata(playerid,"Yeterli miktarda paranýz bulunmuyor!");
			ShowPlayerDialog(playerid, DIALOG_BANKA_PARACEK, DIALOG_STYLE_INPUT, ""safaf"Para Çek", ""ww"Çekmek istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
	    else if(!IsNumeric(inputtext))
		{
			Hata(playerid, "Hatalý bir deðer girdiniz!");
			ShowPlayerDialog(playerid, DIALOG_BANKA_PARACEK, DIALOG_STYLE_INPUT, ""safaf"Para Çek", ""ww"Çekmek istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
		else if(strval(inputtext) > 1000000 || strval(inputtext) <= 0)
		{
			Hata(playerid,"Tek seferde en fazla $1.000.000, en az $1 çekebilirsiniz.");
	    	ShowPlayerDialog(playerid, DIALOG_BANKA_PARACEK, DIALOG_STYLE_INPUT, ""safaf"Para Çek", ""ww"Çekmek istediðiniz miktarý aþaðýdaki kutucuða giriniz.", ""ww"Tamam", ""ww"Geri");
		}
		else
		{
			new String[128];
	    	GivePlayerMoney(playerid, strval(inputtext));
			PlayerInfo[playerid][bank] = PlayerInfo[playerid][bank] -strval(inputtext);
			format(String, sizeof(String), ""safaf"Hesabýnýzdan $%d çektiniz.", strval(inputtext));
			SendClientMessage(playerid, -1, String);
		}
	}

	if(dialogid == DIALOG_BANKA_HESAPDURUMU)
	{
	if(!response)
	{
        new str[1024];
        new str2[1024];
        format(str2,sizeof(str2),""ww"{FFFFFF}> Bakiye: $%s\n",FormatMoney(GetPlayerMoney(playerid)));
        strcat(str,""ww"{b2b2b2}Para Yatýr\n");
        strcat(str,""ww"{b2b2b2}Para Çek\n");
        strcat(str,""ww"{b2b2b2}Hesap Durumu\n");
        strcat(str,str2);
        ShowPlayerDialog(playerid,DIALOG_BANKA,DIALOG_STYLE_LIST,""safaf"Banka",str,""ww"Tamam",""ww"Ýptal");
	return true;
	}
	}

	if(dialogid == 8897)
	{
	if(!response) return true;
	if(response)
	{
	new dosyab[100];
	format(dosyab,sizeof(dosyab),"/Ceteler/%s.txt",getName(playerid));
	dini_Create(dosyab);
	dini_IntSet(dosyab,"lider",0);
	dini_Set(dosyab,"isim",degisken[playerid]);
	SFM(playerid,-1,""safaf"%s adlý çeteye baþarýyla katýldýnýz.",degisken[playerid]);
	}
	}

	if(dialogid == 2546)
	{
	if(!response) return true;
	if(response)
	{
	new dosya[100];
	format(dosya,sizeof(dosya),"/Ceteler/%s.txt",getName(playerid));
    if(dini_Exists(dosya)) return Hata(playerid,"Zaten bir çeten var.");
	if(!dini_Exists(dosya)) dini_Create(dosya);
	dini_IntSet(dosya,"lider",1);
	dini_IntSet(dosya,"uyesayisi",1);
	dini_Set(dosya,"isim",code(inputtext));
	SFM(playerid,-1,""safaf"%s isimli çetenizi baþarýyla oluþturdunuz. Rekabet ortamýna hoþgeldiniz. Þansýnýz bol olsun.",code(inputtext));
	}
	}

	if(dialogid == 1457)
	{
	if(!response) return true;
	if(response)
	{
	switch(listitem)
	{
	case 0:
	{
	ClearAnimations(playerid);
	SendClientMessage(playerid,-1,""safaf"Þuanda "wb"animasyonu {ffffff}durdurdunuz.");
	}
	case 1:
	{
	cmd_ellerhavaya(playerid,"");
	}
	case 2:
	{
	cmd_sarhos(playerid,"");
	}
	case 3:
	{
	cmd_bomb(playerid,"");
	}
	case 4:
	{
	cmd_ates(playerid,"");
	}
	case 5:
	{
	cmd_gul(playerid,"");
	}
	case 6:
	{
	cmd_dgozetle(playerid,"");
	}
	case 7:
	{
	cmd_hirsizlik(playerid,"");
	}
	case 8:
	{
	cmd_31(playerid,"");
	}
	case 9:
	{
	cmd_31bitis(playerid,"");
	}
	case 10:
	{
	cmd_yakalandin(playerid,"");
	}
	case 11:
	{
	cmd_vururum(playerid,"");
	}
	case 12:
	{
	cmd_vuruldum(playerid,"");
	}
	case 13:
	{
	cmd_saplakyedim(playerid,"");
	}
	case 14:
	{
	cmd_saplakat(playerid,"");
	}
	case 15:
	{
	cmd_sigara(playerid,"");
	}
	case 16:
	{
	cmd_sigara2(playerid,"");
	}
	case 17:
	{
	cmd_elsalla(playerid,"");
	}
	case 18:
	{
	cmd_bak(playerid,"");
	}
	case 19:
	{
	cmd_uzan(playerid,"");
	}
	case 20:
	{
	cmd_otur(playerid,"");
	}
	case 21:
	{
	cmd_yemek(playerid,"");
	}
	case 22:
	{
	cmd_kus(playerid,"");
	}
	case 23:
	{
	cmd_ol(playerid,"");
	}
	case 24:
	{
	cmd_anlas(playerid,"");
	}
	case 25:
	{
	cmd_op(playerid,"");
	}
	case 26:
	{
	cmd_emrah(playerid,"");
	}
	case 27:
	{
	cmd_nevarlan(playerid,"");
	}
	case 28:
	{
	cmd_ise(playerid,"");
	}
	case 29:
	{
	cmd_dans1(playerid,"");
	}
	case 30:
	{
	cmd_dans2(playerid,"");
	}
	case 31:
	{
	cmd_dans3(playerid,"");
	}
	case 32:
	{
	cmd_dans4(playerid,"");
	}
	case 33:
	{
	cmd_sex1(playerid,"");
	}
	case 34:
	{
	cmd_sex2(playerid,"");
	}
	case 35:
	{
	cmd_sex3(playerid,"");
	}
	case 36:
	{
	cmd_sex4(playerid,"");
	}
	case 37:
	{
	}
	case 38:
	{
	cmd_sex6(playerid,"");
	}
	}
	}
	}

	if(dialogid == 1598)
	{
	if(!response) return cmd_teles(playerid,"");
	if(response)
	{
	switch(listitem)
	{
	case 0:
	{
    SetPlayerPV(playerid, 2290.2449,2424.2969,10.5212);
    SendClientMessage(playerid, -1, ""safaf"Las Venturas Polis Departmaný adlý bölgeye gönderildiniz.");
	}
	case 1:
	{
    SetPlayerPV(playerid, -1621.0802,684.2443,6.8524);
    SendClientMessage(playerid, -1, ""safaf"San Fierro Polis Departmaný adlý bölgeye gönderildiniz.");
	}
	case 2:
	{
    SetPlayerPV(playerid, 1542.2021,-1680.9536,13.2000);
    SendClientMessage(playerid, -1, ""safaf"Los Santos Polis Departmaný adlý bölgeye gönderildiniz.");
	}
	}
	}
	}

	if(dialogid == 1597)
	{
	if(!response) return cmd_teles(playerid,"");
	if(response)
	{
	switch(listitem)
	{
	case 0:
	{
    SetPlayerPV(playerid, 1827.4309,-1683.2815,13.1206);
    SendClientMessage(playerid, -1, ""safaf"Alhambra Gazino adlý bölgeye gönderildiniz.");
	}
	case 1:
	{
    SetPlayerPV(playerid, -2679.4250,1450.4365,6.7722);
    SendClientMessage(playerid, -1, ""safaf"Jizzy Gazino adlý bölgeye gönderildiniz.");
	}
	case 2:
	{
    SetPlayerPV(playerid, 2420.6257,-1227.2455,24.6241);
    SendClientMessage(playerid, -1, ""safaf"Big Pen Gazino adlý bölgeye gönderildiniz.");
	}
	}
	}
	}

	if(dialogid == 1596)
	{
		if(!response) return cmd_teles(playerid,"");
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					cmd_bigdrift(playerid, "");
				}
				case 1:
				{
					cmd_bigdrift2(playerid, "");
				}
				case 2:
				{
					cmd_drift1(playerid,  "");
				}
				case 3:
				{
					cmd_drift2(playerid, "");
				}
				case 4:
				{
					cmd_drift3(playerid, "");
				}
				case 5:
				{
			    	SetPlayerPV(playerid, 2220.8074, 1964.8799, 31.4261);
			    	SendClientMessage(playerid, -1, ""safaf"Drift-4 adlý bölgeye gönderildiniz.");
				}
				case 6:
				{
			    	SetPlayerPV(playerid, -2489.8347, -616.3488, 132.2166);
			    	SendClientMessage(playerid, -1, ""safaf"Drift-5 adlý bölgeye gönderildiniz.");
				}
				case 7:
				{
			    	SetPlayerPV(playerid, 1146.2200, 2178.7092, 10.5219);
			    	SendClientMessage(playerid, -1, ""safaf"Drift-6 adlý bölgeye gönderildiniz.");
				}
				case 8:
				{
			    	SetPlayerPV(playerid, 1886.9543, 1813.2205, 18.5828);
			    	SendClientMessage(playerid, -1, ""safaf"Drift-7 adlý bölgeye gönderildiniz.");
				}
				case 9:
				{
			    	SetPlayerPV(playerid, -766.7554, -1730.1508, 96.0279);
			    	SendClientMessage(playerid, -1, ""safaf"Drift-8 adlý bölgeye gönderildiniz.");
				}
				case 10:
				{
			    	SetPlayerPV(playerid, 711.9221, 2581.6282, 25.2097);
			    	SendClientMessage(playerid, -1, ""safaf"Drift-9 adlý bölgeye gönderildiniz.");
				}
				case 11:
				{
			    	SetPlayerPV(playerid, -2418.8484, 81.8791, 34.6767);
			    	SendClientMessage(playerid, -1, ""safaf"Drift-10 adlý bölgeye gönderildiniz.");
				}
				case 12:
				{
					SetPlayerPV(playerid, 835.5609, 1373.1779, 32.9372);
					SendClientMessage(playerid, -1, ""safaf"Drift-11 adlý bölgeye gönderildiniz.");
				}
				case 13:
				{
					SetPlayerPV(playerid, 254.7871, 1396.3459, 9.5812);
					SendClientMessage(playerid, -1, ""safaf"Drift-12 adlý bölgeye gönderildiniz.");
				}
			}
		}
	}

	if(dialogid == 8888)
	{
		if(!response) return true;
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					new dialog[750];
					strcat(dialog,""ww"Big Drift (Ultra Drift)\n");
					strcat(dialog,""ww"Big Drift 2\n");
					strcat(dialog,""ww"Drift mekaný 1\n");
					strcat(dialog,""ww"Drift mekaný 2\n");
					strcat(dialog,""ww"Drift mekaný 3\n");
					strcat(dialog,""ww"Drift mekaný 4\n");
					strcat(dialog,""ww"Drift mekaný 5\n");
					strcat(dialog,""ww"Drift mekaný 6\n");
					strcat(dialog,""ww"Drift mekaný 7\n");
					strcat(dialog,""ww"Drift mekaný 8\n");
					strcat(dialog,""ww"Drift mekaný 9\n");
					strcat(dialog,""ww"Drift mekaný 10\n");
					strcat(dialog,""ww"Drift mekaný 11\n");
					strcat(dialog,""ww"Drift mekaný 12\n");
					ShowPlayerDialog(playerid,1596,DIALOG_STYLE_LIST,""safaf"Drift Mekanlarý",dialog,""ww"Tamam",""ww"Kapat");
				}
				case 1:
				{
					new dialog2[750];
					strcat(dialog2,""ww"Alhambra Gazino\n");
					strcat(dialog2,""ww"Jizzy Gazino\n");
					strcat(dialog2,""ww"Big Pen Gazino\n");
					ShowPlayerDialog(playerid,1597,DIALOG_STYLE_LIST,""safaf"Gazinolar",dialog2,""ww"Tamam",""ww"Kapat");
				}
				case 2:
				{
					new dialog3[750];
					strcat(dialog3,""ww"Las Venturas Polis Departmaný\n");
					strcat(dialog3,""ww"San Fierro Polis Departmaný\n");
					strcat(dialog3,""ww"Los Santos Polis Departmaný\n");
					ShowPlayerDialog(playerid,1598,DIALOG_STYLE_LIST,""safaf"Polis Departmanlarý",dialog3,""ww"Tamam",""ww"Kapat");
				}
				case 3:
				{
					new dialog4[750];
					strcat(dialog4,""ww"Dað Stuntlarý\n");
					strcat(dialog4,""ww"Ap1 Stuntlarý\n");
					strcat(dialog4,""ww"Ap2 Stuntlarý\n");
					strcat(dialog4,""ww"Monster Stunt\n");
					strcat(dialog4,""ww"TheDiff Stunt\n");
					strcat(dialog4,""ww"Old Stunt\n");
					strcat(dialog4,""ww"GlassJump Stunt\n");
					strcat(dialog4,""ww"Skate Parkour Stunt\n");
					ShowPlayerDialog(playerid,8889,DIALOG_STYLE_LIST,""safaf"Stuntlar",dialog4,""ww"Tamam",""ww"Kapat");
				}
				case 4:
				{
				    new dialog5[2048], dialogtopla[2048];
				    for(new i = 1; i < 51; i++)
				    {
				        format(dialog5, sizeof(dialog5), ""ww"Teleport %d\n", i);
				        strcat(dialogtopla, dialog5);
				    }
				    ShowPlayerDialog(playerid,1599,DIALOG_STYLE_LIST,""safaf"Teleports",dialogtopla,""ww"Tamam",""ww"Kapat");
				}
				case 5:
				{
				    new dialog6[4092], dialogtopla[4092];
				    for(new i = 1; i < 72; i++)
				    {
				        format(dialog6, sizeof(dialog6), ""ww"Interior %d\n", i);
				        strcat(dialogtopla, dialog6);
				    }
				    ShowPlayerDialog(playerid,1600,DIALOG_STYLE_LIST,""safaf"Interiors",dialogtopla,""ww"Tamam",""ww"Kapat");
				}
			}
		}
	}

	if(dialogid == 1599)
	{
	    if(!response)
	    {
	        return cmd_teles(playerid, "");
	    }
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0..50:
	            {
		            new cmdyazi[128];
		            format(cmdyazi, sizeof(cmdyazi), "%d", listitem + 1);
		            cmd_t(playerid, cmdyazi);
	            }
	        }
	    }
	}

	if(dialogid == 1600)
	{
	    if(!response)
	    {
	        return cmd_teles(playerid, "");
	    }
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0..71:
	            {
	                new cmdx[128];
	                format(cmdx, sizeof(cmdx), "%d", listitem + 1);
	                cmd_int(playerid, cmdx);
	            }
	        }
	    }
	}

	if(dialogid == 8889)
	{
	if(!response) return cmd_teles(playerid,"");
	if(response)
	{
	switch(listitem)
	{
	case 0:
	{
	cmd_dag(playerid,"");
	}
	case 1:
	{
	cmd_ap1(playerid,"");
	}
	case 2:
	{
	cmd_ap2(playerid,"");
	}
	case 3:
	{
	cmd_monsterstunt(playerid,"");
	}
	case 4:
	{
	cmd_thediffstunt(playerid,"");
	}
	case 5:
	{
	cmd_oldstunt(playerid,"");
	}
	case 6:
	{
	SetPlayerPV(playerid, 2117.3721, 2582.0769, 512.9391);
	SendClientMessage(playerid, -1, ""safaf"Glass Jump Stunt adlý bölgeye gönderildiniz.");
	}
	case 7:
	{
	SetPlayerPV(playerid, 1966.8514, -1441.9674, 12.5307);
	SendClientMessage(playerid, -1, ""safaf"Skate Board Stunt Polis Departmaný adlý bölgeye gönderildiniz.");
	}
	}
	}
	}

	if(dialogid == 55)
	{
		if(!response) return true;
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					Eglence[playerid] = true;
					SetPlayerAttachedObject(playerid, 3, 1609, 2, 0.000000, 0.000000, 0.000000, 0.000000, 80.000000, 0.000000);
					SCM(playerid,-1,""safaf"Obje baþarýyla takýldý. Çýkartmak için /eglence menüsüne bakabilirsiniz.");
				}
				case 1:
				{
					Eglence[playerid] = true;
					SetPlayerAttachedObject(playerid, 3, 2406, 3, 0.000000, 0.000000, 0.000000, 0.000000, 80.000000, 0.000000);
					SCM(playerid,-1,""safaf"Obje baþarýyla takýldý. Çýkartmak için /eglence menüsüne bakabilirsiniz.");
				}
				case 2:
				{
				    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
				    {
						Eglence[playerid] = false;
						if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
				    }
				}
			}
		}
	}

	if(dialogid == DIALOG_DM)
	{
	if(!response) return true;
	if(response)
	{
	switch(listitem)
	{
	case 0:
	{
	cmd_deagle(playerid,"");
	}
	case 1:
	{
	cmd_mg1(playerid,"");
	}
	case 2:
	{
	cmd_knifedm(playerid,"");
	}
	case 3:
	{
	cmd_sniperdm(playerid,"");
	}
	}
	}
	}

	if(dialogid == DIALOGID)
	{
		if(response)
		{
			if(listitem == 0) //Paintjobs
			{
				ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, ""safaf"Paintjob", "Paint Job 1\nPaint Job 2\nPaint Job 3\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 1) //Colors
			{
				ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, ""safaf"Renk", "Black\nWhite\nRed\nBlue\nGreen\nYellow\nPink\nBrown\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 2) //Exhausts
			{
				ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, ""safaf"Egzost", "Wheel Arch Alien Exhaust\nWheel Arch X-Flow Exhaust\nLocos Low Chromer Exhaust\nLocos Low Slamin Exhaust\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 3) //Front Bumpers
			{
				ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, ""safaf"Ön Tampon", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 4) //Rear Bumpers
			{
				ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, ""safaf"Arka Tampon", "Wheel Arch Alien bumper\nWheel Arch X-Flow bumper\nLocos Low Chromer bumper\nLocos Low Slamin bumper\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 5) //Roofs
			{
				ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, ""safaf"Çatý", "Wheel Arch Alien Roof Vent\nWheel Arch X-Flow Roof Vent\nLocos Low Hardtop Roof\nLocos Low Softtop Roof\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 6) //Spoilers
			{
				ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, ""safaf"Spoiler", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 7) //SideSkirts
			{
				ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, ""safaf"Yan Etek", "Wheel Arch Alien Side Skirts\nWheel Arch X-Flow Side Skirts\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
            if(listitem == 8) //Bullbars
			{
				ShowPlayerDialog(playerid, DIALOGID+9, DIALOG_STYLE_LIST, ""safaf"Bullbar", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 9) //Wheels
			{
				ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, ""safaf"Jant", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 10) //Car stereo
			{
				ShowPlayerDialog(playerid, DIALOGID+11, DIALOG_STYLE_LIST, ""safaf"Müzik Setini Seçin.", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 11) //Tune car menu 2
			{
				ShowPlayerDialog(playerid, DIALOGID+12, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye", "Hidrolikler\nNitro x10\nAraç Tamir\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 12) //Wheels2
			{
				ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, ""safaf"Jant", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
       }
   }

   if(dialogid == DIALOGID+1) //Paintjobs
   {
		if(response)
		{
			if(listitem == 0)
			{
				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
		        {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,0);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					OnVehiclePaintjob(playerid, car, 0);
					SendClientMessage(playerid,COLOR_YELLOW,""safaf"Paintjob 1'i baþarýyla aracýna ekledin.");
                    ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Paintjob Seçin", "Paint Job 1\nPaint Job 2\nPaint Job 3\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

				}
				else
				{
				   SendClientMessage(playerid,COLOR_RED,""safaf"Bu paintjob Wheel Arch Angel ve Loco Low Co. tipi araçlar içindir!");
			       ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
				}
			}
			if(listitem == 1)
			{
				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
                {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,1);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					OnVehiclePaintjob(playerid, car, 1);
					SendClientMessage(playerid,COLOR_YELLOW,""safaf"Paintjob 2'yi baþarýyla aracýna ekledin.");
                    ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Paintjob Seçin", "Paint Job 1\nPaint Job 2\nPaint Job 3\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

				}
				else
				{
				   SendClientMessage(playerid,COLOR_RED,""safaf"Bu paintjob Wheel Arch Angel ve Loco Low Co. tipi araçlar içindir!");
			       ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
				}
			}
			if(listitem == 2)
			{
				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
			   	   new car = GetPlayerVehicleID(playerid);
                   ChangeVehiclePaintjob(car,2);
                   OnVehiclePaintjob(playerid, car, 2);
                   PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				   SendClientMessage(playerid,COLOR_YELLOW,""safaf"Paintjob 3'ü baþarýyla aracýna ekledin.");
                   ShowPlayerDialog(playerid, DIALOGID+1, DIALOG_STYLE_LIST, "Paintjob Seçin", "Paint Job 1\nPaint Job 2\nPaint Job 3\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
				}
				else
				{
				   SendClientMessage(playerid,COLOR_RED,""safaf"Bu paintjob Wheel Arch Angel ve Loco Low Co. tipi araçlar içindir!");
			       ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
				}
			}
			if(listitem == 3)
			{
				ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
			}
	   }
   }

   if(dialogid == DIALOGID+2) //Colours
   {
		if(response)
		{
			if(listitem == 0)
			{
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,0,0);//Black
		            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Siyaha Boyadýn.");
		            OnVehicleRespray(playerid, car, 0, 0);
		            ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

			}
			if(listitem == 1)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,1,1);//White
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Beyaza Boyadýn.");
			        OnVehicleRespray(playerid, car, 1, 1);
			        ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

			}
			if(listitem == 2)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,3,3);//Red
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        OnVehicleRespray(playerid, car, 3, 3);
			        SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Kýrmýzýya Boyadýn.");
			        ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

			}
			if(listitem == 3)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,79,79); //Blue
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        OnVehicleRespray(playerid, car, 79, 79);
			        SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Maviye Boyadýn.");
			        ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

			}
			if(listitem == 4)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,86,86);//Green
			        OnVehicleRespray(playerid, car, 86, 86);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Yeþile Boyadýn.");
			        ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

			}
			if(listitem == 5)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,6,6);//Yellow
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        OnVehicleRespray(playerid, car, 6, 6);
			        SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Sarýya Boyadýn.");
			        ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");

			}
			if(listitem == 6)
           {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,126,126);//Pink
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        OnVehicleRespray(playerid, car, 126, 126);
			        SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Pembeye Boyadýn.");
			        ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 7)
			{
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,66,66);//Brown
			        OnVehicleRespray(playerid, car, 66, 66);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          		SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracýný Kahverengiye Boyadýn.");
			        ShowPlayerDialog(playerid, DIALOGID+2, DIALOG_STYLE_LIST, "Bir Renk Seçin", "Siyah\nBeyaz\nKýrmýzý\nMavi\nYeþil\nSarý\nPembe\nKahverengi\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 8)
			{
        		    ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
		}
   }

   if(dialogid == DIALOGID+3) //Exhausts
   {
		if(response)
		{
			if(listitem == 0)//Wheel Arch Cars Alien Exausts
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1034);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien egzostu Elegy'ye baþarýyla ekledin.");
		            	ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1046);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien egzostu Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1065);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien egzostu Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1064);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien egzostu Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1028);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien egzostu Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1089);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien egzostu Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
	    			}
	    			}
	  			 	else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angel tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
                    }
            }
			if(listitem == 1)//Wheel Arch Cars X-Flow Exausts
            {
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
                {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponent(car,1037);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow egzostu Elegy'ye baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1045);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow egzostu Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1066);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow egzostu Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1059);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow egzostu Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1029);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow egzostu Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1092);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow egzostu Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angel tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
			if(listitem == 2)//Locos Low Co. Cars Chromer Exausts
            {
                if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575)
			        {
			            AddVehicleComponent(car,1044);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		             	SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer egzostu Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 534)
					{
					    AddVehicleComponent(car,1126);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer egzostu Remington'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 567)
					{
					    AddVehicleComponent(car,1129);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	                    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer egzostu Savanna'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1104);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer egzostu Blade'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 535)
					{
					    AddVehicleComponent(car,1113);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer egzostu Slamvan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 576)
					{
					    AddVehicleComponent(car,1136);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					   	SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer egzostu Tornado'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low Car tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
			if(listitem == 3)//Locos Low Co. Cars Salmin Exausts
            {
                if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575)
			        {
			            AddVehicleComponent(car,1043);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,"[INFO] Locos Low Slamin egzostu Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 534)
					{
					    AddVehicleComponent(car,1127);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,"[INFO] Locos Low Slamin egzostu Remington'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 567)
					{
					    AddVehicleComponent(car,1132);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,"[INFO] Locos Low Slamin egzostu Savanna'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1105);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,"[INFO] Locos Low Slamin egzostu Blade'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}

					else if(pmodelid[playerid] == 535)
					{
					    AddVehicleComponent(car,1114);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,"[INFO] Locos Low Slamin egzostu Slamvan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}

					else if(pmodelid[playerid] == 576)
					{
					    AddVehicleComponent(car,1135);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,"[INFO] Locos Low Slamin egzostu Tornado'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+3, DIALOG_STYLE_LIST, "Bir Egzost Seçin", "Wheel Arch Alien Egzost\nWheel Arch X-Flow Egzost\nLocos Low Chromer Egzost\nLocos Low Slamin Egzost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
                    }
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low Car tipi araçlara ekleyebilirssin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
			if(listitem == 4)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
	    }
   }

   if(dialogid == DIALOGID+4)//Front Bumpers
   {
		if(response)
		{
			if(listitem == 0)//Wheel Arch Cars Alien Front Bumper
			{
                   if(pmodelid[playerid] == 562 ||
				   pmodelid[playerid] == 565 ||
				   pmodelid[playerid] == 559 ||
				   pmodelid[playerid] == 561 ||
				   pmodelid[playerid] == 560)
				   {
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1171);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien ön tamponu Elegy'ye baþarýyla ekledin.");
		            	ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1153);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien ön tamponu Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1160);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien ön tamponu Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1155);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien ön tamponu Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1169);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien ön tamponu Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1166);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien ön tamponu Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
	                }
            }
			if(listitem == 1)//Wheel Arch Cars X-Flow Front Bumper
            {
                   if(pmodelid[playerid] == 562 ||
	               pmodelid[playerid] == 565 ||
	               pmodelid[playerid] == 559 ||
	               pmodelid[playerid] == 561 ||
                   pmodelid[playerid] == 560)
		           {

			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponent(car,1172);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow ön tamponu Elegy'ye baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1152);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow ön tamponu Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1173);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow ön tamponu Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1157);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow ön tamponu Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1170);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow ön tamponu Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1165);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow ön tamponu Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
		    }
			if(listitem == 2)//Locos Low Co. Car Chromer Front Bumper
            {
                if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
				{
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575)
			        {
			            AddVehicleComponent(car,1174);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer ön tamponu Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 534)
					{
					    AddVehicleComponent(car,1179);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer ön tamponu Remington'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 567)
					{
					    AddVehicleComponent(car,1189);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer ön tamponu Savanna'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1182);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer ön tamponu Blade'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 535)
					{
					    AddVehicleComponent(car,1115);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer ön tamponu Slamvan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 576)
					{
					    AddVehicleComponent(car,1191);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer ön tamponu Tornado'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 3)//Locos Low Co. Salmin Front Bumper
            {
                if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
	            pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 576)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575)
			        {
			            AddVehicleComponent(car,1175);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin ön tamponu Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 534)
					{
					    AddVehicleComponent(car,1185);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin ön tamponu Remington'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 567)
					{
					    AddVehicleComponent(car,1188);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin ön tamponu Savanna'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1181);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin ön tamponu Blade'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
                    else if(pmodelid[playerid] == 535)
					{
					    AddVehicleComponent(car,1116);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin ön tamponu Slamvan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 576)
					{
					    AddVehicleComponent(car,1190);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin ön tamponu Tornado'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+4, DIALOG_STYLE_LIST, "Ön Tampon Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
                    }
            }
			if(listitem == 4)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
        }
   }

   if(dialogid == DIALOGID+5)//Rear Bumpers
   {
		if(response)
		{
			if(listitem == 0)//Wheel Arch Cars Alien Rear Bumper
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {
                    new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1149);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien arka tamponu Elegy'ye baþarýyla ekledin.");
		            	ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1150);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien arka tamponu Flssh'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1159);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien arka tamponu Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1154);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien arka tamponu Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1141);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien arka tamponu Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1168);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien arka tamponu Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
			if(listitem == 1)//Wheel Arch Cars X-Flow Rear Bumper
            {
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

					new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponent(car,1148);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch  X-Flow arka tamponu Elegy'ye baþarýyla ekledin.");
		                ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1151);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch  X-Flow arka tamponu Flash'a baþarýyla ekledin.");
				        ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1161);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch  X-Flow arka tamponu Jester'a baþarýyla ekledin.");
				        ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1156);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch  X-Flow arka tamponu Stratum'a baþarýyla ekledin.");
				        ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1140);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch  X-Flow arka tamponu Sultan'a baþarýyla ekledin.");
				        ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1167);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch  X-Flow arka tamponu Uranus'e baþarýyla ekledin.");
				        ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
			if(listitem == 2)//Locos Low Co. Cars Chromer Rear Bumper
            {
                if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575)
			        {
			            AddVehicleComponent(car,1176);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer arka tamponu Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 534)
					{
					    AddVehicleComponent(car,1180);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer arka tamponu Remington'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 567)
					{
					    AddVehicleComponent(car,1187);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer arka tamponu Savanna'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1184);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer arka tamponu Blade'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 535)
					{
					    AddVehicleComponent(car,1109);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer arka tamponu Slamvan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 576)
					{
					    AddVehicleComponent(car,1192);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chromer arka tamponu Tornado'ya baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
			if(listitem == 3)//Locos Low Co. Cars Salmin Rear Bumper
            {
                if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575)
			        {
			            AddVehicleComponent(car,1177);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin arka tamponu Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 534)
					{
					    AddVehicleComponent(car,1178);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin arka tamponu Remington'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 567)
					{
					    AddVehicleComponent(car,1186);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin arka tamponu Savanna'ya baþarýyla ekledin..");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1183);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin arka tamponu Blade'e baþarýyla ekledin..");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}

					else if(pmodelid[playerid] == 535)
					{
					    AddVehicleComponent(car,1110);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin arka tamponu Slamvan'a baþarýyla ekledin..");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}

					else if(pmodelid[playerid] == 576)
					{
					    AddVehicleComponent(car,1193);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Slamin arka tamponu Tornado'ya baþarýyla ekledin..");
					    ShowPlayerDialog(playerid, DIALOGID+5, DIALOG_STYLE_LIST, "Arka Tamponu Seçin", "Wheel Arch Alien Tampon\nWheel Arch X-Flow Tampon\nLocos Low Chromer Tampon\nLocos Low Slamin Tampon\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
                    }
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
            if(listitem == 4)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
        }
   }

   if(dialogid == DIALOGID+6)//Roofs
   {
		if(response)
		{
			if(listitem == 0)//Wheel Arch Cars Alien Roof Vent
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1035);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien çatýyý Elegy'ye baþarýyla ekledin.");
		            	ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1054);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien çatýyý Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1067);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien çatýyý Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1055);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien çatýyý Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1032);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien çatýyý Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1088);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien çatýyý Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
	        if(listitem == 1)//Wheel Arch Cars X-Flow Roof Vent
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponent(car,1035);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow çatýyý Elegy'ye baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1053);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow çatýyý Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1068);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow çatýyý Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1061);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow çatýyý Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1033);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow çatýyý Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1091);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow çatýyý Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 2)//Locos Low Co. Cars Hardtop Roof
			{
                if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567)
			        {
			            AddVehicleComponent(car,1130);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Hardtop çatýyý Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
	   				else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1128);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Hardtop çatýyý Blade'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low tipi Savanna ve Blade'e ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
		    if(listitem == 3)//Locos Low Co. Cars Softtop Roof
			{
                 if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567)
			        {
			            AddVehicleComponent(car,1131);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Softtop çatýyý Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
	   				else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1103);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Softtop çatýyý Blade'e baþarýyla ekledin.");
                        ShowPlayerDialog(playerid, DIALOGID+6, DIALOG_STYLE_LIST, "Çatýyý Seçin", "Wheel Arch Alien Çatý\nWheel Arch X-Flow Çatý\nLocos Low Hardtop Çatý\nLocos Low Softtop Çatý\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low tipi Savanna ve Blade'e ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
            if(listitem == 4)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
	     }
   }

   if(dialogid == DIALOGID+7)//Spoilers
   {
		if(response)
		{
			if(listitem == 0)//Wheel Arch Cars Alien Spoilers
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1147);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Spoiler'ý Elegy'ye baþarýyla ekledin.");
		            	ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1049);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Spoiler'ý Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1162);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Spoiler'ý Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1158);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Spoiler'ý Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1138);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Spoiler'ý Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1164);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Spoiler'ý Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
    	    }
            if(listitem == 1)//Wheel Arch Cars X-Flow Spoilers
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {
                    new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponent(car,1146);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Spoiler'ý Elegy'ye baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1150);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Spoiler'ý Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1158);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Spoiler'ý Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1060);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Spoiler'ý Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1139);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Spoiler'ý Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1163);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Spoiler'ý Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+7, DIALOG_STYLE_LIST, "Spoiler Seçin", "Alien Spoiler\nX-Flow Spoiler\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca X-Flow Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
            }
            if(listitem == 2)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
	   	 }
   }

   if(dialogid == DIALOGID+8)//Sideskirts
   {
		if(response)
		{
			if(listitem == 0)//Wheel Arch Cars Alien Sideskirts
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponent(car,1036);
		            	AddVehicleComponent(car,1040);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Yan Eteði Elegy'ye baþarýyla ekledin.");
		            	ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1047);
					    AddVehicleComponent(car,1051);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Yan Eteði Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1069);
					    AddVehicleComponent(car,1071);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Yan Eteði Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1056);
					    AddVehicleComponent(car,1062);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Yan Eteði Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1026);
					    AddVehicleComponent(car,1027);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Yan Eteði Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1090);
					    AddVehicleComponent(car,1094);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch Alien Yan Eteði Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
		    }
	   	    if(listitem == 1)//Wheel Arch Cars X-Flow Sideskirts
			{
                if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {
				    new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponent(car,1039);
			            AddVehicleComponent(car,1041);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Yan Eteði Elegy'ye baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponent(car,1048);
					    AddVehicleComponent(car,1052);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Yan Eteði Flash'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponent(car,1070);
					    AddVehicleComponent(car,1072);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Yan Eteði Jester'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponent(car,1057);
					    AddVehicleComponent(car,1063);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Yan Eteði Stratum'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponent(car,1031);
					    AddVehicleComponent(car,1030);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Yan Eteði Sultan'a baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponent(car,1093);
					    AddVehicleComponent(car,1095);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wheel Arch X-Flow Yan Eteði Uranus'e baþarýyla ekledin.");
					    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Wheel Arch Angels tipi araçlara ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
		    }
		    if(listitem == 2)//Locos Low Co. Cars Chrome Strip Sideskirts
			{
                 if(pmodelid[playerid] == 575 ||
	               pmodelid[playerid] == 536 ||
	               pmodelid[playerid] == 576 ||
		 	       pmodelid[playerid] == 567)
                   {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575)
			        {
	       		        AddVehicleComponent(car,1042);
	       		        AddVehicleComponent(car,1099);
	       		        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Strip Yan Eteði Brodway'e baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
	   				else if(pmodelid[playerid] == 567)
					{
					    AddVehicleComponent(car,1102);
					    AddVehicleComponent(car,1133);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Strip Yan Eteði Savanna'ya baþarýyla ekledin.");
	    		        ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
	                }
	                else if(pmodelid[playerid] == 576)
					{
					    AddVehicleComponent(car,1134);
					    AddVehicleComponent(car,1137);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Strip Yan Eteði Tornado'ya baþarýyla ekledin.");
	    		        ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
	                }
	                else if(pmodelid[playerid] == 536)
					{
					    AddVehicleComponent(car,1108);
					    AddVehicleComponent(car,1107);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Strip Yan Eteði Blade'e baþarýyla ekledin.");
	                    ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
	                }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý yanlýzca Locos Low tipi Brodway, Savanna Tornado ve Blade'e ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
	        }
	  	    if(listitem == 3)//Locos Low Co. Cars Chrome Flames Sideskirts
			{
                if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534)
			        {
			            AddVehicleComponent(car,1122);
			            AddVehicleComponent(car,1101);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Flames Yan eteði Remington'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Remington'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 4)//Locos Low Co. Cars Chrome Arches Sideskirts
			{
                if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534)
			        {
			            AddVehicleComponent(car,1106);
			            AddVehicleComponent(car,1124);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Arches Yan Eteði Remington'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Remington'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 5)//Locos Low Co. Cars Chrome Trim Sideskirts
			{
                if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535)
			        {
			            AddVehicleComponent(car,1118);
			            AddVehicleComponent(car,1120);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Trim yan eteði Slamvan'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Slamvan'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 6)//Locos Low Co. Cars Chrome Wheelcovers Sideskirts
			{
                if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535)
			        {
			            AddVehicleComponent(car,1119);
			            AddVehicleComponent(car,1121);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Wheelcover'ý Slamvan'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+8, DIALOG_STYLE_LIST, "Yan Eteði Seçin", "Wheel Arch Alien Yan Etek\nWheel Arch X-Flow Yan Etek\nLocos Low Chrome Strip\nLocos Low Chrome Flames\nLocos Low Chrome Arches\nLocos Low Chrome Trim\nLocos Low Wheelcovers\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Slamvan'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 7)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
         }
   }
   if(dialogid == DIALOGID+9)//Bullbars
   {
		if(response)
		{
			if(listitem == 0)//Locos Low Co. Cars Chrome Grill
			{
                if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534)
			        {
			            AddVehicleComponent(car,1100);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Grill parçasýný Remington'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+9, DIALOG_STYLE_LIST, "Bullbar seçin", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			        }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Remington'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 1)//Locos Low Co. Cars Chrome Bars
			{
                 if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534)
			        {
			            AddVehicleComponent(car,1123);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Bars parçasýný Remington'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+9, DIALOG_STYLE_LIST, "Bullbar seçin", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Remington'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 2)//Locos Low Co. Cars Chrome Lights
			{
                if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534)
			        {
			            AddVehicleComponent(car,1125);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Lights parçasýný Remington'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+9, DIALOG_STYLE_LIST, "Bullbar seçin", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Remington'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 3)//Locos Low Co. Cars Chrome Bullbar
			{
                if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535)
			        {
			            AddVehicleComponent(car,1117);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,COLOR_YELLOW,""safaf"Locos Low Chrome Lights parçasýný Slamvan'a baþarýyla ekledin.");
			            ShowPlayerDialog(playerid, DIALOGID+9, DIALOG_STYLE_LIST, "Bullbar seçin", "Locos Low Chrome Grill\nLocos Low Chrome Bars\nLocos Low Chrome Lights\nLocos Low Chrome Bullbar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_RED,""safaf"Bu parçayý sadece Locos Low Car tipi Slamvan'a ekleyebilirsin!");
					ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
					}
			}
			if(listitem == 4)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
       }
   }

   if(dialogid == DIALOGID+10)//Wheels
   {
		if(response)
		{
			if(listitem == 0)//Offroad
			{
                 new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1025);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                 SendClientMessage(playerid,COLOR_YELLOW,"[INFO] Offroad tekerleði aracýna baþarýyla ekledin.");
	             ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
	        }
            if(listitem == 1)//Mega
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1074);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,""safaf"Mega tekerleði aracýna baþarýyla ekledin.");
			     ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
            if(listitem == 2)//Wires
			{
                 new car = GetPlayerVehicleID(playerid);
	             AddVehicleComponent(car,1076);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Wires tekerleði aracýna baþarýyla ekledin.");
			     ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
	        if(listitem == 3)//Twist
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1078);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,""safaf"Twist tekerleði aracýna baþarýyla ekledin.");
			     ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 4)//Groove
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1081);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,""safaf"Groove tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 5)//Import
			{
                 new car = GetPlayerVehicleID(playerid);
                 AddVehicleComponent(car,1082);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
   			     SendClientMessage(playerid,COLOR_YELLOW,""safaf"Import tekerleði aracýna baþarýyla ekledin.");
			     ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 6)//Atomic
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1085);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,COLOR_YELLOW,""safaf"Atomic tekerleði aracýna baþarýyla ekledin.");
                 ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 7)//Ahab
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1096);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          	 SendClientMessage(playerid,COLOR_YELLOW,""safaf"Ahab tekerleði aracýna baþarýyla ekledin.");
			     ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 8)//Virtual
			{
                 new car = GetPlayerVehicleID(playerid);
                 AddVehicleComponent(car,1097);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	           	 SendClientMessage(playerid,COLOR_YELLOW,""safaf"Virtual tekerleði aracýna baþarýyla ekledin.");
                 ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 9)//Access
			{
                 new car = GetPlayerVehicleID(playerid);
			     AddVehicleComponent(car,1098);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	         	 SendClientMessage(playerid,COLOR_YELLOW,""safaf"Access tekerleði aracýna baþarýyla ekledin.");
			     ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 10)//Next page
			{
                 ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 11)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }

		}
   }

   if(dialogid == DIALOGID+11)//Car Stereo
   {
		if(response)
		{
			if(listitem == 0)//Bass Boost
			{
                 new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Stereo Bass Bost sistemini aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+11, DIALOG_STYLE_LIST, "Ses Sistemi", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 1)//Super Bass Boost
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Stereo Super Bass Bost sistemini aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+11, DIALOG_STYLE_LIST, "Ses Sistemi", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 2)//Ultra Bass Boost
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Ultra Bass Bost sistemini aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+11, DIALOG_STYLE_LIST, "Ses Sistemi", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 3)//King Bass Boost
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"King Stereo Bass Bost sistemini aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+11, DIALOG_STYLE_LIST, "Ses Sistemi", "Bass Boost\nSuper Bass Boost\nUltra Bass Boost\nKing Bass Boost\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 4)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
		}
   }

   if(dialogid == DIALOGID+12)//Tune car menu 2
   {
		if(response)
		{
			if(listitem == 0)//Hydraulics
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1087);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Hidrolikleri aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+12, DIALOG_STYLE_LIST, "Modifiye Menüsü", "Hidrolikler\nNitro x10\nAraç Tamir\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 1)//Nitro x10
			{
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1010);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"10x Nitro'yu aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+12, DIALOG_STYLE_LIST, "Modifiye Menüsü", "Hidrolikler\nNitro x10\nAraç Tamir\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 2)//Repair Car
			{
		         new car = GetPlayerVehicleID(playerid);
		         SetVehicleHealth(car,1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Aracý Baþarýyla Tamir Ettin.");
		         ShowPlayerDialog(playerid, DIALOGID+12, DIALOG_STYLE_LIST, "Modifiye Menüsü", "Hidrolikler\nNitro x10\nAraç Tamir\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
			}
			if(listitem == 3)//Geri
            {
                 ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
            }
		}
	}

   if(dialogid == DIALOGID+13)//Wheels 2
   {
		if(response)
		{
			if(listitem == 0)//Trance
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1084);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Trance tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 1)//Shadow
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1073);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Shadow tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 2)//Rimshine
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1075);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Rimshine tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 3)//Classic
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1077);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Classic tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 4)//Cutter
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1079);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Cutter tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 5)//Switch
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1080);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Switch tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 6)//Dollar
            {
		         new car = GetPlayerVehicleID(playerid);
		         AddVehicleComponent(car,1083);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,COLOR_YELLOW,""safaf"Dollar tekerleði aracýna baþarýyla ekledin.");
		         ShowPlayerDialog(playerid, DIALOGID+13, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Trance\nShadow\nRimshine\nClassic\nCutter\nSwitch\nDollar\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
            if(listitem == 7)//Geri
            {
		         ShowPlayerDialog(playerid, DIALOGID+10, DIALOG_STYLE_LIST, "Tekerleði Seçin", "Offroad\nMega\nWires\nTwist\nGrove\nImport\nAtomic\nAhab\nVirtual\nAccess\n[Diðer Sayfa]\n[Geri]", ""ww"Seç", ""ww"Çýkýþ");
            }
         }
    }


	if(dialogid == 5)
	{
		if(!response) return cmd_shop(playerid, "");
		switch(listitem)
		{
		    case 0:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,1,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 1:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,2,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 2:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,3,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 3:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,4,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 4:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,5,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 5:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,6,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 6:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,7,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 7:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,8,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 8:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,9,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 9:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,10,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 10:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,11,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 11:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,12,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 12:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,13,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 13:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,14,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 14:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,15,1);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 15:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,16,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 16:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,17,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 17:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,18,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 18:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,22,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 19:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,23,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 20:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,24,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 21:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,25,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 22:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,26,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 23:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,27,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 24:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,28,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 25:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,29,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 26:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,30,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 27:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,31,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 28:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,32,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 29:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,33,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 30:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,34,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 31:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,41,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 32:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,42,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 33:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,43,500);
			GivePlayerMoney(playerid,-1000);
		    }
		    case 34:
		    {
		    if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Bunu alabilmek için $1000 paranýz olmalýdýr.");
			GivePlayerWeapon(playerid,46,500);
			GivePlayerMoney(playerid,-1000);
		    }
	    }
	}

	if(dialogid == UnBan)
	{
	    if(PlayerInfo[playerid][dLevel] < 8) return true;
	    if(!response) return true;
	    switch(listitem)
		{
			//case 0: mysql_tquery(mysqlC, "SELECT * FROM `banlog` WHERE `aktif` = '1'", "CheckIpBanList", "d", playerid);
			case 0: BanlariGoster(playerid);
			case 1:
			{
			    if(PlayerInfo[playerid][dLevel] < 9) return YETERSIZSEVIYE(playerid, 9), cmd_unban(playerid, "");
			    mysql_query(mysqlC, "TRUNCATE TABLE banlog");
			    SCM(playerid, -1, ""safaf"Tüm IP banlarý temizlediniz.");
			}
			case 2: cmd_unban(playerid, "");
			//case 3: mysql_tquery(mysqlC, "SELECT * FROM `nbanlog`", "CheckNBanList", "d", playerid);
			case 3: NBanlariGoster(playerid);
			case 4:
			{
			    if(PlayerInfo[playerid][dLevel] < 9) return YETERSIZSEVIYE(playerid, 9), cmd_unban(playerid, "");
			    mysql_query(mysqlC, "TRUNCATE TABLE nbanlog");
			    SCM(playerid, -1, ""safaf"Tüm name banlarý temizlediniz.");
			}
			case 5: cmd_unban(playerid, "");
			case 6:
			{
				if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid, 8);
				//mysql_tquery(mysqlC, "SELECT * FROM `sbanlog`", "CheckSBanList", "d", playerid);
				SBanlariGoster(playerid);
			}
			case 7:
			{
			    if(PlayerInfo[playerid][dLevel] < 9) return YETERSIZSEVIYE(playerid, 9), cmd_unban(playerid, "");
			    mysql_query(mysqlC, "TRUNCATE TABLE sbanlog");
			    SCM(playerid, -1, ""safaf"Tüm serial banlarý temizlediniz.");
			}
		}
		return true;
	}

	if(dialogid == OpenSBan)
	{
	    if(PlayerInfo[playerid][dLevel] < 8) return true;
	    if(!response) return cmd_unban(playerid, "");
		new ipadress[16], varname[32], playername[25];
		format(varname, 32, "SBanOpName_%d", listitem);
		GetPVarString(playerid, varname, playername, 25);
		format(varname, 32, "SBanOpIP_%d", listitem);
		GetPVarString(playerid, varname, ipadress, 16);
		if(strlen(ipadress))
		{
			UnBlockIpAddress(ipadress);
			format(fstring, 256, "DELETE FROM `banlog` WHERE `ip` = '%s'", ipadress);
			mysql_query(mysqlC, fstring);
		}
		format(fstring, 256, "DELETE FROM `sbanlog` WHERE `name` = '%s'", playername);
		mysql_query(mysqlC, fstring);
		format(fstring, 144, ""safaf"%s {FFFFFF}isimli oyuncunun serial baný kaldýrýldý.", playername);
		SendClientMessage(playerid, -1, fstring);
		return true;
	}

	if(dialogid == OpenNBan)
	{
	    if(PlayerInfo[playerid][dLevel] < 8) return true;

	    if(!response) return cmd_unban(playerid, "");

	    if(listitem == 15)
	    {
			new sql[512];
			format(sql, sizeof(sql), "SELECT * FROM `nbanlog` LIMIT %d, 15", NBANLAR[playerid]);
			mysql_query(mysqlC, sql);

			NBANLAR[playerid] += 15;

			cache_get_row_count(rows);
			cache_get_field_count(fields);

			if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Unban - Nban",""ww"NBanlý kimse bulunamadý.", ""ww"Tamam", "");

			new oyuncuname[25], ipadress[16], bigstr[10000], varname[32], atilan, kalan[256], editstr[1000];
			format(bigstr, sizeof(bigstr), ""ww"Oyuncu Ýsmi\t"ww"Kalan Süre\n");
			for(new i; i < rows; i++)
			{
				format(varname, 25, "NBanOpName_%d", i);
				cache_get_value_name(i, "oyuncu", oyuncuname);
				SetPVarString(playerid, varname, oyuncuname);
				format(varname, 25, "NBanOpIP_%d", i);
				cache_get_value_name(i, "ip", ipadress);
				SetPVarString(playerid, varname, ipadress);
				cache_get_value_name_int(i, "sure", atilan);
				if(atilan < gettime())
				{
				    format(kalan, sizeof(kalan), "Sona ermiþ");
				}
				else
				{
				    format(kalan, sizeof(kalan), "%s", ConvertTime(atilan - gettime()));
				}
				format(editstr, sizeof(editstr), ""ww"%d. %s\t%s\n", (i + 1), oyuncuname, kalan);
				strcat(bigstr, editstr);
			}

			mysql_query(mysqlC, "SELECT * FROM `nbanlog`");
			if(cache_num_rows() > NBANLAR[playerid])
			    strcat(bigstr, ""ad"» "wb"Sonraki Sayfa "ad"«");

			ShowPlayerDialog(playerid, OpenNBan, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Unban - Nban",bigstr, ""ww"Baný Aç", ""ww"Geri");
	    }
	    else
	    {
			new ipadress[16], varname[32], playername[25];
			format(varname, 32, "NBanOpName_%d", listitem);
			GetPVarString(playerid, varname, playername, 25);
			format(varname, 32, "NBanOpIP_%d", listitem);
			GetPVarString(playerid, varname, ipadress, 16);
			if(strlen(ipadress))
			{
				UnBlockIpAddress(ipadress);
			}

			format(fstring, 256, "UPDATE `oyuncular` SET `bannedxd` = '0', `bannedtime` = '0' WHERE `kullaniciadi` = '%s'", playername);
			mysql_query(mysqlC, fstring);

			format(fstring, 256, "DELETE FROM `nbanlog` WHERE `oyuncu` = '%s'", playername);
			mysql_query(mysqlC, fstring);

			format(fstring, 144, ""safaf"%s {FFFFFF}isimli oyuncunun name baný kaldýrýldý.", playername);
			SendClientMessage(playerid, -1, fstring);
			return true;
		}
	}

	if(dialogid == OpenIpBlock)
	{
	    if(PlayerInfo[playerid][dLevel] < 8) return true;
	    if(!response) return cmd_unban(playerid, "");
	    if(listitem == 15)
	    {
			new sql[500];
			format(sql, sizeof(sql), "SELECT * FROM `banlog` WHERE `aktif` = '1' LIMIT %d, 15", IPBANLAR[playerid]);
			mysql_query(mysqlC, sql);

			IPBANLAR[playerid] += 15;

			cache_get_row_count(rows);
			cache_get_field_count(fields);
			if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Unban - IP",""ww"Ip banlý kimse bulunamadý.", ""ww"Tamam", "");
			new oyuncuname[25], ipadress[16], bigstr[10000], sebep[256], admin[30], editstr[10000];
			strcat(bigstr, ""ww"Oyuncu Ýsmi\t"ww"Banlayan\t"ww"Sebep\n");

			for(new i; i < rows; i++)
			{
				format(oyuncuname, 25, "IpBlockOp_%d", i);
				cache_get_value_name(i, "ip", ipadress);
				SetPVarString(playerid, oyuncuname, ipadress);
				cache_get_value_name(i, "player", oyuncuname);
				cache_get_value_name(i, "sebep", sebep);
				cache_get_value_name(i, "admin", admin);
				format(editstr, sizeof(editstr), ""ww"%s\t%s\t%s\n", oyuncuname, admin, sebep);
				strcat(bigstr, editstr);
			}

			mysql_query(mysqlC, "SELECT * FROM `banlog`");
			if(cache_num_rows() > IPBANLAR[playerid])
			    strcat(bigstr, ""ad"» "wb"Sonraki Sayfa "ad"«");

			ShowPlayerDialog(playerid, OpenIpBlock, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Unban - IP", bigstr, ""ww"Baný Aç", ""ww"Geri");
	    }
	    else
	    {
			new ipadress[16], varname[32];
			format(varname, 32, "IpBlockOp_%d", listitem);
			GetPVarString(playerid, varname, ipadress, 16);
			UnBlockIpAddress(ipadress);
			format(fstring, 256, "DELETE FROM `banlog` WHERE `ip` = '%s'", ipadress);
			mysql_query(mysqlC, fstring);
			format(fstring, 144, ""safaf"'%s' Ip adresinin engeli kaldýrýldý.", ipadress);
			SendClientMessage(playerid, -1, fstring);
			return true;
		}
	}

	if(dialogid == DIALOGID+99)
	{
		if(!response)
		{
			return ShowPlayerDialog(playerid, DIALOGID+99, DIALOG_STYLE_INPUT, ""safaf"Kayýt", ""ww"Lütfen bir þifre girerek kayýt olun.\n"ww"Þifre uzunluðunuz "wb"'4 ile 20' "w"karakter arasýnda olmalýdýr.",""ww"Kayýt Ol",""ww"Kapat");
		}
		if(response)
		{
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOGID+99, DIALOG_STYLE_INPUT, ""safaf"Kayýt", ""ww"Lütfen bir þifre girerek kayýt olun.\n"ww"Þifre uzunluðunuz "wb"'4 ile 20' "w"karakter arasýnda olmalýdýr.",""ww"Kayýt Ol",""ww"Kapat");
			if(strlen(inputtext) < 4 || strlen(inputtext) > 20)
			{
				return ShowPlayerDialog(playerid, DIALOGID+99, DIALOG_STYLE_INPUT, ""safaf"Kayýt", ""ww"Lütfen bir þifre girerek kayýt olun.\n"ww"Þifre uzunluðunuz "wb"'4 ile 20' "w"karakter arasýnda olmalýdýr.",""ww"Kayýt Ol",""ww"Kapat");
			}
			new Query[256];
			new strdate[255];
			format(strdate, sizeof(strdate), "%s", TarihCek());
			strmid(PlayerInfo[playerid][RegisteredDate], strdate, 0, strlen(strdate), 255);
			format(Query, sizeof(Query), "INSERT INTO `oyuncular`(`kullaniciadi`, `sifre`, `RegisteredDate`) VALUES('%s',('%s'), '%s')", getName(playerid), inputtext,PlayerInfo[playerid][RegisteredDate]);
			mysql_query(mysqlC,Query);
			SetPlayerScore(playerid, 0);
			PlayerInfo[playerid][score] = 0;
			GivePlayerMoney(playerid, 5000);
			PlayerInfo[playerid][money] = 5000;
			PlayerInfo[playerid][Giris] = 1;
			PlayerInfo[playerid][Kayitli] = 1;
			PlayerInfo[playerid][Oldurme] = 0;
			PlayerInfo[playerid][Olum] = 0;
			SendClientMessage(playerid, -1, ""safaf"Sunucuya baþarý ile kayýt oldunuz.");
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			PlayerInfo[playerid][GLKredi] = 0;
			PlayerInfo[playerid][exp] = 0;
			PlayerInfo[playerid][seviye] = 1;
			PlayerInfo[playerid][maxexp] = 3630;
			PlayerInfo[playerid][bank] = 0;
			PlayerInfo[playerid][ratio] = 0;
			SpawnSilahiSecti[playerid] = 0;
			sarkisayim[playerid] = 0;
			PlayerInfo[playerid][dLevel] = 0;
			PlayerInfo[playerid][VIP] = 0;
			PlayerInfo[playerid][VIP_Sure] = 0;
			PlayerInfo[playerid][dukkanivar] = -1;
			PlayerInfo[playerid][PlayerCeteID] = -1;
			PlayerInfo[playerid][PlayerCeteRutbeID] = 0;
			PlayerInfo[playerid][HeadShots] = 0;
			PlayerInfo[playerid][BitCoin] = 0;
			PlayerInfo[playerid][cekilisgun] = -1;
			PlayerInfo[playerid][dukkanalimzaman] = 0;
			PlayerInfo[playerid][dukkansatimzaman] = 0;
			PlayerInfo[playerid][DaireIzin] = 0;
			PlayerInfo[playerid][EtkSayisi] = 0;
			PlayerInfo[playerid][pCEO] = 0;
			PlayerInfo[playerid][mute_] = 0;
			format(PlayerInfo[playerid][YetkiIsim], 500, " ");

		    new connecting_ip[32 + 1], sql[500];
		    GetPlayerIp(playerid, connecting_ip, 32);
			format(sql, sizeof(sql), "UPDATE `oyuncular` SET `IP` = '%s' WHERE `kullaniciadi` = '%s'", connecting_ip, getName(playerid));
			mysql_query(mysqlC, sql);

			new serialkontrol[72];
			gpci(playerid, serialkontrol, 72);
			format(estring, sizeof(estring), "UPDATE `oyuncular` SET `Serial` = '%s' WHERE `kullaniciadi` = '%s'", serialkontrol, getName(playerid));
			mysql_query(mysqlC, estring);

			format(estring, sizeof(estring), "UPDATE `oyuncular` SET `oyundaiste` = '1' WHERE `kullaniciadi` = '%s'", getName(playerid));
			mysql_query(mysqlC, estring);

			SavePlayer(playerid);
		}
	}

	if(dialogid == DIALOGID0+2)
	{
		if(response)
		{
			if(PlayerInfo[playerid][Giris] == 1) return Hata(playerid, "Zaten giriþ yaptýnýz.");
			if(PlayerInfo[playerid][Kayitli] == 0) return Hata(playerid, "Kayýt olmamýþsýnýz.");
			if(strlen(inputtext) > 25 || strlen(inputtext) <= 0 || !strlen(inputtext) || strfind(inputtext, "'") != -1)
			{
				new string[1024];
				format(string,sizeof(string),"\\c"ww"Sunucuya hoþ geldin %s, seni tekrar aramýzda görmek çok güzel!\n\\c"ww"Þifreni yazarak oyuna giriþ yapabilirsin!\n\\c"ww"Þifreni 30 saniye içinde girmezsen sunucudan atýlacaksýn.",getName(playerid));
				return ShowPlayerDialog(playerid,DIALOGID0+2,DIALOG_STYLE_PASSWORD,""safaf"Giriþ",string,""ww"Giriþ","");
			}
			new Query[1024];
			format(Query, sizeof(Query), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s' AND BINARY `sifre` = ('%s')", getName(playerid), inputtext);
			mysql_query(mysqlC, Query);
			if(cache_num_rows() > 0)
			{
				LoginPlayer(playerid);
				SendClientMessage(playerid,-1,""ww"Hesabýnýza baþarýyla giriþ yaptýnýz, bilgileriniz yüklendi.");
				PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			} else {
				ShowPlayerDialog(playerid, DIALOGID0+2, DIALOG_STYLE_PASSWORD,""safaf"Hatalý Þifre", ""ww"Þifrenizi yanlýþ girdiniz. Lütfen doðrusunu giriniz:", ""ww"Tamam", "");
			}
		}
	}

	if(dialogid == DIALOG_NEON)
	{
		if(response)
		{
		    if(listitem == 0)
		    {
     			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Bir araçta deðilsiniz.");
	   			RemoveNeon(playerid);
		        SetPVarInt(playerid, "neon", 1);
            	SetPVarInt(playerid, "blue", CreateDynamicObject(18648,0,0,0,0,0,0));
            	SetPVarInt(playerid, "blue1", CreateDynamicObject(18648,0,0,0,0,0,0));
            	AttachDynamicObjectToVehicle(GetPVarInt(playerid, "blue"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(GetPVarInt(playerid, "blue1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SCM(playerid, -1, ""safaf"Mavi neon baþarýyla eklendi!");
			}
			if(listitem == 1)
			{
     			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Bir araçta deðilsiniz.");
	   			RemoveNeon(playerid);
   				SetPVarInt(playerid, "neon", 1);
       			SetPVarInt(playerid, "green", CreateDynamicObject(18649,0,0,0,0,0,0));
       			SetPVarInt(playerid, "green1", CreateDynamicObject(18649,0,0,0,0,0,0));
       			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "green"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
          		AttachDynamicObjectToVehicle(GetPVarInt(playerid, "green1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SCM(playerid, -1, ""safaf"Yeþil neon baþarýyla eklendi!");
			}
			if(listitem == 2)
			{
     			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Bir araçta deðilsiniz.");
	   			RemoveNeon(playerid);
			    SetPVarInt(playerid, "neon", 1);
       			SetPVarInt(playerid, "yellow", CreateDynamicObject(18650,0,0,0,0,0,0));
          		SetPVarInt(playerid, "yellow1", CreateDynamicObject(18650,0,0,0,0,0,0));
            	AttachDynamicObjectToVehicle(GetPVarInt(playerid, "yellow"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
             	AttachDynamicObjectToVehicle(GetPVarInt(playerid, "yellow1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SCM(playerid, -1, ""safaf"Sarý neon baþarýyla eklendi!");
			}
			if(listitem == 3)
			{
     			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Bir araçta deðilsiniz.");
	   			RemoveNeon(playerid);
   				SetPVarInt(playerid, "neon", 1);
   				SetPVarInt(playerid, "white", CreateDynamicObject(18652,0,0,0,0,0,0));
   				SetPVarInt(playerid, "white1", CreateDynamicObject(18652,0,0,0,0,0,0));
       			AttachDynamicObjectToVehicle(GetPVarInt(playerid, "white"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
          		AttachDynamicObjectToVehicle(GetPVarInt(playerid, "white1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SCM(playerid, -1, ""safaf"Beyaz neon baþarýyla eklendi!");
			}
			if(listitem == 4)
			{
     			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Bir araçta deðilsiniz.");
	   			RemoveNeon(playerid);
   				SetPVarInt(playerid, "neon", 1);
     			SetPVarInt(playerid, "pink", CreateDynamicObject(18651,0,0,0,0,0,0));
        		SetPVarInt(playerid, "pink1", CreateDynamicObject(18651,0,0,0,0,0,0));
          		AttachDynamicObjectToVehicle(GetPVarInt(playerid, "pink"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(GetPVarInt(playerid, "pink1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SCM(playerid, -1, ""safaf"Pembe neon baþarýyla eklendi!");
			}
			if(listitem == 5)
			{
     			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Bir araçta deðilsiniz.");
	   			RemoveNeon(playerid);
	            GameTextForPlayer(playerid, "~w~~h~~h~Neonlar basariyla ~r~~h~kaldirildi~w~~h~~h~.",3500,5);
            }
		}
 	}

	if(dialogid == 3)
	{
	if(!response)
	return cmd_shop(playerid,"");
	switch(listitem)
	{
    case 0:
    {
	SetPlayerColor(playerid,COLOR_RED);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {FF0000}kýrmýzý "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
    case 1:
    {
	SetPlayerColor(playerid,COLOR_YELLOW);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {ffff00}sarý "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
    case 2:
    {
	SetPlayerColor(playerid,COLOR_BLUE);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {007fff}mavi "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
    case 3:
    {
	SetPlayerColor(playerid,COLOR_LIGHTBLUE);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {00ffff}turkuaz "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
    case 4:
    {
	SetPlayerColor(playerid,COLOR_WHITE);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {FFFFFF}beyaz "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
    case 5:
    {
	SetPlayerColor(playerid,COLOR_ORANGE);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {ff7f00}turuncu "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
    case 6:
    {
	SetPlayerColor(playerid,COLOR_PINK);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {ff56aa}pembe "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
    case 7:
    {
	SetPlayerColor(playerid,COLOR_PURPLE);
 	SendClientMessage(playerid,-1,""safaf"Renginiz {ff00ff}mor "w"olarak deðiþti. Kaydetmek için : /savecolor");
    }
	}
	}

	if(dialogid == 2)
	{
	    if(response)
		{
	    if(PlayerInfo[playerid][Giris] == 1) return true;
	    if(PlayerInfo[playerid][Kayitli] == 0) return SendClientMessage(playerid,-1,""safaf"Hesap: {FFFFFF}Kayýt olmamýþsýnýz, Lütfen {FF0000}'/kayit'{FFFFFF} ile kayit olunuz.");
		new Query[500];
		format(Query, sizeof(Query), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s' AND `sifre` =('%s')", getName(playerid), inputtext);
		mysql_query(mysqlC, Query);
      	if(cache_num_rows() > 0)
		{
		LoginPlayer(playerid);
		SendClientMessage(playerid,-1,""safaf"Hesabýnýza baþarýyla giriþ yaptýnýz, bilgileriniz yüklendi.");
        PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
		}
  		else ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD,""safaf"Hatalý Þifre", ""ww"Þifrenizi yanlýþ girdiniz.\nLütfen doðrusunu giriniz.", ""ww"Tamam", "");
    	}
		return true;
	}

	return true;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    new str[35];
    format(str,sizeof(str),"%i",clickedplayerid);
    cmd_stats(playerid,str);
	return true;
}

stock getName(playerid)
{
	new playername[24];
	playername[0] = EOS;
	GetPlayerName(playerid,playername,24);
	return playername;
}

stock skorver(playerid, miktar)
{
	SetPlayerScore(playerid, GetPlayerScore(playerid) + miktar);
	return true;
}

CMD:setadmin(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 10 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,10);
	new idsi,level;
	if(sscanf(params,"ii",idsi,level)) return Kullanim(playerid,"setadmin [ID] [LEVEL]");
	if(level < 0 || level > 10) return Hata(playerid,"Level 1 ve 10 arasýnda olmalýdýr.");
	PlayerInfo[idsi][dLevel] = level;
	new satir[256],satir2[256];
	format(satir,sizeof(satir),""safaf"Admin %s(%i) tarafýndan %i level admin oldunuz. Tebrikler!",getName(playerid),playerid,level);
	SendClientMessage(idsi,-1,satir);
	format(satir2,sizeof(satir2),""safaf"%s(%i) isimli oyuncuyu %i level admin yaptýnýz.",getName(idsi),idsi,level);
	SendClientMessage(playerid,-1,satir2);
	GameTextForPlayer(idsi,"~g~Admin oldunuz tebrikler!",3500,5);
	PlayerInfo[idsi][VIP] = 0;
	PlayerInfo[idsi][VIP_Sure] = 0;
	SetPlayerColor(idsi,COLOR_ADMIN);
	SavePlayer(idsi);
	return true;
}

CMD:mkapat(playerid,params[]){

	StopAudioStreamForPlayer(playerid);
	muzikkapali[playerid] = 1;
	SCM(playerid,-1,""safaf"Müzik baþarýyla kapatýldý. Radyoyu açmak için "wb"/radyo "w"yazabilirsiniz.");
	return true;
}

CMD:mac(playerid,params[])
{

	muzikkapali[playerid] = 0;
	PlayAudioStreamForPlayer(playerid,"http://radyo.dogannet.tv/turkpop");
	SCM(playerid,-1,""safaf"Artýk müzikleri duyacaksýnýz.");
	return true;
}

CMD:radyo(playerid,params[]){

	PlayAudioStreamForPlayer(playerid,"http://radyo.dogannet.tv/turkpop");
	muzikkapali[playerid] = 0;
	SCM(playerid,-1,""safaf"Radyo baþarýyla açýldý. Kapatmak için "wb"/mkapat "w"yazabilirsiniz.");
	return true;
}

CMD:music(playerid,params[]){

	return cmd_radyo(playerid,"");
}

CMD:muzik(playerid,params[]){

	return cmd_radyo(playerid,"");
}

CMD:radyoac(playerid,params[]){

	return cmd_radyo(playerid,"");
}

CMD:musicon(playerid,params[]){

	return cmd_radyo(playerid,"");
}

CMD:musicoff(playerid,params[]){

	return cmd_mkapat(playerid,"");
}

CMD:radyokapat(playerid,params[]){

	return cmd_mkapat(playerid,"");
}

CMD:muzikkapat(playerid,params[]){

	return cmd_mkapat(playerid,"");
}

CMD:nickdegistir(playerid,params[])
{
	new yeniisim[250];
	if(PlayerInfo[playerid][Giris] == 0) return Hata(playerid,"Giriþ yapmadan bu komutu kullanamazsýn.");
	if(GetPlayerScore(playerid) < 50) return Hata(playerid,"Nick deðiþtirmek için 50 skora ihtiyacýn var.");
	if(sscanf(params,"s[250]",yeniisim)) return Kullanim(playerid,"nickdegistir [YENÝ NÝCK]");
	if(strlen(yeniisim) > 15 || strlen(yeniisim) < 0) return Hata(playerid,"En fazla 15 karakter kullanabilirsiniz.");
	if(!strcmp(yeniisim, "Yok", true)) return Hata(playerid, "Bu ismi alamazsýnýz.");
	if(spamProtect(playerid, "nickdegistir", 60)) return true;
	new eskiname[50];
	format(eskiname, 50, getName(playerid));
	if(nickkontrol(yeniisim) != 0)
	{
		if((3 < strlen(yeniisim) < 25) && SetPlayerName(playerid, yeniisim) == 1)
		{
		    if(PlayerInfo[playerid][dukkanivar] != -1)
		    {
				DukkanLabelGuncelle(PlayerInfo[playerid][dukkanivar]);
		    }
		    
		    new sql[500];
		    
		    format(sql, sizeof(sql), "UPDATE `arkadaslar` SET `arkadas` = '%s' WHERE `arkadas` = '%s'", yeniisim, eskiname);
		    mysql_query(mysqlC, sql);
		    
		    format(sql, sizeof(sql), "UPDATE `arkadaslar` SET `kullanici` = '%s' WHERE `kullanici` = '%s'", yeniisim, eskiname);
		    mysql_query(mysqlC, sql);

			if(PlayerData[playerid][Homes][0] != -1)
			{
				format(HouseData[PlayerData[playerid][Homes][0]][Owner], 24, yeniisim);
				foreach(new x: Houses)
				{
				    SaveHouse(x);
				}
				SaveAllCars();
				UpdateEntrance(PlayerData[playerid][Homes][0]);
		    }

			new expkda[100];
			format(expkda,sizeof(expkda),"Dark/OyuncuBilgileri/%s.txt",getName(playerid));
	        dini_Create(expkda);
	        dini_IntSet(expkda,"SpawnSilahiSecti",SpawnSilahiSecti[playerid]);
	        dini_IntSet(expkda,"spawnsilah1",GetPVarInt(playerid,"spawnsilah1"));
	        dini_IntSet(expkda,"spawnsilah2",GetPVarInt(playerid,"spawnsilah2"));
	        dini_IntSet(expkda,"spawnsilah3",GetPVarInt(playerid,"spawnsilah3"));
	        dini_IntSet(expkda,"spawnsilah4",GetPVarInt(playerid,"spawnsilah4"));
	        dini_IntSet(expkda,"sarkisayim",sarkisayim[playerid]);

			new Query[500],string[256]; format(Query, sizeof(Query), "UPDATE `oyuncular` SET `kullaniciadi` = '%s' WHERE `kullaniciadi` = '%s'",yeniisim,eskiname);
			mysql_query(mysqlC,Query);
			format(string, sizeof string, ""safaf"Nickinizi baþarýyla '%s' olarak deðiþtirdiniz.",yeniisim);
			skorver(playerid, -50);
			SendClientMessage(playerid,-1,string);
		} else return Hata(playerid,"Nickiniz izinsiz karakterler içeriyor.");
	} else return Hata(playerid,""safaf"Bu nick zaten kullanýmda.");
	return true;
}

CMD:kill(playerid, params[])
{
    if(spamProtect(playerid, "kill", 30)) return true;
    if(spawnda[playerid] == 1) return Hata(playerid, "Spawn bölgesinde intihar edemezsiniz.");
	destroyVehicle(playerid);
	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 0, 1, 900000, 0);
	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 0, 1, 900000, 0);
	SetTimerEx("geber", 2000, false, "i", playerid);
	return true;
}

CB: geber(playerid)
{
	DamagePlayer(playerid, 100.0, INVALID_PLAYER_ID, 255, BODY_PART_UNKNOWN, true);
	SendClientMessage(playerid, -1, ""safaf"Ýntihar ettiniz.");
	return true;
}

new rapor_c = 0, E_rapor_c = 0, D_rapor_c = 0; // d = sarki, c = etk, e = report
new Rapor1[456], Rapor2[456], Rapor3[456], Rapor4[456], Rapor5[456];
new E_Rapor1[456], E_Rapor2[456], E_Rapor3[456], E_Rapor4[456], E_Rapor5[456];
new D_Rapor1[456], D_Rapor2[456], D_Rapor3[456], D_Rapor4[456], D_Rapor5[456];

CMD:etkistek(playerid,params[])
{

	new istek[256];
	new satir[500],satir2[256];
	if(sscanf(params,"s[256]",istek)) return Kullanim(playerid,"etkistek [ÝSTEK]");
	if(spamProtect(playerid, "etkistek", 30)) return true;
	foreach(new i:Player)
	{
		if(PlayerInfo[i][dLevel] > 0)
		{
			format(satir,sizeof(satir),"{ffff00}[ETKÝNLÝK] {00ffff}%s(%i) {ffff00}» {00ffff}%s {ffff00}adlý etkinliði istiyor.",getName(playerid),playerid,istek);
			format(satir2,sizeof(satir2),"{ffff00}(%s)", TarihCek());
			SendClientMessage(i,-1,satir);
			SendClientMessage(i,-1,satir2);
		}
	}
    switch(rapor_c)
    {
        case 0: format(E_Rapor1,sizeof E_Rapor1, "%s - %s\n", satir, satir2), rapor_c = 1;
        case 1: format(E_Rapor2,sizeof E_Rapor2, "%s - %s\n", satir, satir2), rapor_c = 2;
        case 2: format(E_Rapor3,sizeof E_Rapor3, "%s - %s\n", satir, satir2), rapor_c = 3;
        case 3: format(E_Rapor4,sizeof E_Rapor4, "%s - %s\n", satir, satir2), rapor_c = 4;
        case 4: format(E_Rapor5,sizeof E_Rapor5, "%s - %s", satir, satir2), rapor_c = 0;
	}
	SCM(playerid,-1,""safaf"Ýsteðiniz çevrimiçi yetkililere baþarýyla gönderildi.");
	return true;
}

CMD:isteksarki(playerid,params[]){

	new istek[256];
	new satir[500],satir2[256];
	if(sscanf(params,"s[256]",istek)) return Kullanim(playerid,"isteksarki [ÝSTEK]");
	if(spamProtect(playerid, "isteksarki", 30)) return true;
	foreach(new i:Player)
	{
		if(PlayerInfo[i][dLevel] > 0)
		{
			format(satir,sizeof(satir),"{ffff00}[ÞARKI] {00ffff}%s(%i) {ffff00}» {00ffff}%s {ffff00}adlý þarkýyý istiyor.",getName(playerid),playerid,istek);
		    format(satir2,sizeof(satir2),"{ffff00}(%s)",TarihCek());
			SendClientMessage(i,-1,satir);
			SendClientMessage(i,-1,satir2);
		}
	}
    switch(D_rapor_c)
    {
        case 0: format(D_Rapor1,sizeof D_Rapor1, "%s - %s\n", satir, satir2), D_rapor_c = 1;
        case 1: format(D_Rapor2,sizeof D_Rapor2, "%s - %s\n", satir, satir2), D_rapor_c = 2;
        case 2: format(D_Rapor3,sizeof D_Rapor3, "%s - %s\n", satir, satir2), D_rapor_c = 3;
        case 3: format(D_Rapor4,sizeof D_Rapor4, "%s - %s\n", satir, satir2), D_rapor_c = 4;
        case 4: format(D_Rapor5,sizeof D_Rapor5, "%s - %s", satir, satir2), D_rapor_c = 0;
	}
	SCM(playerid,-1,""safaf"Ýsteðiniz çevrimiçi yetkililere baþarýyla gönderildi.");
	return true;
}

CMD:isteketk(playerid,params[]){

	return cmd_etkistek(playerid, params);
}

CMD:sarkiistek(playerid,params[]){

	return cmd_isteksarki(playerid, params);
}

CMD:renkler(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] >= 1) return Hata(playerid,"Yetkililer renk deðiþtiremez.");
	ShowPlayerDialog(playerid,3,DIALOG_STYLE_LIST,""safaf"Renkler",""ww"{FF0000}Kýrmýzý\n"ww"{ffff00}Sarý\n"ww"{007fff}Mavi\n"ww"{00ffff}Turkuaz\n"ww"{ffffff}Beyaz\n"ww"{ff7f00}Turuncu\n"ww"{ff56aa}Pembe\n"ww"{ff00ff}Mor",""ww"Tamam",""ww"Kapat");
	return true;
}

CMD:cc(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 1 && PlayerInfo[playerid][VIP] < 1) return YETERSIZSEVIYE(playerid,1);
	new a = 0;
	while(a < 120)
	{
		SendClientMessageToAll(-1, " ");
		a++;
	}
	new satir[256], yetkistr[256];
	switch(PlayerInfo[playerid][dLevel])
	{
	    case 1..10: format(yetkistr, sizeof(yetkistr), "OG");
	}
	format(satir, sizeof(satir), ""safaf"%s {%06x}%s "w"sohbeti temizledi.", yetkistr, GetPlayerColor(playerid) >>> 8, getName(playerid));
	SendClientMessageToAll(-1, satir);
	foreach(new i : Player)
	{
		sesver(i);
	}
	return true;
}

CMD:clearchat(playerid,params[])
{
	return cmd_cc(playerid, params);
}

CMD:kick(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2 && PlayerInfo[playerid][VIP] < 3) return YETERSIZSEVIYE(playerid,3);
	new ID,sebep[128];
	if(sscanf(params,"us[128]",ID,sebep)) return Kullanim(playerid,"kick [ÝD / ÝSÝM] [SEBEP]");
	if(playerid == ID) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(!IsPlayerConnected(ID)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[ID][dLevel]) return Hata(playerid,"Kendinden yüksek levelleri kickleyemezsin.");
    if(!strcmp(getName(ID),"flareoNNN") || !strcmp(getName(ID),"Ethernos") || !strcmp(getName(ID),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	KickMag(ID,playerid,sebep);
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuya kick attýnýz. "ad"(%s)", getName(ID), ID, sebep);
	return true;
}

CMD:ban(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 4) return YETERSIZSEVIYE(playerid, 4);
	new oID,sebep[128];
	if(sscanf(params,"us[128]",oID,sebep)) return Kullanim(playerid,"ban [ÝD / ÝSÝM] [SEBEP]");
	if(playerid == oID) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(!IsPlayerConnected(oID)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[oID][dLevel]) return Hata(playerid,"Sizden yüksek level birine ban atamazsýnýz.");
    if(!strcmp(getName(oID),"flareoNNN") || !strcmp(getName(oID),"Ethernos") || !strcmp(getName(oID),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
 	BanMag(oID,playerid,sebep,0);
 	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuya ban attýnýz. "ad"(%s)", getName(oID), oID, sebep);
	return true;
}

CMD:hban(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid, 5);
	new oID,sebep[128];
	if(sscanf(params,"us[128]",oID,sebep)) return Kullanim(playerid,"hban [ÝD / ÝSÝM] [SEBEP]");
	if(playerid == oID) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(!IsPlayerConnected(oID)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[oID][dLevel]) return Hata(playerid,"Sizden yüksek level birine ban atamazsýnýz.");
    if(!strcmp(getName(oID),"flareoNNN") || !strcmp(getName(oID),"Ethernos") || !strcmp(getName(oID),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
 	BanMag(oID,playerid,sebep,1);
 	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuya H-Ban attýnýz. "ad"(%s)", getName(oID), oID, sebep);
	return true;
}

CMD:can(playerid,params[])
{
	if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Can almak için "wb"$1.000 "w"paranýz olmalýdýr.");
	new Float:can;
	GetPlayerHealth(playerid,can);
	if(can == 100.0) return Hata(playerid,"Zaten canýnýz dolu.");
	if(IsPlayerMoving(playerid))
	{
	    return Hata(playerid,"Hareket ederken can alamazsýn.");
	}
	if(spamProtect(playerid, "can", 30)) return true;
	SetPlayerHealth(playerid,100.0);
	GivePlayerMoney(playerid,-1000);
	SCM(playerid,-1,""safaf"$1.000 karþýlýðýnda canýnýzý fullediniz.");
	return true;
}

CMD:mute(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2 && PlayerInfo[playerid][VIP] < 3) return YETERSIZSEVIYE(playerid,2);
	new oyuncu,sure,sebep[128];
	if(sscanf(params,"uis[128]",oyuncu,sure,sebep)) return Kullanim(playerid,"mute [ÝD / ÝSÝM] [DAKÝKA] [SEBEP]");
	if(PlayerInfo[oyuncu][mute_] > gettime()) return Hata(playerid,"Oyuncu zaten susturulmuþ.");
	if(!IsPlayerConnected(oyuncu)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[oyuncu][dLevel]) return Hata(playerid,"Sizden yüksek level birini susturamazsýnýz.");
 	if(!strcmp(getName(oyuncu),"flareoNNN") || !strcmp(getName(oyuncu),"Ethernos") || !strcmp(getName(oyuncu),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	PlayerInfo[oyuncu][mute_] = (gettime()) + (sure*60);
	format(estring,sizeof(estring),"~r~~h~[Susturuldu] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan ~r~~h~%d dakika ~w~~h~~h~susturuldu. ~g~~h~~h~Sebep: ~r~~h~%s",getName(oyuncu),oyuncu,getName(playerid),playerid,sure,sebep);
	TextMesaji(code(estring));
	new str[256],str2[256];
	format(str,sizeof(str),""safaf"Yetkili "wb"%s(%i) "w"sizi susturdu.",getName(playerid), playerid);
	format(str2,sizeof(str2),""safaf""wb"%s(%i) "w"adlý oyuncuyu susturdunuz.",getName(oyuncu), oyuncu);
	SendClientMessage(playerid,-1,str2);
	SendClientMessage(oyuncu,-1,str);
	SavePlayer(oyuncu);
	return true;
}

CMD:unmute(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2 && PlayerInfo[playerid][VIP] < 3) return YETERSIZSEVIYE(playerid,2);
	new player;
	if(sscanf(params,"u",player)) return Kullanim(playerid,"unmute [ÝD / ÝSÝM]");
	if(PlayerInfo[player][mute_] < gettime()) return Hata(playerid,"Oyuncu zaten susturulmamýþ.");
	if(!IsPlayerConnected(player)) return Hata(playerid,"Oyuncu oyunda deðil.");
	PlayerInfo[player][mute_] = 0;
	new str[256],str2[256];
	format(str,sizeof(str),""safaf"Yetkili "wb"%s(%i) "w"sizin susturma cezanýzý kaldýrdý.",getName(playerid), playerid);
	format(str2,sizeof(str2),""safaf""wb"%s(%i) "w"adlý oyuncunun susturma cezasýný kaldýrdýnýz.",getName(player), player);
	SendClientMessage(playerid,-1,str2);
	SendClientMessage(player,-1,str);
	format(estring,sizeof(estring),"~r~~h~[Susturulmasi kaldirildi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan susturulmasi kaldirildi.",getName(player),player,getName(playerid),playerid);
	TextMesaji(code(estring));
	SavePlayer(player);
	return true;
}

CMD:zirh(playerid,params[]){

	if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Zýrh almak için "wb"$1.000 "w"paranýz olmalýdýr.");
	new Float:zirh;
	GetPlayerArmour(playerid,zirh);
	if(zirh == 100.0) return Hata(playerid,"Zaten zýrhýnýz dolu.");
	if(IsPlayerMoving(playerid))
	{
	    return Hata(playerid,"Hareket ederken zýrh alamazsýn.");
	}
	if(spamProtect(playerid, "zirh", 30)) return true;
	SetPlayerArmour(playerid,100.0);
	GivePlayerMoney(playerid,-1000);
	SCM(playerid,-1,""safaf"$1.000 karþýlýðýnda zýrhýnýzý fullediniz.");
	return true;
}

CMD:gotopos(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
	new Float:x,Float:y,Float:z;
	if(sscanf(params,"p<,>fff",x,y,z)) return Kullanim(playerid,"gotopos [X],[Y],[Z]");
	SetPlayerPos(playerid,x,y,z);
	return true;
}

CMD:gorevliler(playerid, params[])
{
	return cmd_admins(playerid, params);
}

CMD:admins(playerid, params[])
{

	new str[256],
	line[128],
	dialog_msg[1228];
	new tmp[256];
	new count;
	foreach(new i:Player)
	{
		if(PlayerInfo[i][dLevel] == 0) continue;
		count = count + 1;
	}

	switch(count)
	{
		case 0:
		{
			format(str, sizeof(str), ""safaf"Aktif oyun görevlisi bulunamadý, lütfen daha sonra tekrar deneyin.");
			sesver(playerid);
			SendClientMessage(playerid, -1, str);
			return true;
		}
		case 1:
		{
			format(str, sizeof(str), ""safaf"Toplam bir oyun görevlisi aktif!");
			format(line, sizeof(line), ""ww"GamerLity FR™ sunucusunda toplam bir tane oyun görevlisi aktif:\n\n");
		}
		default:
		{
			format(str, sizeof(str), ""safaf"Toplam %d oyun görevlisi aktif!", count);
			format(line, sizeof(line), ""ww"GamerLity FR™ sunucusunda toplam %d tane oyun görevlisi aktif:\n\n", count);
		}
	}

	format(dialog_msg, sizeof(dialog_msg), "%s", line);
	count = 0;
	foreach(new i:Player)
	{
		if(PlayerInfo[i][dLevel] == 0) continue;

		switch(PlayerInfo[i][dLevel])
		{
			case 1: tmp = "1 Level Oyun Görevlisi";
			case 2: tmp = "2 Level Oyun Görevlisi";
			case 3: tmp = "3 Level Oyun Görevlisi";
			case 4: tmp = "4 Level Oyun Görevlisi";
			case 5: tmp = "5 Level Oyun Görevlisi";
			case 6: tmp = "6 Level Oyun Görevlisi";
			case 7: tmp = "7 Level Oyun Görevlisi";
			case 8: tmp = "Baþkan Yardýmcýsý";
			case 9: tmp = "Baþkan";
			case 10: format(tmp, sizeof(tmp), "%s", (PlayerInfo[i][pCEO] == 1) ? ("CEO") : ("Sahip"));
		}

		if(PlayerInfo[i][AFK] == true)
		{
            line = "{FF0000}AFK{FFFFFF}";
		}
		else
		{
		    line = "{00FF00}Müsait{FFFFFF}";
        }

		count = count + 1;

		new PlayerName[50];
		GetPlayerName(i, PlayerName, sizeof(PlayerName));
		format(dialog_msg, sizeof(dialog_msg), "%s\t"ww"%d) %s(%d) - %s - %s\n", dialog_msg, count, PlayerName, i, tmp, line);
	}

	format(dialog_msg, sizeof(dialog_msg), "%s\n"ww"Eðer sunucuda bir hileci ile karþýlaþýrsan {FF0000}/rapor{FFFFFF} komutunu\nkullan.", dialog_msg);
	ShowPlayerDialog(playerid, 123, DIALOG_STYLE_MSGBOX, str, dialog_msg, ""ww"Kapat", "");
	return true;
}

CMD:get(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	new oID;
	if(sscanf(params,"u",oID)) return Kullanim(playerid,"get [ID / ÝSÝM]");
	if(oID == playerid) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(!IsPlayerConnected(oID)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[oID][dLevel]) return Hata(playerid,"Sizden yüksek level birini yanýnýza çekemezsiniz.");
	new Float:lx,Float:ly,Float:lz;
	GetPlayerPos(playerid,lx,ly,lz);
	SetPlayerPV(oID,lx,ly,lz);
	SetPlayerInterior(oID,GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(oID,GetPlayerVirtualWorld(playerid));
	new oIDm[256],pIDm[256];
	format(oIDm,sizeof(oIDm),""safaf""wb"%s(%i) "w"isimli yetkili sizi yanýna çekti.",getName(playerid),playerid);
	format(pIDm,sizeof(pIDm),""safaf""wb"%s(%i) "w"isimli oyuncuyu yanýnýza çektiniz.",getName(oID),oID);
	SendClientMessage(oID,-1,oIDm);
	SendClientMessage(playerid,-1,pIDm);
	return true;
}

CMD:sarki(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new url[1024];
	if(sscanf(params,"s[1024]",url)) return Kullanim(playerid,"sarki [URL]");
    if(IsYouTubeVideoPlaying(gYoutubeIDForAll)) return Hata(playerid, "Zaten bir þarký çalýyor.");
	foreach(new i:Player)
	{
	    StopAudioStreamForPlayer(i);
		PlayAudioStreamForPlayer(i,url);
	}
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~sarki acti.",getName(playerid),playerid);
	TextMesaji(code(estring));
    SetTimer("textt2",500,false);
    sarkisayim[playerid]++;
	return true;
}

forward textt2();
public textt2()
{
    new estring2[650];
	format(estring2,sizeof(estring2),"~w~~h~~h~Sarkidan rahatsiz olduysaniz ~r~~h~/mkapat ~w~~h~~h~kullanabilirsiniz.");
	return TextMesaji(code(estring2));
}

CMD:savecolor(playerid,params[])
{

	PlayerInfo[playerid][rengim] = GetPlayerColor(playerid);
	MySQLGuncelleInt(playerid,"rengim",PlayerInfo[playerid][rengim]);
	SendClientMessage(playerid,-1,""safaf"Renginiz baþarýyla kayýt oldu.");
	new str[128];
	format(str,sizeof(str),""safaf"Artýk isminiz {%06x}bu "w"renk ile gözükecek.",GetPlayerColor(playerid) >>> 8);
	SendClientMessage(playerid,-1,str);
	return true;
}

CMD:saveskin(playerid,params[])
{
	PlayerInfo[playerid][skinplayer] = GetPlayerSkin(playerid);
	MySQLGuncelleInt(playerid,"skinplayer",PlayerInfo[playerid][skinplayer]);
	SFM(playerid,-1,""safaf"%d ID'li skininiz baþarýyla kayýt oldu.",GetPlayerSkin(playerid));
	return true;
}

CMD:myskin(playerid,params[])
{
	new skin;
	if(sscanf(params,"i",skin)) return Kullanim(playerid,"myskin [SKÝN ID]");
	if(skin < 0 || skin > 311) return Hata(playerid,"Böyle bir skin yok.");
	SetPlayerSkin(playerid,skin);
	new bilgi[256];
	format(bilgi,sizeof(bilgi),""safaf"Skininiz %d olarak deðiþtirildi.",skin);
	SendClientMessage(playerid,-1,bilgi);
	return true;
}

CMD:credits(playerid, params[])
{
	/*new str[800], edit[800];

	strcat(str, ""ww"Proje Yapýmcýsý:\n");
	strcat(str, "\t"ww""ad"CXE Gaming\n\n");

	strcat(str, ""ww"PAWN Coder:\n");
	strcat(str, "\t"ww""ad"flareoNNN\n\n");

	strcat(str, ""ww"Mapper:\n");
	strcat(str, "\t"ww""ad"CXE AR&GE Ekibi\n\n");

	strcat(str, ""ww"Web Sitemiz:\n");
	strcat(str, "\t"ww""ad"www.cxe-gaming.com\n\n");

	strcat(str, ""ww"Toplam Admin Sayýsý:\n");
	mysql_query(mysqlC, "SELECT * FROM `oyuncular` WHERE `dLevel` > '0'");
	format(edit, sizeof(edit), "\t"ww""ad"%d kiþi\n\n", cache_num_rows());
	strcat(str, edit);

	strcat(str, ""ww"Toplam Anim Sayýsý:\n");
	mysql_query(mysqlC, "SELECT * FROM `oyuncular` WHERE `dAnimator` > '0'");
	format(edit, sizeof(edit), "\t"ww""ad"%d kiþi\n\n", cache_num_rows());
	strcat(str, edit);

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Yapýmcýlar", str, ""ww"Kapat", "");*/

	TextDrawShowForPlayer(playerid, CreditsText0);
	TextDrawShowForPlayer(playerid, CreditsText1);
	TextDrawShowForPlayer(playerid, CreditsText2);
	TextDrawShowForPlayer(playerid, CreditsText3);
	TextDrawShowForPlayer(playerid, CreditsText4);
	TextDrawShowForPlayer(playerid, CreditsText5);
	TextDrawShowForPlayer(playerid, CreditsText6);
	TextDrawShowForPlayer(playerid, CreditsText7);
	TextDrawShowForPlayer(playerid, CreditsText8);
	TextDrawShowForPlayer(playerid, CreditsText9);
	TextDrawShowForPlayer(playerid, CreditsText10);
	TextDrawShowForPlayer(playerid, CreditsText11);
	TextDrawShowForPlayer(playerid, CreditsText12);
	TextDrawShowForPlayer(playerid, CreditsText13);
	TextDrawShowForPlayer(playerid, CreditsText14);
	TextDrawShowForPlayer(playerid, CreditsText15);
	TextDrawShowForPlayer(playerid, CreditsText16);
	TextDrawShowForPlayer(playerid, CreditsText17);
	TextDrawShowForPlayer(playerid, CreditsText18);
	TextDrawShowForPlayer(playerid, CreditsText19);
	TextDrawShowForPlayer(playerid, CreditsText20);
	TextDrawShowForPlayer(playerid, CreditsText21);
	TextDrawShowForPlayer(playerid, CreditsText22);
	TextDrawShowForPlayer(playerid, CreditsText23);
	SelectTextDraw(playerid, 0xFFFFFFAA);
	SetPVarInt(playerid, "credits", 1);
	return true;
}

CMD:god(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid, 6);
	if(GetPVarInt(playerid, "godacik") == 1)
	{
	    SetPVarInt(playerid, "God", 0);
	    SetPVarInt(playerid, "godacik", 0);
	    SendClientMessage(playerid, -1, ""safaf"God kapatýldý.");
	}
	else if(GetPVarInt(playerid, "godacik") == 0)
	{
	    SetPVarInt(playerid, "God", 1);
	    SetPVarInt(playerid, "godacik", 1);
	    SendClientMessage(playerid, -1, ""safaf"God açýldý.");
	}
	return true;
}

CMD:cbuggiris(playerid, params[])
{
	if(isCbug[playerid] == 1) return Msg(playerid, -1, "Zaten CBug mekanýndasýn.");
	ccount[0][playerid] = 0; ccount[1][playerid] = 0; ccount[2][playerid] = 0; ccount[3][playerid] = 0;
	isCbug[playerid] = 1;
	SetPlayerPos(playerid, 1351.6174, 2183.8823, 11.0234);
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 24, 7);
	SetPVarInt(playerid,"God",1);
	SetPlayerVirtualWorld(playerid,94);
	SFM(playerid,-1,""safaf"CBug mekanýna hoþgeldin %s! Burada hýzýný test edebilirsin!",getName(playerid));
	SCM(playerid,-1,""safaf"Eðer mermin biterse /deaglever komutunu kullanabilirsin!");
	SCM(playerid,-1,""safaf"Buradan çýkmak için /cbugcikis komutunu kullanabilirsin!");
    return true;
}

CMD:l(playerid,params[])
{
	if(etkLocali[playerid] == 1) return Hata(playerid,"Etkinlikte localdan konuþmak kapatýlmýþ.");
	new yazi[500];
	if(sscanf(params,"s[500]",yazi)) return Kullanim(playerid,"l [MESAJ]");
    if ( CheckAdvertising( yazi ) )
	{
	    if ( PlayerInfo[ playerid ][ AWarings ] != 4 )
	    {
	        PlayerInfo[ playerid ][ AWarings ]++;

			SFM( playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[ playerid ][ AWarings ] );
			return ( 1 );
		}
		else
		{
		    SendClientMessage( playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun..." );

		    return banla( playerid, "Reklam" ), false;
		}
	}
	new Float: X, Float: Y, Float: Z, sto[512]; GetPlayerPos(playerid, X, Y, Z);
	format(sto, 512, "{00EEFF}LOCAL » %s(%d): %s", getName(playerid),playerid, yazi);
   	foreach(new i : Player)
	{
		if(IsPlayerInRangeOfPoint(i,50,X,Y,Z))
		{
		    SendClientMessage(i, -1, sto);
		}
	}
	SetPlayerChatBubble(playerid, yazi, COLOR_PURPLE2, 100.0, 10000);
	return true;
}

CMD:local(playerid,params[])
{
	if(etkLocali[playerid] == 1) return Hata(playerid, "Etkinlikte localdan konuþmak kapatýlmýþ.");
	new yazi[500];
	if(sscanf(params,"s[500]",yazi)) return Kullanim(playerid,"local [MESAJ]");
    if ( CheckAdvertising( yazi ) )
	{
	    if ( PlayerInfo[ playerid ][ AWarings ] != 4 )
	    {
	        PlayerInfo[ playerid ][ AWarings ]++;

			SFM( playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[ playerid ][ AWarings ] );
			return ( 1 );
		}
		else
		{
		    SendClientMessage( playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun..." );

		    return banla( playerid, "Reklam" ), false;
		}
	}
	new Float: X, Float: Y, Float: Z, sto[512]; GetPlayerPos(playerid, X, Y, Z);
	format(sto, 512, "{00EEFF}LOCAL » %s(%d): %s", getName(playerid),playerid, yazi);
   	foreach(new i : Player)
	{
		if(IsPlayerInRangeOfPoint(i,50,X,Y,Z))
		{
		    SendClientMessage(i, -1, sto);
		}
	}
	SetPlayerChatBubble(playerid, yazi, COLOR_PURPLE2, 100.0, 10000);
	return true;
}

CMD:ar(playerid, params[])
{

	if(etkLocali[playerid] == 1) return Hata(playerid,"Etkinlikte localdan konuþmak kapatýlmýþ.");
	new idx,string[256],length = strlen(params);
	new COLOR = GetPlayerColor(playerid);
	while((idx < length) &&(params[idx] <= ' '))
	{
	idx++;
	}
	new offset = idx;
	new result[64];
	while((idx < length) &&((idx - offset) <(sizeof(result) - 1)))
	{
	result[idx - offset] = params[idx];
	idx++;
	}
	result[idx - offset] = EOS;
	if(!strlen(result))
	{
	Kullanim(playerid,"ar [MESAJ]");
	return true;
 }
    if ( CheckAdvertising( result ) )
	{
	    if ( PlayerInfo[ playerid ][ AWarings ] != 4 )
	    {
	        PlayerInfo[ playerid ][ AWarings ]++;

			SFM( playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[ playerid ][ AWarings ] );
			return ( 1 );
		}
		else
		{
		    SendClientMessage( playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun..." );

		    return banla( playerid, "Reklam" ), false;
		}
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
	new vehicleid = GetPlayerVehicleID(playerid);
	format(string, sizeof(string), "{00A6FF}ARAÇ LOCAL » %s(%d): %s",getName(playerid),playerid,result);
	SendClientMessage(playerid,COLOR, string);
	for(new i = 0; i < GetMaxPlayers(); i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(i != playerid)
		    {
				if(IsPlayerInVehicle(i,vehicleid))
				{
				SendClientMessage(i,COLOR, string);
				}
			}
		}
	}
	}else{
	Hata(playerid,"Bir araçta deðilsin.");
	}
	return true;
}

CMD:cbugcikis(playerid, params[])
{
	if(isCbug[playerid] == 0) return Hata(playerid,"Zaten CBug mekanýnda deðilsiniz.");
	ccount[0][playerid] = 0; ccount[1][playerid] = 0; ccount[2][playerid] = 0; ccount[3][playerid] = 0;
    isCbug[playerid] = 0;
    SetPVarInt(playerid,"God",0);
    SetPlayerVirtualWorld(playerid,0);
    OnPlayerSpawn(playerid);
    return true;
}

CMD:deaglever(playerid, params[])
{

    if(isCbug[playerid] == 0) return Msg(playerid, -1, ""safaf"CBug mekanýnda deðilsin.");
	if(GetPlayerWeapon(playerid) == 24) return Msg(playerid, -1, ""safaf"Zaten silahýn verildi.");
    ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid, 24, 7);
	return true;
}

CMD:topcbug(playerid, params[])
{

    INI_ParseFile(fileToWrite,"ini_%s_%s");
    for (new i=0; i<5; i++)
    {
        if(tops[i] == 9999999.0000) tops[i] = 0.0000;
    }
        format(str1, sizeof(str1), "{FFFFFF}#1 {FFFF00}%s {00FFFF}%0.4f\n{FFFFFF}#2 {FFFF00}%s {00FFFF}%0.4f\n{FFFFFF}#3 {FFFF00}%s {00FFFF}%0.4f\n{FFFFFF}#4 {FFFF00}%s {00FFFF}%0.4f\n{FFFFFF}#5 {FFFF00}%s {00FFFF}%0.4f", jogtops[0], tops[0], jogtops[1], tops[1], jogtops[2], tops[2], jogtops[3], tops[3], jogtops[4], tops[4]);
        ShowPlayerDialog(playerid, DIALOG_TOPS, 0, ""safaf"Top 5 CBug-Time", str1, ""ww"OK", "");
        return true;
}

CMD:sure(playerid,params[]){

	SFM(playerid,-1,""safaf"Online süren : %d",ConvertTime(PlayerInfo[playerid][onlinet]));
	return true;
}

CMD:freeze(playerid, params[])
{

	new id;
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,2);
    if(sscanf(params,"u", id)) return Kullanim(playerid,"freeze [ÝD / ÝSÝM] [SEBEP]");
    if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	format(estring,sizeof(estring),"~r~~h~[Donduruldu] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan donduruldu.",getName(id),id,getName(playerid),playerid);
	TextMesaji(code(estring));
	TogglePlayerControllable(id, 0);
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuyu dondurdunuz.", getName(id), id);
	return true;
}

CMD:unfreeze(playerid, params[])
{

	new id;
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,2);
    if(sscanf(params,"u", id)) return Kullanim(playerid,"unfreeze [ÝD / ÝSÝM]");
    if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	format(estring,sizeof(estring),"~r~~h~[Cozuldu] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan dondurulmasi kaldirildi.",getName(id),id,getName(playerid),playerid);
	TextMesaji(code(estring));
	TogglePlayerControllable(id, 1);
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuyu çözdünüz.", getName(id), id);
	return true;
}

CMD:loadpos(playerid,params[])
{
    if(spamProtect(playerid, "loadpos", 2)) return true;
	if(PlayerInfo[playerid][pinfox] !=0)
	{
		PutAtPos(playerid);
		return SendClientMessage(playerid, -1, ""safaf"Kayýtlý bölgeye baþarýyla teleport oldun.");
	} else return Hata(playerid, "Lütfen ilk önce gideceðiniz yeri '/savepos' komutuyla kayýt ediniz.");
}

CMD:savepos(playerid,params[])
{
	if(spamProtect(playerid, "savepos", 2)) return true;
	new Float:x,Float:y,Float:z, interior, Query[500];
	GetPlayerPos(playerid,x,y,z);	interior = GetPlayerInterior(playerid);
	PlayerInfo[playerid][pinfox] = floatround(x);
	PlayerInfo[playerid][pinfoy] = floatround(y);
	PlayerInfo[playerid][pinfoz] = floatround(z);
	PlayerInfo[playerid][pinfointerior] = interior;
	PlayerInfo[playerid][pinfoworld] = GetPlayerVirtualWorld(playerid);
	format(Query, sizeof(Query), "UPDATE `oyuncular` SET `pinfox` = '%f', `pinfoy` = '%f', `pinfoz` = '%f' WHERE `kullaniciadi` = '%s'", PlayerInfo[playerid][pinfox], PlayerInfo[playerid][pinfoy], PlayerInfo[playerid][pinfoz], getName(playerid));
	mysql_query(mysqlC,Query);
	SendClientMessage(playerid,yellow,""safaf"Bu bölgeyi baþarýyla kayýt altýna aldýn.");
	return true;
}

CMD:herkeseskorver(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	new miktar,not[250];
	if(sscanf(params,"is[250]",miktar,not)) return Kullanim(playerid,"herkeseskorver [MÝKTAR] [NOTUNUZ]");
	foreach(new i:Player)
	{
		SetPlayerScore(i, GetPlayerScore(i) + miktar);
	}
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~butun oyunculara ~r~~h~%s ~w~~h~~h~skor verdi. ~r~~h~Notu: ~w~~h~~h~%s",getName(playerid),playerid,FormatMoney(miktar),code(not));
	TextMesaji(code(estring));
	return true;
}

CMD:herkeseparaver(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	new miktar,not[250];
	if(sscanf(params,"is[250]",miktar,not)) return Kullanim(playerid,"herkeseparaver [MÝKTAR] [NOTUNUZ]");
	foreach(new i:Player)
	{
	GivePlayerMoney(i,miktar);
	}
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~butun oyunculara ~r~~h~%s~w~~h~~h~$ verdi. ~r~~h~Notu: ~w~~h~~h~%s",getName(playerid),playerid,FormatMoney(miktar),code(not));
	TextMesaji(code(estring));
	return true;
}

CMD:setscore(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	new id,skor;
	if(sscanf(params,"ii",id,skor)) return Kullanim(playerid,"setscore [ID] [MIKTAR]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	SetPlayerScore(id,skor);
	PlayerInfo[id][score] = skor;
	new satir1[250],satir2[250];
	format(satir1,sizeof(satir1),""safaf"Yetkili "wb"%s(%i) "w"skorunuzu "wb"%s yaptý.",getName(playerid),playerid,FormatMoney(skor));
	format(satir2,sizeof(satir2),""safaf""wb"%s(%i) "w"isimli oyuncunun skorunu "wb"%s "w"yaptýn.",getName(id),id,FormatMoney(skor));
	SendClientMessage(id,-1,satir1);
	SendClientMessage(playerid,-1,satir2);
	SavePlayer(id);
	return true;
}

CMD:ip(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 4) return YETERSIZSEVIYE(playerid,4);
	new id;
	if(sscanf(params,"i",id)) return Kullanim(playerid,"ip [ID]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	SFM(playerid,-1,""safaf"%s(%i) isimli oyuncunun ip adresi : %s",getName(id),id,getIp(id));
	return true;
}

CMD:setmoney(playerid,params[])
{
	new id,para;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	if(sscanf(params,"ii",id,para)) return Kullanim(playerid,"setmoney [ID] [MIKTAR]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	ResetPlayerMoney(id);
	GivePlayerMoney(id,para);
	PlayerInfo[id][money] = para;
	new satir1[256],satir2[256];
	format(satir1,sizeof(satir1),""safaf"Yetkili "wb"%s(%i)"w" paranýzý "wb"%s "w"yaptý.",getName(playerid),playerid,FormatMoney(para));
	format(satir2,sizeof(satir2),""safaf""wb"%s(%i) "w"isimli oyuncunun parasýný "wb"%s "w"yaptýn.",getName(id),id,FormatMoney(para));
	SendClientMessage(id,-1,satir1);
	SendClientMessage(playerid,-1,satir2);
	SavePlayer(id);
	return true;
}

CMD:silahdukkani(playerid,params[]){

	return cmd_silah(playerid,"");
}

CMD:silahal(playerid,params[]){

	return cmd_silah(playerid,"");
}

CMD:silahlar(playerid,params[]){

	return cmd_silah(playerid,"");
}

CMD:silah(playerid,params[])
{

	new yazi[5000];
	strcat(yazi,""ww"Silah\t"ww"Fiyat\t"ww"Mermi\n");
	strcat(yazi,""ww"Brass Knuckles\t$1000\t1\n");
	strcat(yazi,""ww"Golf Club\t$1000\t1\n");
	strcat(yazi,""ww"Nightstick\t$1000\t1\n");
	strcat(yazi,""ww"Knife\t$1000\t1\n");
	strcat(yazi,""ww"Baseball Bat\t$1000\t1\n");
	strcat(yazi,""ww"Shovel\t$1000\t1\n");
	strcat(yazi,""ww"Pool Cue\t$1000\t1\n");
	strcat(yazi,""ww"Katana\t$1000\t1\n");
	strcat(yazi,""ww"Chainsaw\t$1000\t1\n");
	strcat(yazi,""ww"Purple Dildo\t$1000\t1\n");
	strcat(yazi,""ww"Dildo\t$1000\t1\n");
	strcat(yazi,""ww"Vibrator\t$1000\t1\n");
	strcat(yazi,""ww"Silver Vibrator\t$1000\t1\n");
	strcat(yazi,""ww"Flowers\t$1000\t1\n");
	strcat(yazi,""ww"Cane\t$1000\t1\n");
	strcat(yazi,""ww"Grenade\t$1000\t500\n");
	strcat(yazi,""ww"Tear Gas\t$1000\t500\n");
	strcat(yazi,""ww"Molotov Cocktail\t$1000\t500\n");
	strcat(yazi,""ww"9mm\t$1000\t500\n");
	strcat(yazi,""ww"Silenced 9mm\t$1000\t500\n");
	strcat(yazi,""ww"Desert Eagle\t$1000\t500\n");
	strcat(yazi,""ww"Shotgun\t$1000\t500\n");
	strcat(yazi,""ww"Sawnoff Shotgun\t$1000\t500\n");
	strcat(yazi,""ww"Combat Shotgun\t$1000\t500\n");
	strcat(yazi,""ww"Micro SMG/Uzi\t$1000\t500\n");
	strcat(yazi,""ww"MP5\t$1000\t500\n");
	strcat(yazi,""ww"AK-47\t$1000\t500\n");
	strcat(yazi,""ww"M4\t$1000\t500\n");
	strcat(yazi,""ww"Tec-9\t$1000\t500\n");
	strcat(yazi,""ww"Country Rifle\t$1000\t500\n");
	strcat(yazi,""ww"Sniper Rifle\t$1000\t500\n");
	strcat(yazi,""ww"Spraycan\t$1000\t500\n");
	strcat(yazi,""ww"Fire Extinguisher\t$1000\t500\n");
	strcat(yazi,""ww"Camera\t$1000\t500\n");
	strcat(yazi,""ww"Parachute\t$1000\t500\n");
	ShowPlayerDialog(playerid, 5, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Silah Dükkaný",yazi,""ww"Satýn Al", ""ww"Kapat");
	return true;
}

CMD:asay(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
	if(PlayerInfo[playerid][dLevel] < 1)
	{
	    if(spamProtect(playerid, "asay", 10)) return true;
	}
	new yazi[500];
	if(sscanf(params,"s[500]",yazi)) return Kullanim(playerid,"asay [YAZI]");
	ColourMag(yazi);
    if ( CheckAdvertising( yazi ) )
	{
	    if ( PlayerInfo[ playerid ][ AWarings ] != 4 )
	    {
	        PlayerInfo[ playerid ][ AWarings ]++;

			SFM( playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[ playerid ][ AWarings ] );
			return ( 1 );
		}
		else
		{
		    SendClientMessage( playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun..." );

		    return banla( playerid, "Reklam" ), false;
		}
	}
	new MMM[1024];
	if(PlayerInfo[playerid][dLevel] >= 1)
	{
        format(MMM, sizeof(MMM),"{%06x}Oyun Görevlisi %s Say: %s",GetPlayerColor(playerid)>>>8,getName(playerid),RenkMag(yazi));
	    SendClientMessageToAll(-1, MMM);
	}
	return true;
}

CMD:write(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new yazi[1024];
	if(sscanf(params,"s[1024]",yazi)) return Kullanim(playerid,"write [YAZI]");
    if ( CheckAdvertising( yazi ) )
	{
	    if ( PlayerInfo[ playerid ][ AWarings ] != 4 )
	    {
	        PlayerInfo[ playerid ][ AWarings ]++;

			SFM( playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[ playerid ][ AWarings ] );
			return ( 1 );
		}
		else
		{
		    SendClientMessage( playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun..." );

		    return banla( playerid, "Reklam" ), false;
		}
	}
	ColourMag(yazi);
	new duzenle[1024];
	format(duzenle,sizeof(duzenle),"%s",RenkMag(yazi));
	SendClientMessageToAll(-1, duzenle);
	return true;
}

CMD:unban(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid, 8);
	new str[1024];
	strcat(str, "{FA3C65}IP Banlý Oyuncularý Listele\n");
	strcat(str, "{823848}> Hepsini Temizle\n");
	strcat(str, " \n");
	strcat(str, "{FA3C65}NBAN Oyuncularý Listele\n");
	strcat(str, "{823848}> Hepsini Temizle\n");
	strcat(str, " \n");
	strcat(str, "{FA3C65}SBAN Oyuncularý Listele\n");
	strcat(str, "{823848}> Hepsini Temizle");
	ShowPlayerDialog(playerid, UnBan, DIALOG_STYLE_LIST, ""safaf"Unban", str, ""ww""ww"Seç", ""ww"Kapat");
	return true;
}

CMD:jail(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2 && PlayerInfo[playerid][VIP] < 2) return YETERSIZSEVIYE(playerid,2);
	new id,sure,sebep[250];
	if(sscanf(params,"uis[250]",id,sure,sebep)) return Kullanim(playerid,"jail [ÝD / ÝSÝM] [DAKÝKA] [SEBEP]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(id == playerid) return Hata(playerid, "Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(PlayerInfo[id][Jailed] == 1) return Hata(playerid,"Oyuncu zaten hapiste.");
	if(sure > 30 || sure < 1) return Hata(playerid, "En az 1, en fazla 30 dakika hapis atabilirsiniz.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[id][dLevel]) return Hata(playerid,"Sizden yüksek level birini hapise atamazsýnýz.");
	if(!strcmp(getName(id),"flareoNNN") || !strcmp(getName(id),"Ethernos") || !strcmp(getName(id),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	new yazi[1024];
	new string4[156],strings[156],string2[156],string3[156],string5[156];
	format(string4,156,""wb"=========================== ["w" Hapise Atýldýnýz "wb"] ========================\n");
	format(strings,156,""w"Hapise Atan Yetkili: "wb"%s\n", getName(playerid));
	format(string2,156,""w"Hapise Atma Tarihi: "wb"%s\n"w"Hapis Süresi: "wb"%i dakika\n", TarihCek(),sure);
	format(string3,156,""w"Sebep: "wb"%s\n", sebep);
	format(string5,156,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
	strcat(yazi,string4);
	strcat(yazi,strings);
	strcat(yazi,string2);
	strcat(yazi,string3);
	strcat(yazi,string5);
	ShowPlayerDialog(id,123,DIALOG_STYLE_MSGBOX,""safaf"Hapise Atýldýnýz",yazi,""ww"Kapat","");
  	PlayerInfo[id][JailTime] = sure*1000*60;
  	HideModelSelectionMenu(id);
    new ba_ping = GetPlayerPing(id) + 150; SetTimerEx("JailPlayer",(ba_ping > 500 ? 500 : ba_ping), false, "d", id);
   	PlayerInfo[id][Jailed] = 1;
  	ResetPlayerWeapons(id);
	format(estring,sizeof(estring),"~r~~h~[Hapise atildi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan ~r~~h~%i dakika ~w~~h~~h~hapise atildi. ~g~~h~~h~Sebep: ~r~~h~%s",getName(id),id,getName(playerid),playerid,sure,code(sebep));
	TextMesaji(code(estring));
	new Query[2048];
	format(Query,sizeof(Query),"INSERT INTO `jaillog`(`oyuncu`,`admin`,`zaman`,`sebep`,`dk`) VALUES('%s','%s','%s','%s','%d')",getName(id),getName(playerid),TarihCek(),code(sebep),sure);
	mysql_query(mysqlC,Query);
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuyu "ad"%d "w"dakika hapise attýnýz. "ad"(%s)", getName(id), id, sure, sebep);
	return true;
}

CMD:sban(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid,8);
	new id,sebep[128];
	if(sscanf(params,"us[128]",id,sebep)) return Kullanim(playerid,"sban [ÝD / ÝSÝM] [SEBEP]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(playerid == id) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[id][dLevel]) return Hata(playerid,"Sizden yüksek level birine sban atamazsýnýz.");
	if(!strcmp(getName(id),"flareoNNN") || !strcmp(getName(id),"Ethernos") || !strcmp(getName(id),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	new string[1024],serial[72];
	gpci(id,serial,72);
	format(string, sizeof(string), "INSERT INTO `sbanlog`(`serial`,`name`,`time`,`playerip`,`sebep`,`admin`) VALUES('%s','%s','%s','%s','%s','%s')",serial,getName(id),TarihCek(),getIp(id),code(sebep),getName(playerid));
	mysql_query(mysqlC,string);
	new yazi[1024];
	new string4[156],strings[156],string2[156],string3[156],string5[156];
	format(string4,156,""wb"=========================== ["w" S-Banlandýnýz "wb"] ===========================\n");
	format(strings,156,""w"S-Banlayan Yetkili: "wb"%s\n", getName(playerid));
	format(string2,156,""w"S-Banlama Tarihi: "wb"%s\n", TarihCek());
	format(string3,156,""w"Sebep: "wb"%s\n", sebep);
	format(string5,156,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
	strcat(yazi,string4);
	strcat(yazi,strings);
	strcat(yazi,string2);
	strcat(yazi,string3);
	strcat(yazi,string5);
	ShowPlayerDialog(id,123,DIALOG_STYLE_MSGBOX,""safaf"S-Banlandýnýz",yazi,""ww"Kapat","");
	format(estring,sizeof(estring),"~r~~h~[S-Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan S-Banlandi. ~g~~h~~h~Sebep: ~r~~h~%s",getName(id),id,getName(playerid),playerid,code(sebep));
	TextMesaji(code(estring));
	new ba_ping = GetPlayerPing(id) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", id);
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuya serial ban attýnýz. "ad"(%s)", getName(id), id, sebep);
	return true;
}

CMD:teles(playerid,params[])
{

	ShowPlayerDialog(playerid,8888,DIALOG_STYLE_LIST,""safaf"Teleport menüsü",""ww"Drift mekanlarý\n"ww"Gazinolar\n"ww"Polis departmanlarý\n"ww"Stuntlar\n"ww"Teleports\n"ww"Interiors",""ww"Tamam",""ww"Kapat");
	return true;
}

CMD:unjail(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2 && PlayerInfo[playerid][VIP] < 2) return YETERSIZSEVIYE(playerid,2);
	new id;
	if(sscanf(params,"u",id)) return Kullanim(playerid,"unjail [ÝD / ÝSÝM]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[id][Jailed] == 0) return Hata(playerid,"Oyuncu zaten hapiste deðil.");
	JailRelease(id);
	format(estring,sizeof(estring),"~r~~h~[Hapisten cikarildi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan hapisten cikarildi.",getName(id),id,getName(playerid),playerid);
	TextMesaji(code(estring));
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuyu hapisten çýkarttýnýz.", getName(id), id);
	return true;
}

CMD:warn(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
	new id,sebep[65];
	if(sscanf(params,"us[65]",id,sebep)) return Kullanim(playerid,"warn [ÝD / ÝSÝM] [SEBEP]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(playerid == id) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[id][dLevel]) return Hata(playerid,"Sizden yüksek level birini uyaramazsýnýz.");
	if(spamProtect(id, "uyarildim", 15)) return true;
	if(!strcmp(getName(id),"flareoNNN") || !strcmp(getName(id),"Ethernos") || !strcmp(getName(id),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	PlayerInfo[id][Warnings]++;
	new yazi[1024];
	new string4[156],strings[156],string2[156],string3[156],string5[156];
	format(string4,156,""wb"=========================== ["w" Uyarýldýnýz "wb"] =============================\n");
	format(strings,156,""w"Uyaran Yetkili: "wb"%s\n", getName(playerid));
	format(string2,156,""w"Uyarýlma Tarihi: "wb"%s\n", TarihCek());
	format(string3,156,""w"Sebep: "wb"%s\n", sebep);
	format(string5,156,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
	strcat(yazi,string4);
	strcat(yazi,strings);
	strcat(yazi,string2);
	strcat(yazi,string3);
	strcat(yazi,string5);
	ShowPlayerDialog(id,123,DIALOG_STYLE_MSGBOX,""safaf"Uyarýldýnýz",yazi,""ww"Kapat","");
	format(estring,sizeof(estring),"~r~~h~[Uyarildi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan uyarildi. (%d / %d) ~g~~h~~h~Sebep: ~r~~h~%s",getName(id),id,getName(playerid),playerid,PlayerInfo[id][Warnings],MAX_WARNINGS,code(sebep));
	TextMesaji(code(estring));
	GameTextForPlayer(id, "~r~uyarildiniz!",5000, 6);
	if(PlayerInfo[id][Warnings] == 3) kickle(id, "3 Uyarý Puaný");
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuyu uyardýnýz. "ad"(%s)", getName(id), id, sebep);
	return true;
}

CMD:pm(playerid,params[])
{
	new id,yazi[500];
	if(sscanf(params,"is[500]",id,yazi)) return Kullanim(playerid,"pm [ID] [MESAJ]");
	if(!IsPlayerConnected(id))
	{
	    return Hata(playerid,"Oyuncu oyunda deðil.");
    }
    if(playerid == id) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(pmkapali[id] == 1) return Hata(playerid,"Oyuncu PM'sini kapatmýþ.");
	if(pmkapali[playerid] == 1)
	{
	    return Hata(playerid,"Kendi PM'niz kapalýyken bir baþkasýna PM atamazsýnýz.");
	}
	if(PlayerInfo[playerid][mute_] > gettime()) return Hata(playerid, "Susturulmuþken PM atamazsýnýz.");
    if ( CheckAdvertising( yazi ) )
	{
	    if ( PlayerInfo[ playerid ][ AWarings ] != 4 )
	    {
	        PlayerInfo[ playerid ][ AWarings ]++;

			SFM( playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[ playerid ][ AWarings ] );
			return ( 1 );
		}
		else
		{
		    SendClientMessage( playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun..." );

		    return banla( playerid, "Reklam" ), false;
		}
	}
	new MMM[1024],MMM2[1024];
    format(MMM, sizeof(MMM),""ww"{FFFF00}[PM] «« %s(%d): %s",getName(playerid),playerid,yazi);
    format(MMM2, sizeof(MMM2),""ww"{F5DEB3}[PM] »» %s(%d): %s",getName(id),id,yazi);
	SendClientMessageEx(playerid,-1, MMM2);
	SendClientMessageEx(id,-1, MMM);
	if(PlayerInfo[id][AFK] == true)
	{
        SCM(playerid,-1,""safaf"PM Gönderdiðiniz kiþi þuan AFK. Size cevap vermeyebilir.");
	}
    new stringi[1024];
	format(stringi, sizeof stringi, "~r~~h~(PM) ~w~~h~~h~%s(%i) ~r~~h~>>> ~w~~h~~h~%s(%i) ~r~~h~(%s)", getName(playerid),playerid, getName(id),id, code(yazi));
	switch(PMSpec_C)
	{
	    case 0: TextDrawSetString(PMSpec0, stringi), KillTimer(PMSpec0_Timer), PMSpec0_Timer = SetTimer("PMSpec0_", 15*1000, false), PMSpec_C=1;
	    case 1: TextDrawSetString(PMSpec1, stringi), KillTimer(PMSpec1_Timer), PMSpec1_Timer = SetTimer("PMSpec1_", 15*1000, false), PMSpec_C=2;
	    case 2: TextDrawSetString(PMSpec2, stringi), KillTimer(PMSpec2_Timer), PMSpec2_Timer = SetTimer("PMSpec2_", 15*1000, false), PMSpec_C=3;
		case 3: TextDrawSetString(PMSpec3, stringi), KillTimer(PMSpec3_Timer), PMSpec3_Timer = SetTimer("PMSpec3_", 15*1000, false), PMSpec_C=4;
		case 4: TextDrawSetString(PMSpec4, stringi), KillTimer(PMSpec4_Timer), PMSpec4_Timer = SetTimer("PMSpec4_", 15*1000, false), PMSpec_C=0;
	}
	PMLog(playerid,id,yazi);
	new sql[2048];
	format(sql, sizeof(sql), "INSERT INTO `pmlog` (`gonderen`, `alici`, `mesaj`) VALUES ('%s', '%s', '%s')", getName(playerid), getName(id), code(yazi));
	mysql_query(mysqlC, sql);
	return true;
}

CMD:pmspec(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	else {
		if(GetPVarInt(playerid, "PMSpec") == 0)
		{
			TextDrawShowForPlayer(playerid, PMSpec0);
			TextDrawShowForPlayer(playerid, PMSpec1);
			TextDrawShowForPlayer(playerid, PMSpec2);
			TextDrawShowForPlayer(playerid, PMSpec3);
			TextDrawShowForPlayer(playerid, PMSpec4);
			SetPVarInt(playerid, "PMSpec", 1);
			Bilgi(playerid, "PM Spec açýldý.");
		} else {
			TextDrawHideForPlayer(playerid, PMSpec0);
			TextDrawHideForPlayer(playerid, PMSpec1);
			TextDrawHideForPlayer(playerid, PMSpec2);
			TextDrawHideForPlayer(playerid, PMSpec3);
			TextDrawHideForPlayer(playerid, PMSpec4);
			SetPVarInt(playerid, "PMSpec", 0);
			Bilgi(playerid, "PM Spec kapatýldý.");
		}
	}
	return true;
}

CMD:renk(playerid,params[]){

	new renk1,renk2;
	if(sscanf(params,"ii",renk1,renk2)) return Kullanim(playerid,"renk [RENK1] [RENK2]");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid,"Sürücü olmalýsýnýz.");
	ChangeVehicleColor(GetPlayerVehicleID(playerid), renk1, renk2);
	new str[128];
	format(str,sizeof(str),""safaf"Aracýnýzýn renkleri %d ve %d olarak deðiþtirildi.",renk1,renk2);
	SendClientMessage(playerid,-1,str);
	return true;
}

CMD:vrenk(playerid,params[])
{
    return cmd_renk(playerid,"");
}

CMD:serveriresetle(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,99);
	new str[256];
	format(str,sizeof(str),""safaf"Yetkili %s servere restart atýyor!",getName(playerid));
	SendClientMessageToAll(-1,str);
	foreach(new i:Player)
	{
		SavePlayer(i);
	}
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~servere restart atiyor!",getName(playerid),playerid);
	format(fstring,sizeof(fstring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~servere restart atiyor!",getName(playerid),playerid);
	TextMesaji(code(estring));
	SendRconCommand("gmx");
	return true;
}

CMD:serverikapat(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,99);
	foreach(new i: Player)
	{
		SavePlayer(i);
	}
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~serveri kapatiyor!",getName(playerid),playerid);
	TextMesaji(code(estring));
	SendRconCommand("exit");
	return true;
}

LoginPlayer(playerid)
{
	for(new i; i < 100; i++)
	{
	    GameTextForPlayer(playerid, "~w~~h~~h~YUKLENIYOR...~n~~y~SIFRE KONTROL EDILIYOR", 500, 5);
	}

    new	Query[1024];
	format(Query, sizeof(Query), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, Query);
	if(cache_num_rows() > 0)
	{
        if(mysql_fetch_row(Query))
		{
        	sscanf(Query, "e<p<|>ds[24]s[35]ddddddds[30]s[30]dddddddddddds[20]ds[30]fffdddddddds[25]dddd>", PlayerInfo[playerid]);
		}
	}

	new moddata[500];
	cache_get_value_name(0,"vehiclemod1",moddata);
	LoadModData(playerid,moddata, 0);
	cache_get_value_name(0,"vehiclemod2",moddata);
	LoadModData(playerid,moddata, 1);
	cache_get_value_name(0,"vehiclemod3",moddata);
	LoadModData(playerid,moddata, 2);
	cache_get_value_name(0,"vehiclemod4",moddata);
	LoadModData(playerid,moddata, 3);
	cache_get_value_name(0,"vehiclemod5",moddata);
	LoadModData(playerid,moddata, 4);

	cache_get_value_name_int(0, "mute_", PlayerInfo[playerid][mute_]);
 	cache_get_value_name_int(0, "dLevel", PlayerInfo[playerid][dLevel]);
	cache_get_value_name_int(0, "ceterutbe", PlayerInfo[playerid][PlayerCeteRutbeID]);
	cache_get_value_name_int(0, "cete", PlayerInfo[playerid][PlayerCeteID]);
	cache_get_value_name_int(0, "onlinet", PlayerInfo[playerid][onlinet]);
	cache_get_value_name_int(0, "rengim", PlayerInfo[playerid][rengim]);
	cache_get_value_name_int(0, "skinplayer", PlayerInfo[playerid][skinplayer]);
	cache_get_value_name_int(0, "bannedxd", PlayerInfo[playerid][bannedxd]);
	cache_get_value_name_int(0, "headshotlar", PlayerInfo[playerid][HeadShots]);
    cache_get_value_name_int(0, "dukkanivar", PlayerInfo[playerid][dukkanivar]);
	cache_get_value_name_int(0, "Kills", PlayerInfo[playerid][Oldurme]);
	cache_get_value_name_int(0, "Deaths", PlayerInfo[playerid][Olum]);
	cache_get_value_name_int(0, "VIP", PlayerInfo[playerid][VIP]);
	cache_get_value_name_int(0, "VIP_Sure", PlayerInfo[playerid][VIP_Sure]);
	cache_get_value_name_int(0, "cekilisgun", PlayerInfo[playerid][cekilisgun]);
	cache_get_value_name_int(0, "dukkanalimzaman", PlayerInfo[playerid][dukkanalimzaman]);
	cache_get_value_name_int(0, "dukkansatimzaman", PlayerInfo[playerid][dukkansatimzaman]);
	cache_get_value_name_int(0, "BitCoin", PlayerInfo[playerid][BitCoin]);
	cache_get_value_name_int(0, "DaireIzin", PlayerInfo[playerid][DaireIzin]);
	cache_get_value_name_int(0, "EtkSayisi", PlayerInfo[playerid][EtkSayisi]);
	cache_get_value_name_int(0, "GunlukEtk", PlayerInfo[playerid][GunlukEtk]);
	cache_get_value_name_int(0, "GunlukSpec", PlayerInfo[playerid][GunlukSpec]);
	cache_get_value_name_int(0, "JailTime", PlayerInfo[playerid][JailTime]);
	cache_get_value_name_int(0, "CEO", PlayerInfo[playerid][pCEO]);
	cache_get_value_name_int(0, "score", PlayerInfo[playerid][score]);
	cache_get_value_name_int(0, "money", PlayerInfo[playerid][money]);
	cache_get_value_name_int(0, "banka", PlayerInfo[playerid][bank]);
	cache_get_value_name_int(0, "GLKredi", PlayerInfo[playerid][GLKredi]);
	cache_get_value_name_int(0, "ratio", PlayerInfo[playerid][ratio]);

	cache_get_value_name_int(0, "exp", PlayerInfo[playerid][exp]);
	cache_get_value_name_int(0, "seviye", PlayerInfo[playerid][seviye]);
	cache_get_value_name_int(0, "maxexp", PlayerInfo[playerid][maxexp]);

	cache_get_value_name(0, "Kisisel_Durum", PlayerInfo[playerid][KisiselDurum], 850);

    new strxx[500]; cache_get_value_name(0, "yetki_ismi", strxx); format(PlayerInfo[playerid][YetkiIsim], 500, "%s", strxx);
    dukkantimer[playerid] = SetTimerEx("dukkantimerEx", 3600000, true, "i", playerid);

	PlayerInfo[playerid][Giris] = 1;

	new pip[55];
    GetPlayerIp(playerid,pip,sizeof(pip));
    
    format(PlayerInfo[playerid][LastOn], 50, "%s", TarihCek());

 	PlayerInfo[playerid][Kayitli] = 1;
 	PlayerInfo[playerid][Giris] = 1;

 	SetPlayerScore(playerid,PlayerInfo[playerid][score]);
 	GivePlayerMoney_R(playerid,PlayerInfo[playerid][money]);

 	format(Query, sizeof(Query), "UPDATE `oyuncular` SET `LastOn` = '%s', `LoggedIn` = '1' WHERE `kullaniciadi` = '%s'", PlayerInfo[playerid][LastOn], getName(playerid));
	mysql_query(mysqlC, Query);

	PlayerInfo[playerid][Giris] = 1;
 	
 	if(PlayerInfo[playerid][mute_] > gettime())
 	{
 	    Bilgi(playerid, "Susturulmuþken oyundan çýktýðýnýz için cezanýz devam ediyor.");
 	}
 	return true;
}

stock SavePlayer(playerid)
{
	if(PlayerInfo[playerid][Giris] == 1)
	{
		if(MySQLHesapKontrol(playerid) != 0)
		{
			new Query[1000], toplam[10000];
			format(Query, sizeof(Query), "UPDATE `oyuncular` SET `money` = '%d',`Deaths` = '%d',`Kills` = '%d',`dukkanivar` = '%d', `mute_`='%d',`dukkanalimzaman`='%d',`dukkansatimzaman`='%d',`EtkSayisi`='%d',`Kisisel_Durum`='%s'",
			GetPlayerMoney(playerid),PlayerInfo[playerid][Olum],PlayerInfo[playerid][Oldurme],PlayerInfo[playerid][dukkanivar],PlayerInfo[playerid][mute_],PlayerInfo[playerid][dukkanalimzaman],PlayerInfo[playerid][dukkansatimzaman],PlayerInfo[playerid][EtkSayisi],PlayerInfo[playerid][KisiselDurum]);
			strcat(toplam,Query);
			format(Query, sizeof(Query), ",`dLevel` = '%d',`ratio`='%d',`score` = '%d',`LoggedIn` = '0',`Jailed` = '%d',`VIP` = '%i', `VIP_Sure` = '%d',`cekilisgun` = '%i',`yetki_ismi`='%s',`BitCoin`='%d',`DaireIzin`='%d',`GunlukEtk`='%i',`maxexp`='%d',`banka`='%d'",
			PlayerInfo[playerid][dLevel],PlayerInfo[playerid][ratio],GetPlayerScore(playerid),PlayerInfo[playerid][Jailed],PlayerInfo[playerid][VIP],PlayerInfo[playerid][VIP_Sure],PlayerInfo[playerid][cekilisgun],PlayerInfo[playerid][YetkiIsim],PlayerInfo[playerid][BitCoin],PlayerInfo[playerid][DaireIzin],PlayerInfo[playerid][GunlukEtk],PlayerInfo[playerid][maxexp],PlayerInfo[playerid][bank]);
			strcat(toplam,Query);
			format(Query, sizeof(Query), ",`JailTime` = '%d',`GLKredi`='%d',`bannedxd` = '%d',`pinfox` = '%f',`pinfoy` = '%f',`pinfoz` = '%f', `onlinet` = '%d',`cete` = '%d',`ceterutbe` = '%d',`GunlukSpec`='%d',`exp`='%d',`seviye`='%d' WHERE `kullaniciadi` = '%s'",
			PlayerInfo[playerid][JailTime],PlayerInfo[playerid][GLKredi],PlayerInfo[playerid][bannedxd],PlayerInfo[playerid][pinfox],PlayerInfo[playerid][pinfoy]
			,PlayerInfo[playerid][pinfoz],PlayerInfo[playerid][onlinet],PlayerInfo[playerid][PlayerCeteID],PlayerInfo[playerid][PlayerCeteRutbeID],PlayerInfo[playerid][GunlukSpec],PlayerInfo[playerid][exp],PlayerInfo[playerid][seviye],getName(playerid));
			strcat(toplam,Query);
			mysql_query(mysqlC ,toplam);

			format(estring, sizeof(estring), "UPDATE `oyuncular` SET %s WHERE `kullaniciadi` = '%s'", GetPlayerVehicleMod(playerid), getName(playerid));
			mysql_query(mysqlC, estring);
			format(estring, sizeof(estring), "UPDATE `oyuncular` SET %s WHERE `kullaniciadi` = '%s'", GetPlayerVehicleMod2(playerid), getName(playerid));
			mysql_query(mysqlC, estring);
			format(estring, sizeof(estring), "UPDATE `oyuncular` SET %s WHERE `kullaniciadi` = '%s'", GetPlayerVehicleMod3(playerid), getName(playerid));
			mysql_query(mysqlC, estring);
			format(estring, sizeof(estring), "UPDATE `oyuncular` SET %s WHERE `kullaniciadi` = '%s'", GetPlayerVehicleMod4(playerid), getName(playerid));
			mysql_query(mysqlC, estring);
			format(estring, sizeof(estring), "UPDATE `oyuncular` SET %s WHERE `kullaniciadi` = '%s'", GetPlayerVehicleMod5(playerid), getName(playerid));
			mysql_query(mysqlC, estring);
		}
	}
}

stock MySQLHesapKontrol(playerid)
{
	new query[128];
	format(query, sizeof(query), "SELECT sqlid FROM oyuncular WHERE LOWER(kullaniciadi) = LOWER('%s') LIMIT 1", getName(playerid));
	mysql_query(mysqlC, query);
	if(cache_num_rows() == 0)
	{
		return false;
	}
	else
	{
		return true;
	}
}

stock mysql_fetch_row(strer[])
{
	new fielddata[64];
	format(strer,6,"");
	for(new i;i < cache_num_fields();i++)
	{
	    cache_get_value_index(0,i,fielddata);
	    strcat(strer,fielddata,1024);
	    strcat(strer,"|",1024);
	}
	return true;
}

CMD:goto(playerid, params[])
{

	new id;
	if(sscanf(params, "u", id)) return Kullanim(playerid, "goto [ÝD / ÝSÝM]");
	else if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(playerid == id) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(PlayerInfo[playerid][dLevel] < 1 && PlayerInfo[playerid][VIP] < 2)
	{
		if(teleport[id] == 0) return Hata(playerid, "Oyuncunun teleportu kapalý.");
		if(lKatildim[id] == 1 || lEtkinlikte[id] == 1) return Hata(playerid, "Oyuncu þu anda etkinlikte.");
		if(Derbyde[id] == true) return Hata(playerid,"Oyuncu þu anda derby'de.");
		if(PlayerInfo[id][Parkour] == true) return Hata(playerid, "Oyuncu þu anda parkur'da.");
		if(CSDe[id] == 1) return Hata(playerid,"Oyuncu þu an CS Minigame'de.");
		if(HungerGamede[id] == 1) return Hata(playerid,"Oyuncu þu an Hunger Game'de.");
		if(Zombiede[id] == 1) return Hata(playerid,"Oyuncu þu an Zombie'de.");
		if(GunGamedeAmk[id] == true) return Hata(playerid,"Oyuncu þu an GunGame'de.");
		if(Speedydeaglede[id] == true) return Hata(playerid, "Oyuncu þu an SpeedyDeagle'de.");
		if(dmde[id] > 0 || dmyasagi[id] == 1) return Hata(playerid, "Oyuncu þu an DM'de.");
		if(Bankada[playerid] == true) return Hata(playerid, "Oyuncu þu anda bankada.");
		if(PlayerInfo[id][Jailed] == 1) return Hata(playerid, "Oyuncu þu an hapiste.");
		if(duelloda[id] == true) return Hata(playerid, "Oyuncu þu an düelloda.");
		if(Yarista[id] == true) return Hata(playerid, "Oyuncu þu anda yarýþta.");
		if(RaceDuelde[id] == true) return Hata(playerid, "Oyuncu þu anda race duelde.");
	}
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[id][dLevel]) return Hata(playerid,"Sizden yüksek level birinin yanýna ýþýnlanamazsýnýz.");
	new gStatu[56];
	switch(PlayerInfo[playerid][dLevel])
	{
	    case 0: format(gStatu,56,"Oyuncu");
	    case 1..10: format(gStatu,56,"OG");
	}
	new gStatu2[56];
	switch(PlayerInfo[id][dLevel])
	{
	    case 0: format(gStatu2,56,"Oyuncu");
	    case 1..10: format(gStatu2,56,"OG");
	}
	new
		Float:loudPlayer[3] = 0.0, string[156];
	GetPlayerPos(id, loudPlayer[0], loudPlayer[1], loudPlayer[2]);
	format(string, sizeof string, ""safaf"%s "wb"%s(%i)'nin "w"yanýna ýþýnlandýnýz.",gStatu2, getName(id), id);
	SCM(playerid,-1,string);
	format(string, sizeof string, ""safaf"%s "wb"%s(%i) "w"size teleport oldu.", gStatu, getName(playerid), playerid);
	SCM(id,-1,string);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SetPlayerPV(playerid, loudPlayer[0]+0.3, loudPlayer[1], loudPlayer[2]+1.3);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
		SetPlayerInterior(playerid, GetPlayerInterior(id));
	} else {
		SetPlayerPos(playerid, loudPlayer[0]+0.3, loudPlayer[1], loudPlayer[2]+0.3);
		SetPlayerInterior(playerid, GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
	}
	return true;
}

CMD:yaninagit(playerid,params[])
{
	cmd_goto(playerid,params);
	return true;
}

CMD:disarm(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	new id;
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(sscanf(params,"i",id)) return Kullanim(playerid,"disarm [ÝD]");
	ResetPlayerWeapons(id);
	SFM(playerid,-1,""safaf"%s(%i) adlý oyuncunun silahlarýný sildiniz.",getName(id),id);
	SFM(id,-1,""safaf"Yetkili %s(%i) silahlarýnýzý sildi.",getName(playerid),playerid);
	return true;
}

CMD:herkesesilahver(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid, 8);
	new isim_id[100], mermi, not[50], silah, isim[256];
	if(sscanf(params, "s[100]is[50]", isim_id, mermi, not)) return Kullanim(playerid, "herkesesilahver [SÝLAH ÝD / ÝSÝM] [MERMÝ] [NOTUNUZ]");
	if(!IsNumeric(isim_id))
	{
		silah = GetWeaponIDFromName(isim_id);
	}
	else
	{
		silah = strval(isim_id);
	}
	GetWeaponName(silah, isim, sizeof(isim));
	foreach(new i: Player)
	{
		GivePlayerWeapon(i, silah, mermi);
	}
	format(estring, sizeof(estring), "~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~butun oyunculara ~r~~h~%i ~w~~h~~h~mermi ile ~r~~h~%s ~w~~h~~h~silahýný verdi verdi. ~r~~h~Notu: ~w~~h~~h~%s", getName(playerid), playerid, mermi, isim, not);
	TextMesaji(code(estring));
	return true;
}

CMD:car(playerid, params[]) return cmd_veh(playerid, params);
CMD:veh(playerid,params[])
{

	new tmp[256], tmp2[256], tmp3[256], Index; tmp = strtok(params,Index), tmp2 = strtok(params,Index); tmp3 = strtok(params,Index);
	if(!strlen(tmp)) return Kullanim(playerid,"veh [ARAÇ ÝSMÝ/ÝD]");
	new car, string[128];
	if(!IsNumeric(tmp)) car = GetVehicleModelIDFromName(tmp); else car = strval(tmp);
	if(car < 400 || car > 611) return SendClientMessage(playerid,-1, ""safaf"Aradýðýnýz araç bulunamadý.");
	if(PlayerInfo[playerid][dLevel] < 5) { if(car == 520 || car == 432 || car == 425 || car == 447) return SendClientMessage(playerid,-1, ""safaf"Bu araci indiremezsiniz!"); }
	CreatePlayerVehicle(playerid, car);
	switch(car)
	{
	    case 407: ChangeVehicleColor(GetPlayerVehicleID(playerid), 3, 1);
	    case 416: ChangeVehicleColor(GetPlayerVehicleID(playerid), 1, 3);
	    case 596: ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 1);
	    case 597: ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 1);
	    case 598: ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 1);
	    case 599: ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 1);
	    case 427: ChangeVehicleColor(GetPlayerVehicleID(playerid), 0, 1);
	}
	format(string, sizeof(string), ""safaf"Talep ettiðiniz %s(Model: %i) isimli aracýnýz verildi.", vehNames[car-400], car);
	new String[128];
    format(String,sizeof(String),"~g~%s",vehNames[car-400]);
    GameTextForPlayer(playerid,String,2000,1);
	return SendClientMessage(playerid, -1, string);
}

CMD:v1(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v1, "v1");
	return true;
}

CMD:v2(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v2, "v2");
	return true;
}

CMD:v3(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v3, "v3");
	return true;
}

CMD:v4(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v4, "v4");
	return true;
}

CMD:v5(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v5, "v5");
	return true;
}

CMD:v6(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v6, "v6");
	return true;
}

CMD:v7(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v7, "v7");
	return true;
}

CMD:v8(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v8, "v8");
	return true;
}

CMD:v9(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v9, "v9");
	return true;
}

CMD:v10(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v10, "v10");
	return true;
}

CMD:v11(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v11, "v11");
	return true;
}

CMD:v12(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v12, "v12");
	return true;
}

CMD:v13(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v13, "v13");
	return true;
}

CMD:v14(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v14, "v14");
	return true;
}

CMD:v15(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v15, "v15");
	return true;
}

CMD:v16(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v16, "v16");
	return true;
}

CMD:v17(playerid, params[])
{
	ShowModelSelectionMenuVehs(playerid, v17, "v17");
	return true;
}

CMD:eglence(playerid,params[])
{
	new satir[1000];
	strcat(satir,""ww"Kaplumbaða\n");
	strcat(satir,""ww"Sörf tahtasý\n");
	strcat(satir,""ww"Eklentiyi kaldýr\n");
	ShowPlayerDialog(playerid,55,DIALOG_STYLE_LIST,""safaf"Eðlence menüsü",satir,""ww""ww"Seç",""ww"Kapat");
	return true;
}

CMD:neon(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Bir araç kullanmýyorsunuz.");
	new str[2048];
	strcat(str, ""ww"Renk\t"ww"Fiyat\n");
	strcat(str, ""ww"{008CFF}Mavi\t"ww"{00F600}Ücretsiz!\n");
	strcat(str, ""ww"{40B336}Yeþil\t"ww"{00F600}Ücretsiz!\n");
	strcat(str, ""ww"{EAFF00}Sarý\t"ww"{00F600}Ücretsiz!\n");
	strcat(str, ""ww"{FFFFFF}Beyaz\t"ww"{00F600}Ücretsiz!\n");
	strcat(str, ""ww"{FF00E1}Pembe\t"ww"{00F600}Ücretsiz!\n");
	strcat(str, ""ww"{FF0000}Neonlarý Kaldýr\t"ww"{00F600}Ücretsiz!");
	ShowPlayerDialog(playerid, DIALOG_NEON, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Neon", str, ""ww"Tak", ""ww"Ýptal");
	return true;
}

CMD:m1(playerid,params[])
{

	CreatePlayerVehicle(playerid, 562);

    carobj[PlayerInfo[playerid][Arac]][0] = CreateDynamicObject(1034,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][0], 0, 14787, "ab_sfgymbits02", "sign_cobra1", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][0], 1, 14787, "ab_sfgymbits02", "sign_cobra1", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][0], PlayerInfo[playerid][Arac], -0.109, -0.050, 0.010, 0.000, 0.000, -1.299);

    carobj[PlayerInfo[playerid][Arac]][1] = CreateDynamicObject(1034,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][1], 0, 14787, "ab_sfgymbits02", "sign_cobra1", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][1], 1, 14787, "ab_sfgymbits02", "sign_cobra1", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][1], PlayerInfo[playerid][Arac], 0.060, -0.090, 0.020, 0.000, 0.000, 0.000);

    carobj[PlayerInfo[playerid][Arac]][2] = CreateDynamicObject(1001,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][2], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][2], PlayerInfo[playerid][Arac], 0.000, -2.231, 0.329, 0.000, 0.000, 0.000);

    carobj[PlayerInfo[playerid][Arac]][3] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(carobj[PlayerInfo[playerid][Arac]][3], 0, "Z", 130, "Wingdings", 50, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][3], PlayerInfo[playerid][Arac], 1.040, 1.020, -0.090, 0.000, 0.000, -2.400);

    carobj[PlayerInfo[playerid][Arac]][4] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(carobj[PlayerInfo[playerid][Arac]][4], 0, "Z", 130, "Wingdings", 50, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][4], PlayerInfo[playerid][Arac], -1.040, 1.020, -0.090, 0.000, 0.000, 2.400);

    carobj[PlayerInfo[playerid][Arac]][5] = CreateDynamicObject(1011,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][5], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][5], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][5], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][5], 3, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][5], 4, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][5], PlayerInfo[playerid][Arac], 0.000, 0.020, 0.719, 0.000, 0.000, 0.000);

    carobj[PlayerInfo[playerid][Arac]][6] = CreateDynamicObject(1012,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][6], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][6], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][6], PlayerInfo[playerid][Arac], 0.000, -0.120, 0.720, 0.000, 0.000, 0.000);



    carobj[PlayerInfo[playerid][Arac]][7] = CreateDynamicObject(1005,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][7], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][7], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][7], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][7], PlayerInfo[playerid][Arac], 0.000, 1.521, 0.299, 0.000, 0.000, 0.000);



    carobj[PlayerInfo[playerid][Arac]][8] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(carobj[PlayerInfo[playerid][Arac]][8], 0, "GamerLity FR", 130, "Calibri", 20, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][8], PlayerInfo[playerid][Arac], 0.011, -1.171, 0.648, -0.400, -60.799, -88.400);




    carobj[PlayerInfo[playerid][Arac]][9] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(carobj[PlayerInfo[playerid][Arac]][9], 0, "Z", 130, "Wingdings", 40, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][9], PlayerInfo[playerid][Arac], -0.007, -1.388, 0.513, 7.799, 119.400, -79.000);




    carobj[PlayerInfo[playerid][Arac]][10] = CreateDynamicObject(1143,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][10], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][10], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][10], PlayerInfo[playerid][Arac], -0.610, 1.953, 0.228, 10.800, 0.000, -178.799);




    carobj[PlayerInfo[playerid][Arac]][11] = CreateDynamicObject(1143,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][11], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][11], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][11], PlayerInfo[playerid][Arac], 0.610, 1.953, 0.228, 10.800, 0.000, 178.799);



    carobj[PlayerInfo[playerid][Arac]][12] = CreateDynamicObject(1107,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][12], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][12], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][12], PlayerInfo[playerid][Arac], 1.080, 0.099, -0.500, 0.000, 0.000, 1.200);



    carobj[PlayerInfo[playerid][Arac]][13] = CreateDynamicObject(1108,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][13], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][13], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][13], PlayerInfo[playerid][Arac], -1.059, 0.093, -0.540, 0.000, 0.000, -2.400);



    carobj[PlayerInfo[playerid][Arac]][14] = CreateDynamicObject(1115,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][14], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][14], PlayerInfo[playerid][Arac], 0.000, 2.676, -0.567, 15.600, 0.000, 0.000);



    carobj[PlayerInfo[playerid][Arac]][15] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][15], PlayerInfo[playerid][Arac], 0.721, 2.393, 0.020, 0.000, 0.000, -8.899);


    carobj[PlayerInfo[playerid][Arac]][16] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][16], PlayerInfo[playerid][Arac], -0.721, 2.393, 0.020, 0.000, 0.000, 8.899);


    carobj[PlayerInfo[playerid][Arac]][17] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][17], PlayerInfo[playerid][Arac], 0.493, 2.428, 0.020, 0.000, 0.000, -8.899);



    carobj[PlayerInfo[playerid][Arac]][18] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][18], PlayerInfo[playerid][Arac], -0.493, 2.428, 0.020, 0.000, 0.000, 8.899);



    carobj[PlayerInfo[playerid][Arac]][19] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][19], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][19], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][19], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][19], PlayerInfo[playerid][Arac], 1.049, -1.300, -0.328, 0.000, 91.200, 0.000);



    carobj[PlayerInfo[playerid][Arac]][20] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][20], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][20], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][20], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][20], PlayerInfo[playerid][Arac], -1.049, -1.300, -0.328, 0.000, -91.200, 0.000);



    carobj[PlayerInfo[playerid][Arac]][21] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][21], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][21], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][21], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][21], PlayerInfo[playerid][Arac], -1.029, 1.541, -0.308, 0.000, -90.100, 0.000);



    carobj[PlayerInfo[playerid][Arac]][22] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][22], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][22], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][22], 2, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][22], PlayerInfo[playerid][Arac], 1.029, 1.541, -0.308, 0.000, 90.100, 0.000);



    carobj[PlayerInfo[playerid][Arac]][23] = CreateDynamicObject(1113,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][23], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][23], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][23], PlayerInfo[playerid][Arac], 0.920, -0.910, 0.159, 0.000, 0.000, 0.299);



    carobj[PlayerInfo[playerid][Arac]][24] = CreateDynamicObject(1113,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][24], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][24], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][24], PlayerInfo[playerid][Arac], -1.051, -0.910, 0.159, 0.000, 0.000, -0.299);



    carobj[PlayerInfo[playerid][Arac]][25] = CreateDynamicObject(1112,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][25], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][25], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][25], PlayerInfo[playerid][Arac], 0.030, -2.386, 0.098, 41.900, 2.600, -95.299);



    carobj[PlayerInfo[playerid][Arac]][26] = CreateDynamicObject(1112,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][26], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][26], PlayerInfo[playerid][Arac], -0.037, -2.266, 0.102, 41.900, -2.600, 95.299);



    carobj[PlayerInfo[playerid][Arac]][27] = CreateDynamicObject(1112,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][27], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][27], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][27], PlayerInfo[playerid][Arac], 0.070, 2.446, 0.110, -10.200, 0.000, 0.000);



    carobj[PlayerInfo[playerid][Arac]][28] = CreateDynamicObject(1112,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][28], 0, 19607, "enexmarkers", "enexmarker4-2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][28], 1, 19607, "enexmarkers", "enexmarker4-2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][28], PlayerInfo[playerid][Arac], 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);

	ChangeVehicleColor(PlayerInfo[playerid][Arac], 3, 3);
    AddVehicleComponent(PlayerInfo[playerid][Arac], 1039);
    AddVehicleComponent(PlayerInfo[playerid][Arac], 1171);
    AddVehicleComponent(PlayerInfo[playerid][Arac], 1148);
    ChangeVehiclePaintjob(PlayerInfo[playerid][Arac], 0);
	SetVehicleNumberPlate(PlayerInfo[playerid][Arac], "{00FF00}GamerLity");
	return true;
}

CMD:m2(playerid, params[])
{

	CreatePlayerVehicle(playerid, 560);


    carobj[PlayerInfo[playerid][Arac]][0] = CreateDynamicObject(1164,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][0], 0, -1, "none", "none", -6750208);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][0], 1, -1, "none", "none", -13434625);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][0], PlayerInfo[playerid][Arac], 0.000, -2.285, 0.479, 0.000, 0.000, 0.000);


	carobj[PlayerInfo[playerid][Arac]][1] = CreateDynamicObject(1167,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][1], 0, -1, "none", "none", -6750208);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][1], PlayerInfo[playerid][Arac], -1.071, -1.670, 0.050, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][2] = CreateDynamicObject(1148,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][2], 0, -1, "none", "none", -6750208);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][2], 1, -1, "none", "none", -6750208);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][2], PlayerInfo[playerid][Arac], 1.060, -1.740, 0.000, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][3] = CreateDynamicObject(1039,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][3], 0, -1, "none", "none", -16777216);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][3], 1, -1, "none", "none", -6750208);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][3], PlayerInfo[playerid][Arac], -1.010, 0.130, -0.340, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][4] = CreateDynamicObject(1169,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][4], 0, -1, "none", "none", -6750208);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][4], 1, -1, "none", "none", -6750208);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][4], PlayerInfo[playerid][Arac], 1.061, 1.831, 0.040, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][5] = CreateDynamicObject(1039,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][5], 0, -1, "none", "none", -16777216);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][5], 1, -1, "none", "none", -6750208);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][5], PlayerInfo[playerid][Arac], -1.010, 0.000, -0.340, 0.000, 0.000, -0.699);


    carobj[PlayerInfo[playerid][Arac]][6] = CreateDynamicObject(1041,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][6], 1, -1, "none", "none", -6750208);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][6], PlayerInfo[playerid][Arac], 1.000, 0.140, -0.290, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][7] = CreateDynamicObject(1041,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][7], 1, -1, "none", "none", -6750208);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][7], PlayerInfo[playerid][Arac], 1.000, -0.030, -0.290, 0.000, 0.000, 1.400);


    carobj[PlayerInfo[playerid][Arac]][8] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][8], 0, 10101, "2notherbuildsfe", "sl_vicwin01", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][8], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][8], 2, 18996, "mattextures", "sampred", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][8], PlayerInfo[playerid][Arac], 1.084, -1.461, -0.350, 0.000, 89.400, 0.000);


    carobj[PlayerInfo[playerid][Arac]][9] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][9], 0, 10101, "2notherbuildsfe", "sl_vicwin01", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][9], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][9], 2, 18996, "mattextures", "sampred", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][9], PlayerInfo[playerid][Arac], -1.084, -1.461, -0.350, 0.000, -89.400, 0.000);


    carobj[PlayerInfo[playerid][Arac]][10] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][10], 0, 10101, "2notherbuildsfe", "sl_vicwin01", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][10], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][10], 2, 18996, "mattextures", "sampred", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][10], PlayerInfo[playerid][Arac], -1.074, 1.551, -0.350, 0.000, -89.400, 0.000);


    carobj[PlayerInfo[playerid][Arac]][11] = CreateDynamicObject(1953,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][11], 0, 10101, "2notherbuildsfe", "sl_vicwin01", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][11], 1, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][11], 2, 18996, "mattextures", "sampred", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][11], PlayerInfo[playerid][Arac], 1.084, 1.551, -0.350, 0.000, 89.400, 0.000);


    carobj[PlayerInfo[playerid][Arac]][12] = CreateDynamicObject(1110,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][12], PlayerInfo[playerid][Arac], 0.000, -2.271, -0.530, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][13] = CreateDynamicObject(1034,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][13], 0, 14668, "711c", "CJ_CHIP_M2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][13], 1, 14787, "ab_sfgymbits02", "sign_cobra1", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][13], 2, 14668, "711c", "CJ_CHIP_M2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][13], PlayerInfo[playerid][Arac], -0.030, -0.190, 0.000, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][14] = CreateDynamicObject(1034,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][14], 0, 14668, "711c", "CJ_CHIP_M2", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][14], 1, 14787, "ab_sfgymbits02", "sign_cobra1", 0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][14], 2, 14668, "711c", "CJ_CHIP_M2", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][14], PlayerInfo[playerid][Arac], 0.080, -0.200, 0.000, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][15] = CreateDynamicObject(1055,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][15], 0, -1, "none", "none", -6750208);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][15], 2, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][15], PlayerInfo[playerid][Arac], 0.150, 0.259, 0.790, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][16] = CreateDynamicObject(1107,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][16], PlayerInfo[playerid][Arac], 1.090, 0.129, -0.450, 0.000, 0.000, 0.799);


    carobj[PlayerInfo[playerid][Arac]][17] = CreateDynamicObject(1108,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][17], PlayerInfo[playerid][Arac], -1.120, 0.140, -0.450, 0.000, 0.000, -0.599);


    carobj[PlayerInfo[playerid][Arac]][18] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(carobj[PlayerInfo[playerid][Arac]][18], 0, "Z", 130, "Wingdings", 60, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][18], PlayerInfo[playerid][Arac], -0.034, -1.339, 0.622, 0.000, -61.299, -90.599);


    carobj[PlayerInfo[playerid][Arac]][19] = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterialText(carobj[PlayerInfo[playerid][Arac]][19], 0, "Z", 130, "Wingdings", 60, 0, -1, 0, 1);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][19], PlayerInfo[playerid][Arac], 0.000, 0.000, 0.000, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][20] = CreateDynamicObject(1055,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][20], 0, -1, "none", "none", -6750208);
    SetDynamicObjectMaterial(carobj[PlayerInfo[playerid][Arac]][20], 2, 5150, "wiresetc_las2", "ganggraf01_LA_m", 0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][20], PlayerInfo[playerid][Arac], -0.160, 0.261, 0.790, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][21] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][21], PlayerInfo[playerid][Arac], 0.720, 2.670, -0.309, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][22] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][22], PlayerInfo[playerid][Arac], -0.720, 2.670, -0.309, 0.000, 0.000, 0.000);

    carobj[PlayerInfo[playerid][Arac]][23] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][23], PlayerInfo[playerid][Arac], -0.619, -2.568, -0.139, 0.000, 0.000, 175.100);


    carobj[PlayerInfo[playerid][Arac]][24] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][24], PlayerInfo[playerid][Arac], 0.683, -2.569, -0.129, 0.000, 0.000, -175.100);


    carobj[PlayerInfo[playerid][Arac]][25] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][25], PlayerInfo[playerid][Arac], -0.480, 2.640, 0.080, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][26] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][26], PlayerInfo[playerid][Arac], 0.480, 2.640, 0.080, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][27] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][27], PlayerInfo[playerid][Arac], -0.180, 2.640, 0.080, 0.000, 0.000, 0.000);


    carobj[PlayerInfo[playerid][Arac]][28] = CreateDynamicObject(19280,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
    AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][28], PlayerInfo[playerid][Arac], 0.210, 2.640, 0.080, 0.000, 0.000, 0.000);

	ChangeVehicleColor(PlayerInfo[playerid][Arac], 1, 1);
	SetVehicleNumberPlate(PlayerInfo[playerid][Arac], "{00FF00}GamerLity");
	return true;
}

CMD:m3(playerid, params[])
{

	new vID;
	cmd_veh(playerid, "Sultan");
	vID = GetPlayerVehicleID(playerid);
	AddVehicleComponent(vID, 1031);
	AddVehicleComponent(vID, 1030);
	AddVehicleComponent(vID, 1029);
	AddVehicleComponent(vID, 1033);
	AddVehicleComponent(vID, 1139);
	AddVehicleComponent(vID, 1140);
	AddVehicleComponent(vID, 1170);
	ChangeVehiclePaintjob(vID, 0);
	ChangeVehicleColor(vID, 1, 1);
	return true;
}

CMD:m4(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 540);

	carobj[PlayerInfo[playerid][Arac]][0] = CreateDynamicObject(19419,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][0], PlayerInfo[playerid][Arac], 0.019999,-0.300000,0.750000,0.000000,0.000000,0.000000);

	carobj[PlayerInfo[playerid][Arac]][1] = CreateDynamicObject(11701,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][1], PlayerInfo[playerid][Arac], -0.000000,2.655000,-0.094999,-80.999992,-0.000001,0.000000);

	carobj[PlayerInfo[playerid][Arac]][2] = CreateDynamicObject(1001,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][2], PlayerInfo[playerid][Arac], -0.000000,-2.850001,0.145000,0.000000,0.000000,0.000000);

	carobj[PlayerInfo[playerid][Arac]][3] = CreateDynamicObject(1247,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][3], PlayerInfo[playerid][Arac], -0.789999,-2.760001,-0.039999,0.000000,0.000000,0.000000);

	carobj[PlayerInfo[playerid][Arac]][4] = CreateDynamicObject(1247,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][4], PlayerInfo[playerid][Arac], 0.769999,-2.760001,-0.039999,0.000000,0.000000,0.000000);

	ChangeVehicleColor(PlayerInfo[playerid][Arac], 222, 222);
	AddVehicleComponent(PlayerInfo[playerid][Arac], 1010);
	AddVehicleComponent(PlayerInfo[playerid][Arac], 1025);
	SetVehicleNumberPlate(PlayerInfo[playerid][Arac], "{00FF00}GamerLity");
	return true;
}

CMD:m5(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 541);

	carobj[PlayerInfo[playerid][Arac]][0] = CreateDynamicObject(1003,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][0], PlayerInfo[playerid][Arac], 0.000000,-2.250000,0.285000,0.000000,0.000000,0.000000);

	// :
	carobj[PlayerInfo[playerid][Arac]][1] = CreateDynamicObject(1166,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][1], PlayerInfo[playerid][Arac], 1.014999,1.630000,0.070000,0.000000,0.000000,0.000000);

	// :
	carobj[PlayerInfo[playerid][Arac]][2] = CreateDynamicObject(1167,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][2], PlayerInfo[playerid][Arac], -1.075000,-1.465000,-0.089999,0.000000,0.000000,0.000000);

	// :
	carobj[PlayerInfo[playerid][Arac]][3] = CreateDynamicObject(11704,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][3], PlayerInfo[playerid][Arac], 0.019999,1.800000,0.284999,-70.200004,-0.359999,-178.919891);

	// :
	carobj[PlayerInfo[playerid][Arac]][4] = CreateDynamicObject(19310,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][4], PlayerInfo[playerid][Arac], -0.015000,0.114999,0.694999,0.000000,0.000000,87.119987);

	ChangeVehicleColor(PlayerInfo[playerid][Arac], 0, 1);
	AddVehicleComponent(PlayerInfo[playerid][Arac], 1010);
	AddVehicleComponent(PlayerInfo[playerid][Arac], 1025);
	SetVehicleNumberPlate(PlayerInfo[playerid][Arac], "{00FF00}GamerLity");
	return true;
}

CMD:m6(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 560);
	SetVehicleNumberPlate(PlayerInfo[playerid][Arac], "{00FF00}GamerLity");	PutPlayerInVehicle(playerid,PlayerInfo[playerid][Arac],0); 	    AddVehicleComponent(PlayerInfo[playerid][Arac], 1028);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1030);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1031);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1138);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1140);  AddVehicleComponent(PlayerInfo[playerid][Arac], 1170);
	AddVehicleComponent(PlayerInfo[playerid][Arac], 1028);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1030);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1031);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1138);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1140);  AddVehicleComponent(PlayerInfo[playerid][Arac], 1170);
	AddVehicleComponent(PlayerInfo[playerid][Arac], 1080);	AddVehicleComponent(PlayerInfo[playerid][Arac], 1086); AddVehicleComponent(PlayerInfo[playerid][Arac], 1087); AddVehicleComponent(PlayerInfo[playerid][Arac], 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(PlayerInfo[playerid][Arac], 0);
	SetVehicleVirtualWorld(PlayerInfo[playerid][Arac], GetPlayerVirtualWorld(playerid)); LinkVehicleToInterior(PlayerInfo[playerid][Arac], GetPlayerInterior(playerid));
	ChangeVehicleColor(PlayerInfo[playerid][Arac], 5, 5);

	carobj[PlayerInfo[playerid][Arac]][0] = CreateDynamicObject(11701,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][0], PlayerInfo[playerid][Arac], 0.005000,-2.325001,0.000000,75.599998,-0.179999,0.000000);

	carobj[PlayerInfo[playerid][Arac]][1] = CreateDynamicObject(19419,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][1], PlayerInfo[playerid][Arac], -0.010000,2.355000,0.000000,0.000000,0.000000,0.000000);

	carobj[PlayerInfo[playerid][Arac]][2] = CreateDynamicObject(11704,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][2], PlayerInfo[playerid][Arac], -0.015000,2.675000,0.000000,-5.400001,0.000001,179.639892);

	carobj[PlayerInfo[playerid][Arac]][3] = CreateDynamicObject(1000,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][3], PlayerInfo[playerid][Arac], -0.025000,-0.899999,0.724999,0.000000,0.000000,0.000000);
	return true;
}

CMD:m7(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 426);
	ChangeVehicleColor(PlayerInfo[playerid][Arac], 0, 0);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][0] = CreateDynamicObject(19797,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][0], GetPlayerVehicleID(playerid), -0.749999,-2.925001,-0.300000,0.000000,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][1] = CreateDynamicObject(19777,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][1], PlayerInfo[playerid][Arac], 0.000000,-2.325000,0.300000,0.000000,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][2] = CreateDynamicObject(19419,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][2], PlayerInfo[playerid][Arac], 0.000000,0.000000,0.824999,0.000000,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][3] = CreateDynamicObject(19419,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][3], GetPlayerVehicleID(playerid), -0.075000,2.325000,-0.374999,16.200002,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][4] = CreateDynamicObject(18646,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][4], PlayerInfo[playerid][Arac], 0.824999,-2.550000,0.375000,0.000000,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][5] = CreateDynamicObject(19797,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][5], PlayerInfo[playerid][Arac], 0.599999,0.450000,0.675000,229.499847,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][6] = CreateDynamicObject(18648,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][6], PlayerInfo[playerid][Arac], 0.824999,-0.075000,-0.524999,0.000000,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][7] = CreateDynamicObject(18648,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][7], GetPlayerVehicleID(playerid), -0.974999,-0.075000,-0.524999,0.000000,0.000000,0.000000);

	// fbi:
	carobj[PlayerInfo[playerid][Arac]][8] = CreateDynamicObject(19777,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][8], GetPlayerVehicleID(playerid), -1.125000,0.225000,0.000000,89.099983,-2.699998,-91.799980);
	return true;
}

CMD:m8(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 475);
	ChangeVehicleColor(PlayerInfo[playerid][Arac], 3, 3);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][0] = CreateDynamicObject(1003,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][0], PlayerInfo[playerid][Arac], -0.009999,-2.700001,0.084999,0.000000,0.000000,0.000000);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][1] = CreateDynamicObject(2043,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][1], PlayerInfo[playerid][Arac], -0.009999,2.325000,-0.459999,0.000000,0.000000,0.000000);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][2] = CreateDynamicObject(1500,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][2], PlayerInfo[playerid][Arac], -0.769999,-2.625000,0.180000,-75.599998,-0.720001,0.000000);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][3] = CreateDynamicObject(18702,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][3], PlayerInfo[playerid][Arac], -0.449999,-2.775000,-1.775000,0.000000,0.000000,0.000000);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][4] = CreateDynamicObject(18702,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][4], PlayerInfo[playerid][Arac], 0.449999,-2.775000,-1.775000,0.000000,0.000000,0.000000);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][5] = CreateDynamicObject(360,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][5], PlayerInfo[playerid][Arac], 0.674999,2.475000,-0.444999,0.000000,0.000000,0.000000);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][6] = CreateDynamicObject(360,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][6], PlayerInfo[playerid][Arac], -0.735000,2.505000,-0.444999,5.760001,-0.540001,-179.099914);

	// sabre:
	carobj[PlayerInfo[playerid][Arac]][7] = CreateDynamicObject(1231,0,0,-1000,0,0,0);
	AttachDynamicObjectToVehicle(carobj[PlayerInfo[playerid][Arac]][7], PlayerInfo[playerid][Arac], 0.009999,0.000000,0.224999,-2.699999,83.699989,-89.819984);
	return true;
}

CMD:m9(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 560);
    AddVehicleComponent(GetPlayerVehicleID(playerid), 1028);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1030);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1031);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1138);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1140);  AddVehicleComponent(GetPlayerVehicleID(playerid), 1170);
 	AddVehicleComponent(GetPlayerVehicleID(playerid), 1028);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1030);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1031);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1138);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1140);  AddVehicleComponent(GetPlayerVehicleID(playerid), 1170);
	AddVehicleComponent(GetPlayerVehicleID(playerid), 1080);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1086); AddVehicleComponent(GetPlayerVehicleID(playerid), 1087); AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
	return true;
}

CMD:m10(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 560);
	AddVehicleComponent(GetPlayerVehicleID(playerid), 1028);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1030);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1031);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1138);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1140);  AddVehicleComponent(GetPlayerVehicleID(playerid), 1170);
	AddVehicleComponent(GetPlayerVehicleID(playerid), 1080);	AddVehicleComponent(GetPlayerVehicleID(playerid), 1086); AddVehicleComponent(GetPlayerVehicleID(playerid), 1087); AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);	PlayerPlaySound(playerid,1133,0.0,0.0,0.0);	ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
	return true;
}

CMD:m11(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 559);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1065);    AddVehicleComponent(GetPlayerVehicleID(playerid),1067);    AddVehicleComponent(GetPlayerVehicleID(playerid),1162); AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1073);	ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
	return true;
}

CMD:m12(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 565);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1046); AddVehicleComponent(GetPlayerVehicleID(playerid),1049); AddVehicleComponent(GetPlayerVehicleID(playerid),1053); AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1073); ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
	return true;
}

CMD:m13(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 558);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1088); AddVehicleComponent(GetPlayerVehicleID(playerid),1092); AddVehicleComponent(GetPlayerVehicleID(playerid),1139); AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1073); ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
	return true;
}

CMD:m14(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 561);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1055); AddVehicleComponent(GetPlayerVehicleID(playerid),1058); AddVehicleComponent(GetPlayerVehicleID(playerid),1064); AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1073); ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
	return true;
}

CMD:m15(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 562);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1034); AddVehicleComponent(GetPlayerVehicleID(playerid),1038); AddVehicleComponent(GetPlayerVehicleID(playerid),1147); AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1073); ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
	return true;
}

CMD:m16(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 567);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1102); AddVehicleComponent(GetPlayerVehicleID(playerid),1129); AddVehicleComponent(GetPlayerVehicleID(playerid),1133); AddVehicleComponent(GetPlayerVehicleID(playerid),1186); AddVehicleComponent(GetPlayerVehicleID(playerid),1188);
	ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1); AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1085); AddVehicleComponent(GetPlayerVehicleID(playerid),1087); AddVehicleComponent(GetPlayerVehicleID(playerid),1086);
	return true;
}

CMD:m17(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 558);
   	AddVehicleComponent(GetPlayerVehicleID(playerid),1092); AddVehicleComponent(GetPlayerVehicleID(playerid),1166); AddVehicleComponent(GetPlayerVehicleID(playerid),1165); AddVehicleComponent(GetPlayerVehicleID(playerid),1090);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1094); AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1087); AddVehicleComponent(GetPlayerVehicleID(playerid),1163);//SPOILER
	AddVehicleComponent(GetPlayerVehicleID(playerid),1091); ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
	return true;
}

CMD:m18(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 557);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
	return true;
}

CMD:m19(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 535);
	ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1); AddVehicleComponent(GetPlayerVehicleID(playerid),1109); AddVehicleComponent(GetPlayerVehicleID(playerid),1115); AddVehicleComponent(GetPlayerVehicleID(playerid),1117); AddVehicleComponent(GetPlayerVehicleID(playerid),1073); AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1087); AddVehicleComponent(GetPlayerVehicleID(playerid),1114); AddVehicleComponent(GetPlayerVehicleID(playerid),1081); AddVehicleComponent(GetPlayerVehicleID(playerid),1119); AddVehicleComponent(GetPlayerVehicleID(playerid),1121);
	return true;
}

CMD:m20(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 562);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1034); AddVehicleComponent(GetPlayerVehicleID(playerid),1038); AddVehicleComponent(GetPlayerVehicleID(playerid),1147);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1073); ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0);
	return true;
}

CMD:m21(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 411);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1079); AddVehicleComponent(GetPlayerVehicleID(playerid),1087); ChangeVehicleColor(GetPlayerVehicleID(playerid),150,150);
	return true;
}

CMD:m22(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 549);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1079); AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),145,148); AddVehicleComponent(GetPlayerVehicleID(playerid),1011);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1144); AddVehicleComponent(GetPlayerVehicleID(playerid),1145); AddVehicleComponent(GetPlayerVehicleID(playerid),1003);
	return true;
}

CMD:m23(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 550);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1074); AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),33,33); AddVehicleComponent(GetPlayerVehicleID(playerid),1004); AddVehicleComponent(GetPlayerVehicleID(playerid),1003);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1144); AddVehicleComponent(GetPlayerVehicleID(playerid),1145); AddVehicleComponent(GetPlayerVehicleID(playerid),1006);
	return true;
}

CMD:m24(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 589);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1074); AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),146,146); AddVehicleComponent(GetPlayerVehicleID(playerid),1004); AddVehicleComponent(GetPlayerVehicleID(playerid),1013);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1144); AddVehicleComponent(GetPlayerVehicleID(playerid),1145); AddVehicleComponent(GetPlayerVehicleID(playerid),1006);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1000);
	return true;
}

CMD:m25(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 418);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1079); AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),151,151); AddVehicleComponent(GetPlayerVehicleID(playerid),1006); AddVehicleComponent(GetPlayerVehicleID(playerid),1016);
	return true;
}

CMD:m26(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 451);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1079); AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),147,147);
	return true;
}

CMD:m27(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 545);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1079); AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),142,142);
	return true;
}

CMD:m28(playerid, params[])
{

	#pragma unused params
	CreatePlayerVehicle(playerid, 541);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010); AddVehicleComponent(GetPlayerVehicleID(playerid),1079); AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	ChangeVehicleColor(GetPlayerVehicleID(playerid),147,1);
	return true;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{

	if(success)
	{
		new komut[128];
		format(komut,sizeof(komut),"[%s] %s(%i): %s \r\n",TarihCek(),getName(playerid),playerid,cmdtext);
		new File:dosyaCek = fopen("Dark/Log/KomutLog.txt", io_append);
		fwrite(dosyaCek, code(komut));
		fclose(dosyaCek);

		new stringi[1024];
		format(stringi, sizeof stringi, "~r~~h~(KOMUT) ~w~~h~~h~%s(%i) ~r~~h~>>> ~w~~h~~h~%s", getName(playerid), playerid, code(cmdtext));
		switch(KomutSpec_C)
		{
		    case 0: TextDrawSetString(KomutSpec0, stringi), KillTimer(KomutSpec0_Timer), KomutSpec0_Timer = SetTimer("KomutSpec0_", 15*1000, false), KomutSpec_C=1;
		    case 1: TextDrawSetString(KomutSpec1, stringi), KillTimer(KomutSpec1_Timer), KomutSpec1_Timer = SetTimer("KomutSpec1_", 15*1000, false), KomutSpec_C=2;
		    case 2: TextDrawSetString(KomutSpec2, stringi), KillTimer(KomutSpec2_Timer), KomutSpec2_Timer = SetTimer("KomutSpec2_", 15*1000, false), KomutSpec_C=3;
			case 3: TextDrawSetString(KomutSpec3, stringi), KillTimer(KomutSpec3_Timer), KomutSpec3_Timer = SetTimer("KomutSpec3_", 15*1000, false), KomutSpec_C=4;
			case 4: TextDrawSetString(KomutSpec4, stringi), KillTimer(KomutSpec4_Timer), KomutSpec4_Timer = SetTimer("KomutSpec4_", 15*1000, false), KomutSpec_C=0;
		}
	}

    if(!success)
    {
        new satir[500];
        format(satir,sizeof(satir),"'%s' diye bir komut bulunmamaktadýr. Komutlarý görmek için "wb"'/cmds' "w"yazabilirsiniz.",cmdtext);
        Hata(playerid, satir);
    }
    return true;
}

stock SetPlayerPV(playerid, Float:X, Float:Y, Float:Z,interior = 0, world = 0)
{
	new PlayerState = GetPlayerState(playerid);
	new vehicleid;
	vehicleid = GetPlayerVehicleID(playerid);
	SetPlayerInterior(playerid,interior);
	SetPlayerVirtualWorld(playerid, world);
	if(IsPlayerInAnyVehicle(playerid) && PlayerState == PLAYER_STATE_DRIVER)
	{
 		SetVehiclePos(vehicleid, X,Y,Z);
 		SetVehicleZAngle(vehicleid,0);
 		if(GetPlayerVehicleID(playerid) != UFO) LinkVehicleToInterior(vehicleid, interior);
 		SetVehicleVirtualWorld(vehicleid, world);
	}
	else
	{
 		SetPlayerPos(playerid, X,Y,Z);
	}
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while((index < length) &&(string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while((index < length) &&(string[index] > ' ') &&((index - offset) <(sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

GetVehicleModelIDFromName(vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if(strfind(vehNames[i], vname, true) != -1)
			return i + 400;
	}
	return -1;
}

IsNumeric(const string[])
{
	for(new i = 0, j = strlen(string); i < j; i++)
	{
		if(string[i] > '9' || string[i] < '0') return false;
	}
    return true;
}

stock GetWeaponIDFromName(WeaponName[])
{
	//returnlu - 18
	if(strfind("molotov",WeaponName,true)!=-1) return 18;
	for(new i = 0; i <= 46; i++)
	{
		switch(i)
		{
			case 0,19,20,21,44,45: continue;
			default:
			{
				new name[32]; GetWeaponName(i,name,32);
				if(strfind(name,WeaponName,true) != -1) return i;
			}
		}
	}
	return -1;
}

stock IsValidWeapon(weaponid)
{
    if(weaponid >= 0 && weaponid < 19 || weaponid > 21 && weaponid < 47) return true;
    return false;
}

stock CreatePlayerVehicle(playerid,vehicleid){
	new car = vehicleid;
	if(PlayerInfo[playerid][dLevel] < 1 && car == 520 || car == 432 || car == 425 || car == 447) return true;
    if(IsPlayerInAnyVehicle(playerid)) { RemovePlayerFromVehicle(playerid); }
	destroyVehicle(playerid);
	new Float: _vX, Float: _vY, Float: _vZ, Float: _vR;
	GetPlayerPos(playerid,_vX,_vY,_vZ);
	GetPlayerFacingAngle(playerid,_vR);
	PlayerInfo[playerid][Arac] = CreateVehicle(vehicleid,_vX,_vY,_vZ,_vR,random(255),random(255),300);
	SetVehicleVirtualWorld(PlayerInfo[playerid][Arac], GetPlayerVirtualWorld(playerid));
	PutPlayerInVehicle(playerid, PlayerInfo[playerid][Arac], 0);
	LinkVehicleToInterior(PlayerInfo[playerid][Arac], GetPlayerInterior(playerid));
	SetPlayerArmedWeapon(playerid,0);
	new String[128];
    format(String,sizeof(String),"~g~%s",GetVehicleName(PlayerInfo[playerid][Arac]));
    GameTextForPlayer(playerid,String,2000,1);
	return true;
}

stock destroyVehicle(playerid){
	if(PlayerInfo[playerid][Arac] != INVALID_VEHICLE_ID && PlayerInfo[playerid][Arac] > 0 && PlayerInfo[playerid][Arac] <= 2000){
	for(new i;i<45;i++)
	{
	    if(carobj[PlayerInfo[playerid][Arac]][i] != INVALID_OBJECT_ID) DestroyDynamicObject(carobj[PlayerInfo[playerid][Arac]][i]),carobj[PlayerInfo[playerid][Arac]][i] = INVALID_OBJECT_ID;
	}
	DestroyVehicle(PlayerInfo[playerid][Arac]);
	PlayerInfo[playerid][Arac] = INVALID_VEHICLE_ID;
	RemoveNeon(playerid);
	}
	return true;
}

forward TextMesaji(const text1[]);
public TextMesaji(const text1[])
{
	new sZ[512];
	format(sZ, 512, "%s", text1);
	strdelm(sZ, " ");
	if((strcount(sZ, "~") %2) != 0) return printf("» Hata : Hatalý textdraw kullanýmý = %s", text1);
	for(new i ; i < 2; i++)
	{
		for(new line; line < 4; line++)
		{
			MessageStr[i][line] = MessageStr[i][line + 1];
			TextDrawSetString(eMessage[i][line], MessageStr[i][line]);
		}
	}
	format(MessageStr[1][4], 1024, "%s", text1);
	TextDrawSetString(eMessage[1][4], MessageStr[1][4]);
	for(new i; i < 5; i++)
	{
		if(EVT[i] != -1)
		{
			KillTimer(EVT[i]);
			EVT[i] = -1;
		}
	}
	EVT[0] = SetTimer("emessagedele0", 3500, false);
	return true;
}

forward emessagedele0();
public emessagedele0()
{
	for(new i; i < 2; i++)
	{
		format(MessageStr[i][1], 128, "");
		TextDrawSetString(eMessage[i][0], "");
	}
	EVT[1] = SetTimer("emessagedele1", 3700, false);
	return true;
}

forward emessagedele1();
public emessagedele1()
{
	for(new i; i < 2; i++)
	{
		format(MessageStr[i][2], 128, "");
		TextDrawSetString(eMessage[i][1], "");
	}
	EVT[2] = SetTimer("emessagedele2", 3900, false);
	return true;
}

forward emessagedele2();
public emessagedele2()
{
	for(new i; i < 2; i++)
	{
		format(MessageStr[i][3], 128, "");
		TextDrawSetString(eMessage[i][2], "");
	}
	EVT[3] = SetTimer("emessagedele3", 4100, false);
	return true;
}

forward emessagedele3();
public emessagedele3()
{
	for(new i; i < 2; i++)
	{
		format(MessageStr[i][4], 128, "");
		TextDrawSetString(eMessage[i][3], "");
	}
	EVT[4] = SetTimer("emessagedele4", 4500, false);
	return true;
}

forward emessagedele4();
public emessagedele4()
{
	for(new i; i < 2; i++)
	{
		format(MessageStr[i][0], 128, "");
		TextDrawSetString(eMessage[i][4], "");
	}
	return true;
}

stock strdelm(string[], badWord[])
{
	new i;
	while((i = strfind(string, badWord, true)) != -1)
	{
		for(new x = (i + strlen(badWord)); i != x; ++i)
		{
			strdel(string, i, i + 1);
		}
	}
	return true;
}

stock strcount(const string[], const sub[], bool:ignorecase = false, bool: count_overlapped = false)
{
	new increment = count_overlapped ? 1 : strlen(sub), pos = -increment, count = 0;
	while(-1 != (pos = strfind(string, sub, ignorecase, pos + increment)))
	count++;
	return count;
}

forward spawn(playerid);
public spawn(playerid)
{
	new rand = random(sizeof(spawnzone));
	SetPlayerPos(playerid, spawnzone[rand][0], spawnzone[rand][1], spawnzone[rand][2] + 0.50);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);

	FreezeEx(playerid, 1);
	return true;
}

stock spamProtect(playerid, isim[], saniye)
{
	new edit[250], str[512];
	format(edit, sizeof(edit), "spamkorumaflare_%s", isim);

	if(GetPVarInt(playerid, edit) > gettime())
	{
		format(str, sizeof(str), "Bu komutu tekrar kullanabilmek için "wb"%s "w"beklemelisiniz.", ConvertTime(GetPVarInt(playerid, edit) - gettime()));
		Hata(playerid, str);
		return true;
	}
	else
	{
		SetPVarInt(playerid, edit, gettime() + saniye);
	}
	return false;
}

/*stock spamProtect(playerid, _0xyasakIsim[], _n0xsure)
{
	new _v3r1[35], string[1024], _@0xdakika, _@0xsaniye;
	format(_v3r1, sizeof(_v3r1), "nTempSure_%s", _0xyasakIsim);
	if(GetPVarInt(playerid, _v3r1) > GetTickCount())
	{
	    new verilenSure = (GetPVarInt(playerid, _v3r1) - GetTickCount()) / 1000;
		if(verilenSure >= 599)
		{
	 		_@0xdakika = floatround(verilenSure / 60);
	        _@0xsaniye = floatround(verilenSure - _@0xdakika * 60);
	        if(_@0xsaniye >= 9)
	        {
	        	format(string, sizeof(string), ""safaf"Bu komutu tekrar kullanmanýz için {FF0000}%02d {FFFFFF}dakika {FF0000}%02d {FFFFFF}saniye var.", _@0xdakika, _@0xsaniye);
			}
			else
			{
			    format(string, sizeof(string), ""safaf"Bu komutu tekrar kullanmanýz için {FF0000}%02d {FFFFFF}dakika {FF0000}%d {FFFFFF}saniye var.", _@0xdakika, _@0xsaniye);
			}
		}
		if(verilenSure >= 59 && verilenSure <= 599)
		{
	        _@0xdakika = floatround(verilenSure / 60);
	        _@0xsaniye = floatround(verilenSure - _@0xdakika * 60);
	        if(_@0xsaniye >= 9)
	        {
	        	format(string, sizeof(string), ""safaf"Bu komutu tekrar kullanmanýz için {FF0000}%d {FFFFFF}dakika {FF0000}%02d {FFFFFF}saniye var.", _@0xdakika, _@0xsaniye);
			}
			else
			{
			    format(string, sizeof(string), ""safaf"Bu komutu tekrar kullanmanýz için {FF0000}%d {FFFFFF}dakika {FF0000}%d {FFFFFF}saniye var.", _@0xdakika, _@0xsaniye);
			}
	    }
		if(verilenSure <= 59)
		{
	        _@0xsaniye = floatround(verilenSure);
	        if(_@0xsaniye >= 10)
	        {
	        	format(string, sizeof(string), ""safaf"Bu komutu tekrar kullanmanýz için {FF0000}%d {FFFFFF}saniye var.", _@0xsaniye);
			}
	  		if(_@0xsaniye <= 10)
	        {
	        	format(string, sizeof(string), ""safaf"Bu komutu tekrar kullanmanýz için {FF0000}%d {FFFFFF}saniye var.", _@0xsaniye);
			}
	    }
	    return SendClientMessage(playerid, -1,string);
	}
	else
	{
	    SetPVarInt(playerid, _v3r1, GetTickCount() + _n0xsure * 1000);
	    return false;
	}
}*/

stock YETERSIZSEVIYE(playerid, level)
{
	format(ats, 256, "Bu komutu kullanabilmek için "wb"'%d' "w"level oyun görevlisi olmalýsýnýz.", level);
	Hata(playerid, ats);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 10.0);
	return true;
}

stock beklemesuresi(playerid,sure)
{
	format(atx,256,""safaf"Hata: Bu komutu kullanabilmek için "wb"'%d' "w"saniye beklemelisiniz.",sure);
	SendClientMessage(playerid,-1,atx);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 10.0);
	return true;
}

stock RemoveNeon(playerid)
{
	DestroyDynamicObject(GetPVarInt(playerid, "blue"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "blue1"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "green"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "green1"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "yellow"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "yellow1"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "white"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "white1"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "pink"));
	DeletePVar(playerid, "neon");
	DestroyDynamicObject(GetPVarInt(playerid, "pink1"));
	DeletePVar(playerid, "neon");
	return true;
}

forward KickMag(id,id2,sebep[]);
public KickMag(id,id2,sebep[])
{
	new yazi[1024];
	new string4[156],strings[156],string2[156],string3[156],string5[156];
	format(string4,156,""wb"=========================== ["w" Kicklendiniz "wb"] ===========================\n");
	format(strings,156,""w"Kickleyen Yetkili: "wb"%s\n", getName(id2));
	format(string2,156,""w"Kickleme Tarihi: "wb"%s\n", TarihCek());
	format(string3,156,""w"Sebep: "wb"%s\n", sebep);
	format(string5,156,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
	strcat(yazi,string4);
	strcat(yazi,strings);
	strcat(yazi,string2);
	strcat(yazi,string3);
	strcat(yazi,string5);
	ShowPlayerDialog(id,123,DIALOG_STYLE_MSGBOX,""safaf"Kicklendiniz",yazi,""ww"Kapat","");
	new sql[500];
	format(sql, sizeof(sql), "INSERT INTO `kicklog` (`oyuncu`, `admin`, `sebep`, `tarih`) VALUES ('%s', '%s', '%s', '%s')", getName(id), getName(id2), sebep, TarihCek());
	mysql_query(mysqlC, sql);
	format(estring,sizeof(estring),"~r~~h~[Kicklendi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan kicklendi. ~g~~h~~h~Sebep: ~r~~h~%s",getName(id),id,getName(id2),id2,code(sebep));
	TextMesaji(code(estring));
	new ba_ping = GetPlayerPing(id) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", id);
}

stock getIp(playerid)
{
	new stripip[50];
	GetPlayerIp(playerid, stripip, sizeof(stripip));
	return stripip;
}

forward BanMag(id,id2,sebep[],deger);
public BanMag(id,id2,sebep[],deger)
{
	if(deger == 0)
	{
		new yazi[1024];
		new string4[156],strings[156],string2[156],string3[156],string5[156];
		format(string4,156,""wb"=========================== ["w" Banlandýnýz "wb"] ============================\n");
		format(strings,156,""w"Banlayan Yetkili: "wb"%s\n", getName(id2));
		format(string2,156,""w"Banlama Tarihi: "wb"%s\n", TarihCek());
		format(string3,156,""w"Sebep: "wb"%s\n", sebep);
		format(string5,156,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
		strcat(yazi,string4);
		strcat(yazi,strings);
		strcat(yazi,string2);
		strcat(yazi,string3);
		strcat(yazi,string5);
		ShowPlayerDialog(id,123,DIALOG_STYLE_MSGBOX,""safaf"Banlandýnýz",yazi,""ww"Kapat","");
		format(estring,sizeof(estring),"~r~~h~[Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan banlandi. ~g~~h~~h~Sebep: ~r~~h~%s",getName(id),id,getName(id2),id2,code(sebep));
		TextMesaji(code(estring));
		new str[256];
		format(str,256,"INSERT INTO `banlog`(`ip`,`player`,`times`,`sebep`,`admin`) VALUES('%s','%s','%s','%s','%s')",getIp(id), getName(id), TarihCek(), code(sebep), getName(id2));
		mysql_query(mysqlC,str);
		BlockIpAddress(getIp(id), 10800000);
		new ba_ping = GetPlayerPing(id) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", id);
	}
	else if(deger == 1)
	{
	    if(PlayerInfo[id][dukkanivar] != -1)
	    {
	        new dk = PlayerInfo[id][dukkanivar], sql[500];
	        DukkanInfo[dk][dSahip] = -1;
	        DukkanLabelGuncelle(dk);
	        format(sql, sizeof(sql), "UPDATE `dukkanlar` SET `sahip` = '-1' WHERE `ID` = '%d'", dk);
	        mysql_query(mysqlC, sql);
	    }
	    new qwe[500];
	    format(qwe, sizeof(qwe), "DELETE FROM `arkadaslar` WHERE `arkadas` = '%s'", getName(id));
	    mysql_query(mysqlC, qwe);
	    format(qwe, sizeof(qwe), "DELETE FROM `arkadaslar` WHERE `kullanici` = '%s'", getName(id));
	    mysql_query(mysqlC, qwe);
	    format(qwe, sizeof(qwe), "DELETE FROM `oyuncular` WHERE `sqlid` = '%d'", PlayerInfo[id][sqlid]);
	    mysql_query(mysqlC, qwe);
	    if(PlayerData[id][Homes][0] != -1)
		{
			EvictHouse(PlayerData[id][Homes][0]);
	    }
		new yazi[1024];
		new string4[156],strings[156],string2[156],string3[156],string5[156];
		format(string4,156,""wb"=========================== ["w" H-Banlandýnýz "wb"] ============================\n");
		format(strings,156,""w"H-Banlayan Yetkili: "wb"%s\n", getName(id2));
		format(string2,156,""w"H-Banlama Tarihi: "wb"%s\n", TarihCek());
		format(string3,156,""w"Sebep: "wb"%s\n"w"H-Ban yediðiniz için hesabýnýza ait tüm veriler silinmiþtir.\n", sebep);
		format(string5,156,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
		strcat(yazi,string4);
		strcat(yazi,strings);
		strcat(yazi,string2);
		strcat(yazi,string3);
		strcat(yazi,string5);
		ShowPlayerDialog(id,123,DIALOG_STYLE_MSGBOX,""safaf"H-Banlandýnýz",yazi,""ww"Kapat","");
		format(estring,sizeof(estring),"~r~~h~[H-Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan H-Banlandi. ~g~~h~~h~Sebep: ~r~~h~%s",getName(id),id,getName(id2),id2,code(sebep));
		TextMesaji(code(estring));
		new str[256];
		format(str,256,"INSERT INTO `banlog`(`ip`,`player`,`times`,`sebep`,`admin`) VALUES('%s','%s','%s','%s - (H-BAN)','%s')",getIp(id), getName(id), TarihCek(), code(sebep), getName(id2));
		mysql_query(mysqlC,str);
		BlockIpAddress(getIp(id), 10800000);
		new ba_ping = GetPlayerPing(id) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", id);
	}
}

stock convertDate(timestamp, _form=0){
    new year=1970, day=0, month=0, hour=0, mins=0, sec=0;
    new days_of_month[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
    new names_of_month[12][10] = {"Ocak","Subat","Mart","Nisan","Mayis","Haziran","Temmuz","Agustos","Eylul","Ekim","Kasim","Aralik"};
    new returnstring[56];
    while(timestamp>31622400){
        timestamp -= 31536000;
        if(((year % 4 == 0) &&(year % 100 != 0)) ||(year % 400 == 0)) timestamp -= 86400;
        year++;
    }
    if(((year % 4 == 0) &&(year % 100 != 0)) ||(year % 400 == 0))
        days_of_month[1] = 29;
    else
        days_of_month[1] = 28;
    while(timestamp>86400){
        timestamp -= 86400, day++;
        if(day==days_of_month[month]) day=0, month++;
    }
    while(timestamp>60){
        timestamp -= 60, mins++;
        if(mins == 60) mins=0, hour++;
    }
    sec=timestamp;
    switch(_form){
        case 1: format(returnstring, 56, "%02d/%02d/%d %02d:%02d:%02d", day+1, month+1, year, hour+3, mins, sec);
        case 2: format(returnstring, 56, "%s %02d, %d, %02d:%02d:%02d", names_of_month[month],day+1,year, hour+3, mins, sec);
        case 3: format(returnstring, 56, "%d %c%c%c %d, %02d:%02d", day+1,names_of_month[month][0],names_of_month[month][1],names_of_month[month][2], year,hour+3,mins);

        default: format(returnstring, 56, "%02d/%02d/%d - %02d:%02d:%02d", day+1, month+1, year, hour+3, mins, sec);
    }
    return returnstring;
}

stock MySQLGuncelleInt(playerid,varible[],newvarible)
{
	if(PlayerInfo[playerid][Kayitli] != 0)
	{
		new Query[500];
		format(Query, sizeof(Query), "UPDATE `oyuncular` SET `%s` = '%d' WHERE `kullaniciadi` = '%s'",varible,newvarible,getName(playerid));
		mysql_query(mysqlC,Query);
	}
}

static const MonthTimes[12][4] =
{
        { 31, 31, 2678400, 2678400 },
        { 28, 29, 2419200, 2505600 },
        { 31, 31, 2678400, 2678400 },
        { 30, 30, 2592000, 2592000 },
        { 31, 31, 2678400, 2678400 },
        { 30, 30, 2592000, 2592000 },
        { 31, 31, 2678400, 2678400 },
        { 31, 31, 2678400, 2678400 },
        { 30, 30, 2592000, 2592000 },
        { 31, 31, 2678400, 2678400 },
        { 30, 30, 2592000, 2592000 },
        { 31, 31, 2678400, 2678400 }
};
stock TimestampToDate(Timestamp, &year, &month, &day, &hour, &minute, &second, HourGMT, MinuteGMT = 0)
{
        new tmp = 2;
        year = 1970;
        month = 1;
        Timestamp -= 172800; // Delete two days from the current timestamp. This is necessary, because the timestamp retrieved using gettime() includes two too many days.
        for(;;)
        {
                if(Timestamp >= 31536000)
                {
                        year ++;
                        Timestamp -= 31536000;
                        tmp ++;
                        if(tmp == 4)
                        {
                                if(Timestamp >= 31622400)
                                {
                                        tmp = 0;
                                        year ++;
                                        Timestamp -= 31622400;
                                }
                                else break;
                        }
                }
                else break;
        }
        for(new i = 0; i < 12; i ++)
        {
                if(Timestamp >= MonthTimes[i][2 + IsLeapYear(year)])
                {
                        month ++;
                        Timestamp -= MonthTimes[i][2 + IsLeapYear(year)];
                }
                else break;
        }
        day = 1 + (Timestamp / 86400);
        Timestamp %= 86400;
        hour = HourGMT + (Timestamp / 3600);
        Timestamp %= 3600;
        minute = MinuteGMT + (Timestamp / 60);
        second = (Timestamp % 60);
        if(minute > 59)
        {
                minute = 0;
                hour ++;
        }
        if(hour > 23)
        {
                hour -= 24;
                day ++;
        }
        if(day > MonthTimes[month-1][IsLeapYear(year)])
        {
                day = 1;
                month ++;
        }
        if(month > 12)
        {
                month = 1;
                year ++;
        }
        return true;
}
stock IsLeapYear(year)
{
	if(year % 4 == 0) return true;
	else return false;
}

stock Kullanim(playerid, mesaj[])
{
	new string[500];
	format(string, sizeof string, "{7BFF00}Kullaným » {FFFFFF}/%s", mesaj);
	SendClientMessage(playerid, -1, string);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 10.0);
	return true;
}

stock Hata(playerid, mesaj[])
{
	new string[500];
	format(string, sizeof string, "{FF4D00}Hata » {FFFFFF}%s", mesaj);
	SendClientMessage(playerid, -1, string);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 10.0);
	return true;
}

stock Bilgi(playerid, mesaj[])
{
	new string[500];
	format(string, sizeof string, "{D757FA}Bilgi » {FFFFFF}%s", mesaj);
	SendClientMessage(playerid, -1, string);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 10.0);
	return true;
}

stock code(nickname[]) {
  new tmp[MAX_STRING];
  set(tmp,nickname);
  tmp=strreplace("ð","g",tmp);
  tmp=strreplace("Ð","G",tmp);
  tmp=strreplace("þ","s",tmp);
  tmp=strreplace("Þ","S",tmp);
  tmp=strreplace("ý","i",tmp);
  tmp=strreplace("I","I",tmp);
  tmp=strreplace("Ý","I",tmp);
  tmp=strreplace("ö","o",tmp);
  tmp=strreplace("Ö","O",tmp);
  tmp=strreplace("ç","c",tmp);
  tmp=strreplace("Ç","C",tmp);
  tmp=strreplace("ü","u",tmp);
  tmp=strreplace("Ü","U",tmp);
  return tmp;
}

stock strreplace(trg[], newstr[], src[])
{
    new f = 0;
    new s1[256];
    new aqsa[256];
    format(s1, sizeof(s1), "%s", src);
    f = strfind(s1, trg);
    aqsa[0] = 0;
    while(f >= 0)
	{
        strcat(aqsa, ret_memcpy(s1, 0, f));
        strcat(aqsa, newstr);
        format(s1, sizeof(s1), "%s", ret_memcpy(s1, f + strlen(trg), strlen(s1) - f));
        f = strfind(s1, trg);
    }
    strcat(aqsa, s1);
    return aqsa;
}

stock strreplacenew( string[ ], const search[ ], const replacement[ ], bool:ignorecase = false, pos = 0, limit = -1, maxlength = sizeof( string ) )
{
    if( limit == 0 )
        return ( 0 );

    new sublen = strlen( search ), replen = strlen( replacement ), bool:packed = ispacked( string ),
    	maxlen = maxlength, len = strlen( string ), count = 0;

    if( packed )
    	maxlen *= 4;

    if( !sublen )
        return ( 0 );

    while( -1 != ( pos = strfind( string, search, ignorecase, pos ) ) )
	{
        strdel( string, pos, pos + sublen );

        len -= sublen;

        if( replen && len + replen < maxlen )
		{
            strins( string, replacement, pos, maxlength );

            pos += replen;
            len += replen;
        }

        if( limit != -1 && ++ count >= limit )
            break;
    }

    return count;
}

ret_memcpy(source[], index=0, numbytes)
{
	new rettmp[256];
	new i = 0;
	rettmp[0] = 0;
	if(index >= strlen(source)) return rettmp;
	if(numbytes + index >= strlen(source)) numbytes = strlen(source) - index;
	if(numbytes <= 0) return rettmp;
	for(i = index; i < numbytes + index; i++)
	{
		rettmp[i - index] = source[i];
		if(source[i] == 0) return rettmp;
	}
	rettmp[numbytes] = 0;
	return rettmp;
}

stock set(dest[], source[])
{
	new count = strlen(source);
	new i = 0;
	for(i = 0; i<count; i++)
	{
		dest[i] = source[i];
	}
	dest[count] = 0;
}

stock ColourMag(text[],mStart = -1,mEnd = 0)
{
	loop:
	mStart = strfind(text,"(",true,mStart +1);
	if(mStart != -1)
	{
		mEnd = strfind(text,")",true,mStart);
		if(mEnd != -1 && mEnd == mStart+7)
		{
			text[mStart] = '{';
			text[mEnd] = '}';
			goto loop;
		}
	}
	return true;
}

stock RenkMag(params[])
{
	new string[10000];
	format(string, sizeof(string), "%s", strreplace("(g)", "{33CC00}", params));
	format(string, sizeof(string), "%s", strreplace("(r)", "{FF0015}", string));
	format(string, sizeof(string), "%s", strreplace("(y)", "{FFFF00}", string));
	format(string, sizeof(string), "%s", strreplace("(b)", "{0066FF}", string));
	format(string, sizeof(string), "%s", strreplace("(w)", "{FFFFFF}", string));
	format(string, sizeof(string), "%s", strreplace("(k)", "{330000}", string));
	format(string, sizeof(string), "%s", strreplace("(t)", "{00FFFF}", string));
	format(string, sizeof(string), "%s", strreplace("(o)", "{FF8040}", string));
	return string;
}

stock ColorLoop(text[],mStart = -1,mEnd = 0)
{
	loop:
	mStart = strfind(text,"(",true,mStart +1);
	if(mStart != -1)
	{
		mEnd = strfind(text,")",true,mStart);
		if(mEnd != -1 && mEnd == mStart+7)
		{
			text[mStart] = '{';
			text[mEnd] = '}';
			#emit JUMP loop
		}
	}
	return true;
}

stock nickkontrol(params[])
{
	new Query[256];
	format(Query, sizeof(Query), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", params);
	mysql_query(mysqlC, Query);
	if(cache_num_rows() > 0)
	{
		return false;
	}
	return true;
}

stock GetPlayerN(playerid)
{
   new nomeJog[MAX_PLAYER_NAME];
   GetPlayerName(playerid, nomeJog, MAX_PLAYER_NAME);
   return nomeJog;
}

WaitReset(playerid)
{
    SetTimerEx("FuncPart2", 2000, 0, "i", playerid);
}

forward FuncPart2(playerid);
public FuncPart2(playerid)
{
    ccount[0][playerid] = 0; ccount[1][playerid] = 0; ccount[2][playerid] = 0; ccount[3][playerid] = 0;
    ResetPlayerWeapons(playerid);
        GivePlayerWeapon(playerid, 24, 7);
}

forward ini_tempos_topcbug(name[], value[]);
public ini_tempos_topcbug(name[], value[])
{
        INI_Float("1", tops[0]);
        INI_Float("2", tops[1]);
        INI_Float("3", tops[2]);
        INI_Float("4", tops[3]);
        INI_Float("5", tops[4]);
        return true;
}

forward ini_jogadores_topcbug(name[], value[]);
public ini_jogadores_topcbug(name[], value[])
{
        INI_String("j1", jogtops[0], MAX_PLAYER_NAME+1);
        INI_String("j2", jogtops[1], MAX_PLAYER_NAME+1);
        INI_String("j3", jogtops[2], MAX_PLAYER_NAME+1);
        INI_String("j4", jogtops[3], MAX_PLAYER_NAME+1);
        INI_String("j5", jogtops[4], MAX_PLAYER_NAME+1);
        return true;
}

forward JailPlayer(id);
public JailPlayer(id)
{
	new rand = random(sizeof(jailpos));
	SetPlayerTeam(id,26);
	SetPlayerPos(id, jailpos[rand][0], jailpos[rand][1], jailpos[rand][2] + 1);
	SetPlayerWorldBounds(id, jailpos[rand][0]+10, jailpos[rand][0]-10, jailpos[rand][1]+10, jailpos[rand][0]-10);
	SetPlayerInterior(id, 5); SetPlayerVirtualWorld(id, 26);
	ResetPlayerWeapons(id);
	SetCameraBehindPlayer(id);
	PlayerInfo[id][Jailed] = 1;
	TogglePlayerControllable(id, false);
	SetTimerEx("CozBeni",1000,false,"d",id);
}

forward JailRelease(id);
public JailRelease(id)
{
	if(JailTimer[id] !=-1)KillTimer(JailTimer[id]);JailTimer[id] = -1;
	PlayerInfo[id][JailTime] = 0;  PlayerInfo[id][Jailed] = 0;
	SetPlayerWorldBounds(id,20000.0000,-20000.0000,20000.0000,-20000.0000);
	OnPlayerSpawn(id);SetPlayerTeam(id,NO_TEAM);
	SetPlayerVirtualWorld(id,0); SetPlayerInterior(id,0);
	PlayerPlaySound(id,1057,0.0,0.0,0.0);
	SCM(id,-1,""safaf"Hapisten çýkarýldýnýz.");
}

stock TimeConverter(time)
{
	new Float:var = floatdiv(time, 60000);
	new as = floatround(var, floatround_tozero);
	new ass = floatround(floatmul(var - as, 60), floatround_tozero);
	new a[128];
	if(as == 0){
	format(a,128,"{FF0000}%d{FFFFFF} saniye",ass);
	}else if(ass == 0){
	format(a,128,"{FF0000}%d{FFFFFF} dakika",as);
	}else{
	format(a,128,"{FF0000}%d{FFFFFF} dakika {FF0000}%d{FFFFFF} saniye",as,ass);
	}
	return a;
}

stock TimeConverter2(time)
{
	new Float:vara = floatdiv(time, 3600000);
	new asa = floatround(vara, floatround_tozero);
	new assa = floatround(floatmul(vara - asa, 60), floatround_tozero);
	new asssa = floatround(floatmul(asa - assa, 60), floatround_tozero);
	new aa[128];
	format(aa,128,"{FF0000}%d {FFFFFF}saat {FF0000}%d {FFFFFF}dakika {FF0000}%d {FFFFFF}saniye",asa,assa,asssa);
	return aa;
}

stock lightdelete(playerid)
{
    if(EklenenLight[playerid]!=0)
	{
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0), EklenenLight[playerid]=0; //Sound
		DestroyDynamicObject(GetPVarInt(playerid, "neon1")), DeletePVar(playerid, "Konum"), DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
	}
	return true;
}

stock fardelete(playerid)
{
	if(EklenenFar[playerid]!=0)
	{
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0), EklenenFar[playerid]=0; //Sound
		DestroyDynamicObject(GetPVarInt(playerid, "far1")), DeletePVar(playerid, "Konumf"), DestroyDynamicObject(GetPVarInt(playerid, "far2"));
	}
	return true;
}

forward GodCarFix(playerid);
public GodCarFix(playerid)
{
	for(new v=0;v<MAX_VEHICLES;v++)
	{
		if(IsGodCar[v] == 1)
		{
			SetVehicleHealth(v, 1000000.0);
			RepairVehicle(v);
		}
	}
	return true;
}

forward EtkSave(adminid,etk[]);
public EtkSave(adminid,etk[])
{
    new query[256],AdminIP[20],hour,minute,second,year,month,day;
	GetPlayerIp(adminid,AdminIP,20);
	gettime(hour, minute, second); getdate(year, month, day);
	format(query, sizeof(query), "INSERT INTO `etklog`(animator, etkinlik, tarih, saat) VALUES(\"%s\", \"%s\", \"%d:%d:%d\", \"%d.%d.%d\")",getName(adminid), code(etk), hour, minute, second, day, month, year);
	mysql_query(mysqlC,query);
}

stock fmesaj()
{
	new String2[500];
	format(String2, sizeof(String2), "~y~%s~n~~w~~h~~h~/etkgit", code(etkismim));
	GameTextForAll(String2, 15000, 1);
	SetTimer("fmesaj222", 15000, false);
	return true;
}

CB: fmesaj222()
{
	new String2[500];
	format(String2, sizeof(String2), "~y~%s~n~~w~~h~~h~/etkgit", code(etkismim));
	GameTextForAll(String2, 15000, 1);
	return true;
}

stock IsInvalidSkin(skinid)
{
	if(skinid < 312 && skinid > 0) return true;
	return false;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:FX,Float:FY,Float:FZ;
	    GetPlayerPos(playerid,PX,PY,PZ);GetVehiclePos(vehicleid, FX,FY,FZ);
	    new Float:Distance =(FX-PX)*(FX-PX)+(FY-PY)*(FY-PY)+(FZ-PZ)*(FZ-PZ);
	    if(Distance <= radi*radi){return true;}
	} return false;
}

forward UnFreezeMe(player1);
public UnFreezeMe(player1)
{
	if(FreezeTimer[player1]!=-1)KillTimer(FreezeTimer[player1]);FreezeTimer[player1]=-1;
	TogglePlayerControllable(player1,true);
	PlayerPlaySound(player1,1057,0.0,0.0,0.0);	GameTextForPlayer(player1,"~g~Cozuldun!",3000,3);
}

forward PutAtPos(playerid);
public PutAtPos(playerid)
{
	if(PlayerInfo[playerid][pinfox] !=0)
	{
		new PlayerState = GetPlayerState(playerid);
		new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
		if(IsPlayerInAnyVehicle(playerid) && PlayerState == PLAYER_STATE_DRIVER)
		{
	   		SetVehiclePos(vehicleid, PlayerInfo[playerid][pinfox], PlayerInfo[playerid][pinfoy], PlayerInfo[playerid][pinfoz]);
	   		SetPlayerInterior(playerid,PlayerInfo[playerid][pinfointerior]);
			SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pinfoworld]);
		}
		else
		{
	 		SetPlayerPos(playerid, PlayerInfo[playerid][pinfox], PlayerInfo[playerid][pinfoy], PlayerInfo[playerid][pinfoz]);
	 		SetPlayerInterior(playerid,PlayerInfo[playerid][pinfointerior]);
	 		SetPlayerVirtualWorld(playerid,PlayerInfo[playerid][pinfoworld]);
		}
	}
}

stock SBanlariGoster(playerid)
{
	new sql[500];
	format(sql, sizeof(sql), "SELECT * FROM `sbanlog`");
	mysql_query(mysqlC, sql);
	
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	
	if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Unban - Sban", ""ww"SBanlý kimse bulunamadý.", ""ww"Tamam", "");

	new oyuncuname[25], ipadress[16], bigstr[10000], tmes[32], varname[32], serial[256];
	format(bigstr, sizeof(bigstr), ""ww"Oyuncu Ýsmi\t"ww"Serial\n");
	for(new i; i < rows; i++)
	{
		format(varname, 25, "SBanOpName_%d", i);
		cache_get_value_index(i, 1, oyuncuname);
		SetPVarString(playerid, varname, oyuncuname);
		cache_get_value_index(i, 1, tmes);
		format(varname, 25, "SBanOpIP_%d", i);
		cache_get_value_index(i, 2, ipadress);
		cache_get_value_index(i, 0, serial);
		SetPVarString(playerid, varname, ipadress);
		format(bigstr, sizeof(bigstr), "%s"ww"%d. %s\t%s\n", bigstr, (i + 1), oyuncuname, serial);
	}
	ShowPlayerDialog(playerid, OpenSBan, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Unban - Sban",bigstr, ""ww"Baný Aç", ""ww"Geri");
	return true;
}

stock NBanlariGoster(playerid)
{
	new sql[512];
	format(sql, sizeof(sql), "SELECT * FROM `nbanlog` LIMIT 15");
	mysql_query(mysqlC, sql);

	NBANLAR[playerid] = 15;

	cache_get_row_count(rows);
	cache_get_field_count(fields);

	if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Unban - Nban",""ww"NBanlý kimse bulunamadý.", ""ww"Tamam", "");

	new oyuncuname[25], ipadress[16], bigstr[10000], varname[32], atilan, kalan[256], editstr[1000];
	format(bigstr, sizeof(bigstr), ""ww"Oyuncu Ýsmi\t"ww"Kalan Süre\n");
	for(new i; i < rows; i++)
	{
		format(varname, 25, "NBanOpName_%d", i);
		cache_get_value_name(i, "oyuncu", oyuncuname);
		SetPVarString(playerid, varname, oyuncuname);
		format(varname, 25, "NBanOpIP_%d", i);
		cache_get_value_name(i, "ip", ipadress);
		SetPVarString(playerid, varname, ipadress);
		cache_get_value_name_int(i, "sure", atilan);
		if(atilan < gettime())
		{
		    format(kalan, sizeof(kalan), "Sona ermiþ");
		}
		else
		{
		    format(kalan, sizeof(kalan), "%s", ConvertTime(atilan - gettime()));
		}
		format(editstr, sizeof(editstr), ""ww"%d. %s\t%s\n", (i + 1), oyuncuname, kalan);
		strcat(bigstr, editstr);
	}

	mysql_query(mysqlC, "SELECT * FROM `nbanlog`");
	if(cache_num_rows() > NBANLAR[playerid])
	    strcat(bigstr, ""ad"» "wb"Sonraki Sayfa "ad"«");

	ShowPlayerDialog(playerid, OpenNBan, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Unban - Nban",bigstr, ""ww"Baný Aç", ""ww"Geri");
	return true;
}

function CheckNBanList(playerid)
{
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Unban - Nban",""ww"NBanlý kimse bulunamadý.", ""ww"Tamam", "");
	new oyuncuname[25], ipadress[16], bigstr[10000], tmes[32], varname[32], atilan, kalan[256];
	format(bigstr, sizeof(bigstr), ""ww"Oyuncu Ýsmi\t"ww"Kalan Süre\n");
	for(new i; i < rows; i++)
	{
		format(varname, 25, "NBanOpName_%d", i);
		cache_get_value_index(i, 0, oyuncuname);
		SetPVarString(playerid, varname, oyuncuname);
		cache_get_value_index(i, 1, tmes);
		format(varname, 25, "NBanOpIP_%d", i);
		cache_get_value_index(i, 2, ipadress);
		SetPVarString(playerid, varname, ipadress);
		cache_get_value_index_int(i, 5, atilan);
		if(atilan < gettime())
		{
		    format(kalan, sizeof(kalan), "Sona ermiþ");
		}
		else
		{
		    format(kalan, sizeof(kalan), "%s", ConvertTime(atilan - gettime()));
		}
		format(bigstr, sizeof(bigstr), "%s"ww"%d. %s\t%s\n", bigstr, (i + 1), oyuncuname, kalan);
	}
	ShowPlayerDialog(playerid, OpenNBan, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Unban - Nban",bigstr, ""ww"Baný Aç", ""ww"Geri");
	return true;
}

function CheckIpBanList(playerid)
{
	cache_get_row_count(rows);
	cache_get_field_count(fields);
	if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Unban - IP",""ww"Ip banlý kimse bulunamadý.", ""ww"Tamam", "");
	new oyuncuname[25], ipadress[16], bigstr[10000], tmes[32], sebep[256], admin[30];
	format(bigstr, sizeof(bigstr), ""ww"Oyuncu Ýsmi\t"ww"Banlayan\t"ww"Sebep\n");
	for(new i; i < rows; i++)
	{
		format(oyuncuname, 25, "IpBlockOp_%d", i);
		cache_get_value_index(i, 0, ipadress);
		SetPVarString(playerid, oyuncuname, ipadress);
		cache_get_value_index(i, 1, oyuncuname);
		cache_get_value_index(i, 2, tmes);
		cache_get_value_index(i, 4, sebep);
		cache_get_value_index(i, 5, admin);
		format(bigstr, sizeof(bigstr), "%s"ww"%d. %s\t%s\t%s\t%s\n", bigstr, (i + 1), oyuncuname, admin, sebep);
	}
	ShowPlayerDialog(playerid, OpenIpBlock, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Unban - IP", bigstr, ""ww"Baný Aç", ""ww"Geri");
	return true;
}

stock BanlariGoster(playerid)
{
	new sql[500];
	format(sql, sizeof(sql), "SELECT * FROM `banlog` WHERE `aktif` = '1' LIMIT 15");
	mysql_query(mysqlC, sql);

	IPBANLAR[playerid] = 15;

	cache_get_row_count(rows);
	cache_get_field_count(fields);
	if(!rows) return ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Unban - IP",""ww"Ip banlý kimse bulunamadý.", ""ww"Tamam", "");
	new oyuncuname[25], ipadress[16], bigstr[10000], sebep[256], admin[30], editstr[10000];
	strcat(bigstr, ""ww"Oyuncu Ýsmi\t"ww"Banlayan\t"ww"Sebep\n");

	for(new i; i < rows; i++)
	{
		format(oyuncuname, 25, "IpBlockOp_%d", i);
		cache_get_value_name(i, "ip", ipadress);
		SetPVarString(playerid, oyuncuname, ipadress);
		cache_get_value_name(i, "player", oyuncuname);
		cache_get_value_name(i, "sebep", sebep);
		cache_get_value_name(i, "admin", admin);
		format(editstr, sizeof(editstr), ""ww"%s\t%s\t%s\n", oyuncuname, admin, sebep);
		strcat(bigstr, editstr);
	}

	mysql_query(mysqlC, "SELECT * FROM `banlog`");
	if(cache_num_rows() > IPBANLAR[playerid])
	    strcat(bigstr, ""ad"» "wb"Sonraki Sayfa "ad"«");

	ShowPlayerDialog(playerid, OpenIpBlock, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Unban - IP", bigstr, ""ww"Baný Aç", ""ww"Geri");
	return true;
}

stock _Ban(playerid)
{
	new str[256];
	format(str,256,"INSERT INTO `banlog`(`ip`,`player`) VALUES('%s','%s')",getIp(playerid), getName(playerid));
	mysql_query(mysqlC,str);
	BlockIpAddress(getIp(playerid), 10800000);
	Kick(playerid);
	return true;
}

stock LoadUniqueVehicles()
{
	Rhino = AddStaticVehicle(432,276.5407,2028.1284,17.6491,229.2204,43,0);
	uniqueVehicle_0[Rhino] = Create3DTextLabel("{FFFFFF}« {FF0000}Unique Rhino {FFFFFF}»", -1, 0.0, 0.0, 0.0, 50.0, 0, 1);
	Attach3DTextLabelToVehicle(uniqueVehicle_0[Rhino], Rhino, 0.0, 0.0, 2.0);
	
	Hunter = AddStaticVehicle(425,217.7926,2024.2831,18.2110,296.7607,43,0);
	uniqueVehicle_1[Hunter] = Create3DTextLabel("{FFFFFF}« {FF0000}Unique Hunter{FFFFFF}»", -1, 0.0, 0.0, 0.0, 50.0, 0, 1);
	Attach3DTextLabelToVehicle(uniqueVehicle_1[Hunter], Hunter, 0.0, 0.0, 2.0);
	
	Hydra = AddStaticVehicle(520,325.5061,1855.2025,18.5753,26.3893,0,0);
	uniqueVehicle_2[Hydra] = Create3DTextLabel("{FFFFFF}« {FF0000}Unique Hydra {FFFFFF}»", -1, 0.0, 0.0, 0.0, 50.0, 0, 1);
	Attach3DTextLabelToVehicle(uniqueVehicle_2[Hydra], Hydra, 0.0, 0.0, 2.0);
	
	UFO = AddStaticVehicle(520, 275.7478, 2058.0833, 17.6406, 0, 1, 1);
	LinkVehicleToInterior(UFO, 31);
	UFO_Obje = CreateObject(18846, 275.7478, 2058.0833, 17.6406, 0, 0, 0, 0);
	UFO_Label = Create3DTextLabel("{FFFFFF}« {FF0000}Unique UFO {FFFFFF}»", -1, 0.0, 0.0, 0.0, 50.0, 0, 1);
	AttachObjectToVehicle(UFO_Obje, UFO, 0, 0, 0.3, 0, 0, 92);
	Attach3DTextLabelToVehicle(UFO_Label, UFO, 0.0, 0.0, 3.0);
	return true;
}

stock ObjeYenile(playerid)
{
	RemovePlayerAttachedObject(playerid, 3);
	SetPlayerAttachedObject(playerid, 3, objeid[playerid], kemik[playerid], fOffsetX[playerid], fOffsetY[playerid], fOffsetZ[playerid], fRotX[playerid], fRotY[playerid], fRotZ[playerid]);
	return true;
}

stock AracObjeYenile(playerid)
{
	DestroyObject(aobje[playerid]);
	aobje[playerid] = CreateObject(aobjeid[playerid], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 250.0);
	AttachObjectToVehicle(aobje[playerid], GetPlayerVehicleID(playerid), afOffsetX[playerid], afOffsetY[playerid], afOffsetZ[playerid], afRotX[playerid], afRotY[playerid], afRotZ[playerid]);
	return true;
}

stock MySQLGuncelleStr(playerid, varible[], newvarible[])
{
	if(PlayerInfo[playerid][Kayitli] != 0)
	{
		new Query[500];
		format(Query, sizeof(Query), "UPDATE `oyuncular` SET `%s` = '%s' WHERE `kullaniciadi` = '%s'", varible, newvarible, getName(playerid));
		mysql_query(mysqlC, Query);
	}
}

CMD:etkolustur(playerid, params[])
{
	new etkinlikadi[56], String[512];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid, 1);
    if(sscanf(params, "ds[56]", ldurum, etkinlikadi)) return Kullanim(playerid, "etkolustur [1-2] [ETKÝNLÝK ADI]");
    if(ldurum < 1 || ldurum > 2) return Hata(playerid, "Deðeri 1 ya da 2 olarak girebilirsiniz!");
    if(lBasladi == 1) return Hata(playerid, "Þu an bir etkinlik zaten var.");

    format(etkismim, sizeof(etkismim), "%s", etkinlikadi);

    lBasladi = 1;
    ETKAktif = true;
	GetPlayerPos(playerid, gX, gY, gZ);
	GetPlayerFacingAngle(playerid, gC);
	lkackisi = 0;
    fmesaj();
    SetPlayerVirtualWorld(playerid, 35);
    SetTimer("fbitir", 30000, false);
    fbitiryapan = playerid;
    etkyaptim[playerid] = 1;

	PlayerInfo[playerid][GunlukEtk]++;

    format(String, sizeof(String), "~r~~h~[ETK] ~w~~h~~h~%s(%i) adli yonetici, ~r~~h~%s ~w~~h~~h~adli etkinligi olusturdu! ~r~~h~(/etkgit)", code(getName(playerid)), playerid, code(etkinlikadi));
	TextMesaji(code(String));

    format(String, sizeof(String), ""safaf"%s adlý etkinliði oluþturdunuz, 30 saniye sonra etkinliðe katýlým sona erecektir.", etkinlikadi);
    SendClientMessage(playerid, -1, String);
	
    format(estring, sizeof(estring), "INSERT INTO `etklog`(`animator`,`etk`,`zaman`) VALUES('%s','%s','%s')",getName(playerid),code(etkinlikadi),TarihCek());
	mysql_query(mysqlC, estring);

	format(estring, sizeof(estring), "~y~/etkgit ~b~~h~%s", etkinlikadi);
	//cmd_ann5(playerid, estring);
	PlayerInfo[playerid][EtkSayisi]++;
	//SetTimerEx("ann5degistir", 4700, false, "d", playerid);
	SavePlayer(playerid);
	return true;
}

CMD:katilimsizetkolustur(playerid, params[])
{
	new etkinlikadi[56];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "s[56]", etkinlikadi)) return Kullanim(playerid, "katilimsizetkolustur [Etkinlik Adý]");
    ETKAktif = true;
	GetPlayerPos(playerid,gX,gY,gZ);
	GetPlayerFacingAngle(playerid,gC);
    SetPlayerVirtualWorld(playerid, 35);
    etkyaptim[playerid] = 1;

	PlayerInfo[playerid][GunlukEtk]++;

    format(estring, sizeof(estring), ""safaf"%s adlý "ad"'KATILMSIZ' "w"etkinliði oluþturdunuz.", etkinlikadi);
    SendClientMessage(playerid, -1, estring);

    format(estring, sizeof(estring), "INSERT INTO `etklog`(`animator`,`etk`,`zaman`) VALUES('%s','%s','%s')",getName(playerid),code(etkinlikadi),TarihCek());
	mysql_query(mysqlC, estring);

	format(etkismim, sizeof(etkismim), "%s", etkinlikadi);
	PlayerInfo[playerid][EtkSayisi]++;
	return true;
}

forward ann5degistir(playerid);
public ann5degistir(playerid)
{
	format(estring, sizeof(estring), "~y~/etkgit ~g~~h~%s", etkismim);
	cmd_ann5(playerid, estring);
	SetTimerEx("ann5degistir2", 4700, false, "d", playerid);
	return true;
}

forward ann5degistir2(playerid);
public ann5degistir2(playerid)
{
	format(estring, sizeof(estring), "~y~/etkgit ~p~~h~%s", etkismim);
	cmd_ann5(playerid, estring);
	SetTimerEx("ann5degistir3", 4700, false, "d", playerid);
	return true;
}

forward ann5degistir3(playerid);
public ann5degistir3(playerid)
{
	format(estring, sizeof(estring), "~y~/etkgit ~y~~h~%s", etkismim);
	cmd_ann5(playerid, estring);
	SetTimerEx("ann5degistir4", 4700, false, "d", playerid);
	return true;
}

forward ann5degistir4(playerid);
public ann5degistir4(playerid)
{
	format(estring, sizeof(estring), "~y~/etkgit ~r~~h~%s", etkismim);
	cmd_ann5(playerid, estring);
	SetTimerEx("ann5degistir5", 4700, false, "d", playerid);
	return true;
}

forward ann5degistir5(playerid);
public ann5degistir5(playerid)
{
	format(estring, sizeof(estring), "~y~/etkgit ~w~~h~~h~%s", etkismim);
	cmd_ann5(playerid, estring);
	return true;
}

CMD:ecevir(playerid, params[])
{
	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
    GetPlayerFacingAngle(playerid,lC);
    SendClientMessage(playerid,-1,""safaf"Oyuncularý sýraladýnýz.");
    foreach(new i : Player)
    {
	    if(playerid != i)
	    {
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
		    {
		    	SetPlayerFacingAngle(i,lC);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý baktýðý yöne doðru çevirdi.", getName(playerid), playerid);
		    	SendClientMessage(i,-1, String);
		    }
	    }
    }
    return true;
}

CMD:ecevirarac(playerid, params[])
{
    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid,lX,lY,lZ);
	GetPlayerFacingAngle(playerid,lC);
	SendClientMessage(playerid,-1,""safaf"Oyuncularýn araçlarýný sýraladýnýz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				SetVehicleZAngle(GetPlayerVehicleID(i),lC);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçlarýný sýraladý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eduzeltarac(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	SendClientMessage(playerid,-1,""safaf"Oyuncularýn araçlarýný sýraladýnýz.");
	GetPlayerPos(playerid, lX, lY, lZ);
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				GetVehicleZAngle(GetPlayerVehicleID(i),zC);
				SetVehicleZAngle(GetPlayerVehicleID(i),zC);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçlarýný sýraladý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:etamirarac(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	SendClientMessage(playerid,-1,""safaf"Oyuncularýn araçlarýný tamir ettiniz.");
	GetPlayerPos(playerid, lX, lY, lZ);
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				SetVehicleHealth(GetPlayerVehicleID(i),1000);
				RepairVehicle(GetPlayerVehicleID(i));
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçlarýný tamir etti.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:esirala(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    SendClientMessage(playerid, -1, ""safaf"/esiralaon - /esiralaarka - /esiralaetraf - /esiralaarac - /esiralaaracici");
    return true;
}

CMD:esiralaetraf(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new mik, String[128];
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "d", mik)) return Kullanim(playerid,"esiralaetraf(1-5)");
    if(mik < 1 || mik > 5) return Hata(playerid, "Deðeri 1 ve 5 arasý olarak girmelisiniz!");
	GetPlayerPos(playerid,lX,lY,lZ);
	GetPlayerFacingAngle(playerid,lC);
	SendClientMessage(playerid,-1,""safaf"Oyuncularý sýraladýnýz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				SetPlayerFacingAngle(i,lC-180);
				if(mik==1)
				{
					if(i>=1){ SetPlayerPos(i,lX +((2.0) * floatsin(-lC, degrees)),lY +((2.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=30;}
					if(i>=13){ SetPlayerPos(i,lX +((3.0) * floatsin(-lC, degrees)),lY +((3.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=40;}
				}
				if(mik==2)
				{
					if(i>=1){ SetPlayerPos(i,lX +((3.0) * floatsin(-lC, degrees)),lY +((3.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=30;}
					if(i>=13){ SetPlayerPos(i,lX +((4.0) * floatsin(-lC, degrees)),lY +((4.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=40;}
				}
				if(mik==3)
				{
					if(i>=1){ SetPlayerPos(i,lX +((4.0) * floatsin(-lC, degrees)),lY +((4.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=35;}
					if(i>10){ SetPlayerPos(i,lX +((6.0) * floatsin(-lC, degrees)),lY +((6.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=30;}
				}
				if(mik==4)
				{
					if(i>=1){ SetPlayerPos(i,lX +((5.0) * floatsin(-lC, degrees)),lY +((5.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=35;}
					if(i>10){ SetPlayerPos(i,lX +((9.0) * floatsin(-lC, degrees)),lY +((9.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=30;}
			    }
				if(mik==5)
				{
					if(i>=1){ SetPlayerPos(i,lX +((6.0) * floatsin(-lC, degrees)),lY +((6.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=40;}
					if(i>=10){ SetPlayerPos(i,lX +((11.0) * floatsin(-lC, degrees)),lY +((11.0) * floatcos(-lC, degrees)),lZ); TogglePlayerControllable(i,false); lC+=35;}
				}
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý sýraladý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:esiralaaracici(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
    new n = 1, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
	GetPlayerFacingAngle(playerid,lC);
	SendClientMessage(playerid,-1,""safaf"Oyuncularýn araçlarýný sýraladýnýz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
			    if(IsPlayerInAnyVehicle(i))
				{
				    SetVehiclePos(GetPlayerVehicleID(i),lX +((3.0+n) * floatsin(-lC, degrees)),lY +((3.0+n) * floatcos(-lC, degrees)),lZ);
					TogglePlayerControllable(i,false);
					SetVehicleZAngle(GetPlayerVehicleID(i),lC+90);
					n+=2;
					format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçlarýný sýraladý.",getName(playerid), playerid);
					SendClientMessage(i,-1, String);
				}
			}
		}
	}
	return true;
}

CMD:esiralaarac(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
    new n = 1, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid,lX,lY,lZ);
	GetPlayerFacingAngle(playerid,lC);
	SendClientMessage(playerid,-1,""safaf"Oyuncularýn araçlarýný sýraladýnýz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				SetPlayerFacingAngle(i,lC);
				SetPlayerPos(i,lX +((1.0+n) * floatsin(-lC, degrees)),lY +((1.0+n) * floatcos(-lC, degrees)),lZ);
				TogglePlayerControllable(i,false);
				n+=3;
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçlarýný sýraladý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:esiralaon(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
    new n = 1, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid,lX,lY,lZ);
	GetPlayerFacingAngle(playerid,lC);
	SendClientMessage(playerid,-1,""safaf"Oyuncularý sýraladýnýz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				SetPlayerFacingAngle(i,lC);
				SetPlayerPos(i,lX +((1.0+n) * floatsin(-lC, degrees)),lY +((1.0+n) * floatcos(-lC, degrees)),lZ);
				TogglePlayerControllable(i,false);
				n++;
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý sýraladý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:esiralaarka(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
    new n = 1, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
	GetPlayerFacingAngle(playerid,lC);
	SendClientMessage(playerid,-1,""safaf"Oyuncularý sýraladýnýz.");
    foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				SetPlayerFacingAngle(i,lC);
				SetPlayerPos(i,lX -((1.0+n) * floatsin(-lC, degrees)),lY -((1.0+n) * floatcos(-lC, degrees)),lZ);
				TogglePlayerControllable(i,false);
				n++;
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý sýraladý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:ecek(playerid, params[])
{
    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new id, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "d", id)) return Kullanim(playerid,"ecek [Oyuncu ID]");
    if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(id != playerid)
	{
		GetPlayerPos(playerid, lX, lY, lZ);
		GetPlayerFacingAngle(playerid, lC);
		SetPlayerFacingAngle(id, lC - 180);
		SetPlayerInterior(id, GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(id, GetPlayerVirtualWorld(playerid));
		ResetPlayerWeapons(id);
		SetPlayerPos(id, lX +((1.0) * floatsin(-lC, degrees)), lY + ((1.0) * floatcos(-lC, degrees)), lZ);
		TogglePlayerControllable(id, 0);
	}
	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, sizi yanýna çekti.",getName(playerid), playerid);
	SendClientMessage(id, -1, String);
	format(String,sizeof(String),""safaf"%s(%i) adlý oyuncuyu yanýnýza çektiniz.",getName(id), id);
	SendClientMessage(playerid, -1, String);
	return true;
}

CMD:eodul(playerid, params[])
{

	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new id, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "d", id)) return Kullanim(playerid,"eodul [Oyuncu ID]");
    if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu bulunamadý.");
    if(playerid == id) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	if(playerid != id)
	{
		GivePlayerMoney(id, 15000);
		SetPlayerScore(id, GetPlayerScore(id) + 10);
		lEtkinlikte[id] = 0;
		lKatildim[id] = 0;
		etkLocali[id] = 0;
		new carid;
		carid = GetPlayerVehicleID(id);
		IsGodCar[carid] = 0;
		TogglePlayerControllable(id, true);
		SetPlayerVirtualWorld(id, 0);
		PlayerInfo[playerid][GLKredi] += 5;
		OnPlayerSpawn(id);
	}
	new MMM[1024];
	if(PlayerInfo[playerid][dLevel] >= 1)
	{
        format(MMM, sizeof(MMM),"{%06x}Oyun Görevlisi %s Say: {00bf00}Etkinliðimizi {ffffff}%s(%i) {00bf00}kazanmýþtýr, tebrik ederim.",GetPlayerColor(playerid)>>>8,getName(playerid),getName(id),id);
	    SendClientMessageToAll(-1, MMM);
	}
	format(String,sizeof(String),"~r~~h~[ETK] ~w~~h~~h~%s(%i) adli oyuncu etkinligi kazandi! ~r~~h~(10 Skor + $15.000 + 5 GLKredi)",getName(id), id);
	TextMesaji(code(String));
	format(String,sizeof(String),""safaf"Etkinliði kazandýnýz ve hesabýnýza $15000, 10 skor ve 5 GLKredi eklendi.");
	SendClientMessage(id, -1, String);
	ETKAktif = false;
	return true;
}

CMD:ebitir(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid, lX, lY, lZ);
	foreach(new i: Player)
	{
	    if(lEtkinlikte[i] == 1 || lKatildim[i] == 1 || IsPlayerInRangeOfPoint(i, 50, lX, lY, lZ) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
	    {
	        SFM(i, -1, ""safaf"Yetkili "wb"%s(%i) "w"etkinliði bitirdi.", getName(playerid), playerid);
	        if(i == playerid) continue; OnPlayerSpawn(i);
	    }
	}
	ETKAktif = false;
	OnPlayerSpawn(playerid);
	new yetkistr[256];
	switch(PlayerInfo[playerid][dLevel])
	{
	    case 1..10: format(yetkistr, sizeof(yetkistr), "OG");
	}
	format(estring, sizeof(estring), "~r~~h~[ETK] ~w~~h~~h~%s ~r~~h~%s(%d) ~w~~h~~h~etkinligi bitirdi.", yetkistr, getName(playerid), playerid);
	TextMesaji(code(estring));
	SCM(playerid, -1, ""safaf"Etkinliði baþarýyla bitirdiniz.");
	return true;
}

CMD:egodcar(playerid, params[])
{
	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid, lX, lY, lZ);
	if(GetPVarInt(playerid, "egodcar") == 0)
	{
	    SetPVarInt(playerid, "egodcar", 1);
	    SCM(playerid, -1, ""safaf"Yanýnýzdaki oyuncularýn araçlarýný god yaptýnýz.");
	    foreach(new i: Player)
	    {
	        if(IsPlayerInRangeOfPoint(i, 50, lX, lY, lZ))
	        {
	            SetVehicleHealth(GetPlayerVehicleID(i), 9999.0);
	            PlayerInfo[i][GodCar] = 1;
	            SFM(i, -1, ""safaf"Yetkili "wb"%s(%d) "w"yanýndaki oyuncularýn araçlarýný god yaptý.", getName(playerid), playerid);
	        }
	    }
	}
	else if(GetPVarInt(playerid, "egodcar") == 1)
	{
	    SetPVarInt(playerid, "egodcar", 0);
	    SCM(playerid, -1, ""safaf"Yanýnýzdaki oyuncularýn araçlarýnýn godunu kaldýrdýnýz.");
	    foreach(new i: Player)
	    {
	        if(IsPlayerInRangeOfPoint(i, 50, lX, lY, lZ))
	        {
	            SetVehicleHealth(GetPlayerVehicleID(i), 1000);
	            PlayerInfo[i][GodCar] = 0;
	            SFM(i, -1, ""safaf"Yetkili "wb"%s(%d) "w"yanýndaki oyuncularýn araçlarýnýn godunu kaldýrdý.", getName(playerid), playerid);
	        }
	    }
	}
	return true;
}

CMD:eann(playerid, params[])
{

	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new yazi[250], string[500];
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	if(sscanf(params, "s[250]", yazi)) return Kullanim(playerid, "eann [YAZI]");
	format(string, sizeof(string), "~w~~h~~h~%s", code(yazi));
	printf("» ETK ANN KULLANAN : %s(%d):%s", getName(playerid), playerid, yazi);
	GameTextForPlayer(playerid, string, 4000, 3);
	SCM(playerid, -1, ""safaf"Etkinlik duyurusu yaptýnýz.");
	GetPlayerPos(playerid, lX, lY, lZ);
	foreach(new i: Player)
	{
	    if(IsPlayerInRangeOfPoint(i, 50, lX, lY, lZ))
	    {
	        GameTextForPlayer(i, string, 4000, 3);
	        SFM(i, -1, ""safaf"Yetkili "wb"%s(%d) "w"etkinlik duyurusu yaptý.", getName(playerid), playerid);
	    }
	}
	return true;
}

CMD:earacrenk(playerid, params[])
{
	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new renk1, renk2;
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	if(sscanf(params, "ii", renk1, renk2)) return Kullanim(playerid, "earacrenk [RENK 1] [RENK 2]");
	SFM(playerid, -1, ""safaf"Yanýnýzdaki oyuncularýn araç rengini "wb"%d "w"yaptýnýz.", renk1);
	GetPlayerPos(playerid, lX, lY, lZ);
	foreach(new i: Player)
	{
	    if(IsPlayerInRangeOfPoint(i, 50, lX, lY, lZ))
	    {
	        ChangeVehicleColor(GetPlayerVehicleID(i), renk1, renk2);
	        SFM(i, -1, ""safaf"Yetkili "wb"%s(%d) "w"yanýndaki oyuncularýn araç rengini "wb"%d "w"yaptý.", getName(playerid), playerid, renk1);
	    }
	}
	return true;
}

CMD:eacek(playerid, params[])
{
	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new id, Float: x, Float: y, Float: z;
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	if(sscanf(params, "u", id)) return Kullanim(playerid, "eacek [OYUNCU ÝSÝM / ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(!IsPlayerInAnyVehicle(id)) return Hata(playerid, "Oyuncu bir araçta deðil.");
	GetPlayerPos(playerid, x, y, z);
	SetPlayerPV(id, x, y, z);
	SetPlayerInterior(id, GetPlayerInterior(playerid));
	SetPlayerVirtualWorld(id, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(GetPlayerVehicleID(id), GetPlayerInterior(playerid));
	lEtkinlikte[id] = 1;
	lKatildim[id] = 1;
	SFM(playerid, -1, ""safaf"Oyuncu "wb"%s(%d) "w"aracýyla birlikte etkinliðe çekildi.", getName(id), id);
	return true;
}

CMD:emotorengeli(playerid, params[])
{

	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid, lX, lY, lZ);
	if(GetPVarInt(playerid, "motorengeliactim") == 0)
	{
	    SendClientMessage(playerid,-1,""safaf"Oyuncularýn motordan inmesini engellediniz.");
	    SetPVarInt(playerid, "motorengeliactim", 1);
		foreach(new i : Player)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
			    if(i == playerid) continue;
			    SetPVarInt(i, "motorengeli", 1);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn motordan inmesini engelledi.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	else if(GetPVarInt(playerid, "motorengeliactim") == 1)
	{
	    SendClientMessage(playerid,-1,""safaf"Oyuncularýn motordan inmesini açtýnýz.");
	    SetPVarInt(playerid, "motorengeliactim", 0);
		foreach(new i : Player)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
			    if(i == playerid) continue;
			    SetPVarInt(i, "motorengeli", 0);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn motordan inmesini açtý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:earacengeli(playerid, params[])
{

	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid, lX, lY, lZ);
	if(GetPVarInt(playerid, "aracengeliactim") == 0)
	{
	    SendClientMessage(playerid,-1,""safaf"Oyuncularýn araçtan inmesini engellediniz.");
	    SetPVarInt(playerid, "aracengeliactim", 1);
		foreach(new i : Player)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
			    if(i == playerid) continue;
			    SetPVarInt(i, "aracengeli", 1);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçtan inmesini engelledi.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	else if(GetPVarInt(playerid, "aracengeliactim") == 1)
	{
	    SendClientMessage(playerid,-1,""safaf"Oyuncularýn araçtan inmesini açtýnýz.");
	    SetPVarInt(playerid, "aracengeliactim", 0);
		foreach(new i : Player)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
			    if(i == playerid) continue;
			    SetPVarInt(i, "aracengeli", 0);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçtan inmesini açtý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:ekill(playerid, params[])
{

	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
	SendClientMessage(playerid,-1,""safaf"Oyuncularý öldürdünüz.");
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	DamagePlayer(i, 100.0, INVALID_PLAYER_ID, 255, BODY_PART_UNKNOWN, true);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý öldürdü.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:espawn(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
	SendClientMessage(playerid,-1,""safaf"Oyuncularý spawn ettiniz.");
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	lEtkinlikte[i] = 0;
		    	lKatildim[i] = 0;
		    	SetPlayerVirtualWorld(i, 0);
		    	ResetPlayerWeapons(i);
		    	OnPlayerSpawn(i);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý spawn etti.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eeject(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
	SendClientMessage(playerid,-1,""safaf"Oyuncularý araçtan attýnýz.");
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	RemovePlayerFromVehicle(i);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý araçtan attý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eslap(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
	SendClientMessage(playerid,-1,""safaf"Oyuncularý tokatladýnýz.");
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	new Float:Health;
				new Float:x, Float:y, Float:z;
				GetPlayerHealth(i,Health); SetPlayerHealth(i,Health-5);
				GetPlayerPos(i,x,y,z); SetPlayerPos(i,x,y,z+5);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý tokatladý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:edisarm(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	SendClientMessage(playerid,-1,""safaf"Oyuncularýn silahlarýný sildiniz.");
	GetPlayerPos(playerid,lX,lY,lZ);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	ResetPlayerWeapons(i);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn silahlarýný sildi.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:edondur(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new id, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "d", id)) return Kullanim(playerid, "edondur [Oyuncu ID]");
    if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu bulunamadý.");
    GetPlayerPos(playerid,lX,lY,lZ);
	if(playerid != id)
	{
	    if(IsPlayerInRangeOfPoint(id,50,lX,lY,lZ))
		{
	    	TogglePlayerControllable(id,false);
		}
	}
	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, sizi dondurdu.",getName(playerid), playerid);
	SendClientMessage(id, -1, String);
	format(String,sizeof(String),""safaf"%s(%i) adlý oyuncuyu dondurdunuz.",getName(id), id);
	SendClientMessage(playerid, -1, String);
	return true;
}

CMD:ecoz(playerid, params[])
{
    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new id, String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "d", id)) return Kullanim(playerid,"ecoz [Oyuncu ID]");
    if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu bulunamadý.");
    GetPlayerPos(playerid, lX, lY, lZ);
    if(IsPlayerInRangeOfPoint(id, 50, lX, lY, lZ))
	{
    	TogglePlayerControllable(id, true);
	}
	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, donma cezanýzý kaldýrdý.",getName(playerid), playerid);
	SendClientMessage(id, -1, String);
	format(String,sizeof(String),""safaf"%s(%i) adlý oyuncunun donma cezasýný kaldýrdýnýz.",getName(id), id);
	SendClientMessage(playerid, -1, String);
	return true;
}

CMD:edondurall(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
   	SendClientMessage(playerid,-1,""safaf"Oyuncularý dondurdunuz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	TogglePlayerControllable(i,false);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularý dondurdu.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:ecozall(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
   	SendClientMessage(playerid,-1,""safaf"Oyuncularýn donma cezasýný kaldýrdýnýz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	TogglePlayerControllable(i,true);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn donma cezasýný kaldýrdý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:epara(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "i", miktar)) return Kullanim(playerid,"epara [Miktar]");
    if(miktar > 250000) return Hata(playerid, "En fazla $250.000 verebilirsiniz.");
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyunculara $%s verdiniz.",FormatMoney(miktar));
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	GivePlayerMoney(i,miktar);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyunculara $%s verdi.",getName(playerid), playerid, FormatMoney(miktar));
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:ezirh(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new Float:miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "f", miktar)) return Kullanim(playerid, "ezirh [Miktar]");
    if(miktar < 1 && miktar > 100) return Hata(playerid, "En az 1, en fazla 100 girebilirsiniz.");
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyunculara %.02f zýrh verdiniz.",miktar);
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerArmour(i,miktar);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn zýrhýný %.02f yaptý.",getName(playerid), playerid, miktar);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:ecan(playerid, params[])
{

	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new Float:miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "f", miktar)) return Kullanim(playerid, "ecan [Miktar]");
    if(miktar < 1 && miktar > 100) return Hata(playerid, "En az 1, en fazla 100 girebilirsiniz.");
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyunculara %.02f can verdiniz.",miktar);
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerHealth(i,miktar);
		   		format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn canýný %.02f yaptý.",getName(playerid), playerid, miktar);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:elocalkapat(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyuncularýn localden konuþmasýný engellediniz.");
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	etkLocali[i] = 1;
		   		format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn localden konuþmasýný engelledi.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:elocalac(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyuncularýn localden konuþmasýný açtýnýz.");
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	etkLocali[i] = 0;
		   		format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn localden konuþmasýný açtý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eyumrukkapat(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyuncularýn birbirine yumruk atmasýný engellediniz.");
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerTeam(i,183);
		   		format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn birbirine yumruk atmasýný engelledi.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eyumrukac(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyuncularýn birbirine yumruk atmasýný açtýnýz.");
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerTeam(i,NO_TEAM);
		   		format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn birbirine yumruk atmasýný açtý.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:esilah(playerid, params[])
{
    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new silah, mermi, yazi[156], silahAd[32];
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,1);
	if(sscanf(params, "s[156]i", yazi, mermi)) return Kullanim(playerid, "esilah [SÝLAH ÝD/ÝSÝM] [MERMÝ]");
	else if(!IsNumeric(yazi)) { silah = GetWeaponIDFromName(yazi); } else { silah = strval(yazi); }
	if(!IsValidWeapon(silah)) return Hata(playerid, "Böyle bir silah yok.");
	else {
	new
	    Float:MyCoord[3], ssstring[256];
	GetPlayerPos(playerid, MyCoord[0], MyCoord[1], MyCoord[2]);
	GetWeaponName(silah,silahAd,sizeof(silahAd));
	format(ssstring, 256, ""safaf"%s(%i) adlý yetkili, yanýndaki oyunculara %s silahini %d mermi ile verdi.", getName(playerid),playerid, silahAd, mermi);
	SCM(playerid,-1,""safaf"Oyunculara silah verdiniz.");
	foreach(new x: Player)
	{
		if(!IsPlayerConnected(x)) continue;
		if(IsPlayerInRangeOfPoint(x, 50, MyCoord[0], MyCoord[1], MyCoord[2]))
		{
			SCM(x,-1, ssstring);
		    if(playerid == x) continue;
			GivePlayerWeapon(x, silah, mermi);
  		}
	}
	}
	return true;
}

CMD:earac(playerid, params[])
{
    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new
		aracx[56], car;
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
	if(sscanf(params, "s[56]", aracx)) return Kullanim(playerid, "earac [Arac]");
	if(!IsNumeric(aracx)) car = GetVehicleModelIDFromName(aracx); else car = strval(aracx);
	if(car < 400 || car > 611) return Hata(playerid, "Böyle bir araç yok!");
	else {
	new
	    Float:MyCoord[3];
	GetPlayerPos(playerid, MyCoord[0], MyCoord[1], MyCoord[2]);
	format(estring, 256, ""safaf"%s(%i) adlý yetkili, yanýndaki oyunculara %s(%d) markalý aracý verdi.", getName(playerid),playerid, vehNames[car-400], car);
	foreach(new x: Player)
	{
		if(!IsPlayerConnected(x)) continue;
		if(IsPlayerInRangeOfPoint(x, 50.0, MyCoord[0], MyCoord[1], MyCoord[2]))
		{
			SCM(x,-1, estring);
		    if(playerid == x) continue;
			CreatePlayerVehicle(x, car);
			switch(car)
			{
			    case 407: ChangeVehicleColor(GetPlayerVehicleID(x), 3, 1);
			    case 416: ChangeVehicleColor(GetPlayerVehicleID(x), 1, 3);
			    case 596: ChangeVehicleColor(GetPlayerVehicleID(x), 0, 1);
			    case 597: ChangeVehicleColor(GetPlayerVehicleID(x), 0, 1);
			    case 598: ChangeVehicleColor(GetPlayerVehicleID(x), 0, 1);
			    case 599: ChangeVehicleColor(GetPlayerVehicleID(x), 0, 1);
			    case 427: ChangeVehicleColor(GetPlayerVehicleID(x), 0, 1);
			}
  		}
	}
	}
	return true;
}

CMD:erenk(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new Colour, colour[24];
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "i", Colour)) return Kullanim(playerid,"erenk [Renk ÝD]"),SendClientMessage(playerid, -1, "Renkler: 0=siyah 1=white 2=kýrmýzý 3=turuncu 4=sarý 5=yeþil 6=mavi 7=mor 8=kahverengi 9=pembe");
	if(Colour > 9 || Colour < 0) return SendClientMessage(playerid, -1, "Renkler: 0=siyah 1=white 2=kýrmýzý 3=turuncu 4=sarý 5=yeþil 6=mavi 7=mor 8=kahverengi 9=pembe");
	SendClientMessage(playerid, -1, ""safaf"Oyuncularýn renklerini deðiþtirdiniz.");
	switch(Colour)
	{
	    case 0: {colour = "Siyah"; Colour = COLOR_BLACK;}
	    case 1: {colour = "Beyaz"; Colour = COLOR_WHITE;}
	    case 2: {colour = "Kirmizi"; Colour = COLOR_RED;}
	    case 3: {colour = "Turuncu"; Colour = COLOR_ORANGE;}
		case 4: {colour = "Sari"; Colour = COLOR_YELLOW;}
		case 5: {colour = "Yesil"; Colour = COLOR_GREEN;}
		case 6: {colour = "Mavi"; Colour = COLOR_BLUE;}
		case 7: {colour = "Mor"; Colour = COLOR_PURPLE;}
		case 8: {colour = "Kahverengi"; Colour = COLOR_BROWN;}
		case 9: {colour = "Pembe"; Colour = COLOR_PINK;}
	}
	GetPlayerPos(playerid,lX,lY,lZ);
	foreach(new i : Player)
	{
		if(playerid != i)
		{
			if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
				SetPlayerColor(i,Colour);
				format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn nick rengini {%06x}%s {FFFFFF}olarak deðiþtirdi.",getName(playerid), playerid, Colour >>> 8,colour);
				SendClientMessage(i,-1,String);
			}
		}
    }
	return true;
}

CMD:eexp(playerid, params[])
{
    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "i", miktar)) return Kullanim(playerid, "eexp [Miktar]");
    if(miktar > 10) return Hata(playerid, "En fazla 10 EXP verebilirsiniz.");
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyunculara %s EXP verdiniz.",FormatMoney(miktar));
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	expver(i, miktar);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyunculara %s EXP verdi.",getName(playerid), playerid, FormatMoney(miktar));
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eglkredi(playerid, params[])
{
    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "i", miktar)) return Kullanim(playerid, "eglkredi [Miktar]");
    if(miktar > 10) return Hata(playerid, "En fazla 10 GLKredi verebilirsiniz.");
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyunculara %s GLKredi verdiniz.",FormatMoney(miktar));
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	PlayerInfo[i][GLKredi] += miktar;
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyunculara %s GLKredi verdi.",getName(playerid), playerid, FormatMoney(miktar));
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eskor(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "i", miktar)) return Kullanim(playerid, "eskor [Miktar]");
    if(miktar > 10) return Hata(playerid, "En fazla 10 skor verebilirsiniz.");
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyunculara %s skor verdiniz.",FormatMoney(miktar));
	SendClientMessage(playerid,-1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerScore(i, GetPlayerScore(i) +miktar);
		    	PlayerInfo[i][score] = GetPlayerScore(i);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyunculara %s skor verdi.",getName(playerid), playerid, FormatMoney(miktar));
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:eskin(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    if(sscanf(params, "i", miktar)) return Kullanim(playerid, "eskin [Skin ID]");
    if(!IsValidSkin(miktar)) return Hata(playerid, "Yanlýþ Skin ID.");
	GetPlayerPos(playerid,lX,lY,lZ);
	format(String2,sizeof(String2),""safaf"Oyuncularýn skinini %d olarak deðiþtirdiniz.",miktar);
	SendClientMessage(playerid, -1, String2);
    foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerSkin(i,miktar);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn skinini %d olarak deðiþtirdi.",getName(playerid), playerid, miktar);
				SendClientMessage(i,-1, String);
			}
		}
	}
	return true;
}

CMD:earacsil(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	else {
	new
	    Float:MyCoord[3];
	GetPlayerPos(playerid, MyCoord[0], MyCoord[1], MyCoord[2]);
	format(estring, 256, ""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn araçlarýný sildi.", getName(playerid),playerid);
	foreach(new x: Player)
	{
		if(!IsPlayerConnected(x)) continue;
		if(IsPlayerInRangeOfPoint(x, 50.0, MyCoord[0], MyCoord[1], MyCoord[2]))
		{
			SCM(x,-1, estring);
		    destroyVehicle(x);
 		}
	}
	}
	return true;
}

CMD:esay(playerid, params[])
{

    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new
	    Float:MyCoord[3];
	GetPlayerPos(playerid, MyCoord[0], MyCoord[1], MyCoord[2]);
	SendClientMessage(playerid, -1, ""safaf"Geri sayýmý baþlattýnýz.");
	foreach(new x: Player)
	{
		if(!IsPlayerConnected(x)) continue;
		if(IsPlayerInRangeOfPoint(x, 50.0, MyCoord[0], MyCoord[1], MyCoord[2]))
		{
			PlayerInfo[x][Etkinlik_Sayac] = 6;
			KillTimer(PlayerInfo[x][Etkinlik_Timer]);
		 	PlayerInfo[x][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", x);
		 	format(estring,sizeof(estring),""safaf"%s(%i) adlý yönetici geri sayýmý baþlattý!",getName(playerid), playerid);
  		}
	}
	return true;
}

CMD:ezaman(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	if(sscanf(params, "i", miktar)) return Kullanim(playerid, "ezaman [Saat]");
	if(miktar > 24 || miktar < 0)return Hata(playerid, "En az 0, en fazla 24 girebilirsiniz.");
	format(String2,sizeof(String2),""safaf"Oyuncularýn zamanýný %d olarak deðiþtirdiniz.",miktar);
	SendClientMessage(playerid,-1, String2);
	GetPlayerPos(playerid,lX,lY,lZ);
	foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerTime(i,miktar,0);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn zamanýný %d olarak deðiþtirdi.",getName(playerid), playerid, miktar);
				SendClientMessage(i,-1, String);
			}
		}
    }
	return true;
}

CMD:ehava(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new miktar, String[128], String2[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	if(sscanf(params, "i", miktar)) return Kullanim(playerid, "ehava [Hava ID]");
	if(miktar > 99 || miktar < 0)return Hata(playerid, "En az 0, en fazla 99 girebilirsiniz.");
	format(String2,sizeof(String2),""safaf"Oyuncularýn havasýný %d olarak deðiþtirdiniz.",miktar);
	SendClientMessage(playerid, -1, String2);
	GetPlayerPos(playerid,lX,lY,lZ);
	foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerWeather(i,miktar);
		   		format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyuncularýn havasýný %d olarak deðiþtirdi.",getName(playerid), playerid, miktar);
				SendClientMessage(i,-1, String);
			}
		}
    }
	return true;
}

CMD:ejetpack(playerid, params[])
{

    if(ETKAktif != true) return Hata(playerid, "Bir etkinlik baþlatmadan bu komutu kullanamazsýnýz.");
	new String[128];
    if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
    GetPlayerPos(playerid,lX,lY,lZ);
   	SendClientMessage(playerid, -1, ""safaf"Oyunculara Jetpack verdiniz.");
	foreach(new i : Player)
	{
		if(playerid != i)
		{
		    if(IsPlayerInRangeOfPoint(i,50,lX,lY,lZ))
			{
		    	SetPlayerSpecialAction(i, 2);
		    	format(String,sizeof(String),""safaf"%s(%i) adlý yetkili, yanýndaki oyunculara Jetpack verdi.",getName(playerid), playerid);
				SendClientMessage(i,-1, String);
			}
		}
    }
	return true;
}

stock IsValidSkin(SkinID)
{
	if((SkinID >= 0 && SkinID <= 73)||(SkinID >= 75 && SkinID <= 299)) return true;
	else return false;
}

CMD:etkgit(playerid, params[])
{
	new String[850];
    if(lBasladi != 1) return Hata(playerid,"Þu anda bir etkinlik baþlamýþ deðil.");
    if(lKatildim[playerid] == 1) return Hata(playerid, "Þu an bir etkinliktesiniz! Etkinlikten çýkmak istiyorsanýz, "wb"/etkcik "w"yazabilirsiniz.");
    HideModelSelectionMenu(playerid);
    SetPlayerFacingAngle(playerid,lC); lKatildim[playerid]=1; lEtkinlikte[playerid]=1;
		if(ldurum==1){SetPlayerPos(playerid,gX -((1.0+lkackisi) * floatsin(-gC, degrees)),gY -((1.0+lkackisi) * floatcos(-gC, degrees)),gZ); SetPlayerFacingAngle(playerid,gC);}
		if(ldurum==2){
				if(lkackisi > 60) return Hata(playerid, "Etkinliðe çok sayýda oyuncu katýlmýþ, bir sonra ki etkinliði bekleyin!");
				SetPlayerPos(playerid,gX +((7.0) * floatsin(-gC, degrees)),gY +((7.0) * floatcos(-gC, degrees)),gZ); SetPlayerFacingAngle(playerid,gC-180); gC+=6;
		}
    lkackisi++; TogglePlayerControllable(playerid,false); ResetPlayerWeapons(playerid);
    SetPlayerVirtualWorld(playerid, 35);
    HideModelSelectionMenu(playerid);

    format(String, sizeof(String), "~r~~h~[ETK] ~w~~h~~h~%s(%i) adli oyuncu etkinlige katildi! ~r~~h~(/etkgit)", getName(playerid), playerid);
    //SendClientMessageToAll(-1, String);
	TextMesaji(code(String));

    HideModelSelectionMenu(playerid);

    format(String, sizeof(String), ""safaf"Etkinliðe katýldýnýz.");
    SendClientMessage(playerid, -1, String);

    new sql[256], tamammi_devammi;
    format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
    mysql_query(mysqlC, sql);

    cache_get_value_name_int(0, "basari_etkkatil", tamammi_devammi);

    if(tamammi_devammi == 0)
    {
	    SetPlayerScore(playerid, GetPlayerScore(playerid) + 5);
	    GivePlayerMoney(playerid, 5000);
	    PlayerInfo[playerid][score] = GetPlayerScore(playerid);
	    PlayerInfo[playerid][money] = GetPlayerMoney(playerid);

	    format(sql, sizeof(sql), "UPDATE `oyuncular` SET `basari_etkkatil` = '1' WHERE `kullaniciadi` = '%s'", getName(playerid));
	    mysql_query(mysqlC, sql);

	    SCM(playerid, -1, ""safaf"Ýlk etkinlik baþarýsýný tamamladýn ve "wb"5 skor "w"+ "wb"5.000$ "w"kazandýn.");
	    SCM(playerid, -1, ""safaf"Tüm baþarýlarýna bakmak için "wb"/basarilarim "w"yazabilirsin.");
    }
    HideModelSelectionMenu(playerid);
    return true;
}

CMD:etkcik(playerid, params[])
{
    new String[128];
    if(lKatildim[playerid] == 1 || lEtkinlikte[playerid] == 1)
	{
        lKatildim[playerid] = 0;
        lEtkinlikte[playerid] = 0;
        TogglePlayerControllable(playerid, true);
        OnPlayerSpawn(playerid);
        SetPlayerVirtualWorld(playerid, 0);
        format(String, sizeof(String), ""safaf"Etkinlikten ayrýldýnýz.");
        SendClientMessage(playerid, -1, String);
	}
	else
	{
        Hata(playerid,"Bir etkinlikte deðilsiniz.");
	}
	return true;
}

forward etkgerisay();
public etkgerisay()
{
    lCountDown--;
    for(new i = 0; i < MAX_PLAYERS; i++){
		if(lCountDown==0){
			lCountDown = -1;
			gerisayimbaslatanid = -1;
			if(i == gerisayimbaslatanid) GameTextForPlayer(i,"~p~~h~BASLA!",1000,6);
			if(IsPlayerConnected(i) && lEtkinlikte[i]==1){
			    GameTextForPlayer(i,"~p~~h~BASLA!",1000,6);
				TogglePlayerControllable(i,true);
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
			}
		}else{
			new text[7]; format(text,sizeof(text),"~w~~h~~h~%d",lCountDown);
            if(i == gerisayimbaslatanid) GameTextForPlayer(i,text,1000,6);
			if(IsPlayerConnected(i) && lEtkinlikte[i]==1){
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				GameTextForPlayer(i,text,1000,6);
			}
		}
	}
	if(lCountDown>0) SetTimer("etkgerisay",1000,0);
}

CMD:ls(playerid,params[])
{

	SetPlayerPV(playerid,1265.1481, -1651.8574, 13.7288);
	SCM(playerid,-1,""safaf"Los Santos adlý bölgeye gönderildiniz.");
	return true;
}

CMD:lv(playerid,params[])
{

	SetPlayerPV(playerid,2526.9333, 2034.8307, 11.2637);
	SCM(playerid,-1,""safaf"Las Venturas adlý bölgeye gönderildiniz.");
	return true;
}

CMD:sf(playerid,params[])
{

	SetPlayerPV(playerid,-2388.7375, -8.4934, 37.2643);
	SCM(playerid,-1,""safaf"San Fierro adlý bölgeye gönderildiniz.");
	return true;
}

CMD:dag(playerid,params[]){

	SetPlayerPV(playerid,-2317.9617, -1623.0234, 484.5557);
	SendClientMessage(playerid, -1, ""safaf"Dað adlý bölgeye gönderildiniz.");
	return true;
}

CMD:army(playerid, params[])
{

    SetPlayerPV(playerid, 293.7621, 2058.8086, 17.799);
    SendClientMessage(playerid, -1, ""safaf"Army adlý bölgeye gönderildiniz.");
    return true;
}

CMD:sahil(playerid, params[])
{
    SetPlayerPV(playerid, 670.3174,-1895.3333,3.1764);
    SendClientMessage(playerid, -1, ""safaf"Sahil adlý bölgeye gönderildiniz.");
    return true;
}

CMD:4d(playerid, params[])
{
    SetPlayerPV(playerid, 2028.4597,1007.0644,10.8203);
    SendClientMessage(playerid, -1, ""safaf"The Four Dragons adlý bölgeye gönderildiniz.");
    return true;
}

CMD:drift1(playerid, params[])
{
    SetPlayerPV(playerid, -301.6903,1526.9238,75.3594);
    SendClientMessage(playerid, -1, ""safaf"Drift-1 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:drift2(playerid, params[])
{

    SetPlayerPV(playerid, 2326.6311,1389.7100,42.8203);
    SendClientMessage(playerid, -1, ""safaf"Drift-2 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:drift3(playerid, params[])
{

    SetPlayerPV(playerid, 1244.9348,-2043.1870,59.8570);
    SendClientMessage(playerid, -1, ""safaf"Drift-3 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:drift4(playerid, params[])
{

    SetPlayerPV(playerid, 2220.2881,1963.1591,31.7797);
    SendClientMessage(playerid, -1, ""safaf"Drift-4 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:grove(playerid, params[])
{

    SetPlayerPV(playerid, 2498.602050,-1684.640136,13.417391);
    SendClientMessage(playerid, -1, ""safaf"Grove Street adlý bölgeye gönderildiniz.");
    return true;
}

CMD:jizzy(playerid, params[])
{

    SetPlayerPV(playerid, -2612.8960,1416.7472,7.2668);
    SendClientMessage(playerid, -1, ""safaf"Jizzy's adlý bölgeye gönderildiniz.");
    return true;
}

CMD:mod1(playerid, params[])
{

    SetPlayerPV(playerid, 2644.5220,-2004.0026,13.3828);
    SendClientMessage(playerid, -1, ""safaf"Modifiye adlý bölgeye gönderildiniz.");
    return true;
}

CMD:mod2(playerid, params[])
{

    SetPlayerPV(playerid, -1917.2754,287.0215,41.0469);
    SendClientMessage(playerid, -1, ""safaf"Modifiye-2 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:mod3(playerid, params[])
{

    SetPlayerPV(playerid, -2705.5503, 206.1621,4.1797);
    SendClientMessage(playerid, -1, ""safaf"Modifiye-3 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:mod4(playerid, params[])
{

    SetPlayerPV(playerid, 2386.1106,1020.7910,10.8203);
    SendClientMessage(playerid, -1, ""safaf"Modifiye-4 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:mod5(playerid, params[])
{

    SetPlayerPV(playerid, 1041.3721,-1043.0988,31.7270);
    SendClientMessage(playerid, -1, ""safaf"Modifiye-5 adlý bölgeye gönderildiniz.");
    return true;
}

CMD:ap1(playerid, params[])
{

    SetPlayerPV(playerid, 1331.7628,1285.3923,10.8203);
    SetPlayerInterior(playerid, 0);
    SendClientMessage(playerid, -1, ""safaf"Las Venturas Havaalaný adlý bölgeye gönderildiniz.");
    return true;
}

CMD:ap2(playerid, params[])
{

    SetPlayerPV(playerid, -1294.6156,-13.6585,13.8755);
    SetPlayerInterior(playerid, 0);
    SendClientMessage(playerid, -1, ""safaf"San Fierro Havaalaný adlý bölgeye gönderildiniz.");
    return true;
}

CMD:ap3(playerid, params[])
{

	SetPlayerPV(playerid, 1534.2035,-2468.8857,13.5547);
    SetPlayerInterior(playerid, 0);
    SendClientMessage(playerid, -1, ""safaf"Los Santos Havaalaný adlý bölgeye gönderildiniz.");
    return true;
}

CMD:ap4(playerid, params[])
{

    SetPlayerPV(playerid, 403.0809,2520.5908,16.2114);
    SetPlayerInterior(playerid, 0);
    SendClientMessage(playerid, -1, ""safaf"Verdant Bluffs Havaalaný adlý bölgeye gönderildiniz.");
    return true;
}

CMD:t(playerid, params[])
{

        new tmp[256], idx;
        tmp = strtok(params, idx);
	    if(!strlen(params)) return Kullanim(playerid,"t [1-50]");

        else if(strcmp(tmp, "1", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-1 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2186.2239,1153.7673,11.6777);
   			SetPlayerInterior(playerid, 0);
        }
		else if(strcmp(tmp, "2", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-2 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1527.3297,-2455.9033,13.5547);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "3", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-3 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2080.3774,305.2731,105.7115);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "4", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-4 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -1439.050537,-950.442749,201.088897);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "5", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-5 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2247.0222,-1070.0267,966.2331);
      	    SetPlayerInterior(playerid, 0);
        }
		else if(strcmp(tmp, "6", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-6 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2097.7966,-834.2103,797.3968);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "7", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-7 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1734.7340,-2595.0820,13.1174);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "8", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-8 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -1333.7834,-70.3215,13.7003);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "9", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-9 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1459.8307,-1071.7242,213.3828);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "10", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-10 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -1706.1147,188.6678,32.9856);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "11", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-11 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2674.0366,1595.0846,217.2739);
      	    SetPlayerInterior(playerid, 0);
        }
		else if(strcmp(tmp, "12", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-12 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2827.3567,-2143.6956,11.0872);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "13", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-13 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2180.9058,1321.5576,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "14", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-14 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2176.7312,1442.9592,10.8125);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "15", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-15 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2416.0679,1653.1537,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "16", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-16 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2704.9280,1473.6401,13.6336);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "17", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-17 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2620.3835,1745.3276,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "18", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-18 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2539.5347,1964.5151,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "19", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-19 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2871.1306,2420.4934,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "20", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-20 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2811.3875,1673.5721,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "21", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-21 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2859.6528,1280.2900,11.3906);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "22", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-22 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1889.7766,1117.1154,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "23", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-23 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1667.7882,1175.0692,10.6719);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "24", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-24 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1394.2532,1140.8140,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "25", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-25 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1088.9712,1073.6360,10.8359);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "26", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-26 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2506.1147,1272.4836,10.8125);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "27", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-27 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1056.9973,1407.2799,5.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "28", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-28 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 959.6030,1723.5983,8.6484);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "29", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-29 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 981.3756,2136.0791,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "30", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-30 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1076.1378,2319.0659,10.8203);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "31", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-31 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2241.2705,-2681.5417,13.2127);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "32", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-32 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 978.8982,-675.6399,121.9763);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "33", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-33 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2221.8779,426.8696,34.8382);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "34", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-34 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 897.2581,-1217.5927,16.6819);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "35", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-35 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -1498.7009,920.9554,6.8501);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "36", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-36 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1750.5477,-2066.5591,13.2698);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "37", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-37 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1519.4766,-829.6688,68.1999);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "38", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-38 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1583.5884,-2279.4434,-3.0761);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "39", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-39 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1282.0186,-1321.7067,13.0835);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "40", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-40 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2403.3591,-93.6773,34.9840);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "41", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-41 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2583.7622,627.4694,27.4752);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "42", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-42 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1483.7892,-1721.4487,7.3306);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "43", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-43 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1185.8571,-678.1578,61.4177);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "44", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-44 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2936.4561,-2051.6987,3.2074);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "45", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-45 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2398.4258,-249.7563,39.5601);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "46", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-46 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 1920.0980,-1837.6825,3.6897);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "47", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-47 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2327.7324,-2353.9585,13.2062);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "48", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-48 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2374.7566,-1936.7057,13.2114);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "49", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-49 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, -2679.0676,1473.7224,6.8468);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "50", true) == 0)
        {
            SendClientMessage(playerid, -1, ""safaf"Teleport-50 adlý bölgeye gönderildiniz.");
      	    SetPlayerPV(playerid, 2813.182373, -1441.817749, 55.848549);
      	    SetPlayerInterior(playerid, 0);
        }
		return true;
}

CMD:int(playerid, params[])
{

        new tmp[256], idx;
        tmp = strtok(params, idx);
	    if(!strlen(params)) return Kullanim(playerid,"int [1-71]");

        else if(strcmp(tmp, "1", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 1",2500,5);
      	    SetPlayerPos(playerid, -25.8845,-185.8690,1003.5469);
      	    SetPlayerInterior(playerid, 17);
        }
        else if(strcmp(tmp, "2", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 2",2500,5);
      	    SetPlayerPos(playerid, -6.0912,-29.2719,1003.5494);
      	    SetPlayerInterior(playerid, 10);
        }
        else if(strcmp(tmp, "3", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 3",2500,5);
      	    SetPlayerPos(playerid, -30.9467,-89.6096,1003.5469);
      	    SetPlayerInterior(playerid, 18);
        }
        else if(strcmp(tmp, "4", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 4",2500,5);
      	    SetPlayerPos(playerid, -25.1326,-139.0670,1003.5469);
      	    SetPlayerInterior(playerid, 16);
        }
        else if(strcmp(tmp, "5", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 5",2500,5);
      	    SetPlayerPos(playerid, -27.3123,-29.2776,1003.5573);
      	    SetPlayerInterior(playerid, 4);
        }
        else if(strcmp(tmp, "6", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 6",2500,5);
      	    SetPlayerPos(playerid, -26.6916,-55.7149,1003.5469);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "7", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 7",2500,5);
      	    SetPlayerPos(playerid, 315.8562,1024.4965,1949.7974);
      	    SetPlayerInterior(playerid, 9);
        }
        else if(strcmp(tmp, "8", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 8",2500,5);
      	    SetPlayerPos(playerid, 2.3848,33.1034,1199.5938);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "9", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 9",2500,5);
      	    SetPlayerPos(playerid, 419.8936,2537.1155,10.0000);
      	    SetPlayerInterior(playerid, 10);
        }
        else if(strcmp(tmp, "10", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 10",2500,5);
      	    SetPlayerPos(playerid, 286.1490,-40.6444,1001.5156);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "11", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 11",2500,5);
      	    SetPlayerPos(playerid, 286.8010,-82.5476,1001.5156);
      	    SetPlayerInterior(playerid, 4);
        }
        else if(strcmp(tmp, "12", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 12",2500,5);
      	    SetPlayerPos(playerid, 296.9200,-108.0720,1001.5156);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "13", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 13",2500,5);
      	    SetPlayerPos(playerid, 314.8210,-141.4320,999.6016);
      	    SetPlayerInterior(playerid, 7);
        }
        else if(strcmp(tmp, "14", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 14",2500,5);
      	    SetPlayerPos(playerid, 316.5250,-167.7070,999.5938);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "15", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 15",2500,5);
      	    SetPlayerPos(playerid, 1524.1316,-46.5314,1002.1310);
      	    SetPlayerInterior(playerid, 2);
        }
        else if(strcmp(tmp, "16", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 16",2500,5);
      	    SetPlayerPos(playerid, 512.9291,-11.6929,1001.5653);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "17", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 17",2500,5);
      	    SetPlayerPos(playerid, 2447.8704,-1704.4509,1013.5078);
      	    SetPlayerInterior(playerid, 2);
        }
        else if(strcmp(tmp, "18", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 18",2500,5);
      	    SetPlayerPos(playerid, 2527.0176,-1679.2076,1015.4986);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "19", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 19",2500,5);
      	    SetPlayerPos(playerid, 1267.8407,-776.9587,1091.9063);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "20", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 20",2500,5);
      	    SetPlayerPos(playerid, 2536.5322,-1294.8425,1044.1250);
      	    SetPlayerInterior(playerid, 2);
        }
        else if(strcmp(tmp, "21", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 21",2500,5);
      	    SetPlayerPos(playerid, 2496.0549,-1695.1749,1014.7422);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "22", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 22",2500,5);
      	    SetPlayerPos(playerid, 1.1853,-3.2387,999.4284);
      	    SetPlayerInterior(playerid, 2);
        }
        else if(strcmp(tmp, "23", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 23",2500,5);
      	    SetPlayerPos(playerid, 2233.6919,-1112.8107,1050.8828);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "24", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 24",2500,5);
      	    SetPlayerPos(playerid, 2194.7900,-1204.3500,1049.0234);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "25", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 25",2500,5);
      	    SetPlayerPos(playerid, 2319.1272,-1023.9562,1050.2109);
      	    SetPlayerInterior(playerid, 9);
        }
        else if(strcmp(tmp, "26", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 26",2500,5);
      	    SetPlayerPos(playerid, 2365.1089,-1133.0795,1050.8750);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "27", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 27",2500,5);
      	    SetPlayerPos(playerid, 2282.9099,-1138.2900,1050.8984);
      	    SetPlayerInterior(playerid, 11);
        }
        else if(strcmp(tmp, "28", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 28",2500,5);
      	    SetPlayerPos(playerid, 2216.1282,-1076.3052,1050.4844);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "29", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 29",2500,5);
      	    SetPlayerPos(playerid, 1726.1801,-1641.0000,20.2245);
      	    SetPlayerInterior(playerid, 18);
        }
        else if(strcmp(tmp, "30", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 30",2500,5);
      	    SetPlayerPos(playerid, 2338.3201,-1180.6100,1027.9766);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "31", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 31",2500,5);
      	    SetPlayerPos(playerid, 664.1900,-570.7300,16.3433);
      	    SetPlayerInterior(playerid, 0);
        }
        else if(strcmp(tmp, "32", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 32",2500,5);
      	    SetPlayerPos(playerid, 2220.2600,-1148.0100,1025.7969);
      	    SetPlayerInterior(playerid, 15);
        }
        else if(strcmp(tmp, "33", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 33",2500,5);
      	    SetPlayerPos(playerid, -750.8000,491.0000,1371.7258);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "34", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 34",2500,5);
      	    SetPlayerPos(playerid, -944.2402,1886.1536,5.0051);
      	    SetPlayerInterior(playerid, 17);
        }
        else if(strcmp(tmp, "35", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 35",2500,5);
      	    SetPlayerPos(playerid, 2233.8032,1712.2303,1011.7632);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "36", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 36",2500,5);
      	    SetPlayerPos(playerid, 2016.2699,1017.7790,996.8750);
      	    SetPlayerInterior(playerid, 10);
        }
        else if(strcmp(tmp, "37", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 37",2500,5);
      	    SetPlayerPos(playerid, 1132.9063,-9.7726,1000.6797);
      	    SetPlayerInterior(playerid, 12);
        }
        else if(strcmp(tmp, "38", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 38",2500,5);
      	    SetPlayerPos(playerid, 2268.5156,1647.7682,1084.2344);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "39", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 39",2500,5);
      	    SetPlayerPos(playerid, -203.0764,-24.1658,1002.2734);
      	    SetPlayerInterior(playerid, 16);
        }
        else if(strcmp(tmp, "40", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 40",2500,5);
      	    SetPlayerPos(playerid, 365.4099,-73.6167,1001.5078);
      	    SetPlayerInterior(playerid, 10);
        }
        else if(strcmp(tmp, "41", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 41",2500,5);
      	    SetPlayerPos(playerid, 372.3520,-131.6510,1001.4922);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "42", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 42",2500,5);
      	    SetPlayerPos(playerid, 365.7158,-9.8873,1001.8516);
      	    SetPlayerInterior(playerid, 9);
        }
        else if(strcmp(tmp, "43", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 43",2500,5);
      	    SetPlayerPos(playerid, 378.0260,-190.5155,1000.6328);
      	    SetPlayerInterior(playerid, 17);
        }
        else if(strcmp(tmp, "44", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 44",2500,5);
      	    SetPlayerPos(playerid, -2240.1028,136.9730,1035.4141);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "45", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 45",2500,5);
      	    SetPlayerPos(playerid, -100.2674,-22.9376,1000.7188);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "46", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 46",2500,5);
      	    SetPlayerPos(playerid, 245.2307,304.7632,999.1484);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "47", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 47",2500,5);
      	    SetPlayerPos(playerid, 290.6230,309.0622,999.1484);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "48", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 48",2500,5);
      	    SetPlayerPos(playerid, 322.5014,303.6906,999.1484);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "49", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 49",2500,5);
      	    SetPlayerPos(playerid, 269.6405,305.9512,999.1484);
      	    SetPlayerInterior(playerid, 2);
        }
        else if(strcmp(tmp, "50", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 50",2500,5);
      	    SetPlayerPos(playerid, 306.1966,307.8190,1003.3047);
      	    SetPlayerInterior(playerid, 4);
        }
        else if(strcmp(tmp, "51", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 51",2500,5);
      	    SetPlayerPos(playerid, 344.9984,307.1824,999.1557);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "52", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 52",2500,5);
      	    SetPlayerPos(playerid, 418.4666,-80.4595,1001.8047);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "53", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 53",2500,5);
      	    SetPlayerPos(playerid, 206.4627,-137.7076,1003.0938);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "54", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 54",2500,5);
      	    SetPlayerPos(playerid, 225.0306,-9.1838,1002.2180);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "55", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 55",2500,5);
      	    SetPlayerPos(playerid, 204.1174,-46.8047,1001.8047);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "56", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 56",2500,5);
      	    SetPlayerPos(playerid, 225.0306,-9.1838,1002.2180);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "57", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 57",2500,5);
      	    SetPlayerPos(playerid, 414.2987,-18.8044,1001.8047);
      	    SetPlayerInterior(playerid, 2);
        }
        else if(strcmp(tmp, "58", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 58",2500,5);
      	    SetPlayerPos(playerid, 204.1658,-165.7678,1000.5234);
      	    SetPlayerInterior(playerid, 14);
        }
        else if(strcmp(tmp, "59", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 59",2500,5);
      	    SetPlayerPos(playerid, 207.5219,-109.7448,1005.1328);
      	    SetPlayerInterior(playerid, 15);
        }
        else if(strcmp(tmp, "60", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 60",2500,5);
      	    SetPlayerPos(playerid, 974.0177,-9.5937,1001.1484);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "61", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 61",2500,5);
      	    SetPlayerPos(playerid, 961.9308,-51.9071,1001.1172);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "62", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 62",2500,5);
      	    SetPlayerPos(playerid, 1212.0762,-28.5799,1000.9531);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "63", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 63",2500,5);
      	    SetPlayerPos(playerid, 234.0211,1189.9160,1080.2578);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "64", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 64",2500,5);
      	    SetPlayerPos(playerid, 234.2826,1065.2290,1084.2101);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "65", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 65",2500,5);
      	    SetPlayerPos(playerid, 771.8632,-40.5659,1000.6865);
      	    SetPlayerInterior(playerid, 6);
        }
        else if(strcmp(tmp, "66", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 66",2500,5);
      	    SetPlayerPos(playerid, 774.0681,-71.8559,1000.6484);
      	    SetPlayerInterior(playerid, 7);
        }
        else if(strcmp(tmp, "67", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 67",2500,5);
      	    SetPlayerPos(playerid, 222.3978,1242.9489,1082.1406);
      	    SetPlayerInterior(playerid, 2);
        }
        else if(strcmp(tmp, "68", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 68",2500,5);
      	    SetPlayerPos(playerid, -2031.1196,-115.8287,1035.1719);
      	    SetPlayerInterior(playerid, 3);
        }
        else if(strcmp(tmp, "69", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 69",2500,5);
      	    SetPlayerPos(playerid, 963.0586,2159.7563,1011.0303);
      	    SetPlayerInterior(playerid, 1);
        }
        else if(strcmp(tmp, "70", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 70",2500,5);
      	    SetPlayerPos(playerid, 318.5645,1118.2079,1083.8828);
      	    SetPlayerInterior(playerid, 5);
        }
        else if(strcmp(tmp, "71", true) == 0)
        {
            GameTextForPlayer(playerid,"~w~~h~~h~Spawning~n~~b~~h~Interior 71",2500,5);
      	    SetPlayerPos(playerid, -227.5703,1401.5544,27.7656);
      	    SetPlayerInterior(playerid, 18);
        }
     return true;
}

CMD:deagledm(playerid,params[])
{
	return cmd_deagle(playerid, params);
}

CMD:deagle(playerid,params[])
{
    HideModelSelectionMenu(playerid);
	ShowPlayerDialog(playerid, -1, 0, "","", "", "");
	SetPlayerVirtualWorld(playerid, 11);
	dmyasagi[playerid] = 1;
	ResetPlayerWeapons(playerid);
	SetPlayerInterior(playerid,0);
	GivePlayerWeapon(playerid, 24, 5000);
	SetPlayerArmour(playerid, 100.0);
	SetPlayerHealth(playerid, 100.0);
	dmde[playerid] = 1;
	GameTextForPlayer(playerid,"~w~~h~~h~DM ~p~Deagle",2500,3);
	dmgit(playerid);
	return true;
}

CMD:mg1(playerid,params[])
{
    HideModelSelectionMenu(playerid);
	ShowPlayerDialog(playerid, -1, 0, "","", "", "");
	SetPlayerVirtualWorld(playerid, 6);
	ResetPlayerWeapons(playerid);
	dmyasagi[playerid] = 1;
	SetPlayerInterior(playerid,0);
	GivePlayerWeapon(playerid, 38, 5000);
	SetPlayerArmour(playerid, 100.0);
	SetPlayerHealth(playerid, 100.0);
	dmde[playerid] = 2;
	GameTextForPlayer(playerid,"~w~~h~~h~DM ~p~Minigun",2500,3);
	dmgit(playerid);
	DMZoneOyuncuModu[playerid] = MG1;
	return true;
}

CMD:minigundm(playerid,params[])
{
	return cmd_mg1(playerid, params);
}

CMD:knife(playerid, params[])
{
	return cmd_knifedm(playerid, params);
}

CMD:knifedm(playerid,params[])
{
	HideModelSelectionMenu(playerid);
	ShowPlayerDialog(playerid, -1, 0, "","", "", "");
	SetPlayerVirtualWorld(playerid, 6);
	ResetPlayerWeapons(playerid);
	dmyasagi[playerid] = 1;
	SetPlayerInterior(playerid,0);
	GivePlayerWeapon(playerid, 4, 5000);
	SetPlayerArmour(playerid, 0.0);
	SetPlayerHealth(playerid, 0.1);
	dmde[playerid] = 3;
	GameTextForPlayer(playerid,"~w~~h~~h~DM ~p~Knife",2500,3);
	dmgit(playerid);
	DMZoneOyuncuModu[playerid] = KNIFE;
	return true;
}

CMD:sniper(playerid, params[]) return cmd_sniperdm(playerid, params);
CMD:sniperdm(playerid,params[])
{
    HideModelSelectionMenu(playerid);
	ShowPlayerDialog(playerid, -1, 0, "","", "", "");
	dmyasagi[playerid] = 1;
	ResetPlayerWeapons(playerid);
	SetPlayerArmour(playerid, 100.0);
	SetPlayerHealth(playerid, 100.0);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 13);
	GivePlayerWeapon(playerid, 34, 5000);
	dmde[playerid] = 4;
	dmgit(playerid);
	GameTextForPlayer(playerid,"~w~~h~~h~DM ~p~Sniper",2500,3);
	DMZoneOyuncuModu[playerid] = SNIPER;
	return true;
}

forward dmgit(playerid);
public dmgit(playerid)
{
	if(dmde[playerid] == 1)
	{
	    HideModelSelectionMenu(playerid);
		SetPlayerVirtualWorld(playerid, 1);
	 	ResetPlayerWeapons(playerid);
	    dmyasagi[playerid] = 1;
	    DmSpawn1(playerid);
	    SetPlayerInterior(playerid,0);
	    GivePlayerWeapon(playerid, 24, 5000);
	    SetPlayerHealth(playerid,100.0);
	    SetPlayerArmour(playerid, 100.0);
	    DMZoneOyuncuModu[playerid] = DEAGLE;
		return true;
	}
	else if(dmde[playerid] == 2)
	{
	    HideModelSelectionMenu(playerid);
		SetPlayerVirtualWorld(playerid, 2);
		dmyasagi[playerid] = 1;
		ResetPlayerWeapons(playerid);
		DmSpawn2(playerid);
		SetPlayerInterior(playerid,1);
		GivePlayerWeapon(playerid, 38, 5000);
		SetPlayerHealth(playerid,100.0);
		SetPlayerArmour(playerid, 100.0);
		DMZoneOyuncuModu[playerid] = MG1;
		return true;
	}
	else if(dmde[playerid] == 3)
	{
	    HideModelSelectionMenu(playerid);
		SetPlayerVirtualWorld(playerid, 3);
		dmyasagi[playerid] = 1;
		ResetPlayerWeapons(playerid);
		DmSpawn3(playerid);
		SetPlayerInterior(playerid,0);
		GivePlayerWeapon(playerid, 4, 5000);
		SetPlayerHealth(playerid,0.1);
		SetPlayerArmour(playerid, 0.0);
		DMZoneOyuncuModu[playerid] = KNIFE;
		return true;
	}
	else if(dmde[playerid] == 4)
	{
	    HideModelSelectionMenu(playerid);
		SetPlayerVirtualWorld(playerid,13);
		ResetPlayerWeapons(playerid);
		dmyasagi[playerid] = 1;
		DmSpawn4(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerHealth(playerid,100.0);
		SetPlayerArmour(playerid,100.0);
		GivePlayerWeapon(playerid, 34, 5000);
		DMZoneOyuncuModu[playerid] = SNIPER;
		return true;
	}
	return true;
}

CMD:tune(playerid,params[])
{
	cmd_modifiye(playerid,"");
	return true;
}

CMD:modifiye(playerid,params[])
{
	new playerstate = GetPlayerState(playerid);
	if(playerstate == PLAYER_STATE_DRIVER)
	{
		return ModCar(playerid);
	}
	else
	{
		return Hata(playerid, "Bir araçta olmalýsýn.");
	}
}

forward ModCar(playerid);
public ModCar(playerid)
{
	switch(pmodelid[playerid])
	{
        case 562,565,559,561,560,575,534,567,536,535,576,411,579,602,496,518,527,589,597,419,
		533,526,474,545,517,410,600,436,580,439,549,491,445,604,507,585,587,466,492,546,551,516,
		426,547,405, 409,550,566,406,540,421,529,431,438,437,420,525,552,416,433,427,490,528,
		407,544,470,598,596,599,601,428,499,609,524,578,486,573,455,588,403,514,423,
		414,443,515,456,422,482,530,418,572,413,440,543,583,478,554,402,542,603,475,568,504,457,
        483,508,429,541,415,480,434,506,451,555,477,400,404,489,479,442,458,467,558:
		{
        	ShowPlayerDialog(playerid, DIALOGID, DIALOG_STYLE_LIST, ""safaf"Araç Modifiye","Paint Job\nRenkler\nEgzostlar\nÖn Tampon\nArka Tampon\nÇatý\nSpoiler\nYan Etekler\nBullbar\nTekerlerkler\nAraç Ses Sistemi\n[Diðer Sayfa]", ""ww"Seç", ""ww"Çýkýþ");
			return true;
		}
		default: return Hata(playerid, "Malesef bu aracý modifiye edemezsin.");
	}
	return true;
}

CMD:cevir(playerid,params[])
{

	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid,"Araçta olmalýsýn.");
	new Float:angle;
	GetVehicleZAngle(GetPlayerVehicleID(playerid),angle);
	SetVehicleZAngle(GetPlayerVehicleID(playerid),angle);
	SCM(playerid,-1,""safaf"Aracýnýz çevirildi.");
	return true;
}

CMD:dmler(playerid,params[])
{

	new dialog[1000];
	new deagle[100];
	new mg1[100];
	new knife[100];
	new sniper[100];

	format(deagle,sizeof(deagle),""ww"Deagle Deathmatch\t"ww"{00ff00}Aktif\t"ww"%i\n",CountDM(DEAGLE));
	format(mg1,sizeof(mg1),""ww"Minigun Deathmatch\t"ww"{00ff00}Aktif\t"ww"%i\n",CountDM(MG1));
	format(knife,sizeof(knife),""ww"Knife Deathmatch\t"ww"{00ff00}Aktif\t"ww"%i\n",CountDM(KNIFE));
	format(sniper,sizeof(sniper),""ww"Sniper Deathmatch\t"ww"{00ff00}Aktif\t"ww"%i\n",CountDM(SNIPER));

	strcat(dialog,""ww"DM Ýsmi\t"ww"Durum\t"ww"Kiþi Sayýsý\n");
	strcat(dialog,deagle);
	strcat(dialog,mg1);
	strcat(dialog,knife);
	strcat(dialog,sniper);
	ShowPlayerDialog(playerid,DIALOG_DM,DIALOG_STYLE_TABLIST_HEADERS,""safaf"DM - Deathmatch Listesi",dialog,""ww"Gir",""ww"Kapat");
	return true;
}

CMD:deathmatchler(playerid,params[])
{

	cmd_dmler(playerid,"");
	return true;
}

CMD:deathmatch(playerid,params[])
{

	cmd_dmler(playerid,"");
	return true;
}

CMD:deathmatchlar(playerid,params[])
{

	cmd_dmler(playerid,"");
	return true;
}

CMD:dm(playerid,params[])
{

	cmd_dmler(playerid,"");
	return true;
}

CMD:dms(playerid,params[])
{

	cmd_dmler(playerid,"");
	return true;
}

CMD:dmlist(playerid,params[])
{

	cmd_dmler(playerid,"");
	return true;
}

CMD:deathmatchlist(playerid,params[])
{

	cmd_dmler(playerid,"");
	return true;
}

stock dbas(baslik[])
{
	new stre[64];
	format(stre,64,"%s",baslik);
	return stre;
}

stock CountPARKOUR(event)
{
	new count = 0;
	foreach(new i : Player)
	{
		if(PlayerInfo[i][Parkour] == true)
		{
 		if(DMZoneOyuncuModu[i] == event)
   		{
     		count++;
	    }
	}
	}
	return count;
}

stock CountMG1()
{
	new count = 0;
	foreach(new i : Player)
	{
		if(dmde[i] == 2)
		{
     	count++;
		}
	}
	return count;
}

CMD:dmayril(playerid,params[]){
	if(dmde[playerid] == 0) return Hata(playerid,"Zaten DM'de deðilsiniz.");
    SetPlayerVirtualWorld(playerid, 0);
    dmyasagi[playerid] = 0;
    SetPlayerInterior(playerid,0);
    dmde[playerid] = 0;
    OnPlayerSpawn(playerid);
	return true;
}

stock OnlineTime(saniye)
{
	new a[500];
	if(saniye > 86400)
	{
		format(a,500,"%d GUN / ",(saniye/86400));
		saniye%=86400;
	}
	if(saniye > 3600)
	{
		format(a,500,"%s%d SAAT / ",a,saniye/3600);
		saniye%=3600;
	}
	if(saniye > 60)
	{
		format(a,500,"%s%dDAKIKA / ",a,saniye/60);
		saniye%=60;
	}
	if(saniye > 0)
	{
		format(a,500,"%s%dSANIYE",a,saniye);
	}
	return a;
}

CMD:etkmekani1(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
	SetPlayerPos(playerid, 1090.1387, 1075.2192, 392.6604);
	SCM(playerid, -1, ""safaf"Etkinlik Mekaný-1 adlý bölgeye gönderildiniz.");
	return true;
}

CMD:etkmekani2(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
	SetPlayerPos(playerid, -2452.8728, 4593.5635, 69.9667);
	SCM(playerid, -1, ""safaf"Etkinlik Mekaný-2 adlý bölgeye gönderildiniz.");
	return true;
}

stock clearchat(playerid)
{
	for(new i = 0; i < 120; i++)
	{
	SendClientMessage(playerid,-1," ");
	}
}

stock SpawnPlayer_(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))RemovePlayerFromVehicle(playerid);
	return SpawnPlayer(playerid);
}

CMD:animler(playerid,params[]){

	cmd_animasyonlar(playerid,"");
	return true;
}

CMD:animasyon(playerid,params[]){

	cmd_animasyonlar(playerid,"");
	return true;
}

CMD:animasyonlar(playerid,params[]){

	new DialogText[5000];
	strcat(DialogText, ""ww"Animasyonu Durdur              \t\t"ww"[/animdurdur]\n");
	strcat(DialogText, ""ww"Eller Havaya                   \t\t"ww"[/ellerhavaya]\n");
	strcat(DialogText, ""ww"Sarhos                         \t\t"ww"[/sarhos]\n");
	strcat(DialogText, ""ww"Bomba                          \t\t"ww"[/bomb]\n");
	strcat(DialogText, ""ww"Ateþ                           \t\t\t"ww"[/ates]\n");
	strcat(DialogText, ""ww"Gül                            \t\t\t"ww"[/gul]\n");
	strcat(DialogText, ""ww"Dgozetle                       \t\t"ww"[/dgozetle]\n");
	strcat(DialogText, ""ww"Hýrsýzlýk                      \t\t\t"ww"[/hirsizlik]\n");
	strcat(DialogText, ""ww"31                             \t\t\t"ww"[/31]\n");
	strcat(DialogText, ""ww"31 Bitis                       \t\t\t"ww"[/31bitis]\n");
	strcat(DialogText, ""ww"Yakalandýn                     \t\t"ww"[/yakalandin]\n");
	strcat(DialogText, ""ww"Vururum                        \t\t"ww"[/vururum]\n");
	strcat(DialogText, ""ww"Vuruldum                       \t\t"ww"[/vuruldum]\n");
	strcat(DialogText, ""ww"Þaplak Yedim                   \t\t"ww"[/saplakyedim]\n");
	strcat(DialogText, ""ww"Þaplak At                      \t\t"ww"[/saplakat]\n");
	strcat(DialogText, ""ww"Sigara                         \t\t\t"ww"[/sigara]\n");
	strcat(DialogText, ""ww"Sigara2                        \t\t"ww"[/sigara2]\n");
	strcat(DialogText, ""ww"El Salla                       \t\t\t"ww"[/elsalla]\n");
	strcat(DialogText, ""ww"Bak                            \t\t\t"ww"[/bak]\n");
	strcat(DialogText, ""ww"Uzan                           \t\t\t"ww"[/uzan]\n");
	strcat(DialogText, ""ww"Otur                           \t\t\t"ww"[/otur]\n");
	strcat(DialogText, ""ww"Yemek                          \t\t"ww"[/yemek]\n");
	strcat(DialogText, ""ww"Kus                            \t\t\t"ww"[/kus]\n");
	strcat(DialogText, ""ww"Öl                             \t\t\t"ww"[/ol]\n");
	strcat(DialogText, ""ww"Anlaþ                          \t\t\t"ww"[/anlas]\n");
	strcat(DialogText, ""ww"Öp                             \t\t\t"ww"[/op]\n");
	strcat(DialogText, ""ww"Emrah                          \t\t"ww"[/emrah]\n");
	strcat(DialogText, ""ww"Ne Var Lan                     \t\t"ww"[/nevarlan]\n");
	strcat(DialogText, ""ww"Ýþe                            \t\t\t"ww"[/ise]\n");
	strcat(DialogText, ""ww"Dans 1                         \t\t"ww"[/dans1]\n");
	strcat(DialogText, ""ww"Dans 2                         \t\t"ww"[/dans2]\n");
	strcat(DialogText, ""ww"Dans 3                         \t\t"ww"[/dans3]\n");
	strcat(DialogText, ""ww"Dans 4                         \t\t"ww"[/dans4]\n");
	strcat(DialogText, ""ww"Sex 1                          \t\t\t"ww"[/sex1]\n");
	strcat(DialogText, ""ww"Sex 2                          \t\t\t"ww"[/sex2]\n");
	strcat(DialogText, ""ww"Sex 3                          \t\t\t"ww"[/sex3]\n");
	strcat(DialogText, ""ww"Sex 4                          \t\t\t"ww"[/sex4]\n");
	strcat(DialogText, ""ww"Sex 5                          \t\t\t"ww"[/sex5]\n");
	strcat(DialogText, ""ww"Sex 6                          \t\t\t"ww"[/sex6]\n");
	ShowPlayerDialog(playerid, 1457, DIALOG_STYLE_LIST, ""safaf"Animasyonlar", DialogText, ""ww"Uygula", ""ww"Kapat");
	return true;
}

CMD:animdurdur(playerid, params[])
{




	ClearAnimations(playerid);
	SetPlayerSkin(playerid, GetPlayerSkin(playerid));
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"animasyonu {ffffff}durdurdunuz.");
	return true;
}


CMD:ellerhavaya(playerid, params[])
{




	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Eller Havaya {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sarhos(playerid, params[])
{




	ApplyAnimation(playerid, "PED", "WALK_DRUNK",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "PED", "WALK_DRUNK",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sarhoþ {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:bomb(playerid, params[])
{




	ApplyAnimation(playerid, "BOMBER", "BOM_Plant",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "BOMBER", "BOM_Plant",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Bomba {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:ates(playerid, params[])
{

	ApplyAnimation(playerid,"ped", "ARRESTgun",4.1,0,1,1,1,0);
	ApplyAnimation(playerid,"ped", "ARRESTgun",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Ateþ {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:gul(playerid, params[])
{

	ApplyAnimation(playerid, "RAPPING", "Laugh_01",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "RAPPING", "Laugh_01",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Gülme {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:dgozetle(playerid, params[])
{

	ApplyAnimation(playerid, "SHOP", "ROB_Shifty",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "SHOP", "ROB_Shifty",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"D Gözetle {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:hirsizlik(playerid, params[])
{

	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Hýrsýz {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:31(playerid, params[])
{

	ApplyAnimation(playerid, "PAULNMAC", "wank_loop",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"31 Çekme {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:31bitis(playerid, params[])
{

	ApplyAnimation(playerid, "PAULNMAC", "wank_out",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "PAULNMAC", "wank_out",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"31 Bitiþ {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:yakalandin(playerid, params[])
{

	ApplyAnimation(playerid, "POLICE", "plc_drgbst_01",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "POLICE", "plc_drgbst_01",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Yakalandýn {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:vururum(playerid, params[])
{

	ApplyAnimation(playerid, "POLICE", "crm_drgbst_01",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "POLICE", "crm_drgbst_01",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Vururum {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:vuruldum(playerid, params[])
{

	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Vuruldum {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:saplakyedim(playerid, params[])
{

	ApplyAnimation(playerid, "SWEET", "ho_ass_slapped",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "SWEET", "ho_ass_slapped",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Þaplak Yedim {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:saplakat(playerid, params[])
{

	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Þaplak At {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sigara(playerid, params[])
{

	ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 30.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 30.0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sigara {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sigara2(playerid, params[])
{

	ApplyAnimation(playerid,"SMOKING", "M_smklean_loop",4.1,0,1,1,1,0);
	ApplyAnimation(playerid,"SMOKING", "M_smklean_loop",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sigara2 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:elsalla(playerid, params[])
{

	ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"El Salla {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:bak(playerid, params[])
{

	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Bak {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:uzan(playerid, params[])
{

	ApplyAnimation(playerid,"BEACH", "bather",4.1,0,1,1,1,0);
	ApplyAnimation(playerid,"BEACH", "bather",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Uzan {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:otur(playerid, params[])
{

	ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,1,1,1,0);
	ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Otur {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:yemek(playerid, params[])
{

	ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Yemek {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:kus(playerid, params[])
{

	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Kus {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:ol(playerid, params[])
{

	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Öl {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:anlas(playerid, params[])
{

	ApplyAnimation(playerid, "DEALER", "DEALER_DEAL",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "DEALER", "DEALER_DEAL",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Anlaþ {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:op(playerid, params[])
{

	ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Öp {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:emrah(playerid, params[])
{

	ApplyAnimation(playerid, "CRACK", "crckdeth2",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "CRACK", "crckdeth2",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Emrah {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:nevarlan(playerid, params[])
{

	ApplyAnimation(playerid,"ped", "fucku",4.1,0,1,1,1,0);
	ApplyAnimation(playerid,"ped", "fucku",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Ne Var Lan {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:ise(playerid, params[])
{

	ApplyAnimation(playerid, "PAULNMAC", "Piss_loop",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "PAULNMAC", "Piss_loop",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Ýþe {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:dans1(playerid, params[])
{

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Dans 1 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:dans2(playerid, params[])
{

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Dans 2 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:dans3(playerid, params[])
{

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Dans 3 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:dans4(playerid, params[])
{

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Dans 4 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sex1(playerid, params[])
{

	ApplyAnimation(playerid, "PAULNMAC", "wank_loop",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "PAULNMAC", "wank_loop",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sex 1 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sex2(playerid, params[])
{

	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "SWEET", "sweet_ass_slap",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sex 2 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sex3(playerid, params[])
{

	ApplyAnimation(playerid, "MISC", "bitchslap",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "MISC", "bitchslap",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sex 3 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sex4(playerid, params[])
{

	ApplyAnimation(playerid, "PED", "fucku",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "PED", "fucku",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sex 4 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

CMD:sex6(playerid, params[])
{

	ApplyAnimation(playerid, "PAULNMAC", "PISS_LOOP",4.1,0,1,1,1,0);
	ApplyAnimation(playerid, "PAULNMAC", "PISS_LOOP",4.1,0,1,1,1,0);
	SendClientMessage(playerid,-1,""safaf"{ffffff}Þuanda "wb"Sex 6 {ffffff}adlý animasyonu yapýyorsunuz.");
	return true;
}

stock sesver(playerid)
{
	PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
}

CMD:spectime(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid, 6);
	new id;
	if(sscanf(params, "u", id)) return Kullanim(playerid, "spectime [ÝD/ÝSÝM]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil!");
	if(PlayerInfo[id][dLevel] < 1) return Hata(playerid, "Oyuncu yetkili deðil!");
	SFM(playerid, -1, ""safaf""ad"%s(%d) "w" günlük spec süresi: "wb"%s", getName(id), id, ConvertTime(PlayerInfo[id][GunlukSpec]));
	return true;
}

CMD:spec(playerid, params[])
{
	if((PlayerInfo[playerid][dLevel] < 1) && !IsPlayerAdmin(playerid))return YETERSIZSEVIYE(playerid,1);
	if(!strlen(params) || !IsNumeric(params)) return Kullanim(playerid,"spec [ÝD]");
	new specplayerid = strval(params);
	if(!IsPlayerConnected(specplayerid))return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[specplayerid][dLevel] == 10 && PlayerInfo[playerid][dLevel] != 10) return Hata(playerid,"Bu komutu bir oyun görevlisi üzerinde kullanamazsýn.");
	if(IsPlayerConnected(specplayerid) && specplayerid != INVALID_PLAYER_ID) {
	    if(specplayerid == playerid) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
		if(PlayerInfo[playerid][dLevel] < PlayerInfo[specplayerid][dLevel]) return Hata(playerid,"Sizden yüksek level olan birini izleyemezsiniz.");
		if(GetPlayerState(specplayerid) == PLAYER_STATE_SPECTATING && PlayerInfo[specplayerid][SpecID] != INVALID_PLAYER_ID) return Hata(playerid,"Ýzlemek istediðin oyuncu þuan izlemede.");
		if(GetPlayerState(specplayerid) != 1 && GetPlayerState(specplayerid) != 2 && GetPlayerState(specplayerid) != 3) return Hata(playerid,"Ýzlemek istediðin oyuncu spawn olmamýþ.");
		if((PlayerInfo[specplayerid][dLevel] != 10) ||(PlayerInfo[specplayerid][dLevel] == 10 && PlayerInfo[playerid][dLevel] == 10))	{
			StartSpectate(playerid, specplayerid);
			GetPlayerPos(playerid,pPos[playerid][0],pPos[playerid][1],pPos[playerid][2]);
			GetPlayerFacingAngle(playerid,pPos[playerid][3]);
			specyaptim[playerid] = 1;
			specdeyimaq[playerid] = 1;
			return true;
		} else return Hata(playerid,"Baþka bir oyun görevlisini izleyemezsiniz.");
	} else return Hata(playerid,"Oyuncu oyunda deðil.");
}

CMD:specoff(playerid,params[])
{
	if((PlayerInfo[playerid][dLevel] < 1) && !IsPlayerAdmin(playerid))return YETERSIZSEVIYE(playerid,2);
	if(PlayerInfo[playerid][SpecType] != ADMIN_SPEC_TYPE_NONE) {
		StopSpectate(playerid);
		specdeyimaq[playerid] = 0;
		return true;
	} else return Hata(playerid,"Zaten izleme modu kapalý.");
}

stock DeletePlayerWeapon(playerid, weaponid)
{
    new
        gWeaponData[13][2]
   ;

    for(new i; i != sizeof(gWeaponData); ++i)
    {
        GetPlayerWeaponData(playerid, i, gWeaponData[i][0], gWeaponData[i][1]);

        gWeaponData[i][1] = gWeaponData[i][1] < 0 ? -gWeaponData[i][1] : gWeaponData[i][1];
    }
    ResetPlayerWeapons(playerid);

    for(new i; i != sizeof(gWeaponData); ++i)
    {
        if(gWeaponData[i][0] != weaponid)
        {
            GivePlayerWeapon(playerid, gWeaponData[i][0], gWeaponData[i][1]);
        }
    }
    return true;
}

CMD:sethealth(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	new oyuncu,Float:miktar;
	if(sscanf(params,"if",oyuncu,miktar)) return Kullanim(playerid,"sethealth [ÝD] [MÝKTAR]");
	if(!IsPlayerConnected(oyuncu)) return Hata(playerid,"Oyuncu oyunda deðil.");
	//if(miktar > 100) return Hata(playerid,"En fazla 100 can verebilirsiniz.");
	if(miktar < 0) return Hata(playerid,"En az 0 can verebilirsiniz.");
	SetPlayerHealth(oyuncu,miktar);
	SFM(playerid,-1,""safaf"%s(%i) ismili oyuncunun canýný %f yaptýn.",getName(oyuncu),oyuncu,miktar);
	SFM(playerid,-1,""safaf"Yetkili %s(%i) canýný %f yaptý.",getName(playerid),playerid,miktar);
	return true;
}

CMD:setarmor(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	new oyuncu,Float:miktar;
	if(sscanf(params,"if",oyuncu,miktar)) return Kullanim(playerid,"setarmor [ÝD] [MÝKTAR]");
	if(!IsPlayerConnected(oyuncu)) return Hata(playerid,"Oyuncu oyunda deðil.");
	//if(miktar > 100) return Hata(playerid,"En fazla 100 zýrh verebilirsiniz.");
	if(miktar < 0) return Hata(playerid,"En az 0 zýrh verebilirsiniz.");
	SetPlayerArmour(oyuncu,miktar);
	SFM(playerid,-1,""safaf"%s(%i) ismili oyuncunun zýrhýný %f yaptýn.",getName(oyuncu),oyuncu,miktar);
	SFM(playerid,-1,""safaf"Yetkili %s(%i) zýrhýný %f yaptý.",getName(playerid),playerid,miktar);
	return true;
}

CMD:setarmour(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	new oyuncu,Float:miktar;
	if(sscanf(params,"if",oyuncu,miktar)) return Kullanim(playerid,"setarmour [ÝD] [MÝKTAR]");
	if(!IsPlayerConnected(oyuncu)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(miktar > 100) return Hata(playerid,"En fazla 100 zýrh verebilirsiniz.");
	if(miktar < 0) return Hata(playerid,"En az 0 zýrh verebilirsiniz.");
	SetPlayerArmour(oyuncu,miktar);
	SFM(playerid,-1,""safaf"%s(%i) ismili oyuncunun zýrhýný %f yaptýn.",getName(oyuncu),oyuncu,miktar);
	SFM(playerid,-1,""safaf"Yetkili %s(%i) zýrhýný %f yaptý.",getName(playerid),playerid,miktar);
	return true;
}

CMD:getid(playerid, params[])
{
	new kelime[256], str[10000], toplamstr[10000], sira = 1, sira2;
	if(sscanf(params, "s[256]", kelime)) return Kullanim(playerid, "getid [ARANAN KELÝME]");
	strcat(toplamstr, ""ww"Sýra\t"ww"Ýsim\n");
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][PlayerCeteID] != -1)
	    {
		    if(strfind(getName(i), kelime, true) != -1 || strfind(Ceteler[PlayerInfo[i][PlayerCeteID]][cTag], kelime, true) != -1)
		    {
		        format(str, sizeof(str), ""ww"%d\t"ww"%s[%s](%d)\n", sira, getName(i), Ceteler[PlayerInfo[i][PlayerCeteID]][cTag], i);
		        strcat(toplamstr, str);
		        sira++;
		        sira2++;
		    }
	    }
	    else
	    {
	        if(strfind(getName(i), kelime, true) != -1)
		    {
		        format(str, sizeof(str), ""ww"%d\t"ww"%s(%d)\n", sira, getName(i), i);
		        strcat(toplamstr, str);
		        sira++;
		        sira2++;
		    }
	    }
	}
	if(sira2 == 0) return Hata(playerid, "Sonuç bulunamadý.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Getid", toplamstr, ""ww"Kapat", "");
	return true;
}

CMD:ann5(playerid,params[])
{
	if((PlayerInfo[playerid][dLevel] >= 2))
	{
		new yazi[256];
		if(sscanf(params, "s[256]", yazi)) return Kullanim(playerid, "ann5 [YAZI]");
		new sZ[56];
		format(sZ, 56, "%s", yazi);
		strdelm(sZ," ");
		if((strcount(sZ, "~")%2) != 0) return Hata(playerid, "Yazýda uygunsuz karakterler var!");
		new string[256]; format(string, sizeof(string), "~w~~h~~h~%s", code(yazi));
		TextDrawSetString(duyuru, string);
		TextDrawShowForAll(duyuru);
		printf("» ANN5 KULLANAN : %s(%d):%s", getName(playerid), playerid, yazi);
		if(duyurutimer != -1) KillTimer(duyurutimer);
		duyurutimer = SetTimer("duyurusil", 4700, false);
		return true;
	} else return YETERSIZSEVIYE(playerid,2);
}

forward duyurusil();
public duyurusil()
{
	duyurutimer = -1;
	TextDrawHideForAll(duyuru);
	return true;
}

CMD:ann(playerid,params[]) {

    new string[256];
    if((PlayerInfo[playerid][dLevel] >= 2)) {
        new yazi[256];
    	if(sscanf(params,"s[256]",yazi)) return Kullanim(playerid,"ann [YAZI]");
    	format(string,sizeof(string),"~w~~h~~h~%s",code(yazi));
    	printf("» ANN KULLANAN : %s(%d):%s",getName(playerid),playerid,yazi);
		return GameTextForAll(string,4000,3);
    } else return YETERSIZSEVIYE(playerid,2);
}

CMD:ann2(playerid,params[]) {

    new string[256];
    if((PlayerInfo[playerid][dLevel] >= 2)) {
        new yazi[256];
    	if(sscanf(params,"s[256]",yazi)) return Kullanim(playerid,"ann2 [YAZI]");
 		new sZ[56];
		format(sZ,56,"%s",yazi);
        strdelm(sZ," ");
        if((strcount(sZ, "~")%2) != 0) return Hata(playerid,"Yazýda uygunsuz karakterler var!");
		format(string,sizeof(string),"~r~~h~%s",code(yazi));
		printf("» ANN2 KULLANAN : %s(%d):%s",getName(playerid),playerid,yazi);
		return GameTextForAll(string,4000,3);
    } else return YETERSIZSEVIYE(playerid,2);
}

CMD:ann3(playerid,params[]) {

    new string[256];
    if((PlayerInfo[playerid][dLevel] >= 4) || IsPlayerAdmin(playerid)) {
        new yazi[256];
    	if(sscanf(params,"s[256]",yazi)) return Kullanim(playerid,"ann3 [YAZI]");
 		new sZ[56];
		format(sZ,56,"%s",yazi);
        strdelm(sZ," ");
        if((strcount(sZ, "~")%2) != 0) return Hata(playerid,"Yazýda uygunsuz karakterler var!");
		format(string,sizeof(string),"~b~~h~%s",code(yazi));
		printf("» ANN3 KULLANAN : %s(%d):%s",getName(playerid),playerid,yazi);
		return GameTextForAll(string,4000,0);
    } else return YETERSIZSEVIYE(playerid,4);
}

CMD:spawn(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 4) return YETERSIZSEVIYE(playerid,4);
	new id;
	if(sscanf(params,"i",id)) return Kullanim(playerid,"spawn [ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	OnPlayerSpawn(id);
	SFM(id,-1,""safaf"Yetkili %s(%i) sizi spawn etti.",getName(playerid),playerid);
	SFM(playerid,-1,""safaf"%s(%i) adlý oyuncuyu spawn ettiniz.",getName(id),id);
	return true;
}

CMD:ann4(playerid,params[]) {

    new string[256];
    if((PlayerInfo[playerid][dLevel] >= 4) || IsPlayerAdmin(playerid)) {
		new yazi[256];
    	if(sscanf(params,"s[256]",yazi)) return Kullanim(playerid,"ann4 [YAZI]");
 		new sZ[56];
		format(sZ,56,"%s",yazi);
        strdelm(sZ," ");
        if((strcount(sZ, "~")%2) != 0) return Hata(playerid,"Yazýda uygunsuz karakterler var!");
		format(string,sizeof(string),"~g~~h~~g~%s",code(yazi));
		printf("» ANN4 KULLANAN : %s(%d):%s",getName(playerid),playerid,yazi);
		return GameTextForAll(string,4000,1);
    } else return YETERSIZSEVIYE(playerid,4);
}

CMD:say(playerid, params[])
{

	if(spamProtect(playerid, "Say", 30)) {
		//beklemesuresi(playerid,30);
		return true;
	}
	new
	    Float:MyCoord[3];
	GetPlayerPos(playerid, MyCoord[0], MyCoord[1], MyCoord[2]);
	foreach(new x: Player)
	{
		if(!IsPlayerConnected(x)) continue;
		if(IsPlayerInRangeOfPoint(x, 20.0, MyCoord[0], MyCoord[1], MyCoord[2]))
		{
			PlayerInfo[x][Etkinlik_Sayac] = 6;
			KillTimer(PlayerInfo[x][Etkinlik_Timer]);
		 	PlayerInfo[x][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", x);
  		}
	}
	return true;
}

function Etkinlik_Sayim(playerid)
{
	switch(PlayerInfo[playerid][Etkinlik_Sayac])
	{
	    case 0:
		{
			GameTextForPlayer(playerid, "~w~~h~~h~[5] ~w~~h~~h~[4] ~w~~h~~h~[3] ~w~~h~~h~[2] ~w~~h~~h~[1]~w~~h~~h~ [HAZIR]~r~ [GO!]", 1500, 6),PlayerPlaySound(playerid,1057,0.0,0.0,0.0), KillTimer(PlayerInfo[playerid][Etkinlik_Timer]), TogglePlayerControllable(playerid, 1);
			if(RaceDuelde[playerid] == true)
			{
			    RaceDuelVitesAtma[playerid] = true;
			    
				CPrace_duel_cp[playerid] = race_duel_cp1;
				SetPlayerCheckpoint(playerid, race_duel_cp1_CO, 20.0);
				RaceTabloTimer[playerid] = SetTimerEx("RaceTabloGuncelle", 1000, true, "d", playerid);

				RACEkontrol = SetTimerEx("rrrr", 850, true, "d", playerid);
			}
			
			if(Yarista[playerid] == true)
			{
			    SetTimerEx("RemoteKapat_Yaris", 2500, false, "d", playerid);
			    RaceZamanTutum[playerid] = gettime();

				for(new i = 0; i < 8; i++)
				{
				    TextDrawHideForPlayer(playerid, Yaris_Top5[i]);
				}
			    
			    for(new i = 0; i < 4; i++)
			    {
			        TextDrawShowForPlayer(playerid, YarisBilgiText[playerid][i]);
			    }
			}
		}
	    case 1: GameTextForPlayer(playerid, "~w~~h~~h~[5] ~w~~h~~h~[4] ~w~~h~~h~[3] ~w~~h~~h~[2] ~w~~h~~h~[1]~r~ [HAZIR]~w~~h~~h~ [GO]", 1500, 6),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 2: GameTextForPlayer(playerid, "~w~~h~~h~[5] ~w~~h~~h~[4] ~w~~h~~h~[3] ~w~~h~~h~[2] ~r~[1]~w~~h~~h~ [HAZIR] [GO]", 1500, 6),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 3: GameTextForPlayer(playerid, "~w~~h~~h~[5] ~w~~h~~h~[4] ~w~~h~~h~[3] ~r~[2] ~w~~h~~h~[1] [HAZIR] [GO]", 1500, 6),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 4: GameTextForPlayer(playerid, "~w~~h~~h~[5] ~w~~h~~h~[4] ~r~[3] ~w~~h~~h~[2] [1] [HAZIR] [GO]", 1500, 6),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 5: GameTextForPlayer(playerid, "~w~~h~~h~[5] ~r~[4] ~w~~h~~h~[3] [2] [1] [HAZIR] [GO]", 1500, 6),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
		case 6: GameTextForPlayer(playerid, "~r~[5] ~w~~h~~h~[4] ~w~~h~~h~[3] [2] [1] [HAZIR] [GO]", 1500, 6),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	}
	PlayerInfo[playerid][Etkinlik_Sayac]--;
	return true;
}

function Etkinlik_Sayim2(playerid)
{
	switch(PlayerInfo[playerid][Etkinlik_Sayac])
	{
	    case 0:
		{
			GameTextForPlayer(playerid, "~r~~h~~h~~h~~h~~h~GO!", 1500, 5),PlayerPlaySound(playerid,1057,0.0,0.0,0.0), KillTimer(PlayerInfo[playerid][Etkinlik_Timer]), TogglePlayerControllable(playerid, true),KillTimer(countTimer[playerid]),countingPlayer[playerid] = COUNT_SAY,countTimer[playerid] = SetTimerEx("Say",1 * 1000, true, "i", playerid);
		}
	    case 1: GameTextForPlayer(playerid, "~r~~h~~h~~h~~h~HAZIR", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 2: GameTextForPlayer(playerid, "~r~~h~~h~~h~1", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 3: GameTextForPlayer(playerid, "~r~~h~~h~2", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 4: GameTextForPlayer(playerid, "~r~~h~3", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 5: GameTextForPlayer(playerid, "~r~~h~4", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
		case 6: GameTextForPlayer(playerid, "~r~5", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	}
	PlayerInfo[playerid][Etkinlik_Sayac]--;
	return true;
}

stock StartSpectate(playerid, specplayerid)
{
	for(new x=0; x<MAX_PLAYERS; x++)
	{
	    if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] == playerid)
		{
	       AdvanceSpectate(x);
		}
	}
	SetPlayerInterior(playerid,GetPlayerInterior(specplayerid));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(specplayerid));
	TogglePlayerSpectating(playerid, 1);
	Spectekiler[playerid] = 1;

	if(IsPlayerInAnyVehicle(specplayerid))
	{
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(specplayerid));
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_VEHICLE;
	}
	else
	{
		PlayerSpectatePlayer(playerid, specplayerid);
		PlayerInfo[playerid][SpecID] = specplayerid;
		PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_PLAYER;
	}
	SFM(playerid, -1, ""safaf"Baþarýyla izleme moduna geçtiniz. Ýzlenen oyuncu: "ad"%s(%d)", getName(specplayerid), specplayerid);
	return true;
}

stock StopSpectate(playerid)
{
    Spectekiler[playerid] = 0;
	TogglePlayerSpectating(playerid, 0);
	SetPlayerVirtualWorld(playerid,0);
	PlayerInfo[playerid][SpecID] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][SpecType] = ADMIN_SPEC_TYPE_NONE;
	SCM(playerid, -1, ""safaf"Ýzleme modundan baþarýyla ayrýldýnýz.");
	return true;
}

stock AdvanceSpectate(playerid)
{
	new dondumbasa;
    if(Iter_Count(Player) == 2) { StopSpectate(playerid); return true; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    new x=PlayerInfo[playerid][SpecID]+1;
	    if(x >= MAX_PLAYERS) x = 0;
	    for(; x<=MAX_PLAYERS; x++)
		{
	    	if(x >= MAX_PLAYERS) x = 0,dondumbasa++;
	        if(IsPlayerConnected(x) && x != playerid &&(PlayerInfo[playerid][dLevel] > PlayerInfo[x][dLevel]))
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID ||(GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
			if(dondumbasa > 2)return true;
		}
	}
	return true;
}

stock ReverseSpectate(playerid)
{
    new dondumbasa;
    if(Iter_Count(Player) == 2) { StopSpectate(playerid); return true; }
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING && PlayerInfo[playerid][SpecID] != INVALID_PLAYER_ID)
	{
	    new x = PlayerInfo[playerid][SpecID]-1;
	    if(x < 0)x = MAX_PLAYERS-1;
	    for(; x>=0; x--)
		{
	    	if(x < 0) x = MAX_PLAYERS-1,dondumbasa++;
	        if(IsPlayerConnected(x) && x != playerid &&(PlayerInfo[playerid][dLevel] > PlayerInfo[x][dLevel]))
			{
				if(GetPlayerState(x) == PLAYER_STATE_SPECTATING && PlayerInfo[x][SpecID] != INVALID_PLAYER_ID ||(GetPlayerState(x) != 1 && GetPlayerState(x) != 2 && GetPlayerState(x) != 3))
				{
					continue;
				}
				else
				{
					StartSpectate(playerid, x);
					break;
				}
			}
			if(dondumbasa > 2)return true;
		}
	}
	return true;
}

CMD:warp(playerid,params[]){
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new id1,id2;
	if(sscanf(params,"ii",id1,id2)) return Kullanim(playerid,"warp [ÝD 1] [ÝD 2]");
	if(!IsPlayerConnected(id1)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(!IsPlayerConnected(id2)) return Hata(playerid,"Oyuncu oyunda deðil.");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(id2,x,y,z);
	SetPlayerPV(id1,x,y,z);
	SFM(playerid,-1,""safaf"%s(%i) adlý oyuncuyu %s(%i) adlý oyuncunun yanýna gönderdiniz.",getName(id1),id1,getName(id2),id2);
	SFM(id1,-1,""safaf"Yetkili %s(%i) sizi %s(%i) adlý oyuncunun yanýna gönderdi.",getName(playerid),playerid,getName(id2),id2);
	SFM(id2,-1,""safaf"Yetkili %s(%i), %s(%i) isimli oyuncuyu sizin yanýnýza gönderdi.",getName(playerid),playerid,getName(id1),id1);
	return true;
}

CMD:slap(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 5 && PlayerInfo[playerid][VIP] < 2) return YETERSIZSEVIYE(playerid,5);
	new oyuncu;
	if(sscanf(params,"i",oyuncu)) return Kullanim(playerid,"slap [ÝD]");
	if(!IsPlayerConnected(oyuncu)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[oyuncu][dLevel]) return Hata(playerid,"Sizden yüksek level birine osmanlý tokadý atamazsýnýz.");
    if(!strcmp(getName(oyuncu),"flareoNNN") || !strcmp(getName(oyuncu),"Ethernos") || !strcmp(getName(oyuncu),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	new Float:lx,Float:ly,Float:lz;
	GetPlayerPos(oyuncu,lx,ly,lz);
	SetPlayerPos(oyuncu,lx,ly,lz+3);
	SFM(oyuncu,-1,""safaf"Yetkili %s(%i) size osmanlý tokadý attý.",getName(playerid),playerid);
	SFM(playerid,-1,""safaf"%s(%i) adlý oyuncuya osmanlý tokadý attýnýz.",getName(oyuncu),oyuncu);
	format(estring,sizeof(estring),"~r~~h~[Tokat atildi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan osmanli tokadi atildi.",getName(oyuncu),oyuncu,getName(playerid),playerid);
	TextMesaji(code(estring));
	SetPlayerHealth(oyuncu, GetPlayerHealth(oyuncu) - 15);
	return true;
}

CMD:fullget(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	if(i == playerid) continue;
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPlayerPV(i,x,y,z);
	}
	format(estring,sizeof(estring),"~r~~h~[FullGet] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyuncular cekildi.",getName(playerid),playerid);
	TextMesaji(code(estring));
	return true;
}

CMD:fullspawn(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	OnPlayerSpawn(i);
	}
	format(estring,sizeof(estring),"~r~~h~[FullSpawn] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyuncular spawn edildi.",getName(playerid),playerid);
	TextMesaji(code(estring));
	return true;
}

CMD:fullkick(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	format(estring,sizeof(estring),"~r~~h~[FullKick] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyuncular kicklendi.",getName(playerid),playerid);
	TextMesaji(code(estring));
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	    if(i == playerid) continue;
        KickMag(i,playerid,"FullKick");
	}
	return true;
}

CMD:fullfreeze(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	    if(i == playerid) continue;
        TogglePlayerControllable(i,false);
	}
	format(estring,sizeof(estring),"~r~~h~[FullFreeze] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyuncular donduruldu.",getName(playerid),playerid);
	TextMesaji(code(estring));
	return true;
}

CMD:fullunfreeze(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	    if(i == playerid) continue;
        TogglePlayerControllable(i,true);
	}
	format(estring,sizeof(estring),"~r~~h~[FullUnFreeze] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyuncularin donma cezasi kaldirildi.",getName(playerid),playerid);
	TextMesaji(code(estring));
	return true;
}

CMD:fullskin(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	new skin;
	if(sscanf(params,"i",skin)) return Kullanim(playerid,"fullskin [SKÝN ÝD]");
	if(skin < 0 || skin > 311) return Hata(playerid,"Böyle bir skin yok.");
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	SetPlayerSkin(i,skin);
	}
	format(estring,sizeof(estring),"~r~~h~[FullSkin] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyuncularin skinini %i yapti.",getName(playerid),playerid,skin);
	TextMesaji(code(estring));
	return true;
}

CMD:setskin(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new id,skin;
	if(skin < 0 || skin > 311) return Hata(playerid,"Böyle bir skin yok.");
	if(sscanf(params,"ii",id,skin)) return Kullanim(playerid,"setskin [ÝD] [SKÝN ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	SetPlayerSkin(id,skin);
	return true;
}

CMD:akill(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid,6);
	new oID;
	if(sscanf(params,"i",oID)) return Kullanim(playerid,"akill [ÝD]");
	if(!IsPlayerConnected(oID)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[oID][dLevel]) return Hata(playerid,"Sizden yüksek level birini öldüremezsiniz.");
    if(!strcmp(getName(oID),"flareoNNN") || !strcmp(getName(oID),"Ethernos") || !strcmp(getName(oID),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	SetPlayerHealth(oID,-1);
	SFM(playerid,-1,""safaf"%s(%i) adlý oyuncuyu öldürdünüz.",getName(oID),oID);
	SFM(oID,-1,""safaf"Yetkili %s(%i) sizi öldürdü.",getName(playerid),playerid);
	return true;
}

CMD:myweapon(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 7) return YETERSIZSEVIYE(playerid,7);
	GivePlayerWeapon(playerid,28,1000);
	GivePlayerWeapon(playerid,31,1000);
	GivePlayerWeapon(playerid,34,1000);
	GivePlayerWeapon(playerid,16,1000);
	GivePlayerWeapon(playerid,42,1000);
	GivePlayerWeapon(playerid,14,1000);
	GivePlayerWeapon(playerid,46,1000);
	GivePlayerWeapon(playerid,9,1);
	GivePlayerWeapon(playerid,24,1000);
	GivePlayerWeapon(playerid,26,1000);
	SCM(playerid,-1,""safaf"Üzerinize çeþitli silahlar verildi.");
	return true;
}

CMD:fire(playerid,params[]){

	Kullanim(playerid,"burn [ÝD]");
	return true;
}

CMD:burn(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 4) return YETERSIZSEVIYE(playerid,4);
	new id;
	if(sscanf(params,"i",id)) return Kullanim(playerid,"burn [ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(id,x,y,z);
	CreateExplosion(x, y , z + 3, 1, 10);
	SetPlayerHealth(id, GetPlayerHealth(id) - 15);
	return true;
}

CMD:setworld(playerid,params[]){

	if(PlayerInfo[playerid][dLevel] < 3) return YETERSIZSEVIYE(playerid,3);
	new oyuncu,dunya;
	if(sscanf(params,"ii",oyuncu,dunya)) return Kullanim(playerid,"setworld [ÝD] [DÜNYA ÝD]");
	if(!IsPlayerConnected(oyuncu)) return Hata(playerid,"Oyuncu oyunda deðil.");
	SetPlayerVirtualWorld(oyuncu,dunya);
	SFM(playerid,-1,""safaf"%s(%i) adlý oyuncunun dünyasýný %i yaptýnýz.",getName(oyuncu),oyuncu,dunya);
	SFM(oyuncu,-1,""safaf"Yetkili %s(%i) tarafýndan dünyanýz %i yapýldý.",getName(playerid),playerid,dunya);
	return true;
}

CMD:myammo(playerid,params[]){

if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid,1);
MaxAmmo(playerid);
SCM(playerid,-1,""safaf"Üzerinizdeki silahlarýn mermileri fullendi.");
return true;
}

MaxAmmo(playerid)
{
	new slot, weap, ammo;
	for(slot = 0; slot < 14; slot++)
	{
    	GetPlayerWeaponData(playerid, slot, weap, ammo);
		if(IsValidWeapon(weap))
		{
		   	GivePlayerWeapon(playerid, weap, 99999);
		}
	}
	return true;
}

CMD:rapor(playerid,params[])
{
	new id;
	new sebep[256];
	if(sscanf(params,"is[250]",id,sebep)) return Kullanim(playerid,"rapor [ÝD] [SEBEP]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(spamProtect(playerid, "rapor", 30)) return true;
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	if(PlayerInfo[i][dLevel] >= 1)
	{
	new reportstr[500],reportstr2[500];
	format(reportstr,sizeof(reportstr),"{ffff00}[RAPOR] {00ffff}%s(%i) {ffff00}» {00ffff}%s(%i) {ffff00}SEBEP: {00ffff}%s",getName(playerid),playerid,getName(id),id,sebep);
	SendClientMessage(i,-1,reportstr);
	format(reportstr2,sizeof(reportstr2),"{ffff00}(%s)",TarihCek());
	SendClientMessage(i,-1,reportstr2);
	switch(E_rapor_c)
    {
        case 0: format(Rapor1,sizeof Rapor1, "%s - %s\n", reportstr,reportstr2), E_rapor_c = 1;
        case 1: format(Rapor2,sizeof Rapor2, "%s - %s\n", reportstr,reportstr2), E_rapor_c = 2;
        case 2: format(Rapor3,sizeof Rapor3, "%s - %s\n", reportstr,reportstr2), E_rapor_c = 3;
        case 3: format(Rapor4,sizeof Rapor4, "%s - %s\n", reportstr,reportstr2), E_rapor_c = 4;
        case 4: format(Rapor5,sizeof Rapor5, "%s - %s", reportstr,reportstr2), E_rapor_c = 0;
	}
	}
	}
	SCM(playerid, -1, ""safaf"Raporunuz baþarýlý bir þekilde çevrimiçi yetkililere iletilmiþtir.");
	return true;
}

CMD:bugrapor(playerid,params[]){
	new sebep[256];
	if(sscanf(params,"s[250]",sebep)) return Kullanim(playerid,"bugrapor [AÇIKLAMA]");
	if(spamProtect(playerid, "bugrapor", 30)) return true;
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	if(PlayerInfo[i][dLevel] >= 1)
	{
	new reportstr[500];
	format(reportstr,sizeof(reportstr),"{ffff00}[BUG-RAPOR] {00ffff}%s(%i) {ffff00}» {00ffff}%s",getName(playerid),playerid,sebep);
	SendClientMessage(i,-1,reportstr);
	format(reportstr,sizeof(reportstr),"{ffff00}(%s)",TarihCek());
	SendClientMessage(i,-1,reportstr);
	}
	}
	BugRaporLog(playerid,sebep);
	SCM(playerid, -1, ""safaf"Raporunuz baþarýlý bir þekilde kaydedilmiþtir. Bildirim için teþekkür ederiz.");
	new sql[2048];
	format(sql, sizeof(sql), "INSERT INTO `bugraporlog` (`gonderen`, `mesaj`, `tarih`) VALUES ('%s', '%s', '%s')", getName(playerid), code(sebep), TarihCek());
	mysql_query(mysqlC, sql);
	return true;
}

CMD:report(playerid,params[])
{
	return cmd_rapor(playerid, params);
}

CMD:time(playerid,params[])
{
	new satir[128];
	format(satir,sizeof(satir),""safaf"Tarih ve Saat: %s",TarihCek());
	SendClientMessage(playerid,-1,satir);
	sesver(playerid);
	return true;
}

CMD:zaman(playerid,params[])
{
	Kullanim(playerid,"time");
	return true;
}

CMD:saatkac(playerid,params[])
{
	Kullanim(playerid,"time");
	return true;
}

CMD:saat(playerid,params[])
{
	Kullanim(playerid,"time");
	return true;
}

CMD:tarih(playerid,params[])
{
	Kullanim(playerid,"time");
	return true;
}

CMD:tarihne(playerid,params[])
{
	Kullanim(playerid,"time");
	return true;
}

stock labelayarla(playerid)
{
    new cetedekirutbesi[128];
	if(PlayerInfo[playerid][PlayerCeteID] != -1)
	{
		switch(PlayerInfo[playerid][PlayerCeteRutbeID])
		{
		    case 0: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
		    case 1: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
		    case 2: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
		    case 3: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
		    case 4: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
		    case 5: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
		    case 6: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
		    case 7: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
		    case 8: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
		    case 9: format(cetedekirutbesi,sizeof(cetedekirutbesi),"%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
		}
	}

	new afkmi[128];
	if(PlayerInfo[playerid][AFK] == true) format(afkmi, sizeof afkmi, "[AFK]");
	else
	{
		format(afkmi, sizeof afkmi, " ");
	}

	new string[5000], AyarlanacakStr[500], yazi[500], Float: can, satir1[500], satir2[500], satir3[500];
	if(PlayerInfo[playerid][PlayerCeteID] == -1)
	{
		if(PlayerInfo[playerid][dLevel] >= 1)
		{
			GetPlayerHealth(playerid,can);
			if(can > 100)
			{
				can = 100;
			}
			format(AyarlanacakStr,500,"%.00f",can);
			for(new i; i < floatstr(AyarlanacakStr)/3; i++){yazi[i] = 'l'; }
			format(satir2,sizeof(satir2),"{%06x}Lv.{FFFFFF}%d {%06x}%s {%06x}({FFFFFF}%i{%06x}) {FF8000}%s\n",GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][seviye],GetPlayerColor(playerid)>>>8,getName(playerid),GetPlayerColor(playerid)>>>8,playerid,GetPlayerColor(playerid)>>>8, afkmi);
			if(strcmp(PlayerInfo[playerid][YetkiIsim], " "))
			{
			    format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n%s",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][YetkiIsim]);
			}
			else
			{
				format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n%i Level Oyun Görevlisi",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][dLevel]);
			}
			format(string,5000,"%s%s",satir2,satir3);
			Update3DTextLabelText(siraclabel[playerid], -1, string);
		}
		else if(PlayerInfo[playerid][VIP] >= 1)
		{
			GetPlayerHealth(playerid,can);
			if(can > 100)
			{
				can = 100;
			}
			format(AyarlanacakStr,500,"%.00f",can);
			for(new i; i < floatstr(AyarlanacakStr)/3; i++){yazi[i] = 'l'; }
			format(satir2,sizeof(satir2),"{%06x}Lv.{FFFFFF}%d {%06x}%s {%06x}({FFFFFF}%i{%06x}) {FF8000}%s\n",GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][seviye],GetPlayerColor(playerid)>>>8,getName(playerid),GetPlayerColor(playerid)>>>8,playerid,GetPlayerColor(playerid)>>>8, afkmi);
			format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n%d Level VIP",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][VIP]);
			format(string,5000,"%s%s",satir2,satir3);
			Update3DTextLabelText(siraclabel[playerid], -1, string);
		}
		else
		{
			GetPlayerHealth(playerid,can);
			if(can > 100)
			{
				can = 100;
			}
			format(AyarlanacakStr,500,"%.00f",can);
			for(new i; i < floatstr(AyarlanacakStr)/3; i++){yazi[i] = 'l'; }
			format(satir2,sizeof(satir2),"{%06x}Lv.{FFFFFF}%d {%06x} %s {%06x}({FFFFFF}%i{%06x}) {FF8000}%s\n",GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][seviye],GetPlayerColor(playerid)>>>8,getName(playerid),GetPlayerColor(playerid)>>>8,playerid,GetPlayerColor(playerid)>>>8, afkmi);
			format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8);
			format(string,5000,"%s%s",satir2,satir3);
			Update3DTextLabelText(siraclabel[playerid], -1, string);
		}
	}
	else
	{
		if(PlayerInfo[playerid][dLevel] >= 1)
		{
			GetPlayerHealth(playerid,can);
			if(can > 100)
			{
				can = 100;
			}
			format(AyarlanacakStr,500,"%.00f",can);
			for(new i; i < floatstr(AyarlanacakStr)/3; i++){yazi[i] = 'l'; }
			format(satir1,sizeof(satir1),"{%s}[%s] - %s -(%s)\n",CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim],cetedekirutbesi);
			format(satir2,sizeof(satir2),"{%06x}Lv.{FFFFFF}%d {%06x}%s[%s] {%06x}({FFFFFF}%i{%06x}) {FF8000}%s\n",GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][seviye],GetPlayerColor(playerid)>>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],GetPlayerColor(playerid)>>>8,playerid,GetPlayerColor(playerid)>>>8, afkmi);
			if(strcmp(PlayerInfo[playerid][YetkiIsim], " "))
			{
			    format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n%s",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][YetkiIsim]);
			}
			else
			{
				format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n%i Level Oyun Görevlisi",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][dLevel]);
			}
			format(string,5000,"%s%s%s",satir1,satir2,satir3);
			Update3DTextLabelText(siraclabel[playerid], -1, string);
		}
		else if(PlayerInfo[playerid][VIP] >= 1)
		{
			GetPlayerHealth(playerid,can);
			if(can > 100)
			{
				can = 100;
			}
			format(AyarlanacakStr,500,"%.00f",can);
			for(new i; i < floatstr(AyarlanacakStr)/3; i++){yazi[i] = 'l'; }
			format(satir1,sizeof(satir1),"{%s}[%s] - %s -(%s)\n",CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim],cetedekirutbesi);
			format(satir2,sizeof(satir2),"{%06x}Lv.{FFFFFF}%d {%06x}%s[%s] {%06x}({FFFFFF}%i{%06x}) {FF8000}%s\n",GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][seviye],GetPlayerColor(playerid)>>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],GetPlayerColor(playerid)>>>8,playerid,GetPlayerColor(playerid)>>>8,afkmi);
			format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n%i Level VIP",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][VIP]);
			format(string,5000,"%s%s%s",satir1,satir2,satir3);
			Update3DTextLabelText(siraclabel[playerid], -1, string);
		}
		else
		{
			GetPlayerHealth(playerid,can);
			if(can > 100)
			{
				can = 100;
			}
			format(AyarlanacakStr,500,"%.00f",can);
			for(new i; i < floatstr(AyarlanacakStr)/3; i++){yazi[i] = 'l'; }
			format(satir1,sizeof(satir1),"{%s}[%s] - %s -(%s)\n",CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim],cetedekirutbesi);
			format(satir2,sizeof(satir2),"{%06x}Lv.{FFFFFF}%d {%06x}%s[%s] {%06x}({FFFFFF}%i{%06x}) {FF8000}%s\n",GetPlayerColor(playerid)>>>8,PlayerInfo[playerid][seviye],GetPlayerColor(playerid)>>>8,getName(playerid),Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag],GetPlayerColor(playerid)>>>8,playerid,GetPlayerColor(playerid)>>>8, afkmi);
			format(satir3,sizeof(satir3),"{%06x}[{FFFFFF} %s {%06x}]\n",GetPlayerColor(playerid)>>>8,yazi,GetPlayerColor(playerid)>>>8);
			format(string,5000,"%s%s%s",satir1,satir2,satir3);
			Update3DTextLabelText(siraclabel[playerid], -1, string);
		}
	}
}

forward FPSUP();
public FPSUP()
{
	new string[24];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			format(string, sizeof(string), "FPS: %d", FPS2[i] - 1);
			TextDrawSetString(FPS[i], string);
		}
		continue;
	}
}

CMD:bagaj(playerid,params[])
{

	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Sürücü olmalýsýnýz.");
	new vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective;
	vid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "Aracbagaji") == 1){
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,VEHICLE_PARAMS_OFF,objective);
	SetPVarInt(playerid,"Aracbagaji",0);
	SCM(playerid,-1,""safaf"Aracýnýzýn bagajý kapatýldý.");
	}else{
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,VEHICLE_PARAMS_ON,objective);
	SetPVarInt(playerid,"Aracbagaji",1);
	SCM(playerid,-1,""safaf"Aracýnýzýn bagajý açýldý.");
	}
	return true;
}

CMD:kaput(playerid,params[])
{

	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Sürücü olmalýsýnýz.");
	new vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective;
	vid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "Arackaput") == 1){
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,VEHICLE_PARAMS_OFF,bagaj,objective);
	SetPVarInt(playerid,"Arackaput",0);
	SCM(playerid,-1,""safaf"Aracýnýzýn kaputu kapatýldý.");
	}else{
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,VEHICLE_PARAMS_ON,bagaj,objective);
	SetPVarInt(playerid,"Arackaput",1);
	SCM(playerid,-1,""safaf"Aracýnýzýn kaputu açýldý.");
	}
	return true;
}

CMD:alarm(playerid,params[])
{

	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Sürücü olmalýsýnýz.");
	new vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective;
	vid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "Aracalarm") == 1){
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,isiklar,VEHICLE_PARAMS_OFF,kapilar,kaput,bagaj,objective);
	SetPVarInt(playerid,"Aracalarm",0);
	SCM(playerid,-1,""safaf"Aracýnýzýn alarmlarý kapatýldý.");
	}else{
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,isiklar,VEHICLE_PARAMS_ON,kapilar,kaput,bagaj,objective);
	SetPVarInt(playerid,"Aracalarm",1);
	SCM(playerid,-1,""safaf"Aracýnýzýn alarmlarý açýldý.");
	}
	return true;
}

CMD:far(playerid,params[])
{

    if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Sürücü olmalýsýnýz.");
	new vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective;
	vid = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "Aracfar") == 1){
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,VEHICLE_PARAMS_OFF,alarm,kapilar,kaput,bagaj,objective);
	SetPVarInt(playerid,"Aracfar",0);
	SCM(playerid,-1,""safaf"Aracýnýzýn farlarý kapatýldý.");
	}else{
	GetVehicleParamsEx(vid,motor,isiklar,alarm,kapilar,kaput,bagaj,objective);
	SetVehicleParamsEx(vid,motor,VEHICLE_PARAMS_ON,alarm,kapilar,kaput,bagaj,objective);
	SetPVarInt(playerid,"Aracfar",1);
	SCM(playerid,-1,""safaf"Aracýnýzýn farlarý açýldý.");
	}
	return true;
}

CMD:pmkapat(playerid,params[]){

	if(pmkapali[playerid] == 0)
	{
	pmkapali[playerid] = 1;
	SCM(playerid,-1,""safaf"PM'niz kapatýldý. Artýk baþkalarýndan PM almayacaksýnýz.");
	SCM(playerid,-1,""safaf"Geri açmak için "wb"/pmac "w"yazabilirsiniz.");
	}
	else
	{
	Hata(playerid,"PM'niz zaten kapalý.");
	}
	return true;
}

CMD:pmac(playerid,params[]){

	if(pmkapali[playerid] == 1)
	{
	pmkapali[playerid] = 0;
	SCM(playerid,-1,""safaf"PM'niz açýldý. Artýk baþkalarýndan PM alabileceksiniz.");
	SCM(playerid,-1,""safaf"Geri kapatmak için "wb"/pmkapat "w"yazabilirsiniz.");
	}
	else
	{
	Hata(playerid,"PM'niz zaten açýk.");
	}
	return true;
}

CMD:speed(playerid,params[])
{

	if(hizacik[playerid] != true){
	hizacik[playerid] = true;
	SCM(playerid,-1,""safaf"Hýzlanma açýldý. Ateþ etme tuþu ile hýzlanabilirsin.");
	}else{
	hizacik[playerid] = false;
	SCM(playerid,-1,""safaf"Hýzlanma kapandý.");
	}
	return true;
}

CMD:jump(playerid,params[])
{

	if(ziplamaacik[playerid] != true)
	{
	ziplamaacik[playerid] = true;
	SCM(playerid,-1,""safaf"Zýplama açýldý. H tuþuna basarak zýplayabilirsin.");
	}else{
	ziplamaacik[playerid] = false;
	SCM(playerid,-1,""safaf"Zýplama kapandý.");
	}
	return true;
}

CMD:zipla(playerid,params[])
{

	if(ziplamaacik[playerid] != true)
	{
	ziplamaacik[playerid] = true;
	SCM(playerid,-1,""safaf"Zýplama açýldý. H tuþuna basarak zýplayabilirsin.");
	}else{
	ziplamaacik[playerid] = false;
	SCM(playerid,-1,""safaf"Zýplama kapandý.");
	}
	return true;
}

CMD:hiz(playerid,params[])
{

	if(hizacik[playerid] != true){
	hizacik[playerid] = true;
	SCM(playerid,-1,""safaf"Hýzlanma açýldý. Ateþ etme tuþu ile hýzlanabilirsin.");
	}else{
	hizacik[playerid] = false;
	SCM(playerid,-1,""safaf"Hýzlanma kapandý.");
	}
	return true;
}

CMD:eject(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	new id;
	if(sscanf(params,"i",id)) return Kullanim(playerid,"eject [ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(!IsPlayerInAnyVehicle(id)) return Hata(playerid,"Oyuncu bir araçta deðil.");
	if(playerid == id) return Hata(playerid,"Bu komutu kendi üzerinizde kullanamazsýnýz.");
	RemovePlayerFromVehicle(id);
	SFM(id,-1,""safaf"Yetkili %s(%i) sizi araçtan attý.",getName(playerid),playerid);
	SFM(playerid,-1,""safaf"%s(%i) adlý oyuncuyu araçtan attýnýz.",getName(id),id);
	return true;
}

CMD:giveweapon(playerid,params[])
{
	if((PlayerInfo[playerid][dLevel] >= 8))
	{
		new player1, tmp[21],ammo,weap;
		if(sscanf(params,"us[20]d",player1,tmp,ammo))return Kullanim(playerid,"giveweapon [ÝD] [SÝLAH ÝSÝM/ÝD] [MERMÝ]");
		if(!IsNumeric(tmp))weap = GetWeaponIDFromName(tmp); else weap = strval(tmp);
		if(IsPlayerConnected(player1) && player1 != INVALID_PLAYER_ID) {
		if(!IsValidWeapon(weap)) return Hata(playerid,"Böyle bir silah yok.");
		GetWeaponName(weap,WeapName,32);
		SFM(playerid,-1,""safaf"%s(%i) adlý oyuncuya %s(%i) adlý silah %i mermi ile verdiniz.",getName(player1),player1,WeapName,weap,ammo);
		SFM(player1,-1,""safaf"Yetkili %s(%i) sana %s(%i) adlý silahý %i mermi ile verdi.",getName(playerid),playerid,WeapName,weap,ammo);
		GivePlayerWeapon(player1, weap, ammo);
		return true;
		} else return Hata(playerid,"Oyuncu oyunda deðil.");
	} else return YETERSIZSEVIYE(playerid, 8);
}

CB: fbitir()
{
	lBasladi = 0;
	lkackisi = 0;

	new String[128];
	format(String, sizeof(String), "~r~~h~[ETK] ~w~~h~~h~Etkinlige katilim sona erdi!");
	TextMesaji(String);

	foreach(new i: Player)
	{
		if(lKatildim[i] == 1)
		{
			lKatildim[i] = 0;
		}
	}

	new etkinliktekiler = 0;
	foreach(new i: Player)
	{
		if(lEtkinlikte[i] == 1)
		{
			etkinliktekiler++;
		}
	}
	if(etkinliktekiler == 0 || etkinliktekiler == 1)
	{
		new vallar[512];
		format(vallar, sizeof(vallar), "(y)'%s' (o)etkinliðimiz iptal edilmiþtir. (b)((g)Yetersiz katýlým(b))", etkismim);
		cmd_ebitir(fbitiryapan, "");
		cmd_asay(fbitiryapan, vallar);
	}
	else if(etkinliktekiler >= 2)
	{
		new vallar[512];
		format(vallar, sizeof(vallar), "(y)'%s' (t)etkinliðimize katýlýmlar sona ermiþtir.", etkismim);
		cmd_asay(fbitiryapan, vallar);
	}

	fbitiryapan = -1;
}

stock IsPlayerWater(playerid)
{
	new Float:p_Water;
	GetPlayerPos(playerid, p_Water, p_Water, p_Water);
	return (p_Water < -0.2);
}

stock OnlineDerby()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Derbyde[i] == true)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineDeagle()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(dmde[i] == 1)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineSniper()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(dmde[i] == 4)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineMG1()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(dmde[i] == 2)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineKnife()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(dmde[i] == 3)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineSDG()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Speedydeaglede[i] == true)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

CMD:stats(playerid, params[])
{
  	new String[1500], id, Yazi[1500], teletext[128], pmtext[128];
	if(sscanf(params,"u",id)) return Kullanim(playerid,"stats [ÝD / ÝSÝM]");
    if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(pmkapali[id] == 0) format(pmtext,10,"Açýk");else format(pmtext,10,"Kapalý");
	if(teleport[id] == 1) format(teletext,10,"Açýk");else format(teletext,10,"Kapalý");
	new cetetext[100];
	if(PlayerInfo[id][PlayerCeteID] == -1) format(cetetext,100,"Yok"); else format(cetetext,100,"{%s}%s",CeteColor[Ceteler[PlayerInfo[id][PlayerCeteID]][cRenk]][cInffrenk2],Ceteler[PlayerInfo[id][PlayerCeteID]][cIsim]);

	new durum[1000];
	if(strlen(PlayerInfo[id][KisiselDurum]) > 0)
	{
	    format(durum, sizeof(durum), "{FFFFFF}%s", PlayerInfo[id][KisiselDurum]);
	}
	else
	{
	    format(durum, sizeof(durum), "{FFFFFF}Girilmemiþ");
	}

	new xd[500];

	format(xd,sizeof(xd),""ww"Level: %s, EXP: %s, Gereken EXP: %s\n"ww"GLKredi: %s\n"ww"Ping: %i\n",
	FormatMoney(PlayerInfo[id][seviye]),FormatMoney(PlayerInfo[id][exp]),FormatMoney(PlayerInfo[id][maxexp]),FormatMoney(PlayerInfo[id][GLKredi]),GetPlayerPing(id));

	format(String, sizeof(String), ""ww"Oyuncu Adý: %s(%i)\n\n"ww"Son Giriþ Tarihi: %s\n"ww"Çete: %s\n", getName(id), id, PlayerInfo[id][LastOn], cetetext);
	strcat(Yazi, String);

	format(String, sizeof(String), ""ww"Para: $%s\n"ww"Skor: %s\n"ww"Öldürme: %s\n"ww"Ölüm: %s\n"ww"K/D: %d\n"ww"Bitcoin: %s\n",
	 FormatMoney(GetPlayerMoney(id)), FormatMoney(GetPlayerScore(id)), FormatMoney(PlayerInfo[id][Oldurme]), FormatMoney(PlayerInfo[id][Olum]), floatround(PlayerInfo[id][Oldurme] / PlayerInfo[id][Olum], floatround_round), FormatMoney(PlayerInfo[id][BitCoin]));
	strcat(Yazi, String);

	format(String, sizeof(String), ""ww"Skin: %d\n"ww"Bankadaki Para: $%s\n%s"ww"Nick Rengi: {%06x}%08x\n"ww"Online Süresi: %s\n\n"ww"Teleport: %s\n"ww"Özel Mesaj Alýmý: %s\n"ww"Kiþisel Durum: %s\n"ww"(/omenu)",
	 GetPlayerSkin(id), FormatMoney(PlayerInfo[id][bank]),xd, GetPlayerColor(id) >>>8, GetPlayerColor(id) >>>8,ConvertTime(PlayerInfo[id][onlinet]), teletext, pmtext, durum);
	strcat(Yazi, String);

    ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"Oyuncu Bilgileri",Yazi,""ww"Tamam","");
    return true;
}

CMD:telekapat(playerid,params[])
{
	if(teleport[playerid] == 1)
	{
		teleport[playerid] = 0;
		SCM(playerid,-1,""safaf"Teleport'unuz kapatýldý. Artýk baþkalarý size ýþýnlanamayacak.");
		SCM(playerid,-1,""safaf"Geri açmak için "wb"/teleac "w"yazabilirsiniz.");
	}
	else
	{
		Hata(playerid,"Teleport'unuz zaten kapalý.");
	}
	return true;
}

CMD:teleac(playerid,params[])
{
	if(teleport[playerid] == 0)
	{
		teleport[playerid] = 1;
		SCM(playerid,-1,""safaf"Teleport'unuz açýldý. Artýk baþkalarý size ýþýnlanabilecek.");
		SCM(playerid,-1,""safaf"Geri kapatmak için "wb"/telekapat "w"yazabilirsiniz.");
	}
	else
	{
		Hata(playerid,"Teleport'unuz zaten açýk.");
	}
	return true;
}

CMD:pmon(playerid,params[])
{
	Kullanim(playerid, "pmac");
	return true;
}

CMD:pmoff(playerid,params[])
{
	Kullanim(playerid, "pmkapat");
	return true;
}

CMD:teleon(playerid,params[])
{
	Kullanim(playerid, "teleac");
	return true;
}

CMD:teleoff(playerid,params[])
{
	Kullanim(playerid, "telekapat");
	return true;
}

CMD:teleporton(playerid,params[])
{
	Kullanim(playerid, "teleac");
	return true;
}

CMD:teleportoff(playerid,params[])
{
	Kullanim(playerid, "telekapat");
	return true;
}

forward MessageToAdmins(color,const string[]);
public MessageToAdmins(color,const string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][dLevel] >= 1)
			{
				SendClientMessage(i, -1, string);
			}
		}
	}
	return true;
}

forward MessageToVIPs(color,const string[]);
public MessageToVIPs(color,const string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][VIP] >= 1 || PlayerInfo[i][dLevel] >= 1)
			{
				SendClientMessage(i, -1, string);
			}
		}
	}
	return true;
}

forward MessageToUstYonetim(color,const string[]);
public MessageToUstYonetim(color,const string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][dLevel] >= 8)
			{
				SendClientMessage(i, -1, string);
			}
		}
	}
	return true;
}

function ParkourBaslat()
{
	new String[128];
	new string[56];
	if(ParkourInfo[Durum] == true) return true;
	if(ParkourInfo[Durum] == false)
	{
	ParkourInfo[Durum] = true;
	format(String, sizeof(String), "~r~~h~[PARKOUR] ~w~~h~~h~Parkour az sonra baslayacak! ~r~~h~(/parkur)");
    TextMesaji(code(String));
    format(string, sizeof(string), "~r~~h~/parkur");
    GameTextForAll(string, 5000, 1);

	ParkourInfo[Map] = random(2);
	SetTimer("repeatparkour", 15 * 1000, false);
	SetTimer("overparkour", 35 * 1000, false);
	print("» Yeni bir parkur baþladý.");
	}
	return true;
}

function repeatparkour()
{
	new String[128];
	format(String, sizeof(String), "~r~~h~[PARKOUR] ~w~~h~~h~Parkour az sonra baslayacak! ~r~~h~(/parkur)");
	return TextMesaji(code(String));
}

function overparkour()
{
    new String[128];
	if(OnlineParkour() <= 1)
	{
		ParkourInfo[Durum] = false;
		format(String, sizeof(String), "~r~~h~[PARKOUR] ~w~~h~~h~Parkour, yetersiz oyuncu katilimindan dolayi iptal oldu.");
        TextMesaji(code(String));
		foreach(new x: Player)
		{
		    if(!IsPlayerConnected(x)) continue;
		    if(PlayerInfo[x][Parkour] == false) continue;
			OnPlayerSpawn(x);
			TogglePlayerControllable(x,true);
			DisablePlayerCheckpoint(x);
		}
		return true;
	}
	ParkourInfo[Durum] = false;
	format(String, sizeof(String), "~r~~h~[PARKOUR] ~w~~h~~h~Parkoura katilim sona erdi!");
	TextMesaji(code(String));
	foreach(new x: Player)
	{
	    if(!IsPlayerConnected(x)) continue;
	    if(PlayerInfo[x][Parkour] == false) continue;
		PlayerInfo[x][Etkinlik_Sayac] = 6;
		KillTimer(PlayerInfo[x][Etkinlik_Timer]);
		PlayerInfo[x][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", x);
	}
	return true;
}

CMD:parkurbaslat(playerid, params[])
{

	if(PlayerInfo[playerid][dLevel] < 10 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,10);
	ParkourBaslat();
	return true;
}

CMD:parkur(playerid, params[])
{

	if(ParkourInfo[Durum] == false) return Hata(playerid,"Henüz bir parkur baþlamamýþ.");
	else
	{
		HideModelSelectionMenu(playerid);
		TogglePlayerControllable(playerid, false);
		SendClientMessage(playerid, -1, ""safaf"Parkur'dan çýkmak istersen /cik kullanabilirsin.");
		PlayerInfo[playerid][Parkour] = true;
		SetPlayerVirtualWorld(playerid, 10);
		ResetPlayerWeapons(playerid);
		SetPlayerMaxHealth(playerid, 9999999);
		SetPlayerHealth(playerid, 9999999);
	 	KillTimer(PlayerInfo[playerid][SKTimer]);
	 	DMZoneOyuncuModu[playerid] = PARKOUR;
	 	HideModelSelectionMenu(playerid);
		switch(ParkourInfo[Map])
		{
		    case 0:
			{
			    switch(random(7))
			    {
					case 0: SetPlayerPos(playerid, -3790.2866, 1768.0326, 59.4710), SetPlayerFacingAngle(playerid, 180.0000);
					case 1: SetPlayerPos(playerid, -3791.7229, 1768.0326, 59.4710), SetPlayerFacingAngle(playerid, 180.0000);
					case 2: SetPlayerPos(playerid, -3793.1885, 1768.0326, 59.4710), SetPlayerFacingAngle(playerid, 180.0000);
					case 3: SetPlayerPos(playerid, -3794.8684, 1768.0326, 59.4710), SetPlayerFacingAngle(playerid, 180.0000);
					case 4: SetPlayerPos(playerid, -3796.4607, 1768.0326, 59.4710), SetPlayerFacingAngle(playerid, 180.0000);
					case 5: SetPlayerPos(playerid, -3797.8899, 1768.0326, 59.4710), SetPlayerFacingAngle(playerid, 180.0000);
					case 6: SetPlayerPos(playerid, -3788.7017, 1768.0326, 59.4710), SetPlayerFacingAngle(playerid, 180.0000);
			    }
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, -3706.7424,1761.7046,59.4268, 30.0);
			}
		    case 1:
			{
			    switch(random(4))
			    {
					case 0: SetPlayerPos(playerid, 1172.7916, -2045.8883, 433.8081), SetPlayerFacingAngle(playerid, 90.0000);
					case 1: SetPlayerPos(playerid, 1171.5912, -2045.8324, 433.8081), SetPlayerFacingAngle(playerid, 90.0000);
					case 2: SetPlayerPos(playerid, 1170.2581, -2045.7028, 433.8081), SetPlayerFacingAngle(playerid, 90.0000);
					case 3: SetPlayerPos(playerid, 1169.2827, -2045.6082, 433.8081), SetPlayerFacingAngle(playerid, 90.0000);
			    }
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, 1160.0959,-1726.1555,436.6566, 30.0);
			}
		}
	}

	new stringd[128];
	format(stringd, sizeof stringd, "~r~~h~[PARKOUR] ~w~~h~~h~%s(%i) adli oyuncu Parkour'a katildi! ~r~~h~(/parkur)", getName(playerid), playerid);
    TextMesaji(code(stringd));
    DMZoneOyuncuModu[playerid] = PARKOUR;
	return true;
}

CMD:parkurayril(playerid, params[])
{
	if(PlayerInfo[playerid][Parkour] == false) return Hata(playerid,"Zaten parkurda deðilsiniz.");
	PlayerInfo[playerid][Parkour] = false;
	DisablePlayerCheckpoint(playerid);
	TogglePlayerControllable(playerid,true);
	OnPlayerSpawn(playerid);
	SCM(playerid,-1,""safaf"Parkur'dan ayrýldýnýz.");
	return true;
}

CMD:jetpack(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] >= 1)
	{
		SetPlayerSpecialAction(playerid, 2);
		SCM(playerid,-1,""safaf"Jetpack'ýnýz verildi.");
	}
	else if(PlayerInfo[playerid][dLevel] == 0)
	{
		if(GetPlayerMoney(playerid) < 1000) return Hata(playerid,"Jetpack almak için $1.000 paranýz olmalýdýr.");
		SetPlayerSpecialAction(playerid, 2);
		SCM(playerid,-1,""safaf"$1.000 karþýlýðýnda jetpack aldýnýz.");
		GivePlayerMoney(playerid,-1000);
	}
	return true;
}

stock BugRaporLog(playerid, text[])
{
	new File: lFile = fopen("Dark/Log/BugRapor.txt", io_append),logData[178];
	format(logData, sizeof(logData),"[%s] %s(%i): %s \r\n", TarihCek(), GetWeekDay(), getName(playerid), playerid, text);
	fwrite(lFile, code(logData));
	fclose(lFile);
	return true;
}

forward ayar();
public ayar()
{
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf(" ");
	printf("» =================================================== «");
	printf("»                                                     «");
	printf("»                       GamerLity FR                  «");
	printf("»                          v2.2.0                     «");
	printf("»                       By flareoNNN                  «");
	printf("»                                                     «");
	printf("» =================================================== «");
	printf(" ");
	printf("» Sunucu baþlatýldý. Tarih: %s",TarihCek());
}

CMD:banka(playerid, params[])
{

    SetPlayerPos(playerid, 2151.2756,1479.9473,10.8203);
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid,0);
    SendClientMessage(playerid, -1, ""safaf"Banka adlý bölgeye gönderildiniz.");
    return true;
}

CMD:c(playerid, params[])
{
	if(PlayerInfo[playerid][PlayerCeteID] == -1) return Hata(playerid, "Herhangi bir çeteye üye deðilsiniz.");
	new Text[500], Yazi[1024];

	if(sscanf(params, "s[500]", Text)) return Kullanim(playerid, "c [YAZI]");

    if ( CheckAdvertising( Text ) )
	{
	    if ( PlayerInfo[ playerid ][ AWarings ] != 4 )
	    {
	        PlayerInfo[ playerid ][ AWarings ]++;

			SFM( playerid, -1, ""safaf"Reklam þüphesi: {FFFF00}%d{FF0000}/5, {FFFFFF}Devamýnda ban yiyeceksiniz.", PlayerInfo[ playerid ][ AWarings ] );
			return ( 1 );
		}
		else
		{
		    SendClientMessage( playerid, -1, ""safaf"Reklam þüphesi uyarlarýn doldu ve banlanýyorsun..." );

		    return banla( playerid, "Reklam" ), false;
		}
	}

	format(Yazi, 1024, "» {%s}%s Çete Sohbet {FFFFFF}- %s(%d): {%s}%s", CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2], Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], getName(playerid), playerid, CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2], Text);

	foreach(new x: Player)
	{
		if(IsPlayerConnected(x))
		{
			if(PlayerInfo[playerid][PlayerCeteID] == PlayerInfo[x][PlayerCeteID])
			{
				SendClientMessage(x, -1, Yazi);
			}
		}
	}

	printf("» [%s CETE CHAT] %s(%d) : %s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], getName(playerid), playerid, Text);
	return true;
}

stock CeteuyeleriniSay(cete)
{
	new Sayi, Sql[500];
	format(Sql, 500, "SELECT * FROM `oyuncular` WHERE `cete` = '%d'", PlayerInfo[cete][PlayerCeteID]);
	mysql_query(mysqlC, Sql);
	Sayi = cache_num_rows();
	return Sayi;
}

stock GenelKulturSor()
{
	if(SoruData[sAktif] == true) return true;

	new soru[1024], cevap[500];
	mysql_query(mysqlC, "SELECT * FROM `sorular` ORDER BY rand() LIMIT 1");

	cache_get_value_name(0, "Soru", soru, 1024);
	cache_get_value_name(0, "Cevap", cevap, 500);

	format(SoruData[sCevap], 500, cevap);
	format(SoruData[sSoru], 1024, soru);
	SoruData[sAktif] = true;
	KillTimer(SoruData[sTimer]);
	SoruData[sTimer] = SetTimer("GenelKulturBitir", 20000, false);

	new string[2048];
	format(string, sizeof(string), "{00FFA2}Genel Kültür » {FFFFFF}%s - Ödül: 5 skor, $5.000", SoruData[sSoru]);
	SendClientMessageToAll(-1, string);
	return true;
}

CB: GenelKulturBitir()
{
	SoruData[sAktif] = false;
	format(SoruData[sCevap], 500, "");
	format(SoruData[sSoru], 1024, "");
	KillTimer(SoruData[sTimer]);
	SendClientMessageToAll(-1, "{00FFA2}Genel Kültür » {FFFFFF}Süre doldu. Cevabý kimse veremedi.");
	return true;
}

function HerkeseSes(sound)
{
	foreach(new x: Player)
	{
	    if(!IsPlayerConnected(x)) continue;
		PlayerPlaySound(x, sound, 0.0, 0.0, 0.0);
	}
	return true;
}

forward CeteyiKur(Namexds[], Tag[], Color);
public CeteyiKur(Namexds[], Tag[], Color)
{
	new CreatedID = Iter_Free(ORs);

	Iter_Add(ORs, CreatedID);
	Ceteler[CreatedID][cMevcut] = 1;

	format(Ceteler[CreatedID][cIsim], 100, Namexds);
	format(Ceteler[CreatedID][cTag], 7, Tag);
	Ceteler[CreatedID][cRenk] = Color;
	Ceteler[CreatedID][cKasa] = 0;
	Ceteler[CreatedID][cSkin] = -1;
	Ceteler[CreatedID][cLevel] = 1;
	Ceteler[CreatedID][cExp] = 0;
	Ceteler[CreatedID][cetebolgesayisi] = 0;

	new Sorgu[800];
	format(Sorgu, sizeof(Sorgu), "INSERT INTO `ceteler` (`ID`, `Isim`, `Tag`, `Renk`, `Kasa`, `Skin`, `Level`, `EXP`, `cetebolgesayisi`, `uyesayisi`) VALUES('%d', '%s', '%s', '%d', '%d', '%d', '%d', '%d', '%d', '%d')", CreatedID+1, Namexds, Tag, Color, 0, -1, 1, 0, 0, 1);
	mysql_query(mysqlC, Sorgu);

	return CreatedID;
}

forward CeteyiSil(cete);
public CeteyiSil(cete)
{
    for(new i; i < MAX_BOLGE; i++)
    {
		if(bolgebilgi[i][sahipceteid] == cete)
		{
		    BolgeYukle(i);
		}
    }

	new sql[500];
	format(sql, sizeof(sql), "UPDATE `cetemekanlari` SET `sahipcete` = '-1' WHERE `sahipcete` = '%d'", cete);
	mysql_query(mysqlC, sql);

	new sql2[800];
	format(sql2, sizeof(sql2), "UPDATE `oyuncular` SET `cete` = '-1', `ceterutbe` = '0' WHERE `cete` = '%d'", cete);
	mysql_query(mysqlC, sql);

	Iter_Remove(ORs, cete);
	Ceteler[cete][cMevcut] = 0;
	Ceteler[cete][cetebolgesayisi] = 0;

	new Sorgu[500];
	format(Sorgu, 500, "DELETE FROM `ceteler` WHERE `ID` = '%d'", cete + 1);
	mysql_query(mysqlC, Sorgu);
}

forward CeteleriYukle(id);
public CeteleriYukle(id)
{
	new Query[2048];
	format(Query,2048,"SELECT * FROM `ceteler` WHERE `ID` = '%d'",id);
	mysql_query(mysqlC, Query);
	if(cache_num_rows() > 0)
	{
		new idx;
		cache_get_value_name_int(0, "ID", idx);
		idx -= 1;
		cache_get_value_name(0, "Isim", Ceteler[idx][cIsim], 100);
		cache_get_value_name(0, "Tag", Ceteler[idx][cTag], 7);
		cache_get_value_name_int(0, "Renk", Ceteler[idx][cRenk]);
		cache_get_value_name_int(0, "cetebolgesayisi", Ceteler[idx][cetebolgesayisi]);
		cache_get_value_name_int(0, "Kasa", Ceteler[idx][cKasa]);
		cache_get_value_name_int(0, "Skin", Ceteler[idx][cSkin]);
		cache_get_value_name_int(0, "Level", Ceteler[idx][cLevel]);
		cache_get_value_name_int(0, "EXP", Ceteler[idx][cExp]);
		cache_get_value_name_int(0, "Mekan", Ceteler[idx][cMekanID]);
		cache_get_value_name(0, "Rank1", Ceteler[idx][cRank1], 50);
		cache_get_value_name(0, "Rank2", Ceteler[idx][cRank2], 50);
		cache_get_value_name(0, "Rank3", Ceteler[idx][cRank3], 50);
		cache_get_value_name(0, "Rank4", Ceteler[idx][cRank4], 50);
		cache_get_value_name(0, "Rank5", Ceteler[idx][cRank5], 50);
		cache_get_value_name(0, "Rank6", Ceteler[idx][cRank6], 50);
		cache_get_value_name(0, "Rank7", Ceteler[idx][cRank7], 50);
		cache_get_value_name(0, "Rank8", Ceteler[idx][cRank8], 50);
		cache_get_value_name(0, "Rank9", Ceteler[idx][cRank9], 50);
		cache_get_value_name(0, "Rank10", Ceteler[idx][cRank10], 50);
		Ceteler[idx][cKayit] = 1;
		Iter_Add(ORs, idx);
		Ceteler[idx][cMevcut] = 1;
	}
}

forward TekCeteKayit(cete);
public TekCeteKayit(cete)
{
	new Sorgu[1024];
	format(Sorgu, sizeof(Sorgu), "UPDATE `ceteler` SET `Isim` = '%s', `cetebolgesayisi` = '%d', `Tag` = '%s', `Renk` = '%d', `Kasa` = '%d', `Skin` = '%d', `Level` = '%d', `EXP` = '%d', `Mekan` = '%d' WHERE `ID` = '%d'", Ceteler[cete][cIsim], Ceteler[cete][cetebolgesayisi], Ceteler[cete][cTag], Ceteler[cete][cRenk], Ceteler[cete][cKasa], Ceteler[cete][cSkin], Ceteler[cete][cLevel], Ceteler[cete][cExp], Ceteler[cete][cMekanID], cete+1);
	mysql_query(mysqlC, Sorgu);
}

forward TumCeteleriKaydet();
public TumCeteleriKaydet()
{
	new Kaydedilen;

	foreach(new i : ORs)
	{
	    if(Ceteler[i][cMevcut] == 1)
	    {
	        if(Ceteler[i][cKayit] == 1)
	        {
    			printf("» Çeteler kayýt ediliyor...(%s)", TarihCek());
	            TekCeteKayit(i);
	            Kaydedilen++;
	            Ceteler[i][cKayit] = 0;

				if(Kaydedilen == 20)
				{
				    SetTimer("TumCeteleriKaydet", 5000, 0);
				    break;
				}
			}
	    }
	}
}

CMD:cete(playerid, params[])
{
	if(PlayerInfo[playerid][PlayerCeteID] == -1)
	{
		if(GetPlayerScore(playerid) < 1000) return Hata(playerid, "Çete kurmak için, 1.000 skora sahip olmalýsýnýz!");
		if(GetPlayerMoney(playerid) < 1000000) return Hata(playerid, "Çete kurmak için, $1.000.000'a sahip olmalýsýnýz!");
		new dialog_msg[2000], PlayerName[24];
		GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
		format(dialog_msg, sizeof(dialog_msg), ""ww"{FFFFFF}Merhaba {%06x}%s!\n\n\
		"ww"{FFFFFF}Yeni bir çete kurmak istediðini talep ettin. Yeni bir çete kurabilirsin\n\t\
		fakat çetenin bir isme ihtiyacý var. Çetene vermek istediðin ismi\n\t\
		birazdan gelcek olan kutuya gir.\n\n\
		"ww"{FFD700}Unutma: Çete kurulduðu zaman hesabýndan 1.000 skor ve $1.000.000 alýnacaktýr.\n\n\
		"ww"Kabul ediyor musun?", GetPlayerColor(playerid) >>> 8, PlayerName);
		ShowPlayerDialog(playerid, CETE_KUR, DIALOG_STYLE_MSGBOX, ""safaf"Çete Kur", dialog_msg, ""ww"Evet", ""ww"Hayýr");
	}
	else
	{
		CeteAnaSayfasi(playerid);
	}
	return true;
}

stock CeteAnaSayfasi(playerid)
{
	new Yazi[1024];
	format(Yazi, 1024, ""ww"Çete Adý: \t{%s}%s\n"ww"Çete Tagý: \t{%s}%s\n"ww"Tüm Çete Üyeleri\n"ww"Oyundaki Çete Üyeleri\t\n"ww"Çeteye Oyuncu Davet Et\n"ww"Çete Kasasý: \t$%s\n"ww"Çete Rengi: \t{%s}%s\n"ww"Çete Skini: \t%d\n"ww"Çete Durumu\n"ww"Çeteden Ayrýl\n"ww"Rütbe Ýsimlerini Deðiþtir\n",
	       CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2],Ceteler[PlayerInfo[playerid][PlayerCeteID]][cTag], FormatMoney(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cKasa]),
		    CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2], CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffisim], Ceteler[PlayerInfo[playerid][PlayerCeteID]][cSkin]);

	if(PlayerInfo[playerid][PlayerCeteRutbeID] == 9)
	{
	    format(Yazi, 1024, "%s\n"ww"Çeteyi Kapat", Yazi);
	}

	return ShowPlayerDialog(playerid, CETE_HOME, DIALOG_STYLE_LIST, ""safaf"Çete", Yazi, ""ww"Tamam", ""ww"Kapat");
}

stock CetedekilereMesaj(cete, msg[])
{
	foreach(new i : Player)
	{
		if(PlayerInfo[i][PlayerCeteID] != -1 && PlayerInfo[i][PlayerCeteID] == cete)
		{
		    SendClientMessage(i, -1, msg);
		}
	}
}

CMD:shop(playerid, params[])
{

	ShowPlayerDialog(playerid, DIALOG_SHOP, DIALOG_STYLE_LIST, ""safaf"Shop", ""ww"Saðlýk Menüsü\n"ww"Silahlar\n"ww"Nick Renkleri\n"ww"Skor Dükkaný\n"ww"Ölüm Sil\n"ww"Hesap Ýþlemleri\n"ww"Yiyecekler\n"ww"Eðlence Menüsü\n"ww"Þans Paketleri", ""ww"Seç", ""ww"Kapat");
	return true;
}

CMD:mytime(playerid, params[])
{

    new String[128], time, minute;
   	if(sscanf(params,"ii", time, minute)) return Kullanim(playerid,"mytime [SAAT] [DAKÝKA]");
    if((time < 0) ||(time > 24)) return Hata(playerid, "En az 0, en fazla 24 girebilirsiniz.");
    if((minute < 0) ||(minute > 60)) return Hata(playerid,"En az 0, en fazla 60 girebilirsiniz.");
    SetPlayerTime(playerid, time, minute);
    format(String, sizeof(String), ""safaf"Oyun saatinizi %02d:%02d olarak deðiþtirdiniz.", time, minute);
    SendClientMessage(playerid, -1, String);
    return true;
}

CMD:zamanim(playerid, params[])
{

    new String[128], time, minute;
   	if(sscanf(params,"ii", time, minute)) return Kullanim(playerid,"zamanim [SAAT] [DAKÝKA]");
    if((time < 0) ||(time > 24)) return Hata(playerid, "En az 0, en fazla 24 girebilirsiniz.");
    if((minute < 0) ||(minute > 60)) return Hata(playerid,"En az 0, en fazla 60 girebilirsiniz.");
    SetPlayerTime(playerid, time, minute);
    format(String, sizeof(String), ""safaf"Oyun saatinizi %02d:%02d olarak deðiþtirdiniz.", time, minute);
    SendClientMessage(playerid, -1, String);
    return true;
}

CMD:myweather(playerid, params[])
{

    new String[128], weather;
   	if(sscanf(params,"i", weather)) return Kullanim(playerid,"myweather [Hava ÝD]");
    if((weather < 0) ||(weather > 100)) return Hata(playerid,"En az 0, en fazla 100 girebilirsiniz.");
    SetPlayerWeather(playerid, weather);
    format(String, sizeof(String), ""safaf"Oyun havanýzý %d olarak deðiþtirdiniz.", weather);
    SendClientMessage(playerid, -1, String);
    return true;
}

CMD:havam(playerid, params[])
{

    new String[128], weather;
   	if(sscanf(params,"i", weather)) return Kullanim(playerid,"havam [Hava ÝD]");
    if((weather < 0) ||(weather > 100)) return Hata(playerid,"En az 0, en fazla 100 girebilirsiniz.");
    SetPlayerWeather(playerid, weather);
    format(String, sizeof(String), ""safaf"Oyun havanýzý %d olarak deðiþtirdiniz.", weather);
    SendClientMessage(playerid, -1, String);
    return true;
}

CMD:loadskin(playerid, params[])
{

	SFM(playerid, -1, ""safaf"%d ID'li skininiz baþarýyla yüklendi.",PlayerInfo[playerid][skinplayer]);
	SetPlayerSkin(playerid, PlayerInfo[playerid][skinplayer]);
	return true;
}

CMD:parayolla(playerid, params[])
{

	new id, miktar, String[128];
	if(sscanf(params,"ud",id ,miktar)) return Kullanim(playerid, "parayolla [ÝD] [MÝKTAR]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(miktar < 0 || miktar > 1000000) return Hata(playerid,"En az $1, en fazla $1.000.000 yollayabilirsiniz.");
	if(GetPlayerMoney(playerid) < miktar) return Hata(playerid, "Yeterli miktarda paranýz yok.");
	if(spamProtect(playerid,"parayolla",60)) return true;
	GivePlayerMoney(id, miktar);
	GivePlayerMoney(playerid, -miktar);
    format(String, sizeof(String), ""safaf"%s(%d) adlý oyuncuya $%s yolladýn.", getName(id), id, FormatMoney(miktar));
    SendClientMessage(playerid, -1, String);
    format(String, sizeof(String), ""safaf"%s(%d) adlý oyuncu sana $%s yolladý.", getName(playerid), playerid, FormatMoney(miktar));
    SendClientMessage(id, -1, String);
	return true;
}

CMD:skoryolla(playerid, params[])
{

	new id, miktar, String[128];
	if(sscanf(params,"ud",id ,miktar)) return Kullanim(playerid, "skoryolla [ÝD] [MÝKTAR]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(miktar < 0 || miktar > 100) return Hata(playerid,"En az 1, en fazla 100 skor yollayabilirsiniz.");
	if(GetPlayerScore(playerid) < miktar) return Hata(playerid, "Yeterli miktarda skorunuz yok.");
	if(spamProtect(playerid,"skoryolla",60)) return true;
	GivePlayerScore(id, miktar);
	GivePlayerScore(playerid, -miktar);
    format(String, sizeof(String), ""safaf"%s(%d) adlý oyuncuya %s skor yolladýn.", getName(id), id, FormatMoney(miktar));
    SendClientMessage(playerid, -1, String);
    format(String, sizeof(String), ""safaf"%s(%d) adlý oyuncu sana %s skor yolladý.", getName(playerid), playerid, FormatMoney(miktar));
    SendClientMessage(id, -1, String);
	return true;
}

CMD:skorgonder(playerid,params[])
{

	Kullanim(playerid, "skoryolla [ÝD] [MÝKTAR]");
	return true;
}

CMD:paragonder(playerid,params[])
{

	Kullanim(playerid, "parayolla [ÝD] [MÝKTAR]");
	return true;
}

CMD:basejump(playerid,params[])
{

	SetPlayerPos(playerid,-1944.8761, 647.4609, 1048.8199);
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid,46,500);
	SCM(playerid,-1,""safaf"Basejump adlý bölgeye gönderildiniz.");
	return true;
}

CMD:fulltime(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	new time, minute;
	if(sscanf(params,"ii", time, minute)) return Kullanim(playerid,"fulltime [SAAT] [DAKÝKA]");
	if((time < 0) ||(time > 24)) return Hata(playerid, "En az 0, en fazla 24 girebilirsiniz.");
	if((minute < 0) ||(minute > 60)) return Hata(playerid,"En az 0, en fazla 60 girebilirsiniz.");
	for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
	{
	SetPlayerTime(i, time, minute);
	PlayerPlaySound(i,1057,0.0,0.0,0.0);
	}
	format(estring,sizeof(estring),"~r~~h~[FullTime] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyuncularin saati %d ve dakikasi %d yapildi.",getName(playerid),playerid,time,minute);
	TextMesaji(code(estring));
	return true;
}

CMD:fullheal(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	foreach(new i:Player)
	{
		PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerHealth(i,100.0);
	}
	new string[256]; format(string,sizeof(string),"~r~~h~[FullHeal] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyunculara can verildi.",getName(playerid),playerid);
	return TextMesaji(code(string));
}

CMD:fullarmour(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	foreach(new i:Player)
	{
		PlayerPlaySound(i,1057,0.0,0.0,0.0); SetPlayerArmour(i,100.0);
	}
	new string[256]; format(string,sizeof(string),"~r~~h~[FullArmour] ~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan butun oyunculara zirh verildi.",getName(playerid),playerid);
	return TextMesaji(code(string));
}

public ReactionTest()
{
	ReactionTestString = "";
	new str[1024];
	new random_set[] = "AaBbCcDdEeFfGgHhJjKkLlMmNnOoPpRrSsTtUuVvYyZz";
 	for(new i = 0; i < RStringLength; i++)
 	{
		ReactionTestString[i] = random_set[random(42)];
	}
	ReactionTestWon = false;
	format(str, sizeof(str), "{FF00CC}Fast Fingers » {FFFFFF}Ýlk bu "ad"'%s' "w"harfleri yazan oyuncu, "ad"$5.000 "w"ve "ad"5 "w"skor kazanacak!", ReactionTestString);
	SendClientMessageToAll(-1, str);
}

public MathTest()
{
   new string[1024];
   if(!isenable)
   {
	   switch(random(4))
	   {
		   case 0:
		   {
			   answer =(numberxd[0]=random(100)) +(numberxd[1]=random(84));
			   format(string, sizeof(string),""safaf"Matematik » Ýlk bu '%d + %d = ?' soruyu çözen oyuncu, $5.000 ve 5 skor kazanacak!", numberxd[0], numberxd[1]);
		   }
		   case 1:
		   {
			   do
			   {
				   answer =(numberxd[0]=random(50)) -(numberxd[1]=random(50));
			   }
			   while(numberxd[0] < numberxd[1]);
			   format(string, sizeof(string),""safaf"Matematik » Ýlk bu '%d - %d = ?' soruyu çözen oyuncu, $5.000 ve 5 skor kazanacak!",numberxd[0], numberxd[1]);
		   }
		   case 2:
		   {
			   answer =(numberxd[0]=random(25)) *(numberxd[1]=random(15));
			   format(string, sizeof(string),""safaf"Matematik » Ýlk bu '%d * %d = ?' soruyu çözen oyuncu, $5.000 ve 5 skor kazanacak!",numberxd[0], numberxd[1]);
		   }
		   case 3:
		   {
			   do
			   {
				   answer =(numberxd[0]=random(45)+1) /(numberxd[1]=random(20)+1);
			   }
			   while(numberxd[0] % numberxd[1]);
			   format(string, sizeof(string),""safaf"Matematik » Ýlk bu '%d / %d = ?' soruyu çözen oyuncu, $5.000 ve 5 skor kazanacak!",numberxd[0], numberxd[1]);
		   }
	   }
	   SendClientMessageToAll(-1, string);
	   isenable = true;
   }
   return true;
}

CMD:komutlar(playerid, params[])
{

    new String[4096], Yazi[4096];
	format(String, sizeof(String), ""ww"Araç Komutlarý:\n"ww"/veh: Bu komut ile istediðiniz aracý indirebilirsiniz.\n"ww"/cevir: Aracýnýzý çevirmenizi saðlar.(Yada Y tuþu)\n"ww"/tamir: Aracýnýzý tamir etmenizi saðlar.(Yada 2 tuþu)\n"ww"/motorac: Aracýnýzýn moturunu açmanýzý saðlar.\n"ww"motorkapat: Aracýnýzýn moturunu kapatmanýzý saðlar.\n");
	strcat(Yazi, String);
	format(String, sizeof(String), ""ww"/kilit: Aracýnýzý kilitlemenizi saðlar.\n"ww"/kilitac: Aracýnýzýn kilidini açmanýzý saðlar.\n"ww"/renk: Aracýnýzýn rengini deðiþtirmenizi saðlar.\n"ww"/plaka: Aracýnýzýn plakasýný deðiþtirmenizi saðlar.\n"ww"/alarm: Aracýnýzýn alarmýný açmanýzý saðlar.\n");
	strcat(Yazi, String);
	format(String, sizeof(String), ""ww"/bagaj: Aracýnýzýn bagajýný açmanýzý saðlar.\n\n"ww"/kaput: Aracýnýzýn kaputunu açmanýzý saðlar.\n"ww"/far: Aracýnýzýn farýný açmanýzý saðlar.\n"ww"/speed: Hýz özelliðini açmanýzý, kapamanýzý saðlar.\n"ww"/jump: Zýpla özelliðini açmanýzý, kapamanýzý saðlar.\n");
	strcat(Yazi, String);
	format(String, sizeof(String), ""ww"/m1-/m28: Araç indirmenizi saðlar.\n"ww"/v1-/v17: Araç indirmenizi saðlar.\n"ww"2 tuþuyla aracýnýzý tamir edip, nos takabilirsiniz.\n"ww"/neon: Aracýnýza neon takmanýzý saðlar.\n");
	strcat(Yazi, String);
	format(String, sizeof(String), ""ww"Ateþ etme tuþuyla hýzlanma özelliðini kullanabilirsiniz.\n"ww"Y tuþuyla ters dönen aracýnýzý düzeltebilirsiniz.\n\n"ww"Oyuncu Komutlarý:\n"ww"/kill: Ýntihar etmenizi saðlar.\n"ww"/rapor: Kurallarý uymayanlarý bildirmenizi saðlar.\n"ww"/bugrapor: Bulduðunuz açýklarý bildirmenizi saðlar.\n"ww"/etkistek: Ýstek etkinlikte bulunmanýzý saðlar.\n");
	strcat(Yazi, String);
	format(String, sizeof(String), ""ww"/admins: Aktif oyun görevlilerini görmenizi saðlar.\n"ww"/mkapat: Çalan þarkýyý kapatmanýzý saðlar.\n"ww"/credits: Sunucu hakkýnda bilgi edinmenizi saðlar.\n"ww"/myskin: Skininizi deðiþtirmenizi saðlar.\n");
	strcat(Yazi, String);
	format(String, sizeof(String), ""ww"/zamanim: Oyun saatinizi deðiþtirmenizi saðlar.\n"ww"/havam: Oyun havanýzý deðiþtirmenizi saðlar.\n"ww"/time: Saati ve tarihi görmenizi saðlar.\n"ww"/saveskin: Skininizi kaydetmenizi saðlar.\n");
	strcat(Yazi, String);
	format(String, sizeof(String), ""ww"/savecolor: Nick renginizi kaydetmenizi saðlar.\n"ww"/shop: Marketi açmanýzý saðlar.\n"ww"/skoryolla: Skor yollamanýzý saðlar.\n"ww"/parayolla: Para yollamanýzý saðlar.");
	strcat(Yazi, String);
    ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_MSGBOX, ""safaf"Komutlar", Yazi, ""ww"Ýleri",""ww"Kapat");
	return true;
}

CMD:cmds(playerid,params[])
{

	cmd_komutlar(playerid,"");
	return true;
}

CMD:afklist(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid, 6);
    new
        string[126], string2[756], stringh[1024], stringsayac[100], id_syntax[56], sayqq;
    for(new i = 0; i < GetMaxPlayers(); i++){
    if(IsPlayerConnected(i)){
    if(PlayerInfo[i][AFK] == true){
    if(i <= 9) { format(id_syntax,56,"00%i", i); }
    else if(i <= 99) { format(id_syntax,56,"0%i", i); }
    else if(i >= 100) { format(id_syntax,56,"%i", i); }
    sayqq++;
    format(string, sizeof string, ""ww"ID:\t\t"ww"Nick:\n");
    format(string2, sizeof string2, "%s"ww"%s\t\t"ww"%s\n", string2, id_syntax, getName(i));
    format(stringsayac, sizeof stringsayac, ""ww"Sunucuda toplam ' "wb"%i "w"' AFK oyuncu bulunuyor.", sayqq);
    format(stringh, sizeof stringh, "%s%s\n%s", string, string2, stringsayac);
	}}}
    if(sayqq==0){ Hata(playerid, "AFK oyuncu bulunamadý!"); } else { ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"AFK Oyuncular",stringh,""ww"Kapat",""); }
    return true;
}

CMD:afkol(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	PlayerInfo[playerid][AFK] = true;
	SCM(playerid,-1,""safaf"Artýk AFK olarak gözükeceksiniz.");
	return true;
}

CMD:afkcik(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
	PlayerInfo[playerid][AFK] = false;
	SCM(playerid,-1,""safaf"Artýk AFK olarak gözükmeyeceksiniz.");
	return true;
}

CMD:ceteler(playerid, params[])
{
	new isim[50], tag[16], uyesayisi, bolgesayisi, str[5000], sonstr[5000], id, top[500];
	format(top, sizeof(top), ""ww"Çete ID\t"ww"Çete Ýsimi\t"ww"Çete Tagý\t"ww"Çete Üyeleri\t"ww"Çete Bölgeleri\n");
	strcat(sonstr, top);
	mysql_query(mysqlC, "SELECT * FROM `ceteler` ORDER BY `cetebolgesayisi` DESC, `ID` DESC LIMIT 15");
	ceteler_sayim[playerid] = 15;
	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name_int(i, "ID", id);
	    cache_get_value_name(i, "Isim", isim);
	    cache_get_value_name(i, "Tag", tag);
	    cache_get_value_name_int(i, "uyesayisi", uyesayisi);
	    cache_get_value_name_int(i, "cetebolgesayisi", bolgesayisi);
	    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\t"ww"%d\t"ww"%d\n", str, id - 1, isim, tag, uyesayisi, bolgesayisi);
	}
	strcat(sonstr, str);
	mysql_query(mysqlC, "SELECT * FROM `ceteler`");
	if(cache_num_rows() > ceteler_sayim[playerid])
	    strcat(sonstr, ""ad"»»»» Sonraki Sayfa");
	ShowPlayerDialog(playerid, DIALOG_CETELER_YENI, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Listesi", sonstr, ""ww"Devam", ""ww"Kapat");
	return true;
}

stock expver(playerid, miktar)
{
	PlayerInfo[playerid][exp] += miktar;
	UpdateEXP(playerid);
	return true;
}

CMD:textleriac(playerid,params[])
{

	for(new i = 0; i < 41; i++)
	{
		TextDrawShowForPlayer(playerid, AltTextler[i]);
	}
	TextDrawShowForPlayer(playerid,eMessage[playerid][0]);
	TextDrawShowForPlayer(playerid,eMessage[playerid][1]);
	TextDrawShowForPlayer(playerid,eMessage[playerid][2]);
	TextDrawShowForPlayer(playerid,eMessage[playerid][3]);
	TextDrawShowForPlayer(playerid,eMessage[playerid][4]);
	return true;
}

CMD:textlerikapat(playerid,params[])
{

	for(new i = 0; i < 41; i++)
	{
		TextDrawHideForPlayer(playerid, AltTextler[i]);
	}
	TextDrawHideForPlayer(playerid,eMessage[playerid][0]);
	TextDrawHideForPlayer(playerid,eMessage[playerid][1]);
	TextDrawHideForPlayer(playerid,eMessage[playerid][2]);
	TextDrawHideForPlayer(playerid,eMessage[playerid][3]);
	TextDrawHideForPlayer(playerid,eMessage[playerid][4]);
	return true;
}

CMD:tamir(playerid,params[])
{

	if(IsPlayerInAnyVehicle(playerid))
	{
	if(!IsNosVehicle(GetPlayerVehicleID(playerid))){
	RepairVehicle(GetPlayerVehicleID(playerid));
	GameTextForPlayer(playerid,"~r~~h~TAMIR EDILDI!",1000,3);
	}
	AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
	RepairVehicle(GetPlayerVehicleID(playerid));
	if(PlayerInfo[playerid][GodCar] == 1)SetVehicleHealth(GetPlayerVehicleID(playerid),1000000);
	GameTextForPlayer(playerid,"~n~~n~~n~~r~~h~10X NOS ~w~~h~~h~+ ~r~~h~TAMIR",1000,3);
	}
	return true;
}

CMD:kilit(playerid, params[])
{

    new State=GetPlayerState(playerid);
    new modelid = GetVehicleModel(GetPlayerVehicleID(playerid));
    if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Bu komutu kullanabilmek için araç içinde olmalýsýnýz!");
    if(State!=PLAYER_STATE_DRIVER) return Hata(playerid,"Bu komutu kullanabilmek için sürücü koltuðunda olmalýsýnýz!");
    if(modelid == 520 || modelid ==  432 || modelid == 425) return Hata(playerid,"Bu aracý kilitleyemezsiniz!");
    foreach(new i : Player)
    {
    if(i != playerid)
    {
    SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 1);
    }
    }
	SendClientMessage(playerid, -1, ""safaf"Araç kilitlendi.");
   	new Float:pX, Float:pY, Float:pZ;
    GetPlayerPos(playerid,pX,pY,pZ);
    return true;
}

CMD:kilitac(playerid, params[])
{

    new modelid = GetVehicleModel(GetPlayerVehicleID(playerid));
    if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Bu komutu kullanabilmek için araç içinde olmalýsýnýz!");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid,"Bu komutu kullanabilmek için sürücü koltuðunda olmalýsýnýz!");
    if(modelid == 520 || modelid ==  432 || modelid == 425) return Hata(playerid,"Bu aracý kilitleyemezsiniz!");
    foreach(new i : Player)
    {
    if(i != playerid)
    {
    SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 0);
    }
    }
	SendClientMessage(playerid, -1, ""safaf"Araç kilidi açýldý.");
   	new Float:pX, Float:pY, Float:pZ;
    GetPlayerPos(playerid,pX,pY,pZ);
    return true;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    new cmd[32], pos = strfind(cmdtext, " ");
    strmid(cmd, cmdtext, 0, (pos == -1) ? strlen(cmdtext) : pos, 32);

	if(gettime() < GetPVarInt(playerid, "kacamazsinn"))
	{
	    if(!strcmp(cmd, "/l", true) || !strcmp(cmd, "/local", true) || !strcmp(cmd, "/pm", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

	    SFM(playerid, -1, ""safaf"Yaralýyken komut kullanamazsýn. Kalan: "wb"%i "w"saniye.", GetPVarInt(playerid, "kacamazsinn") - gettime());
	    return false;
	}

	if(GetPVarInt(playerid, "esyaduzenliyor") != 0)
	{
	    if(!strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true) || !strcmp(cmd, "/evmenu", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

	    Hata(playerid, "Eþya düzenlerken komut kullanamazsýnýz.");
	    return false;
	}

	if(InfoLabyrinth[playerid][playerlost])
	{
	    if(!strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true) || !strcmp(cmd, "/labirentcik", true)) return true;

	    Hata(playerid, "Labirentteyken komut kullanamazsýnýz.");
	    return false;
	}

	if(RaceDuelde[playerid] == true)
	{
	    if(!strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

	    Hata(playerid, "Yarýþtayken komut kullanamazsýnýz.");
	    return false;
	}

	if(Yarista[playerid] == true)
	{
	    if(!strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true) || !strcmp(cmd, "/cik", true)) return true;

	    Hata(playerid, "Yarýþtayken komut kullanamazsýnýz.");
	    return false;
	}

	if(Bankada[playerid] == true)
	{
	    if(!strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

	    Hata(playerid, "Bankadan çýkmadan komut kullanamazsýnýz.");
	    return false;
	}

	if(dmyasagi[playerid] == 1)
	{
	    if(!strcmp(cmd, "/cik", true) || !strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

		Hata(playerid, "Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
		return false;
	}

	if(Speedydeaglede[playerid] == true)
	{
	    if(!strcmp(cmd, "/cik", true) || !strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

	    Hata(playerid, "Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
	    return false;
	}

    if(Derbyde[playerid] == true)
    {
        if(!strcmp(cmd, "/cik", true) || !strcmp(cmd, "/l", true) || !strcmp(cmd, "/pm", true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

		Hata(playerid, "Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(isCbug[playerid] == 1)
    {
        if(!strcmp(cmd,"/cik",true) || !strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd,"/deaglever",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(PlayerInfo[playerid][Spawned] == 0)
    {
        if(!strcmp(cmd,"/kayit",true) || !strcmp(cmd, "/giris", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Spawn olmadan komut kullanamazsýnýz.");
        return false;
    }

	if(PlayerInfo[playerid][Giris] == 0)
	{
        if(!strcmp(cmd,"/kayit",true) || !strcmp(cmd, "/giris", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Giriþ yapmadan bu komutu kullanamazsýnýz.");
        return false;
	}

    if(duelloda[playerid] == true)
    {
        if(!strcmp(cmd,"/cik",true) || !strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(PlayerInfo[playerid][Parkour] == true)
    {
        if(!strcmp(cmd,"/cik",true) || !strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(lEtkinlikte[playerid] == 1 || lKatildim[playerid] == 1)
    {
        if(!strcmp(cmd,"/cik",true) || !strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(duelde[playerid] == 1)
    {
        if(!strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Lütfen geri sayýmýn bitmesini bekleyin.");
        return false;
    }

    if(PlayerInfo[playerid][Jailed] == 1)
    {
        if(!strcmp(cmd,"/l",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Hapiste sadece /l komutunu kullanabilirsiniz.");
        return false;
    }

    if(CSDe[playerid] == 1)
    {

        if(!strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd,"/cik",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(Zombiede[playerid] == 1)
    {
        if(!strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd,"/cik",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(HungerGamede[playerid] == 1)
    {
        if(!strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd,"/cik",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(GunGamedeAmk[playerid] == true)
    {
        if(!strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd,"/cik",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    if(RaceDuelde[playerid] == true)
    {
        if(!strcmp(cmd,"/l",true) || !strcmp(cmd,"/pm",true) || !strcmp(cmd,"/cik",true) || !strcmp(cmd, "/local", true)) return true;
	    if(!strcmp(cmd, "/ban", true) || !strcmp(cmd, "/nban", true) || !strcmp(cmd, "/sban", true)) return true;
	    if(!strcmp(cmd, "/cc", true) || !strcmp(cmd, "/warn", true) || !strcmp(cmd, "/mute", true)) return true;
	    if(!strcmp(cmd, "/jail", true) || !strcmp(cmd, "/ann", true) || !strcmp(cmd, "/ann2", true)) return true;
	    if(!strcmp(cmd, "/ann3", true) || !strcmp(cmd, "/ann4", true) || !strcmp(cmd, "/ann5", true)) return true;
	    if(!strcmp(cmd, "/asay", true) || !strcmp(cmd, "/asaylist", true) || !strcmp(cmd, "/unban", true)) return true;
	    if(!strcmp(cmd, "/admins", true) || !strcmp(cmd, "/anims", true) || !strcmp(cmd, "/djs", true)) return true;
	    if(!strcmp(cmd, "/vips", true) || !strcmp(cmd, "/getid", true) || !strcmp(cmd, "/offban", true)) return true;
	    if(!strcmp(cmd, "/offsban", true) || !strcmp(cmd, "/offnban", true) || !strcmp(cmd, "/herkeseskorver", true)) return true;
	    if(!strcmp(cmd, "/herkeseparaver", true) || !strcmp(cmd, "/herkeseglkrediver", true) || !strcmp(cmd, "/herkeseexpver", true)) return true;
    	if(!strcmp(cmd, "/as", true) || !strcmp(cmd, "/sa", true) || !strcmp(cmd, "/aka", true)) return true;
    	if(!strcmp(cmd, "/ip", true) || !strcmp(cmd, "/unmute", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/freeze", true) || !strcmp(cmd, "/unfreeze", true) || !strcmp(cmd, "/unjail", true)) return true;
    	if(!strcmp(cmd, "/kick", true) || !strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/write", true)) return true;
    	if(!strcmp(cmd, "/sarki", true) || !strcmp(cmd, "/youtube", true) || !strcmp(cmd, "/sarkilar", true)) return true;
    	if(!strcmp(cmd, "/spawn", true) || !strcmp(cmd, "/burn", true) || !strcmp(cmd, "/slap", true)) return true;
    	if(!strcmp(cmd, "/afklist", true) || !strcmp(cmd, "/setcolor", true) || !strcmp(cmd, "/setname", true)) return true;
    	if(!strcmp(cmd, "/dukkanlar", true) || !strcmp(cmd, "/cetemekanlari", true)) return true;
    	if(!strcmp(cmd, "/mkapat", true) || !strcmp(cmd, "/mac", true) || !strcmp(cmd, "/radyo", true)) return true;
    	if(!strcmp(cmd, "/music", true) || !strcmp(cmd, "/muzik", true) || !strcmp(cmd, "/radyoac", true)) return true;
    	if(!strcmp(cmd, "/musicon", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/muzikkapat", true) || !strcmp(cmd, "/musicoff", true) || !strcmp(cmd, "/radyokapat", true)) return true;
    	if(!strcmp(cmd, "/credits", true) || !strcmp(cmd, "/fiyatlar", true) || !strcmp(cmd, "/hakkimizda", true)) return true;
    	if(!strcmp(cmd, "/kurallar", true) || !strcmp(cmd, "/komutlar", true) || !strcmp(cmd, "/c", true)) return true;

        Hata(playerid,"Burada komut kullanamazsýnýz. Çýkmak için /cik kullanýn.");
        return false;
    }

    return true;
}

CMD:plaka(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Bu komutu kullanabilmek için araç içinde olmalýsýnýz!");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid,"Bu komutu kullanabilmek için sürücü koltuðunda olmalýsýnýz!");
    ShowPlayerDialog(playerid, 1577 ,DIALOG_STYLE_INPUT,""safaf"Plaka",""ww"Kullanmak istediðiniz plakayý aþaðýya giriniz.",""ww"Tamam",""ww"Kapat");
    return true;
}

CMD:kurallar(playerid, params[])
{
	new dialog[2048];
	strcat(dialog, ""ww"# Hile ve Hile Tekrarý #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"Ban\n");
	strcat(dialog, "\t"w"2.Tekrar = "wb"Ban\n");
	strcat(dialog, "\t"w"3.Tekrar = "wb"N-Ban\n");
	strcat(dialog, ""ww"# Spawn HK - Kill - DB #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"180 Saniye Jail\n");
	strcat(dialog, "\t"w"2.Tekrar = "wb"300 Saniye Jail\n");
	strcat(dialog, "\t"w"3.Tekrar = "wb"400 Saniye Jail\n");
	strcat(dialog, "\t"w"4.Tekrar = "wb"500 Saniye Jail\n");
	strcat(dialog, "\t"w"5.Tekrar = "wb"600 Saniye Jail\n");
	strcat(dialog, ""ww"# Reklam #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"Doðrudan N-Ban\n");
	strcat(dialog, ""ww"# Fake Kill #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"Doðrudan N-Ban\n");
	strcat(dialog, ""ww"# Chatte Hile Ýsmi Verme #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"Warn\n");
	strcat(dialog, "\t"w"2.Tekrar = "wb"Kick\n");
	strcat(dialog, "\t"w"3.Tekrar = "wb"Ban\n");
	strcat(dialog, ""ww"# Chatte E-Posta Adresi Verme #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"Warn\n");
	strcat(dialog, "\t"w"2.Tekrar = "wb"Kick\n");
	strcat(dialog, "\t"w"3.Tekrar = "wb"Ban\n");
	strcat(dialog, ""ww"# Uygunsuz Nick #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"Kick\n");
	strcat(dialog, "\t"w"2.Tekrar = "wb"Ban\n");
	strcat(dialog, "\t"w"3.Tekrar = "wb"N-Ban\n");
	strcat(dialog, ""ww"# Server Huzurunu Bozan Kiþiler #\n");
	strcat(dialog, "\t"w"1.Tespit = "wb"Warn\n");
	strcat(dialog, "\t"w"2.Tekrar = "wb"Kick\n");
	strcat(dialog, "\t"w"3.Tekrar = "wb"Ban\n");
	strcat(dialog, ""ww"# Anket #\n");
	strcat(dialog, "\t"w"Her Seferde = "wb"Warn\n");
	strcat(dialog, ""ww"# Küfür #\n");
	strcat(dialog, "\t"w"Seviyeye Göre = "wb"Warn - Kick - Ban");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Kurallar", dialog, ""ww"Kapat", "");
	return true;
}

stock ChatLog(playerid, text[])
{
	new
	 File:lFile = fopen("Dark/Log/ChatLog.txt", io_append),
	 logData[178];

	format(logData, sizeof(logData),"[%s] %s(%i): %s \r\n", TarihCek(), getName(playerid),playerid, text);
	fwrite(lFile, code(logData));

	fclose(lFile);
	return true;
}

stock PMLog(playerid, kisi, text[])
{
	new
	 File:lFile = fopen("Dark/Log/PMLog.txt", io_append),
	 logData[178];

	format(logData, sizeof(logData),"[%s] %s(%i) >>> %s(%i): %s \r\n", TarihCek(), getName(playerid),playerid, getName(kisi), kisi, text);
	fwrite(lFile, code(logData));

	fclose(lFile);
	return true;
}

CMD:sifredegistir(playerid,params[])
{
	new pass[128], string[128], Sorgu[400];
	if(PlayerInfo[playerid][Giris] == 0) return Hata(playerid, "Giriþ yapmadan bu komutu kullanamasýnýz.");
    if(sscanf(params,"s[129]",pass)) return Kullanim(playerid,"sifredegistir [YENÝ ÞÝFRE]");
 	if(strlen(pass) < 4 || strlen(pass) > 32) return Hata(playerid,"Þifreniz en az 4, en fazla 32 karakterden oluþabilir.");
	if(spamProtect(playerid,"sifredegistir",60)) return true;
    format(Sorgu, sizeof(Sorgu), "UPDATE `oyuncular` SET `sifre` =('%s') WHERE `kullaniciadi` = '%s'", pass, getName(playerid));
    mysql_query(mysqlC, Sorgu);
    format(string, sizeof string, ""safaf"Þifrenizi baþarýyla '%s' olarak deðiþtirdiniz.", pass);
    SendClientMessage(playerid,-1,string);
	return true;
}

CMD:lottokatil(playerid, params[])
{
	new secilen;
	if(sscanf(params,"i",secilen)) return Kullanim(playerid,"lottokatil [0-100]");
    if(secilen < 0 || secilen > 100) return Kullanim(playerid,"lottokatil [0-100]");
    new Num = secilen;
    if(GetPlayerMoney(playerid) < TICKET_COST) return Hata(playerid,"Yeterli paranýz yok.");
    if(Numbers[Num] == 1)
    {
    	Hata(playerid,"Bu sayý baþka bir oyuncu tarafýndan kullanýlýyor!");
        return true;
    }
    if(GetPVarInt(playerid, "LottoNumber") != 0) return Hata(playerid,"Lotto'ya zaten katýlmýþsýnýz.");
    SetPVarInt(playerid, "LottoNumber", Num);
    Numbers[Num] = 1;
    GivePlayerMoney(playerid, -TICKET_COST);
    new str[176];
    format(str, sizeof(str), ""safaf"Lotto bileti satýn aldýnýz "wb"(%d). "w"Ýkramiye: "ad"$%s", Num, FormatMoney(Jackpot));
    SendClientMessage(playerid, -1, str);
    Jackpot = Jackpot + LOTTO_JACKPOT;
    return true;
}

function Draw()
{
	print("» Yeni bir lotto baþladý.");
    new Lnum = random(100) + 1;
    new winner = -1;
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(!IsPlayerConnected(i)) continue;
        if(GetPVarInt(i, "LottoNumber") == Lnum) winner = i;
        SetPVarInt(i, "LottoNumber", 0);
    }
    if(winner != -1)
    {
        new Pname[24];
        GetPlayerName(winner, Pname, 24);
        new str[156];
        format(str, sizeof(str), "{FFA600}Lotto » {%06x}%s(%d) "w"adlý oyuncu Lotto'yu kazandý! Ýkramiye: "wb"$%s", GetPlayerColor(winner) >>> 8, Pname, winner, FormatMoney(Jackpot));
        SendClientMessageToAll(-1, str);
        SendClientMessageToAll(-1, "{FFA600}Lotto » {FFFFFF}Lottoya katýlmak için, "wb"/lottokatil "w"yazabilirsiniz.");
        GivePlayerMoney(winner, Jackpot);
        Jackpot = LOTTO_START;
    }
    if(winner == -1)
    {
        new str[512];
        format(str, sizeof(str), "{FFA600}Lotto » {FFFFFF}Büyük ikramiyeyi tutturabilen olmadý. Yeni Ýkramiye: "wb"$%s", FormatMoney(Jackpot));
        SendClientMessageToAll(-1, "{FFA600}Lotto » {FFFFFF}Lotto oynamak için, "wb"/lottokatil [1 - 99] "w"yazabilirsiniz.");
    }
    for(new s = 0; s < 100; s++)
    {
        Numbers[s] = 0;
    }
    return true;
}

CMD:fpsgostergesi(playerid, params[])
{
	if(fpsacik[playerid] == 0)
	{
		fpsacik[playerid] = 1;
 	    TextDrawShowForPlayer(playerid,FPS[playerid]);
 	    SCM(playerid,-1,""safaf"FPS Göstergesi açýldý.");
    }
	else if(fpsacik[playerid] == 1)
	{
		fpsacik[playerid] = 0;
		TextDrawHideForPlayer(playerid,FPS[playerid]);
        SCM(playerid,-1,""safaf"FPS Göstergesi kapandý.");
    }
	return true;
}

stock CountDM(event)
{
	new count = 0;
	foreach(new i : Player)
	{
		if(dmde[i] > 0)
		{
	 		if(DMZoneOyuncuModu[i] == event)
	   		{
	     		count++;
		    }
		}
	}
	return count;
}

CMD:evekle(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return false;
	new interior, carslots, price;
	if(Iter_Count(Houses) >= MAX_HOUSES) return SendClientMessage(playerid, -1, "MAX_EV limitine ulaþtýnýz!");
	if(sscanf(params, "iii", interior, carslots, price)) return Kullanim(playerid,"/evekle [ÝNTERÝOR] [ARAÇ SAYISI] [FÝYAT]");
	if(interior > 10 || interior < 0 || price < 0 || carslots < 0 || carslots > 10) return Hata(playerid,"Interior: 1-10, Araç: 1-10, Fiyat: > 0");
	CreateHouse(playerid, interior, carslots, price);
	return true;
}

CMD:evsatinal(playerid, params[])
{
	new string[128];
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, -1, ""safaf"Bu komutu kullanabilmek için aracýnýzdan inin.");
	if(PlayerData[playerid][Homes][0] != -1) return SendClientMessage(playerid, -1, ""safaf"Zaten eviniz var.");
	foreach(new i: Houses)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[i][HouseX], HouseData[i][HouseY], HouseData[i][HouseZ]))
	    {
	        if(HouseData[i][Owned] == false && HouseData[i][HouseForSale] == false)
	        {
	            if(GetPlayerMoney(playerid) < HouseData[i][HousePrice])
	            {
					format(string, sizeof(string), ""safaf"Bu evi alabilmek için {FFFFFF} %s${FFFFFF}'a daha ihtiyacýn var.", FormatMoney(HouseData[i][HousePrice] - GetPlayerMoney(playerid)));
					return SendClientMessage(playerid, -1, string);
				}
				ChangeOwner(playerid, i);
				GivePlayerMoney(playerid, -HouseData[i][HousePrice]);
				UpdateEntrance(i);
				foreach(new x: Houses)
				{
				    SaveHouse(x);
				}
				SaveAllCars();
				return SendClientMessage(playerid, -1, ""safaf"Yeni eviniz hayýrlý olsun! {FFFFFF} /evmenu {FFFFFF} komutu ile evinizi düzenleyebilirsiniz.");
			}
		 	if(HouseData[i][Owned] == true && HouseData[i][HouseForSale] == true)
			{
			    if(GetPlayerMoney(playerid) < HouseData[i][HouseSalePrice])
			    {
				    format(string, sizeof(string), ""safaf"Bu evi alabilmek için {FFFFFF} %s${FFFFFF}'a daha ihtiyacýn var!", FormatMoney(HouseData[i][HouseSalePrice] - GetPlayerMoney(playerid)));
					return SendClientMessage(playerid, -1, string);
				}
				new pid = GetPlayerID(HouseData[i][Owner]);
				if(pid != -1)
				{
				    PlayerData[pid][Homes][0] = -1;
				    GivePlayerMoney(pid, HouseData[i][HouseSalePrice]);
					format(string, sizeof(string), ""safaf"%s adlý evini %s adlý kullanýcý %s$ karþýlýðýnda satýn aldý!", HouseData[i][HouseName], GetName(playerid), FormatMoney(HouseData[i][HouseSalePrice]));
					SendClientMessage(pid, -1, string);
				}
				else
				{
				}
				GivePlayerMoney(playerid, -HouseData[i][HouseSalePrice]);
				EvictHouseWithoutCars(i);
				ChangeOwner(playerid, i);
				UpdateEntrance(i);
				return SendClientMessage(playerid, -1, ""safaf" Yeni eviniz hayýrlý olsun! /evmenu komutu ile evinizi düzenleyebilirsiniz.");

			}
			if(HouseData[i][Owned] == true && HouseData[i][HouseForSale] == false)
			{
			    return SendClientMessage(playerid, -1, ""safaf"Bu ev satýlýk deðil!");
			}
		}
	}
	return true;
}

CMD:evegit(playerid, params[])
{
	new houseid = PlayerData[playerid][Homes][0];
	if(houseid == -1) return Hata(playerid,"Malesef bir eviniz yok.");
	if(GetPlayerInterior(playerid) != 0) return Hata(playerid,"Lütfen dýþarý çýkýn.");
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return Hata(playerid,"Araç içindeyken evinize gidemezsiniz.");
	SetPlayerPos(playerid, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ]);
	return true;
}

stock ChangeOwner(playerid, houseid)
{
	PlayerData[playerid][Homes][0] = houseid;
    HouseData[houseid][Owned] = true;
    format(HouseData[houseid][HouseName], 64, "Evim");
    format(HouseData[houseid][Owner], 24, GetName(playerid));
    HouseData[houseid][HouseOpened] = false;
	HouseData[houseid][HouseForSale] = false;
	return true;
}


CMD:evmenu(playerid, params[])
{
	new houseid = PlayerData[playerid][CurrentHouse];
	if(houseid == -1) return SendClientMessage(playerid, -1, ""safaf"Bu komutu kullanabilmek için evinizde bulunmalýsýnýz.");
	ShowHouseDialog(playerid, houseid);
	return true;
}

CMD:evgiris(playerid, params[])
{
	foreach(new i: Houses)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[i][HouseX], HouseData[i][HouseY], HouseData[i][HouseZ]))
	    {
	        if(!strcmp(HouseData[i][Owner], GetName(playerid)) && HouseData[i][Owned] == true)
	        {
 				return EnterHouse(playerid, i);
			}
			if(HouseData[i][HouseOpened] == true && HouseData[i][Owned] == true)
			{
			    return EnterHouse(playerid, i);
			}
			else
			{
			 	return Hata(playerid,"Bu ev kilitli.");
			}
		}
	}
	Hata(playerid,"Etrafýnýzda ev yok.");
	return true;
}

CMD:evbosalt(playerid, params[])
{
    if(!IsPlayerAdmin(playerid)) return false;
	new string[128];
	foreach(new i: Houses)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[i][HouseX], HouseData[i][HouseY], HouseData[i][HouseZ]))
	    {
	        EvictHouse(i);
	        format(string, sizeof(string), ""safaf"%d ID'li evi boþalttýnýz.", i);
	        SendClientMessage(playerid, -1, string);
		}
	}
	return true;
}

CMD:evsil(playerid, params[])
{
    if(!IsPlayerAdmin(playerid)) return false;
    new string[128];
	foreach(new i: Houses)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[i][HouseX], HouseData[i][HouseY], HouseData[i][HouseZ]))
	    {
	        new next;
	        Iter_SafeRemove(Houses, i, next);
	        DeleteHouse(i);
	        format(string, sizeof(string), ""safaf" %d ID'li evi sildiniz.", i);
	        SendClientMessage(playerid, -1, string);
	        i = next;
		}
	}

	foreach(new i: Houses)
	{
	    SaveHouse(i);
	}
	SaveAllCars();
	return true;
}

stock SaveHouse(houseid)
{
	new kayityeri[64];
    format(kayityeri, sizeof(kayityeri), "Evler/EvInfo_%d.ini", houseid);
    new INI: kayitet = INI_Open(kayityeri);
    INI_WriteBool(kayitet, "Owned", HouseData[houseid][Owned]);
    INI_WriteString(kayitet, "Owner", HouseData[houseid][Owner]);
    INI_WriteString(kayitet, "HouseName", HouseData[houseid][HouseName]);
    INI_WriteFloat(kayitet, "HouseX", HouseData[houseid][HouseX]);
    INI_WriteFloat(kayitet, "HouseY", HouseData[houseid][HouseY]);
    INI_WriteFloat(kayitet, "HouseZ", HouseData[houseid][HouseZ]);
    INI_WriteInt(kayitet, "HouseInterior", HouseData[houseid][HouseInterior]);
    INI_WriteInt(kayitet, "HousePrice", HouseData[houseid][HousePrice]);
    INI_WriteBool(kayitet, "HouseOpened", HouseData[houseid][HouseOpened]);
	INI_WriteBool(kayitet, "HouseForSale", HouseData[houseid][HouseForSale]);
	INI_WriteInt(kayitet, "HouseSalePrice", HouseData[houseid][HouseSalePrice]);
	INI_WriteInt(kayitet, "CarSlots", HouseData[houseid][CarSlots]);
	new string[128];
	for(new i = 0; i < MAX_EV_ESYA; i ++)
	{
		format(string, sizeof(string), "EsyaModel_%i", i);
		INI_WriteInt(kayitet, string, HouseData[houseid][EsyaModel][i]);
		format(string, sizeof(string), "EsyaX_%i", i);
		INI_WriteFloat(kayitet, string, HouseData[houseid][EsyaX][i]);
		format(string, sizeof(string), "EsyaY_%i", i);
		INI_WriteFloat(kayitet, string, HouseData[houseid][EsyaY][i]);
		format(string, sizeof(string), "EsyaZ_%i", i);
		INI_WriteFloat(kayitet, string, HouseData[houseid][EsyaZ][i]);
		format(string, sizeof(string), "EsyaRotX_%i", i);
		INI_WriteFloat(kayitet, string, HouseData[houseid][EsyaRotX][i]);
		format(string, sizeof(string), "EsyaRotY_%i", i);
		INI_WriteFloat(kayitet, string, HouseData[houseid][EsyaRotY][i]);
		format(string, sizeof(string), "EsyaRotZ_%i", i);
		INI_WriteFloat(kayitet, string, HouseData[houseid][EsyaRotZ][i]);
		format(string, sizeof(string), "EsyaType_%i", i);
		INI_WriteInt(kayitet, string, HouseData[houseid][EsyaType][i]);
	}
	INI_Close(kayitet);
	return true;
}

stock SaveHouseCars(houseid)
{
	new kayityeri[64];
	for(new i = 0; i < 10; i ++)
	{
		if(IsValidVehicle(HouseData[houseid][VehicleIDs][i]))
		{
		    new i = VehSystemID[HouseData[houseid][VehicleIDs][i]];
	        new component[32];
	        format(kayityeri, sizeof(kayityeri), "Evler/Araclar/AracInfo_%d.ini", i);
	        new INI: kayitet = INI_Open(kayityeri);
			INI_WriteInt(kayitet, "HouseID", CarData[i][HouseID]);
			INI_WriteInt(kayitet, "Model", CarData[i][Model]);
			INI_WriteInt(kayitet, "PaintJob", CarData[i][PaintJob]);
			for(new c; c < 14; c++)
			{
			    format(component, sizeof component, "Component_%i", c);
			    INI_WriteInt(kayitet, component, CarData[i][Components][c]);
			}
			INI_WriteInt(kayitet, "Color1", CarData[i][Color1]);
			INI_WriteInt(kayitet, "Color2", CarData[i][Color2]);
			INI_WriteFloat(kayitet, "SpawnX", CarData[i][SpawnX]);
			INI_WriteFloat(kayitet, "SpawnY", CarData[i][SpawnY]);
			INI_WriteFloat(kayitet, "SpawnZ", CarData[i][SpawnZ]);
			INI_WriteFloat(kayitet, "SpawnRot", CarData[i][SpawnRot]);
			INI_Close(kayitet);
		}
	}
}

stock AddVehicle(houseid, model, paintjob, color1, color2, components[], Float:x, Float:y, Float:z, Float:rot)
{
	new houseslot = GetFreeCarSlot(houseid);
	new slot = Iter_Free(Cars);
	HouseData[houseid][VehicleIDs][houseslot] = CreateVehicle(model, x, y, z, rot, color1, color2, 120);
	CarData[slot][HouseID] = houseid;
	CarData[slot][Model] = model;
	CarData[slot][PaintJob] = paintjob;
	CarData[slot][Color1] = color1;
	CarData[slot][Color2] = color2;
	for(new i = 0; i < 14; i++)
	{
	    CarData[slot][Components][i] = components[i];
	}
	CarData[slot][SpawnX] = x;
	CarData[slot][SpawnY] = y;
	CarData[slot][SpawnZ] = z;
	CarData[slot][SpawnRot] = rot;
	Iter_Add(Cars, slot);
	VehSystemID[HouseData[houseid][VehicleIDs][houseslot]] = slot;
	VehInHouseSystem[HouseData[houseid][VehicleIDs][houseslot]] = true;
	return HouseData[houseid][VehicleIDs][houseslot];
}

stock GetFreeCarSlot(houseid)
{
	new carslots = HouseData[houseid][CarSlots];
	for(new i = 0; i < carslots; i ++)
	{
		if(!IsValidVehicle(HouseData[houseid][VehicleIDs][i])) return i;
	}
	return -1;
}

stock GetHouseEsyaCount(houseid)
{
	new count;
	for(new i = 0; i < 30; i ++)
	{
	    if(IsValidDynamicObject(HouseData[houseid][EsyaIDs][i])) count ++;
	}
	return count;
}

stock AddEsya(houseid, model, Float:x, Float:y, Float:z, Float:rotx, Float:roty, Float:rotz, type)
{
	new slot = GetFreeEsyaSlot(houseid);
	HouseData[houseid][EsyaModel][slot] = model;
	HouseData[houseid][EsyaX][slot] = x;
	HouseData[houseid][EsyaY][slot] = y;
	HouseData[houseid][EsyaZ][slot] = z;
	HouseData[houseid][EsyaRotX][slot] = rotx;
	HouseData[houseid][EsyaRotY][slot] = roty;
	HouseData[houseid][EsyaRotZ][slot] = rotz;
	HouseData[houseid][EsyaType][slot] = type;
	HouseData[houseid][EsyaIDs][slot] = CreateDynamicObject(model, x, y, z, rotx, roty, rotz, houseid + 15);
	ObjectSlotID[HouseData[houseid][EsyaIDs][slot]] = slot;
	ObjectHouseID[HouseData[houseid][EsyaIDs][slot]] = houseid;
	ObjectInSystem[HouseData[houseid][EsyaIDs][slot]] = true;
	return HouseData[houseid][EsyaIDs][slot];
}

stock DeleteHouseEsya(houseid, slot)
{
	if(IsValidDynamicObject(HouseData[houseid][EsyaIDs][slot]))
	{
	    HouseData[houseid][EsyaModel][slot] = 0;
	    HouseData[houseid][EsyaX][slot] = 0;
	    HouseData[houseid][EsyaY][slot] = 0;
        HouseData[houseid][EsyaZ][slot] = 0;
		HouseData[houseid][EsyaRotX][slot] = 0;
		HouseData[houseid][EsyaRotY][slot] = 0;
		HouseData[houseid][EsyaRotZ][slot] = 0;
		HouseData[houseid][EsyaType][slot] = 0;
		ObjectSlotID[HouseData[houseid][EsyaIDs][slot]] = -1;
		ObjectHouseID[HouseData[houseid][EsyaIDs][slot]] = -1;
		ObjectInSystem[HouseData[houseid][EsyaIDs][slot]] = false;
		DestroyDynamicObject(HouseData[houseid][EsyaIDs][slot]);
		HouseData[houseid][EsyaIDs][slot] = -1;
		return true;
	}
	return false;
}
stock GetFreeEsyaSlot(houseid)
{
	for(new i = 0; i < MAX_EV_ESYA; i ++)
	{
	    if(!IsValidDynamicObject(HouseData[houseid][EsyaIDs][i])) return i;
	}
	return -1;
}


stock SaveAllCars()
{
	new kayityeri[64];
	foreach(new i: Cars)
	{
 		new component[32];
   		format(kayityeri, sizeof(kayityeri), "Evler/Araclar/AracInfo_%d.ini", i);
     	new INI: kayitet = INI_Open(kayityeri);
		INI_WriteInt(kayitet, "HouseID", CarData[i][HouseID]);
		INI_WriteInt(kayitet, "Model", CarData[i][Model]);
		INI_WriteInt(kayitet, "PaintJob", CarData[i][PaintJob]);
		for(new c; c < 14; c++)
		{
  			format(component, sizeof component, "Component_%i", c);
	    	INI_WriteInt(kayitet, component, CarData[i][Components][c]);
		}
		INI_WriteInt(kayitet, "Color1", CarData[i][Color1]);
		INI_WriteInt(kayitet, "Color2", CarData[i][Color2]);
		INI_WriteFloat(kayitet, "SpawnX", CarData[i][SpawnX]);
		INI_WriteFloat(kayitet, "SpawnY", CarData[i][SpawnY]);
		INI_WriteFloat(kayitet, "SpawnZ", CarData[i][SpawnZ]);
		INI_WriteFloat(kayitet, "SpawnRot", CarData[i][SpawnRot]);
		INI_Close(kayitet);
	}
}

stock LoadHouse(houseid)
{
    new kayityeri[64];
    format(kayityeri, sizeof(kayityeri), "Evler/EvInfo_%d.ini", houseid);
    if(fexist(kayityeri))
    {
    	INI_ParseFile(kayityeri, "HouseLoad", .bExtra = true, .extra = houseid);
		Iter_Add(Houses, houseid);
		UpdateEntrance(houseid);
		for(new i = 0; i < MAX_EV_ESYA; i++)
		{
		    if(HouseData[houseid][EsyaModel][i] != 0)
		    {
				HouseData[houseid][EsyaIDs][i] = CreateDynamicObject(HouseData[houseid][EsyaModel][i], HouseData[houseid][EsyaX][i], HouseData[houseid][EsyaY][i],
				HouseData[houseid][EsyaZ][i], HouseData[houseid][EsyaRotX][i], HouseData[houseid][EsyaRotY][i], HouseData[houseid][EsyaRotZ][i], houseid + 15);
				ObjectHouseID[HouseData[houseid][EsyaIDs][i]] = houseid;
				ObjectSlotID[HouseData[houseid][EsyaIDs][i]] = i;
				ObjectInSystem[HouseData[houseid][EsyaIDs][i]] = true;
			}
		}
	}
    return true;
}

forward public HouseLoad(houseid, name[], value[]);
public HouseLoad(houseid, name[], value[])
{
	INI_Bool("Owned", HouseData[houseid][Owned]);
	INI_String("Owner", HouseData[houseid][Owner], MAX_PLAYER_NAME);
	INI_String("HouseName", HouseData[houseid][HouseName], 64);
	INI_Float("HouseX", HouseData[houseid][HouseX]);
	INI_Float("HouseY", HouseData[houseid][HouseY]);
	INI_Float("HouseZ", HouseData[houseid][HouseZ]);
	INI_Int("HouseInterior", HouseData[houseid][HouseInterior]);
	INI_Int("HousePrice", HouseData[houseid][HousePrice]);
	INI_Bool("HouseOpened", HouseData[houseid][HouseOpened]);
	INI_Bool("HouseForSale", HouseData[houseid][HouseForSale]);
	INI_Int("HouseSalePrice", HouseData[houseid][HouseSalePrice]);
	INI_Int("CarSlots", HouseData[houseid][CarSlots]);
	new string[128];
	for(new i = 0; i < MAX_EV_ESYA; i++)
	{
	    format(string, sizeof(string), "EsyaModel_%i", i);
	    INI_Int(string, HouseData[houseid][EsyaModel][i]);
		format(string, sizeof(string), "EsyaX_%i", i);
		INI_Float(string, HouseData[houseid][EsyaX][i]);
		format(string, sizeof(string), "EsyaY_%i", i);
		INI_Float(string, HouseData[houseid][EsyaY][i]);
		format(string, sizeof(string), "EsyaZ_%i", i);
		INI_Float(string, HouseData[houseid][EsyaZ][i]);
		format(string, sizeof(string), "EsyaRotX_%i", i);
		INI_Float(string, HouseData[houseid][EsyaRotX][i]);
		format(string, sizeof(string), "EsyaRotY_%i", i);
		INI_Float(string, HouseData[houseid][EsyaRotY][i]);
		format(string, sizeof(string), "EsyaRotZ_%i", i);
		INI_Float(string, HouseData[houseid][EsyaRotZ][i]);
		format(string, sizeof(string), "EsyaType_%i", i);
		INI_Int(string, HouseData[houseid][EsyaType][i]);
	}
	return true;
}

stock LoadCar(carid)
{
	new kayityeri[64];
	format(kayityeri, sizeof(kayityeri), "Evler/Araclar/AracInfo_%d.ini", carid);
	if(fexist(kayityeri))
	{
	    INI_ParseFile(kayityeri, "CarLoad", .bExtra = true, .extra = carid);
	    Iter_Add(Cars, carid);
	    new houseid = CarData[carid][HouseID];
		new carslots = GetFreeCarSlot(houseid);
		new model = CarData[carid][Model];
		new color1 = CarData[carid][Color1];
		new color2 = CarData[carid][Color2];
		new Float:x = CarData[carid][SpawnX];
		new Float:y = CarData[carid][SpawnY];
		new Float:z = CarData[carid][SpawnZ];
		new Float:rot = CarData[carid][SpawnRot];
		if(carslots != -1)
		{
	 		HouseData[houseid][VehicleIDs][carslots] = CreateVehicle(model, x, y, z, rot, color1, color2, 500);
            new vid = HouseData[houseid][VehicleIDs][carslots];
			VehSystemID[vid] = carid;
			VehInHouseSystem[vid] = true;
			UpdateVehicle(vid);
		}
	}
	return true;
}

stock UpdateVehicle(vehicleid)
{
	new carid = VehSystemID[vehicleid];
	for(new c = 0; c < 14; c++)
	{
 		if(CarData[carid][Components][c] != 0)
   		{
     		AddVehicleComponent(vehicleid, CarData[carid][Components][c]);
		}
	}
	if(CarData[carid][PaintJob] != 0)
	{
		ChangeVehiclePaintjob(vehicleid, CarData[carid][PaintJob] - 1);
	}
	ChangeVehicleColor(vehicleid, CarData[carid][Color1], CarData[carid][Color2]);
	return true;
}

forward public CarLoad(carid, name[], value[]);
public CarLoad(carid, name[], value[])
{
	INI_Int("HouseID", CarData[carid][HouseID]);
	INI_Int("Model", CarData[carid][Model]);
	INI_Int("PaintJob", CarData[carid][PaintJob]);
	for(new c; c < 14; c++)
	{
		new component[32];
		format(component, sizeof component, "Component_%i", c);
		INI_Int(component, CarData[carid][Components][c]);
	}
	INI_Int("Color1", CarData[carid][Color1]);
	INI_Int("Color2", CarData[carid][Color2]);
	INI_Float("SpawnX", CarData[carid][SpawnX]);
	INI_Float("SpawnY", CarData[carid][SpawnY]);
	INI_Float("SpawnZ", CarData[carid][SpawnZ]);
	INI_Float("SpawnRot", CarData[carid][SpawnRot]);
	return true;
}

stock UpdateEntrance(houseid)
{
	new Text3D:text = HouseData[houseid][DoorText];
	new pickup2 = HouseData[houseid][PickupID];
	new icon = HouseData[houseid][MapIconID];
 	new dtext[256];
    if(IsValidDynamic3DTextLabel(text))
    {
        DestroyDynamic3DTextLabel(text);
	}
	if(IsValidDynamicPickup(pickup2))
	{
	    DestroyDynamicPickup(pickup2);
	}
	if(IsValidDynamicMapIcon(icon))
	{
	    DestroyDynamicMapIcon(icon);
	}
	if(HouseData[houseid][Owned] == true && HouseData[houseid][HouseForSale] == true)
	{
	    HouseData[houseid][PickupID] = CreateDynamicPickup(1272, 1, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ]);
	    format(dtext, sizeof(dtext), "{FFFFFF}Evi almak için: {ff0000}/evsatinal\n{FFFFFF}Ev Sahibi: {ff0000}%s\n{FFFFFF}Ev Modeli: {ff0000}%i\n{FFFFFF}Ev Durumu: {ff0000}Satýlýk\n{FFFFFF}Ev Fiyatý: {ff0000}%s$", HouseData[houseid][Owner], HouseData[houseid][HouseInterior], HouseData[houseid][CarSlots], FormatMoney(HouseData[houseid][HouseSalePrice]));
	    HouseData[houseid][DoorText] = CreateDynamic3DTextLabel(dtext, -1, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ], 10.0);
	    HouseData[houseid][MapIconID] = CreateDynamicMapIcon(HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ], 31, 0, 0, 0, -1, 150.0);
 	}
 	if(HouseData[houseid][Owned] == true && HouseData[houseid][HouseForSale] == false)
 	{
 	    HouseData[houseid][PickupID] = CreateDynamicPickup(1272, 1, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ]);
	    format(dtext, sizeof(dtext), "{FFFFFF}Eve girmek için: {ff0000}/evgiris\n{FFFFFF}Ev Ýsmi: {ff0000}%s\n{FFFFFF}Ev Sahibi: {ff0000}%s\n{FFFFFF}Ev Modeli: {ff0000}%i", HouseData[houseid][HouseName], HouseData[houseid][Owner], HouseData[houseid][HouseInterior], HouseData[houseid][CarSlots]);
	    HouseData[houseid][DoorText] = CreateDynamic3DTextLabel(dtext, -1, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ], 10.0);
	}
	if(HouseData[houseid][Owned] == false)
	{
	    HouseData[houseid][PickupID] = CreateDynamicPickup(1273, 1, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ]);
	    format(dtext, sizeof(dtext), "{FFFFFF}Evi almak için: {ff0000}/evsatinal\n {FFFFFF}Ev Fiyatý: {ff0000}%s$\n {FFFFFF}Ev Modeli: {ff0000}%i", FormatMoney(HouseData[houseid][HousePrice]), HouseData[houseid][HouseInterior], HouseData[houseid][CarSlots]);
	    HouseData[houseid][DoorText] = CreateDynamic3DTextLabel(dtext, -1, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ], 10.0);
	    HouseData[houseid][MapIconID] = CreateDynamicMapIcon(HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ], 31, 0, 0, 0, -1, 150.0);
	}
	return true;
}

stock CreateHouse(playerid, interior, carslots, price)
{
	new houseid = Iter_Free(Houses);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y ,z);
	HouseData[houseid][Owned] = false;
	HouseData[houseid][HouseX] = x;
	HouseData[houseid][HouseY] = y;
	HouseData[houseid][HouseZ] = z;
	HouseData[houseid][HouseInterior] = interior;
	HouseData[houseid][HousePrice] = price;
	HouseData[houseid][HouseOpened] = false;
	HouseData[houseid][HouseForSale] = false;
	HouseData[houseid][HouseSalePrice] = 0;
	HouseData[houseid][CarSlots] = carslots;
	Iter_Add(Houses, houseid);
	UpdateEntrance(houseid);
	SaveHouse(houseid);
	return true;
}
stock DeleteHouseVehicle(houseid, slot)
{
	if(IsValidVehicle(HouseData[houseid][VehicleIDs][slot]))
	{
	    new vid = VehSystemID[HouseData[houseid][VehicleIDs][slot]];
		VehInHouseSystem[HouseData[houseid][VehicleIDs][slot]] = false;
	    DestroyVehicle(HouseData[houseid][VehicleIDs][slot]);
	    HouseData[houseid][VehicleIDs][slot] = INVALID_VEHICLE_ID;
	    new kayityeri[64];
	    format(kayityeri, sizeof(kayityeri), "Evler/Araclar/AracInfo_%d.ini", vid);
	    if(fexist(kayityeri)) fremove(kayityeri);
		CarData[vid][HouseID] = 0;
		CarData[vid][Model] = 0;
		CarData[vid][PaintJob] = 0;
		for(new c = 0; c < 14; c ++)
		{
  			CarData[vid][Components][c] = 0;
		}
		CarData[vid][Color1] = 0;
		CarData[vid][Color2] = 0;
		CarData[vid][SpawnX] = 0;
		CarData[vid][SpawnY] = 0;
		CarData[vid][SpawnZ] = 0;
		CarData[vid][SpawnRot] = 0;
		Iter_Remove(Cars, vid);
	}
}

stock DeleteHouse(houseid)
{
	new kayityeri[64];
	format(kayityeri, sizeof kayityeri, "Evler/EvInfo_%d.ini", houseid);
	if(fexist(kayityeri)) fremove(kayityeri);
	new Text3D:text = HouseData[houseid][DoorText];
	new pickup2 = HouseData[houseid][PickupID];
	new icon = HouseData[houseid][MapIconID];
 	if(IsValidDynamic3DTextLabel(text))
    {
        DestroyDynamic3DTextLabel(text);
	}
	if(IsValidDynamicPickup(pickup2))
	{
	    DestroyDynamicPickup(pickup2);
	}
	if(IsValidDynamicMapIcon(icon))
	{
	    DestroyDynamicMapIcon(icon);
	}
	foreach(new i: Player)
	{
	    if(PlayerData[i][CurrentHouse] == houseid)
	    {
			ExitHouse(i, houseid);
		}
	    if(!strcmp(HouseData[houseid][Owner], GetName(i)) && HouseData[houseid][Owned] == true)
	    {
			PlayerData[i][Homes][0] = -1;
		}
	}
	new carslots = HouseData[houseid][CarSlots];
    for(new i = 0; i < carslots; i ++)
	{
		DeleteHouseVehicle(houseid, i);
	}
	HouseData[houseid][Owned] = false;
	HouseData[houseid][HouseX] = 0;
	HouseData[houseid][HouseY] = 0;
	HouseData[houseid][HouseZ] = 0;
	HouseData[houseid][HouseInterior] = 0;
	HouseData[houseid][HousePrice] = 0;
	HouseData[houseid][HouseOpened] = false;
	HouseData[houseid][HouseForSale] = false;
	HouseData[houseid][HouseSalePrice] = 0;
	HouseData[houseid][CarSlots] = 0;
	return true;
}


stock EvictHouse(houseid)
{
	new carslots = HouseData[houseid][CarSlots];
    for(new i = 0; i < carslots; i ++)
	{
		DeleteHouseVehicle(houseid, i);
	}
	for(new i = 0; i < 30; i ++)
	{
	    DeleteHouseEsya(houseid, i);
	}
	foreach(new i: Player)
	{
	    if(PlayerData[i][CurrentHouse] == houseid)
	    {
			ExitHouse(i, houseid);
		}
	    if(!strcmp(HouseData[houseid][Owner], GetName(i)) && HouseData[houseid][Owned] == true)
	    {
			PlayerData[i][Homes][0] = -1;
		}
	}
	HouseData[houseid][Owned] = false;
	HouseData[houseid][HouseOpened] = false;
	HouseData[houseid][HouseForSale] = false;
	HouseData[houseid][HouseSalePrice] = 0;
	UpdateEntrance(houseid);
	SaveHouse(houseid);
	return true;
}

stock EvictHouseWithoutCars(houseid)
{
	foreach(new i: Player)
	{
	    if(PlayerData[i][CurrentHouse] == houseid)
	    {
			ExitHouse(i, houseid);
		}
	    if(!strcmp(HouseData[houseid][Owner], GetName(i)) && HouseData[i][Owned] == true)
	    {
			PlayerData[i][Homes][0] = -1;
		}
	}
	HouseData[houseid][Owned] = false;
	HouseData[houseid][HouseOpened] = false;
	HouseData[houseid][HouseForSale] = false;
	HouseData[houseid][HouseSalePrice] = 0;
	UpdateEntrance(houseid);
	SaveHouse(houseid);
	return true;
}


stock ParkVehicle(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:X, Float:Y, Float:Z, Float:ZAngle;
	GetVehiclePos(vehicleid, X,Y,Z);
	GetVehicleZAngle(vehicleid, ZAngle);
	new vid = VehSystemID[vehicleid];
	CarData[vid][SpawnX] = X;
	CarData[vid][SpawnY] = Y;
	CarData[vid][SpawnZ] = Z;
	CarData[vid][SpawnRot] = ZAngle;
	new carslots = HouseData[CarData[vid][HouseID]][CarSlots];
	new houseid = CarData[vid][HouseID];
	for(new i = 0; i < carslots; i ++)
	{
		if(HouseData[houseid][VehicleIDs][i] == vehicleid)
		{
		    DestroyVehicle(HouseData[houseid][VehicleIDs][i]);
			VehInHouseSystem[HouseData[houseid][VehicleIDs][i]] = false;
			HouseData[houseid][VehicleIDs][i] = CreateVehicle(CarData[vid][Model], X, Y, Z, ZAngle, CarData[vid][Color1], CarData[vid][Color2], 120);
			VehInHouseSystem[HouseData[houseid][VehicleIDs][i]] = true;
			VehSystemID[HouseData[houseid][VehicleIDs][i]] = vid;
			UpdateVehicle(HouseData[houseid][VehicleIDs][i]);
			PutPlayerInVehicle(playerid, HouseData[houseid][VehicleIDs][i], 0);
		}
	}
	return true;
}

stock GetHouseCarCount(houseid)
{
	new count;
	for(new i = 0; i < 10; i ++)
 	{
 	    if(IsValidVehicle(HouseData[houseid][VehicleIDs][i])) count ++;
	}
	return count;
}

stock ShowHouseDialog(playerid, houseid)
{
	new dialog[2048];
	new string[256];
	if(strcmp(HouseData[houseid][Owner], GetName(playerid))) return ShowPlayerDialog(playerid, DIALOG_VISITOR, DIALOG_STYLE_LIST, HouseData[houseid][HouseName], ""ww"Evden çýk", ""ww"Tamam", ""ww"Kapat");
	if(GetPVarInt(playerid, "esyaduzenliyor") == 1) return Hata(playerid,"Eþya düzenlerken menü'yü açamazsýnýz!");
	//new esyacount = GetHouseEsyaCount(houseid);
	if(HouseData[houseid][HouseOpened] == true)
	{
		format(string, sizeof(string), ""ww"Kapý: {00ff00}AÇIK\n");
		strcat(dialog, string);
	}
	else
	{
	    format(string, sizeof(string), ""ww"Kapý: {ff0000}KÝLÝTLÝ\n");
	    strcat(dialog, string);
	}
	strcat(dialog, ""ww"Evin adýný deðiþtir\n");
	strcat(dialog, ""ww"Evi sat\n");
	strcat(dialog, ""ww"Eþya satýn al\n");
	strcat(dialog, ""ww"Eþya sat\n");
	strcat(dialog, ""ww"Eþya düzenle\n");
	strcat(dialog, ""ww"Evden çýk\n");
	ShowPlayerDialog(playerid, DIALOG_HOUSE, DIALOG_STYLE_LIST, HouseData[houseid][HouseName], dialog, ""ww"Tamam", ""ww"Kapat");
	return true;
}

CB: FreezeEx(playerid, iTime)
{
	if(iTime)
	{
		TogglePlayerControllable(playerid, false);
		SetPVarInt(playerid, "God", 1);
		SetTimerEx("FreezeEx", iTime * 1000, false, "ii", playerid, 0);
	}
	else
	{
	    if(lEtkinlikte[playerid] == 0 && lKatildim[playerid] == 0 && HungerGamede[playerid] == 0 && Derbyde[playerid] == false && Zombiede[playerid] == 0 && PlayerInfo[playerid][Parkour] == false)
	    {
			TogglePlayerControllable(playerid, true);
		}
		SetPVarInt(playerid, "God", 0);
	}
}

stock EnterHouse(playerid, houseid)
{
	new idx = HouseData[houseid][HouseInterior];
	SetPlayerInterior(playerid, AHouseInteriors[idx][InteriorID]);
	SetPlayerPos(playerid, AHouseInteriors[idx][IntX], AHouseInteriors[idx][IntY], AHouseInteriors[idx][IntZ]);
	SetPlayerVirtualWorld(playerid, houseid + 15);
	PlayerData[playerid][CurrentHouse] = houseid;
	return true;
}

stock ExitHouse(playerid, houseid)
{
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPos(playerid, HouseData[houseid][HouseX], HouseData[houseid][HouseY], HouseData[houseid][HouseZ]);
	PlayerData[playerid][CurrentHouse] = -1;
	FreezeEx(playerid, 1);
	return true;
}

stock GetVehicleNameFromModelID(model)
{
	new name[64];
	format(name, sizeof name, aVehicleNames[model - 400]);
	return name;
}

stock FormatMoney(para)
{
	new string[64];
	format(string, sizeof string, "%i", para);
	new sayi;
	for(new i = strlen(string); i > 0; i--)
	{
	    sayi++;
	    if(sayi == 4) strins(string, ".", i), sayi = 1;
	}
	return string;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if(ObjectInSystem[objectid] == true)
 	{
		new Float:oldX, Float:oldY, Float:oldZ, Float:oldrX, Float:oldrY, Float:oldrZ;
	    if(response == EDIT_RESPONSE_FINAL)
		{
		    new i = ObjectSlotID[objectid];
		    new houseid = ObjectHouseID[objectid];
		    HouseData[houseid][EsyaX][i] = x;
		    HouseData[houseid][EsyaY][i] = y;
		    HouseData[houseid][EsyaZ][i] = z;
		    HouseData[houseid][EsyaRotX][i] = rx;
		    HouseData[houseid][EsyaRotY][i] = ry;
		    HouseData[houseid][EsyaRotZ][i] = rz;
			SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
			SetPVarInt(playerid, "esyaduzenliyor", 0);
		}
		if(response == EDIT_RESPONSE_CANCEL)
	 	{
		    GetDynamicObjectPos(objectid, oldX, oldY, oldZ);
		    GetDynamicObjectRot(objectid, oldrX, oldrY, oldrZ);
		    SetDynamicObjectPos(objectid, oldX, oldY, oldZ);
		    SetDynamicObjectRot(objectid, oldrX, oldrY, oldrZ);
		    SetPVarInt(playerid, "esyaduzenliyor", 0);
		}
	}
	return true;
}

timer MasaGoster[200](playerid)
{
    ShowModelSelectionMenu(playerid, tablelist, "Masalar");
}

timer SandalyeGoster[200](playerid)
{
    ShowModelSelectionMenu(playerid, chairlist, "Sandalyeler");
}

timer YatakGoster[200](playerid)
{
    ShowModelSelectionMenu(playerid, bedlist, "Yataklar");
}

timer KoltukGoster[200](playerid)
{
    ShowModelSelectionMenu(playerid, sofalist, "Koltuklar");
}

timer DekorasyonGoster[200](playerid)
{
    ShowModelSelectionMenu(playerid, declist, "Dekorasyon");
}

timer AletGoster[200](playerid)
{
    ShowModelSelectionMenu(playerid, applist, "Aletler");
}

stock GetName(playerid)
{
	new pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	return pName;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
    // Created by Y_Less

    new Float:a;

    GetPlayerPos(playerid, x, y, a);
    GetPlayerFacingAngle(playerid, a);

    if(GetPlayerVehicleID(playerid)) {
        GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
    }

    x +=(distance * floatsin(-a, degrees));
    y +=(distance * floatcos(-a, degrees));
}

stock GetPlayerID(const Namesssss[])
{
	foreach(new i:Player)
	{
 		new pName[MAX_PLAYER_NAME];
   		GetPlayerName(i, pName, sizeof(pName));
     	if(strcmp(Namesssss, pName, true)==0)
      	{
       		return i;
       	}
	}
	return -1;
}

public OnPlayerAirbreak(playerid)
{

	kickle(playerid, "Air Break");

    return true;
}

CMD:ceteduello(playerid, params[])
{
    new idiste;
	if(PlayerInfo[playerid][PlayerCeteID] == -1) return Hata(playerid, "Önce bir çeteniz olmalý.");
	if(PlayerInfo[playerid][PlayerCeteRutbeID] != 9) return Hata(playerid, "Bunu kullanabilmek için çete lideri olmalýsýnýz.");
	if(cetesavasidurum == 1) return Hata(playerid, "Þuan aktif bir çete savaþý var. Lütfen daha sonra tekrar deneyin.");
	if(sscanf(params, "i", idiste)) return Kullanim(playerid, "ceteduello [ÇETE ÝD]");
	if(idiste == PlayerInfo[playerid][PlayerCeteID]) return Hata(playerid, "Kendi çetenize çete düello isteði gönderemezsiniz.");
	if(CetedekiLiderSayisi(idiste) == 0) return Hata(playerid, "Rakip çetede aktif çete lideri yok.");
	karsitarafidsi = idiste;
	foreach(new i: Player)
	{
		if(PlayerInfo[i][PlayerCeteID] == idiste && PlayerInfo[i][PlayerCeteRutbeID] == 9)
		{
			cetedueldavetci[i] = playerid;
			new string[500];
			format(string, sizeof string, ""ww"{%s}%s "w"isimli çeteden %s(%i) isimli oyuncu sizi ve çetenizi çete düellosuna davet ediyor.\n"ww"Katýlmak istiyor musunuz?", CeteColor[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRenk]][cInffrenk2], Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], getName(playerid), playerid);
			ShowPlayerDialog(i, 478, DIALOG_STYLE_MSGBOX, ""safaf"Çete Düellosu Daveti", string, ""ww"Evet", ""ww"Hayýr");
			break;
		}
	}
	SCM(playerid, -1, ""safaf"Çete düello daveti gönderildi.");
	return true;
}

CMD:monsterstunt(playerid,params[])
{

	SetPlayerPV(playerid,-2916.2595, 439.3511, 4.9666);
	SCM(playerid,-1,""safaf"Monster Stunt adlý bölgeye gönderildiniz.");
	return true;
}

forward Say(playerid);
public Say(playerid)
{
	new string[76];
	countingPlayer[playerid]--;
	format(string, sizeof string, "%s", TimeConvert(countingPlayer[playerid]));
	TextDrawSetString(skorlar2[playerid],string);
	format(string, sizeof string, "%i", takim1sayisi[playerid]);
	TextDrawSetString(skorlar8[playerid],string);
	format(string, sizeof string, "%i", takim2sayisi[playerid]);
	TextDrawSetString(skorlar10[playerid],string);
	format(string, sizeof string, "%s =", takim1cetesi[playerid]);
	TextDrawSetString(skorlar6[playerid],string);
	format(string, sizeof string, "%s =", takim2cetesi[playerid]);
	TextDrawSetString(skorlar7[playerid],string);
	if(countingPlayer[playerid] < 0)
	{
	    cetesavasidurum = 0;
	    countingPlayer[playerid] = COUNT_SAY;
	    KillTimer(countTimer[playerid]);
	    foreach(new i: Player)
	    {
	        if(duelde[i] == 1)
	        {
	            duelde[i] = 0;
		        OnPlayerSpawn(i);
		        if(takim1sayisi[i] < takim2sayisi[i])
		        {
					new str[500];
					format(str,sizeof str,"~r~~h~[CETE DUELLO] ~r~~h~%s ~w~~h~~h~ve ~r~~h~%s ~w~~h~~h~arasindaki cete duellosunu ~r~~h~%s ~w~~h~~h~kazandi.",takim2cetesi[i],takim1cetesi[i],takim2cetesi[i]);
					TextMesaji(code(str));
		        }
		        if(takim2sayisi[i] < takim1sayisi[i])
		        {
					new str[500];
					format(str,sizeof str,"~r~~h~[CETE DUELLO] ~r~~h~%s ~w~~h~~h~ve ~r~~h~%s ~w~~h~~h~arasindaki cete duellosunu ~r~~h~%s ~w~~h~~h~kazandi.",takim1cetesi[i],takim2cetesi[i],takim1cetesi[i]);
					TextMesaji(code(str));
		        }
		        if(takim2sayisi[i] == takim1sayisi[i])
		        {
		            new str[500];
					format(str,sizeof str,"~r~~h~[CETE DUELLO] ~r~~h~%s ~w~~h~~h~ve ~r~~h~%s ~w~~h~~h~arasindaki cete duellosu ~r~~h~berabere ~w~~h~~h~kaldi.",takim1cetesi[i],takim2cetesi[i]);
					TextMesaji(code(str));
		        }
	        }
	    }
	    takim1say = 0;
	    takim2say = 0;
	    foreach(new x:Player)
	    {
	    	takim1sayisi[x] = 0;
	    	takim2sayisi[x] = 0;
	    }
	}
	return true;
}

TimeConvert(seconds)
{
	new tmp[16];
 	new minutes = floatround(seconds / 60);
  	seconds -= minutes * 60;
   	format(tmp, sizeof(tmp), "%d:%02d", minutes, seconds);
   	return tmp;
}

CMD:thediffstunt(playerid,params[])
{

	SetPlayerPV(playerid,-2486.4822,-615.8246,132.5683);
	SetPlayerFacingAngle(playerid,90.4401);
	SetCameraBehindPlayer(playerid);
	SCM(playerid,-1,""safaf"TheDiff Stunt adlý bölgeye gönderildiniz.");
	return true;
}

CMD:oldstunt(playerid,params[])
{

	SetPlayerPV(playerid,113.0198,1088.7742,13.6094);
	SetPlayerFacingAngle(playerid,179.3881);
	SetCameraBehindPlayer(playerid);
	SCM(playerid,-1,""safaf"Old Stunt adlý bölgeye gönderildiniz.");
	return true;
}

public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart)
{
	if(GetPVarInt(playerid, "God") == 1) return false;

    if(issuerid != INVALID_PLAYER_ID)
    {
	    if(GetPVarInt(playerid, "God") == 1) return false;

		if(PlayerInfo[playerid][AFK] == true) return false;

		if(!IsPlayerControllable(playerid)) return false;

		if(Bankada[playerid] == true) return Hata(issuerid, "Bankada bir oyuncuya ateþ edemezsiniz.");

	    if(spawnda[playerid] == 1)
	    {
	        SCM(issuerid, -1, ""safaf"Vurduðunuz oyuncu spawn bölgesinde. Bu oyuncuya hasar veremezsiniz.");
	        return false;
	    }

	    if(spawnda[issuerid] == 1)
	    {
	        SCM(issuerid, -1, ""safaf"Spawn bölgesindeyken kimseye vuramazsýnýz.");
	        return false;
	    }

		if(duelde[playerid] == 1 && duelde[issuerid] == 1 && PlayerInfo[issuerid][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
		{
		    Hata(issuerid,"Çete düellosunda kendi çetendeki birine vuramazsýn.");
		    return false;
		}

	    if(CSDe[playerid] == 1 && CSDe[issuerid] == 1 && CSTeamCT[issuerid] == 1 && CSTeamCT[playerid] == 1)
	    {
	        Hata(issuerid,"CS Minigame'de takým arkadaþýna vuramazsýn.");
	        return false;
	    }

	    if(CSDe[playerid] == 1 && CSDe[issuerid] == 1 && CSTeamT[issuerid] == 1 && CSTeamT[playerid] == 1)
	    {
	        Hata(issuerid,"CS Minigame'de takým arkadaþýna vuramazsýn.");
	        return false;
	    }

		if(weapon == 34 && bodypart == 9 && PlayerInfo[playerid][AFK] == false)
		{
		    GameTextForPlayer(playerid, "~r~headshot", 5000, 1);
		    GameTextForPlayer(issuerid, "~g~headshot", 5000, 1);
	        PlayerInfo[issuerid][HeadShots]++;
	        amount = 0.0;

	        if(ilkhs == true && spawnda[playerid] != 1)
	        {
	            if(GetPVarInt(playerid, "God") == 1) return true;
	            GivePlayerMoney(issuerid, 5000);
	            SetPlayerScore(issuerid, GetPlayerScore(issuerid) + 10);
	            foreach(new i: Player)
	            {
	                SFM(i, -1, "{FF0048}FirstHS »{FFFFFF} {%06x}%s(%i) "w"FirstHS'yi tamamladý! "wb"Ödül: $5.000 ve 10 skor", GetPlayerColor(issuerid) >>> 8, getName(issuerid), issuerid);
	            }
	            ilkhs = false;
	        }

			new queryx[256], aktifmiAMK;
			format(queryx, sizeof(queryx), "UPDATE `oyuncular` SET `headshotlar` = '%d' WHERE `kullaniciadi` = '%s'", PlayerInfo[issuerid][HeadShots], getName(issuerid));
			mysql_query(mysqlC, queryx);

			format(queryx, sizeof(queryx), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(issuerid));
			mysql_query(mysqlC, queryx);

			cache_get_value_name_int(0, "basari_5hsatma", aktifmiAMK);

			if(PlayerInfo[issuerid][HeadShots] >= 5 && aktifmiAMK == 0)
			{
				format(queryx, sizeof(queryx), "UPDATE `oyuncular` SET `basari_5hsatma` = '1' WHERE `kullaniciadi` = '%s'", getName(issuerid));
			    mysql_query(mysqlC, queryx);

			    SetPlayerScore(issuerid, GetPlayerScore(issuerid) + 5);
			    GivePlayerMoney(issuerid, 5000);
			    PlayerInfo[issuerid][score] = GetPlayerScore(issuerid);
			    PlayerInfo[issuerid][money] = GetPlayerMoney(issuerid);

			    SCM(issuerid, -1, ""safaf"5 Headshot baþarýsýný tamamladýn ve "wb"5 skor "w"+ "wb"5.000$ "w"kazandýn.");
			    SCM(issuerid, -1, ""safaf"Tüm baþarýlarýna bakmak için "wb"/basarilarim "w"yazabilirsin.");
			}
		}

	    PlayerPlaySound(issuerid, 17802, 0.0, 0.0, 0.0);
	}
	return true;
}

forward CozBeni(playerid);
public CozBeni(playerid)
{
	if(dmyasagi[playerid] == 1 || duelloda[playerid] == true || lEtkinlikte[playerid] == 1 || lKatildim[playerid] == 1) return true;
    TogglePlayerControllable(playerid, 1);
    return true;
}

stock TogglePlayerControllable_(playerid, control)
{
	SetPVarInt(playerid, "Controll",!control);
	return TogglePlayerControllable(playerid, control);
}

CMD:topscore(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new sql[500], str[1024], topstr[500], toplastr[2048], isim[500], olum;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `score` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"Skor Sayýsý\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim, 500);
	    cache_get_value_name_int(i, "score",olum);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%s\n", str, i + 1, isim, FormatMoney(olum));
	}

	strcat(toplastr, topstr);
	strcat(toplastr, str);

	ShowPlayerDialog(playerid, DIALOG_TOPTABLOLAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Score", toplastr, ""ww"Kapat", "");
	return true;
}

CMD:topmoney(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new sql[500], str[1024], topstr[500], toplastr[2048], isim[500], olum;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `money` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"Parasý\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim, 500);
	    cache_get_value_name_int(i, "money", olum);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%s\n", str, i + 1, isim, FormatMoney(olum));
	}

	strcat(toplastr, topstr);
	strcat(toplastr, str);

	ShowPlayerDialog(playerid, DIALOG_TOPTABLOLAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Money", toplastr, ""ww"Kapat", "");
	return true;
}

CMD:topkill(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new sql[500], str[1024], topstr[500], toplastr[2048], isim[500], olum;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `Kills` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"Öldürme Sayýsý\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim, 500);
	    cache_get_value_name_int(i, "Kills",olum);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%s\n", str, i + 1, isim, FormatMoney(olum));
	}

	strcat(toplastr, topstr);
	strcat(toplastr, str);

	ShowPlayerDialog(playerid, DIALOG_TOPTABLOLAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Kill", toplastr, ""ww"Kapat", "");
	return true;
}

CMD:toponline(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new sql[500], str[5000], topstr[500], toplastr[5000], isim[500], olum;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `onlinet` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"Online Süresi\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim, 500);
        cache_get_value_name_int(i, "onlinet",olum);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%s\n", str, i + 1, isim, ConvertTime(olum));
	}

	strcat(toplastr, topstr);
	strcat(toplastr, str);

	ShowPlayerDialog(playerid, DIALOG_TOPTABLOLAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Online", toplastr, ""ww"Kapat", "");
	return true;
}

function PMSpec0_()
{
	TextDrawSetString(PMSpec0, "");
	return true;
}

function PMSpec1_()
{
	TextDrawSetString(PMSpec1, "");
	return true;
}

function PMSpec2_()
{
	TextDrawSetString(PMSpec2, "");
	return true;
}

function PMSpec3_()
{
	TextDrawSetString(PMSpec3, "");
	return true;
}

function PMSpec4_()
{
	TextDrawSetString(PMSpec4, "");
	return true;
}

function KomutSpec0_()
{
	TextDrawSetString(KomutSpec0, "");
	return true;
}

function KomutSpec1_()
{
	TextDrawSetString(KomutSpec1, "");
	return true;
}

function KomutSpec2_()
{
	TextDrawSetString(KomutSpec2, "");
	return true;
}

function KomutSpec3_()
{
	TextDrawSetString(KomutSpec3, "");
	return true;
}

function KomutSpec4_()
{
	TextDrawSetString(KomutSpec4, "");
	return true;
}

CMD:pmspeclist(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
    new
        string[126], string2[756], stringh[1024], stringsayac[100], id_syntax[56], sayxx;
    for(new i = 0; i < GetMaxPlayers(); i++){
    if(IsPlayerConnected(i)){
    if(GetPVarInt(i, "PMSpec") == 1){
    if(i <= 9) { format(id_syntax,56,"00%i", i); }
    else if(i <= 99) { format(id_syntax,56,"0%i", i); }
    else if(i >= 100) { format(id_syntax,56,"%i", i); }
    sayxx++;
    format(string, sizeof string, ""ww"ID:\t\t"ww"Nick:\n");
    format(string2, sizeof string2, ""w"%s"ww"%s\t\t"ww"%s\n", string2, id_syntax, getName(i));
    format(stringsayac, sizeof stringsayac, ""ww"Sunucuda toplam ' "wb"%i "w"' PMSpec görevinde yetkili bulunuyor.", sayxx);
    format(stringh, sizeof stringh, "%s%s\n%s", string, string2, stringsayac);
	}}}
    if(sayxx==0){ Hata(playerid, "PMSpec modunda olan yetkili bulunamadý."); } else { ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"PMSpec Görevindekiler",stringh,""ww"Kapat",""); }
    return true;
}

CMD:games(playerid, params[])
{
	new dialogstr[1024];
	new str[1024];
	format(str,sizeof(str),""ww"Ýsim\t"ww"Durum\t"ww"Oyuncu Sayýsý\n");
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Parkour\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineParkour());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Derby\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineDerby());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"TDM\t"ww""wb"Deaktif\t"ww"%02d\n",0);
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Counter Strike\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineCS());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Gungame\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineGunGame());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Hunger Games\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineHungerGame());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Zombie\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineToplamZombie());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Speedy Deagle\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineSpeedyDeagle());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Labirent\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineLabirent());
	strcat(dialogstr,str);
	format(str,sizeof(str),""ww"Yarýþ\t"ww"{00ff00}Aktif\t"ww"%02d\n",OnlineYaris());
	strcat(dialogstr,str);
	ShowPlayerDialog(playerid,7899,DIALOG_STYLE_TABLIST_HEADERS,""safaf"Mini Games",dialogstr,""ww"Gir",""ww"Kapat");
	return true;
}

CMD:oyunlar(playerid,params[])
{
	cmd_games(playerid, "");
	return true;
}

stock OnlineRace()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][Race] == true)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineParkour()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][Parkour] == true)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

CMD:skordukkani(playerid,params[])
{
	new str[500];
	strcat(str,""ww"50 skor - 200 GLKredi\n");
	strcat(str,""ww"100 skor - 250 GLKredi\n");
	strcat(str,""ww"250 skor - 400 GLKredi\n");
	ShowPlayerDialog(playerid, 67, DIALOG_STYLE_LIST, ""ww"Skor dükkaný", str, ""ww"Satýn al", ""ww"Ýptal");
	return true;
}

CMD:olumsil(playerid,params[])
{

	new str[5000];
	strcat(str,""ww"50 Ölüm sil = 3 gün online süresi + 5.000 skor\n");
	strcat(str,""ww"30 Ölüm sil = 3 gün online süresi + 3.000 skor\n");
	strcat(str,""ww"15 Ölüm sil = 1 gün online süresi + 1.000 skor\n");
	strcat(str,""wb"=================================================================\n");
	strcat(str,""ww"50 Ölüm sil = 3 gün online süresi + 500 GLKredi\n");
	strcat(str,""ww"30 Ölüm sil = 3 gün online süresi + 300 GLKredi\n");
	strcat(str,""ww"15 Ölüm sil = 1 gün online süresi + 100 GLKredi\n");
	ShowPlayerDialog(playerid, 78, DIALOG_STYLE_LIST, ""ww"Ölümlerini sil", str, ""ww"Seç", ""ww"Ýptal");
	return true;
}

CMD:motorac(playerid,params[])
{
    new engine, lights, alarm, doors, bonnet, boot, objective;
	new vid = GetPlayerVehicleID(playerid);
	if(vid != INVALID_VEHICLE_ID)
	{
	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
	}
	return true;
}

CMD:motorkapat(playerid,params[])
{
    new engine, lights, alarm, doors, bonnet, boot, objective;
	new vid = GetPlayerVehicleID(playerid);
	if(vid != INVALID_VEHICLE_ID)
	{
	GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(vid,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
	}
	return true;
}

CMD:sonyer(playerid,params[])
{
	if(GetPVarInt(playerid, "sp_Olum") == 1)
	{
		ShowPlayerDialog(playerid,5121,DIALOG_STYLE_MSGBOX,""safaf"Lastdeath Sistemi",""ww"En son öldüðün yere gitmek istiyor musun?",""ww"Evet",""ww"Hayýr");
	} else {
	    Hata(playerid, "Daha önce hiç ölmemiþsiniz.");
	}
	return true;
}

CMD:raporlar(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	new dialog[1524];
	strcat(dialog, Rapor1);
	strcat(dialog, Rapor2);
	strcat(dialog, Rapor3);
	strcat(dialog, Rapor4);
	strcat(dialog, Rapor5);
	ShowPlayerDialog(playerid, 123, DIALOG_STYLE_MSGBOX, ""safaf"Son Atýlan Raporlar:", dialog, ""ww"Kapat", "");
	return true;
}

CMD:reports(playerid, params[])
{
	return cmd_raporlar(playerid, "");
}

CMD:isteketkler(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	new dialog[1524];
	strcat(dialog, E_Rapor1);
	strcat(dialog, E_Rapor2);
	strcat(dialog, E_Rapor3);
	strcat(dialog, E_Rapor4);
	strcat(dialog, E_Rapor5);
	ShowPlayerDialog(playerid, 123, DIALOG_STYLE_MSGBOX, ""safaf"Son Ýstenen Etkinlikler:", dialog, ""ww"Kapat", "");
	return true;
}

CMD:etkler(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,1);
	new dialog[1524];
	strcat(dialog, E_Rapor1);
	strcat(dialog, E_Rapor2);
	strcat(dialog, E_Rapor3);
	strcat(dialog, E_Rapor4);
	strcat(dialog, E_Rapor5);
	ShowPlayerDialog(playerid, 123, DIALOG_STYLE_MSGBOX, ""safaf"Son Ýstenen Etkinlikler:", dialog, ""ww"Kapat", "");
	return true;
}

CMD:isteksarkilar(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 2 && !IsPlayerAdmin(playerid)) return YETERSIZSEVIYE(playerid,2);
	new dialog[1524];
	strcat(dialog, D_Rapor1);
	strcat(dialog, D_Rapor2);
	strcat(dialog, D_Rapor3);
	strcat(dialog, D_Rapor4);
	strcat(dialog, D_Rapor5);
	ShowPlayerDialog(playerid, 123, DIALOG_STYLE_MSGBOX, ""safaf"Son Ýstenen Þarkýlar:", dialog, ""ww"Kapat", "");
	return true;
}

CMD:dukkanial(playerid, params[])
{
    new id = -2;
    foreach(new i: dukkanlar)
    {
        if(IsPlayerInRangeOfPoint(playerid, 1.0, DukkanInfo[i][dX], DukkanInfo[i][dY], DukkanInfo[i][dZ]))
        {
            id = i;
            break;
        }
    }
    if(id == -2) return Hata(playerid, "Bir dükkanýn üzerinde deðilsiniz!");
    if(DukkanInfo[id][dMevcut] == false) return Hata(playerid, "Bu ID'de bir dükkan mevcut deðil.");
    if(PlayerInfo[playerid][dLevel] > 0 && PlayerInfo[playerid][dLevel] < 8 && strcmp(getName(playerid), "MertJ3eyTR")) return Hata(playerid, "Yetkililer dükkan alamaz.");
    if(DukkanInfo[id][dSahip] != -1) return Hata(playerid, "Bu dükkan baþksýna ait.");
    if(GetPlayerMoney(playerid) < DukkanInfo[id][dFiyat]) return Hata(playerid, "Bu dükkaný alabilmek için yeterli paranýz yok.");
    if(PlayerInfo[playerid][dukkanivar] != -1) return Hata(playerid, "En fazla 1 tane dükkan alabilirsiniz.");
    if(PlayerInfo[playerid][onlinet] < 43200) return Hata(playerid, "Dükkan alabilmek için en az 12 saat online süreniz olmalý.");
    if(PlayerInfo[playerid][dukkanalimzaman] > gettime()) return Hata(playerid, "2 günde bir dükkan alabilirsiniz.");
    else {
        new dialog[2048], formatstr[500];
        strcat(dialog, ""ww"Þu anda kendinize bir dükkan almak üzeresiniz.\n");
        strcat(dialog, ""ww"Dükkan aldýðýnýzda, oyunda geçirdiðiniz her 1 saat baþýna belirli bir miktar para alýrsýnýz.\n");
        strcat(dialog, "Oyunda olmadýðýnýz süre boyunca ise dükkanýnýzda belirli bir miktar para birikir.\n\n");
        format(formatstr, sizeof(formatstr), ""ww"Dükkan ID: "ad"%d\n", id);
        strcat(dialog, formatstr);
        Get2DZone(DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], getGPSForPlayer[playerid], MAX_ZONE_NAME);
        format(formatstr, sizeof(formatstr), ""ww"Dükkan Bölgesi: "ad"%s\n", getGPSForPlayer[playerid]);
        strcat(dialog, formatstr);
        format(formatstr, sizeof(formatstr), ""ww"Dükkan Fiyatý: "ad"$%s\n", FormatMoney(DukkanInfo[id][dFiyat]));
        strcat(dialog, formatstr);
        format(formatstr, sizeof(formatstr), ""ww"Dükkan'ýn Saat Baþý Geliri: "ad"$%s\n\n", FormatMoney(DukkanInfo[id][dFiyat] / 100));
        strcat(dialog, formatstr);
        strcat(dialog, ""ww"Bu dükkaný almak istiyor musunuz?");
        SetPVarInt(playerid, "alinan_dukkan_id", id);
        ShowPlayerDialog(playerid, DUKKAN_ALIM, DIALOG_STYLE_MSGBOX, ""safaf"Dükkan Alýmý", dialog, ""ww"Evet", ""ww"Hayýr");
    }
    return true;
}

CMD:dukkanisat(playerid, params[])
{
    new id = -2;
    foreach(new i: dukkanlar)
    {
        if(IsPlayerInRangeOfPoint(playerid, 1.0, DukkanInfo[i][dX], DukkanInfo[i][dY], DukkanInfo[i][dZ]))
        {
            id = i;
            break;
        }
    }
    if(id == -2) return Hata(playerid, "Bir dükkanýn üzerinde deðilsiniz!");
    if(DukkanInfo[id][dMevcut] == false) return Hata(playerid, "Bu ID'de bir dükkan mevcut deðil.");
    if(PlayerInfo[playerid][dukkanivar] != id) return Hata(playerid, "Bu dükkan sizin deðil.");
    if(PlayerInfo[playerid][dukkanivar] == -1) return Hata(playerid, "Zaten bir dükkanýnýz yok.");
    if(PlayerInfo[playerid][onlinet] < 43200) return Hata(playerid, "Dükkan satabilmek için en az 12 saat online süreniz olmalý.");
    if(PlayerInfo[playerid][dukkansatimzaman] > gettime()) return Hata(playerid, "2 günde bir dükkan satabilirsiniz.");
    else {
        new dialog[2048], formatstr[500];
        strcat(dialog, ""ww"Þu anda dükkanýnýzý satmak üzeresiniz!\n\n");
        format(formatstr, sizeof(formatstr), ""ww"Dükkan ID: "ad"%d\n", id);
        strcat(dialog, formatstr);
        Get2DZone(DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], getGPSForPlayer[playerid], MAX_ZONE_NAME);
        format(formatstr, sizeof(formatstr), ""ww"Dükkan Bölgesi: "ad"%s\n", getGPSForPlayer[playerid]);
        strcat(dialog, formatstr);
        format(formatstr, sizeof(formatstr), ""ww"Dükkan Fiyatý: "ad"$%s\n", FormatMoney(DukkanInfo[id][dFiyat]));
        strcat(dialog, formatstr);
        format(formatstr, sizeof(formatstr), ""ww"Dükkan'ýn Saat Baþý Geliri: "ad"$%s\n", FormatMoney(DukkanInfo[id][dFiyat] / 3));
        strcat(dialog, formatstr);
        format(formatstr, sizeof(formatstr), ""ww"DÜKKANI SATINCA ALACAÐINIZ ÜCRET: "ad"$%s\n\n", FormatMoney(DukkanInfo[id][dFiyat] / 2));
        strcat(dialog, formatstr);
        strcat(dialog, ""ww"Bu dükkaný satmak istiyor musunuz?");
        SetPVarInt(playerid, "satilan_dukkan_id", id);
        ShowPlayerDialog(playerid, DUKKAN_SATIM, DIALOG_STYLE_MSGBOX, ""safaf"Dükkan Satýmý", dialog, ""ww"Evet", ""ww"Hayýr");
    }
    return true;
}

CMD:dukkanyarat(playerid, params[])
{
    new fiyat;
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
    if(sscanf(params, "d", fiyat)) return Kullanim(playerid, "dukkanyarat [DÜKKAN FÝYATI]");
    if(fiyat < 0) return Hata(playerid, "Fiyat 0'dan küçük olamaz.");
    else {
        new sql[500], Float: pX, Float: pY, Float: pZ;
        new id = Iter_Free(dukkanlar);
        GetPlayerPos(playerid, pX, pY, pZ);
        format(sql, sizeof(sql), "INSERT INTO `dukkanlar` (`ID`, `sahip`, `X`, `Y`, `Z`, `fiyat`) VALUES ('%d', '-1', '%f', '%f', '%f', '%d')", id, pX, pY, pZ, fiyat);
        mysql_query(mysqlC, sql);

        DukkanInfo[id][dId] = id;
        DukkanInfo[id][dSahip] = -1;
        DukkanInfo[id][dFiyat] = fiyat;
        DukkanInfo[id][dMevcut] = true;
        DukkanInfo[id][dX] = pX;
        DukkanInfo[id][dY] = pY;
        DukkanInfo[id][dZ] = pZ;
        new labelstr[500];
        format(labelstr, sizeof(labelstr), "{00ff00}/dukkanial\n{FF9900}Dükkan {FFFFFF}#%d\n{FF9900}Bu dükkana sahip olan oyuncu: {00ff00}%s\n{FF9900}Fiyat: {00ff00}%s", id, "Yok", FormatMoney(DukkanInfo[id][dFiyat]));
        DukkanInfo[id][dLabel] = CreateDynamic3DTextLabel(labelstr, -1, DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], 60.0);
        DukkanInfo[id][dPickup] = CreatePickup(1239, 1, DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], -1);
        Iter_Add(dukkanlar, id);

		DukkanlariYenile();

        SFM(playerid, -1, ""safaf"Dükkan baþarýyla eklendi. ID: %d | Fiyat: %d", id, fiyat);
    }
    return true;
}

CMD:mekanagit(playerid, params[])
{
	if(PlayerInfo[playerid][PlayerCeteID] == -1) return Hata(playerid, "Bir çeteniz yok.");
	if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] == -1) return Hata(playerid, "Çeteniz bir mekan almamýþ.");
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerPV(playerid, CeteMekanInfo[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID]][cmX], CeteMekanInfo[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID]][cmY], CeteMekanInfo[Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID]][cmZ]);
	SCM(playerid, -1, ""safaf"Çete mekanýnýza baþarýyla ýþýnlandýnýz.");
	return true;
}

CMD:mekanial(playerid, params[])
{
    new id;
    if(sscanf(params, "d", id)) return Kullanim(playerid, "mekanial [ÇETE MEKAN ÝD]");
    if(CeteMekanInfo[id][cmMevcut] == false) return Hata(playerid, "Bu ID'de bir çete mekaný mevcut deðil.");
    if(PlayerInfo[playerid][PlayerCeteID] == -1 || PlayerInfo[playerid][PlayerCeteRutbeID] != 9) return Hata(playerid, "Önce çete lideri olmalýsýnýz.");
    if(CeteMekanInfo[id][cmSahip] != -1) return Hata(playerid, "Bu çete mekaný baþksýna ait.");
    if(GetPlayerMoney(playerid) < CeteMekanInfo[id][cmFiyat]) return Hata(playerid, "Bu çete mekanýný alabilmek için yeterli paranýz yok.");
    if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] != -1) return Hata(playerid, "En fazla 1 tane çete mekaný alabilirsiniz.");
    else {
        new sql[500];
        format(sql, sizeof(sql), "UPDATE `cetemekanlari` SET `sahipcete` = '%d' WHERE `ID` = '%d'", PlayerInfo[playerid][PlayerCeteID], CeteMekanInfo[id][cmId]);
        mysql_query(mysqlC, sql);

        Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] = id;
        CeteMekanInfo[id][cmSahip] = PlayerInfo[playerid][PlayerCeteID];

        foreach(new x: Player)
        {
            if(PlayerInfo[x][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
            {
                SCM(x, -1, ""safaf"Çete lideriniz bir mekan aldý! "wb"/mekanagit "w"yazarak mekana gidebilirsiniz!");
            }
        }

        CeteMekanlariYenile();

        GivePlayerMoney(playerid, -CeteMekanInfo[id][cmFiyat]);

        SavePlayer(playerid);
        
        TekCeteKayit(PlayerInfo[playerid][PlayerCeteID]);

        SFM(playerid, -1, ""safaf""wb"%d "w"ID'li çete mekanýný "wb"%d$ "w"karþýlýðýnda aldýnýz!", id, CeteMekanInfo[id][cmFiyat]);
    }
    return true;
}

CMD:mekanisat(playerid, params[])
{
    new id;
    if(sscanf(params, "d", id)) return Kullanim(playerid, "mekanisat [ÇETE MEKAN ÝD]");
    if(CeteMekanInfo[id][cmMevcut] == false) return Hata(playerid, "Bu ID'de bir çete mekaný mevcut deðil.");
    if(PlayerInfo[playerid][PlayerCeteID] == -1 || PlayerInfo[playerid][PlayerCeteRutbeID] != 9) return Hata(playerid, "Önce çete lideri olmalýsýnýz.");
    if(CeteMekanInfo[id][cmSahip] != PlayerInfo[playerid][PlayerCeteID]) return Hata(playerid, "Bu çete mekaný sizin deðil.");
    if(Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] == -1) return Hata(playerid, "Zaten bir çete mekanýnýz yok.");
    else {
        new sql[500];
        format(sql, sizeof(sql), "UPDATE `cetemekanlari` SET `sahipcete` = '-1' WHERE `ID` = '%d'", CeteMekanInfo[id][cmId]);
        mysql_query(mysqlC, sql);

		CeteMekanInfo[id][cmSahip] = -1;
		Ceteler[PlayerInfo[playerid][PlayerCeteID]][cMekanID] = -1;

        foreach(new x: Player)
        {
            if(PlayerInfo[x][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
            {
                SCM(x, -1, ""safaf"Çete lideriniz çete mekanýný sattý :(");
            }
        }

        CeteMekanlariYenile();

        GivePlayerMoney(playerid, CeteMekanInfo[id][cmFiyat] / 2);

        SavePlayer(playerid);
        
        TekCeteKayit(PlayerInfo[playerid][PlayerCeteID]);

        SFM(playerid, -1, ""safaf""wb"%d "w"ID'li çete mekanýný "wb"%d$ "w"karþýlýðýnda sattýnýz!", id, CeteMekanInfo[id][cmFiyat] / 2);
    }
    return true;
}

CMD:mekanyarat(playerid, params[])
{
    new fiyat;
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
    if(sscanf(params, "d", fiyat)) return Kullanim(playerid, "mekanyarat [ÇETE MEKANI FÝYATI]");
    if(fiyat < 0) return Hata(playerid, "Fiyat 0'dan küçük olamaz.");
    else {
        new sql[500], Float: pX, Float: pY, Float: pZ;
        new id = Iter_Free(cetemekanlari);
        GetPlayerPos(playerid, pX, pY, pZ);
        format(sql, sizeof(sql), "INSERT INTO `cetemekanlari` (`ID`, `sahipcete`, `X`, `Y`, `Z`, `fiyat`) VALUES ('%d', '-1', '%f', '%f', '%f', '%d')", id, pX, pY, pZ, fiyat);
        mysql_query(mysqlC, sql);

        CeteMekanInfo[id][cmId] = id;
        CeteMekanInfo[id][cmSahip] = -1;
        CeteMekanInfo[id][cmFiyat] = fiyat;
        CeteMekanInfo[id][cmMevcut] = true;
        CeteMekanInfo[id][cmX] = pX;
        CeteMekanInfo[id][cmY] = pY;
        CeteMekanInfo[id][cmZ] = pZ;
        new labelstr[500];
        format(labelstr, sizeof(labelstr), "{00ff00}/mekanial\n{FF9900}Çete Mekaný {FFFFFF}#%d\n{FF9900}Bu mekana sahip olan çete: {00ff00}%s\n{FF9900}Fiyat: {00ff00}%s", id, "Yok", FormatMoney(CeteMekanInfo[id][cmFiyat]));
        CeteMekanInfo[id][cmLabel] = CreateDynamic3DTextLabel(labelstr, -1, CeteMekanInfo[id][cmX], CeteMekanInfo[id][cmY], CeteMekanInfo[id][cmZ], 60.0);
        CeteMekanInfo[id][cmPickup] = CreatePickup(1314, 1, CeteMekanInfo[id][cmX], CeteMekanInfo[id][cmY], CeteMekanInfo[id][cmZ], -1);
        Iter_Add(cetemekanlari, id);

        SFM(playerid, -1, ""safaf"Çete mekaný baþarýyla eklendi. ID: %d | Fiyat: %d", id, fiyat);
    }
    return true;
}

CMD:toplist(playerid,params[])
{
	new dialogstrbebegim[1000];
	strcat(dialogstrbebegim,""ww"Ýsim\t"ww"Komut\n");
	strcat(dialogstrbebegim,""ww"TopScore\t"ww"[/topscore]\n");
	strcat(dialogstrbebegim,""ww"TopMoney\t"ww"[/topmoney]\n");
	strcat(dialogstrbebegim,""ww"TopKill\t"ww"[/topkill]\n");
	strcat(dialogstrbebegim,""ww"TopOnline\t"ww"[/toponline]\n");
    strcat(dialogstrbebegim,""ww"TopNoob\t"ww"[/topnoob]\n");
    strcat(dialogstrbebegim,""ww"TopHeadshot\t"ww"[/topheadshot]\n");
    strcat(dialogstrbebegim,""ww"TopBitcoin\t"ww"[/topbtc]\n");
    strcat(dialogstrbebegim,""ww"TopLevel\t"ww"[/toplevel]\n");
	ShowPlayerDialog(playerid,DIALOG_TOPLIST,DIALOG_STYLE_TABLIST_HEADERS,""safaf"Top List",dialogstrbebegim,""ww"Seç",""ww"Kapat");
	return true;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	for(new i; i < MAX_BOLGE; i++)
	{
		if(areaid == bolgebilgi[i][bolgezone2])
		{
		    if(IsPlayerInAnyVehicle(playerid))
	        {
	            new id = GetVehicleModel(GetPlayerVehicleID(playerid));
	            if((id == 520 || id == 432 || id == 441 || id == 464|| id == 465 || id == 501 || id == 564 || id == 594 || id == 425 || id == 447))
	            {
	                destroyVehicle(GetPlayerVehicleID(playerid));
				    Hata(playerid, "Bu araç bu alanda nmýþ.");
	            }
	        }
		    if(bolgebilgi[i][bolgesaldiri] == true)
		    {
		        if(bolgebilgi[i][bolgesaldiran] == PlayerInfo[playerid][PlayerCeteID]) SCM(playerid, -1, ""safaf"DÝKKAT! BU BÖLGE SÝZÝN ÇETENÝZ TARAFINDAN SALDIRIDA!");
		        else SCM(playerid, -1, ""safaf"DÝKKAT! BU BÖLGE BAÞKA BÝR ÇETE TARAFINDAN SALDIRIDA!");
		    }
		    if(PlayerInfo[playerid][PlayerCeteID] == bolgebilgi[i][sahipceteid] && bolgebilgi[i][sahipceteid] != -1)
		    {
		        SCM(playerid, -1, ""safaf"Bölge sizin çetenize ait. Hoþgeldiniz.");
		        return true;
		    }
		    SFM(playerid, -1, ""safaf"'%s' bölgesine hoþ geldiniz. Bu bölgeyi ele geçirmek için...", bolgebilgi[i][bolgeisim]);
		    SFM(playerid, -1, ""safaf"..."ad"1 Çete Kurucusu + "ad"%d Çete Kurucu Yardýmcýsý + "ad"%d Üye "w"gerekiyor.", 2*bolgebilgi[i][bolgeseviye], 5*bolgebilgi[i][bolgeseviye]);
			printf("» CETE BOLGESINE GIRIS YAPTI: %s", getName(playerid));
		}
	}
	return true;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	return true;
}

CMD:spawnsilahlari(playerid,params[])
{
    new dialogsun[1024];
    new gunname1[35];
    new gunname2[35];
    new gunname3[35];
    new gunname4[35];
    GetWeaponName(GetPVarInt(playerid,"spawnsilah1"), gunname1, sizeof(gunname1));
    GetWeaponName(GetPVarInt(playerid,"spawnsilah2"), gunname2, sizeof(gunname2));
    GetWeaponName(GetPVarInt(playerid,"spawnsilah3"), gunname3, sizeof(gunname3));
    GetWeaponName(GetPVarInt(playerid,"spawnsilah4"), gunname4, sizeof(gunname4));
    format(dialogsun,sizeof(dialogsun),""ww"Slot 1. %s\n"ww"Slot 2. %s\n"ww"Slot 3. %s\n"ww"Slot 4. %s\n",gunname1,gunname2,gunname3,gunname4);
    ShowPlayerDialog(playerid,18745,DIALOG_STYLE_LIST,""safaf"Spawn Silahlarý",dialogsun,""ww"Deðiþtir",""ww"Kapat");
    return true;
}

stock IsTextCaps(text[])
{
    for(new i, j = strlen(text)-1; i < j; i ++)
    {
        if(('A' <= text[i] <= 'Z') &&('A' <= text[i+1] <= 'Z'))
        return true;
    }
    return false;
}

CB: ColorTest()
{
	new string[156];
	switch(random(9))
	{
	    case 0: format(RenkTest[strRenk], 56, "Kýrmýzý"), RenkTest[Renk] = 0xFF0000FF; //Kýrmýzý
	    case 1: format(RenkTest[strRenk], 56, "Mavi"),RenkTest[Renk] = 0x1E90FFFF; //Mavi
	    case 2: format(RenkTest[strRenk], 56, "Sarý"),RenkTest[Renk] = 0xFFFF00FF; //Sarý
	    case 3: format(RenkTest[strRenk], 56, "Yeþil"),RenkTest[Renk] = 0x009000FF; //Yeþil
	    case 4: format(RenkTest[strRenk], 56, "Turuncu"),RenkTest[Renk] = 0xFFA500FF; //Turuncu
	    case 5: format(RenkTest[strRenk], 56, "Lacivert"),RenkTest[Renk] = 0x120A8FFF; //Lacivert
	    case 6: format(RenkTest[strRenk], 56, "Turkuaz"),RenkTest[Renk] = 0x30D5C8ff; //Turkuaz
	    case 7: format(RenkTest[strRenk], 56, "Pembe"),RenkTest[Renk] = 0xEE82EEFF; //Pembe
	    case 8: format(RenkTest[strRenk], 56, "Mor"),RenkTest[Renk] = 0x660099FF; //Mor
	}
	RenkTest[Paraxx] = 5000;
	RenkTest[Skor] = 5;
	format(string, sizeof string, "{FF8000}Renk Testi » {FFFFFF}Verdiðim {%06x}bu renk "w"hangi renktir? - Ödül: $5.000, 5 skor", RenkTest[Renk] >>> 8);
	SendClientMessageToAll(-1, string);
	RenkTest[Durum] = true;
	KillTimer(RenkTest[Timer]);
	KillTimer(RenkTest[Timer2]);
 	RenkTest[Timer2] = SetTimer("ColorTestEnd", 30000, false);
	return true	;
}

forward ColorTestEnd(); public ColorTestEnd(){
	if(RenkTest[Durum] == true)
	{
		KillTimer(RenkTest[Timer2]);
	    RenkTest[Durum] = false;
	    RenkTest[Timer] = SetTimer("ColorTest", 180000, true);
	}
	return true;
}

public MyHttpResponse(playerid, response_code, data[])
{
	new name[MAX_PLAYER_NAME];
	new ip[16];
	GetPlayerName(playerid, name, sizeof(name));
	GetPlayerIp(playerid, ip, sizeof ip);
	if(strcmp(ip, "127.0.0.1", true) == 0)
	{
		printf("Localhost'dan giriþ yapýldý.(%s[%i])", name, playerid);
        return true;
	}
	if(response_code == 200)
	{
		if(data[0] == 'Y')
		{
			kickle(playerid,"VPN/Proxy ile giris");
	    	SCM(playerid,-1,""safaf"VPN/Proxy'nizi kapatýp tekrar deneyin.");
	    	printf("Proxy bulundu.(%s[%i])", name, playerid);
		}
		if(data[0] == 'N')
		{
			printf("Proxy bulunmadý.(%s[%i])", name, playerid);
		}
		if(data[0] == 'X')
		{
			printf("Yanlýþ ip formatý.");
		}
		else
		{
			printf("Ýþlem zaman aþýmýna uðradý. Hata kodu: %d", response_code);
		}
	}
	return true;
}

forward DelayedKick(playerid);
public DelayedKick(playerid)
{
    Kick(playerid);
    return true;
}

CMD:oneri(playerid,params[])
{

	new yazi[1024];
	if(sscanf(params,"s[1024]",yazi)) return Kullanim(playerid,"oneri [ÖNERÝNÝZ]");
	if(!strlen(yazi)) return Kullanim(playerid,"oneri [ÖNERÝNÝZ]");
	if(spamProtect(playerid,"oneri",60)) return true;
	new komut[128];
	format(komut,sizeof(komut),"[%s] %s(%i): %s \r\n",TarihCek(),getName(playerid),playerid,yazi);
	new File:dosyaCek = fopen("Dark/Log/OneriLog.txt", io_append);
	fwrite(dosyaCek, code(komut));
	fclose(dosyaCek);
	SCM(playerid, -1, ""safaf"Öneriniz baþarýlý bir þekilde kaydedilmiþtir. Bildirim için teþekkür ederiz.");
	new sql[2048];
	format(sql, sizeof(sql), "INSERT INTO `onerilog` (`gonderen`, `mesaj`, `tarih`) VALUES ('%s', '%s', '%s')", getName(playerid), code(yazi), TarihCek());
	mysql_query(mysqlC, sql);
	return true;
}

CMD:istek(playerid, params[])
{
	return cmd_oneri(playerid, params);
}

CMD:nban(playerid,params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new id,sebep[128], gun;
	if(sscanf(params,"uis[128]",id,gun,sebep)) return Kullanim(playerid,"nban [ÝD / ÝSÝM] [GÜN] [SEBEP]");
	if(!strlen(sebep)) return Kullanim(playerid,"nban [ÝD] [SEBEP] [GÜN]");
	if(!IsPlayerConnected(id)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[id][dLevel]) return Hata(playerid,"Sizden yüksek level birine nban atamazsýnýz.");
	if(!strcmp(getName(id),"flareoNNN") || !strcmp(getName(id),"Ethernos") || !strcmp(getName(id),"Lordax")) return Hata(playerid,"Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	if(gun < 0 || gun > 365) return Hata(playerid, "En az 1, en fazla 365 gün nban atabilirsiniz.");
	MySQLGuncelleInt(id,"bannedxd",1);
	new sure = gettime() + gun * 86400;
	PlayerInfo[id][bannedxd] = 1;
	MySQLGuncelleInt(id,"bannedtime",gettime());
	new Query[2048];
	format(Query,sizeof(Query),"INSERT INTO `nbanlog`(`oyuncu`,`ip`,`admin`,`sebep`,`zaman`,`sure`,`sure2`) VALUES('%s','%s','%s','%s','%s','%d','%d')",getName(id),getIp(id),getName(playerid),code(sebep),TarihCek(), sure, gun);
	mysql_query(mysqlC,Query);
	new yazi[1024];
	new string4[156],strings[156],string2[156],string3[156],string5[156];
	format(string4,500,""wb"=========================== ["w" N-Banlandýnýz "wb"] ===========================\n");
	strcat(yazi,string4);
	format(strings,500,""w"N-Banlayan Yetkili: "wb"%s\n", getName(playerid));
	strcat(yazi,strings);
	format(string2,500,""w"N-Banlama Tarihi: "wb"%s\n", TarihCek());
	strcat(yazi,string2);
	format(string3,500,""w"N-Ban Süresi: "wb"%d gün\n", gun);
	strcat(yazi,string3);
	format(string3,500,""w"N-Ban Açýlmasýna Kalan: "wb"%s\n", ConvertTime(sure - gettime()));
	strcat(yazi,string3);
	format(string3,500,""w"N-Ban Sebebi: "wb"%s\n", sebep);
	strcat(yazi,string3);
	format(string5,500,""wb"=========================== ["w" GamerLity FR™ "wb"] =====================\n");
	strcat(yazi,string5);
	ShowPlayerDialog(id,123,DIALOG_STYLE_MSGBOX,""safaf"N-Banlandýnýz",yazi,""ww"Kapat","");
	format(estring,sizeof(estring),"~r~~h~[N-Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s(%i) ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan N-Banlandi. (%d gun) ~g~~h~~h~Sebep: ~r~~h~%s",getName(id),id,getName(playerid),playerid,gun,code(sebep));
	TextMesaji(code(estring));
	SavePlayer(id);
	new ba_ping = GetPlayerPing(id) + 150; SetTimerEx("KickMag2",(ba_ping > 500 ? 500 : ba_ping), false, "d", id);
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuya "ad"%d gün "w"name ban attýnýz. "ad"(%s)", getName(id), id, gun, sebep);
	return true;
}

CMD:falcone(playerid,params[])
{

	SetPlayerPV(playerid,-2208.5825,-2769.4436,35.7509);
	SCM(playerid,-1,""safaf"Falcone Mekan adlý bölgeye gönderildiniz.");
	return true;
}

CMD:godveh(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid,6);
	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Bunu yapabilmek için bir araçta olmalýsýnýz.");
	if(GetPVarInt(playerid, "Godveh") == 0)
	{
		SetVehicleHealth(GetPlayerVehicleID(playerid),1000000);
		PlayerInfo[playerid][GodCar] = 1;
		SCM(playerid,-1,""safaf"Aracýnýz god olmuþtur.");
		SetPVarInt(playerid, "Godveh", 1);
	}else{
		SetVehicleHealth(GetPlayerVehicleID(playerid),1000);
		PlayerInfo[playerid][GodCar] = 0;
		SCM(playerid,-1,""safaf"Aracýnýzýn godu kapanmýþtýr.");
		SetPVarInt(playerid, "Godveh", 0);
	}
	return true;
}

CMD:aka(playerid, params[])
{
 	new player1, tmp3[50], str[156];
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid,2);
	else if(sscanf(params, "u", player1)) return Kullanim(playerid, "aka [ÝD / ÝSÝM]");
	else if(!IsPlayerConnected(player1)) return Hata(playerid,"Oyuncu oyunda deðil.");
	if(!strcmp(getName(player1),"flareoNNN") || !strcmp(getName(player1),"Ethernos") || !strcmp(getName(player1),"Lordax"))
	{
	    return Hata(playerid, "Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	}
 	GetPlayerIp(player1,tmp3,50);
	/*format(str,sizeof(str),""safaf"{A9A9A9}» AKA: "wb"%s", dini_Get("/Dark/Diger/AKA.txt",tmp3));
	SendClientMessage(playerid,(-1) ,str);*/
	format(str, sizeof(str), "%s", dini_Get("/Dark/Diger/AKA.txt",tmp3));
	strreplaceID(str, ",", "\n");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_LIST, ""safaf"AKA", str, ""ww"Kapat", "");
	return true;
}

stock AKA(playerid)
{
	new string[128];
	new tmp3[50]; GetPlayerIp(playerid,tmp3,50);
	if(strlen(dini_Get("Dark/Diger/AKA.txt", tmp3)) == 0) dini_Set("/Dark/Diger/AKA.txt", tmp3, getName(playerid));
 	else
	{
	    if(strfind(dini_Get("Dark/Diger/AKA.txt", tmp3), getName(playerid), true) == -1)
		{
		    format(string,sizeof(string),"%s,%s", dini_Get("/Dark/Diger/AKA.txt",tmp3), getName(playerid));
		    dini_Set("Dark/Diger/AKA.txt", tmp3, string);
		}
	}
	return true;
}

stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	    case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 33..45:
		    return weaponid+324;

		case 46:
		    return 371;
	}
	return false;
}

CMD:skins(playerid,params[])
{

	ShowModelSelectionMenu(playerid, skinlist, "Skinler");
	return true;
}

CMD:skinler(playerid,params[])
{

	ShowModelSelectionMenu(playerid, skinlist, "Skinler");
	return true;
}

CMD:skinlistesi(playerid,params[])
{

	ShowModelSelectionMenu(playerid, skinlist, "Skinler");
	return true;
}

CMD:skinliste(playerid,params[])
{

	ShowModelSelectionMenu(playerid, skinlist, "Skinler");
	return true;
}

GetWeekDay(day=0, month=0, year=0)
{
	if(!day)
		getdate(year, month, day);

	new
	weekday_str[25],
	j,
	e
	;

	if(month <= 2)
	{
		month += 12;
		--year;
	}

	j = year % 100;
	e = year / 100;

	switch((day +(month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7)
	{
		case 0: weekday_str = "Cumartesi";
		case 1: weekday_str = "Pazar";
		case 2: weekday_str = "Pazartesi";
		case 3: weekday_str = "Salý";
		case 4: weekday_str = "Çarþamba";
		case 5: weekday_str = "Perþembe";
		case 6: weekday_str = "Cuma";
	}

	return weekday_str;
}

CMD:netstats(playerid, params[])
{

    new id;
	if(PlayerInfo[playerid][dLevel] < 5)
	{
	    return YETERSIZSEVIYE(playerid,5);
    }
	if(sscanf(params,"i",id))
	{
	    return Kullanim(playerid,"netstats [ÝD]");
    }
 	new stats[430+1];
 	GetPlayerNetworkStats(id, stats, sizeof(stats));
 	new baslik[256];
 	format(baslik,sizeof(baslik),""safaf"Network Stats - %s",getName(id));
	ShowPlayerDialog(playerid, 123, DIALOG_STYLE_MSGBOX, baslik, stats, ""ww"Kapat", "");
	return true;
}

stock randomEx(min, max)
{
    //Credits to y_less
    new rand = random(max-min)+min;
    return rand;
}

CMD:giveexp(playerid,params[])
{
    new id;
    new miktar;
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid,10);
    if(sscanf(params,"ii",id,miktar)) return Kullanim(playerid,"giveexp [ÝD] [MÝKTAR]");
    expver(id, miktar);
    SFM(id,-1,""safaf"Yetkili "wb"%s(%i) "w"sana "wb"%s "w"exp verdi.",getName(playerid),playerid,FormatMoney(miktar));
    SFM(playerid,-1,""safaf""wb"%s(%i) "w"isimli oyuncuya "wb"%s "w"exp verdin.",getName(id),id,FormatMoney(miktar));
    SavePlayer(id);
    return true;
}

CMD:givescore(playerid,params[])
{

    new id;
    new miktar;
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(sscanf(params,"ii",id,miktar))
    {
        return Kullanim(playerid,"givescore [ÝD] [MÝKTAR]");
    }
    SetPlayerScore(id,GetPlayerScore(id)+miktar);
    PlayerInfo[id][score] = GetPlayerScore(id);
    SavePlayer(id);
    SFM(playerid,-1,""safaf""wb"%s(%i) "w"isimli oyuncuya "wb"%s "w"skor verdin.",getName(id),id,FormatMoney(miktar));
    SFM(id,-1,""safaf"Yetkili "wb"%s(%i) "w"sana "wb"%s "w"skor verdi.",getName(playerid),playerid,FormatMoney(miktar));
    return true;
}

CMD:givemoney(playerid,params[])
{

    new id;
    new miktar;
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(sscanf(params,"ui",id,miktar))
    {
        return Kullanim(playerid,"givemoney [ÝD] [MÝKTAR]");
    }
    GivePlayerMoney(id,miktar);
    PlayerInfo[id][money] = GetPlayerMoney(playerid);
    SFM(playerid,-1,""safaf""wb"%s(%i) "w"ismili oyuncuya "wb"%s "w"para verdin.",getName(id),id,FormatMoney(miktar));
    SFM(id,-1,""safaf"Yetkili "wb"%s(%i) "w"sana "wb"%s "w"para verdi.",getName(playerid),playerid,FormatMoney(miktar));
    SavePlayer(id);
    return true;
}

CMD:setexp(playerid,params[])
{
    new id;
    new miktar;
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(sscanf(params,"ii",id,miktar))
    {
        return Kullanim(playerid,"setexp [ÝD] [MÝKTAR]");
    }
    if(miktar > 1450 || miktar < 0)
    {
        return Hata(playerid,"Geçersiz deðer girdiniz.");
    }
    PlayerInfo[id][exp] = miktar;
    SFM(playerid,-1,""safaf""wb"%s(%i) "w"ismili oyuncunun EXP'ini "wb"%s yaptýn.",getName(id),id,FormatMoney(miktar));
    SFM(id,-1,""safaf"Yetkili "wb"%s(%i) "w"senin EXP'ini "wb"%s "w"yaptý.",getName(playerid),playerid,FormatMoney(miktar));
    SavePlayer(id);
    return true;
}

CMD:setglkredi(playerid,params[])
{

    new id;
    new miktar;
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(sscanf(params,"ii",id,miktar))
    {
        return Kullanim(playerid,"setglkredi [ÝD] [MÝKTAR]");
    }
    PlayerInfo[id][GLKredi] = miktar;
    SFM(playerid,-1,""safaf""wb"%s(%i) "w"ismili oyuncunun GLKredi'sini "wb"%s "w"yaptýn.",getName(id),id,FormatMoney(miktar));
    SFM(id,-1,""safaf"Yetkili "wb"%s(%i) "w"senin GLKredi'ni "wb"%s "w"yaptý.",getName(playerid),playerid,FormatMoney(miktar));
    SavePlayer(id);
    return true;
}

CMD:giveglkredi(playerid,params[])
{

    new id;
    new miktar;
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(sscanf(params,"ii",id,miktar))
    {
        return Kullanim(playerid,"giveglkredi [ÝD] [MÝKTAR]");
    }
    new x;
    x = PlayerInfo[id][GLKredi];
    PlayerInfo[id][GLKredi] = x+miktar;
    SFM(playerid,-1,""safaf""wb"%s(%i) "w"ismili oyuncuya "wb"%s "w"GLKredi verdin.",getName(id),id,FormatMoney(miktar));
    SFM(id,-1,""safaf"Yetkili "wb"%s(%i) "w"sana "wb"%s "w"GLKredi verdi.",getName(playerid),playerid,FormatMoney(miktar));
    SavePlayer(id);
    return true;
}

CMD:yapimci(playerid,params[])
{

    cmd_credits(playerid,"");
    return true;
}

CMD:yapimcilar(playerid,params[])
{

    cmd_credits(playerid,"");
    return true;
}

CMD:omenu(playerid,params[])
{

    new dialogstr[1024], editstr[500];
    strcat(dialogstr,""ww"Nickimi Deðiþtir\n");
    strcat(dialogstr,""ww"Þifremi Deðiþtir\n");
    strcat(dialogstr,""ww"Bilgilerim\n");
    strcat(dialogstr,""ww"Skor Yolla\n");
    strcat(dialogstr,""ww"Para Yolla\n");
    strcat(dialogstr,""ww"GLKredi Yolla\n");
    strcat(dialogstr,""ww"EXP Yolla\n");
    switch(GetPVarInt(playerid, "duello_istek"))
    {
        case 0:
        {
            format(editstr, sizeof(editstr), ""ww"Düello Ýstekleri: "wb"Kapalý\n");
        }
        case 1:
        {
            format(editstr, sizeof(editstr), ""ww"Düello Ýstekleri: "ad"Açýk\n");
        }
    }
    strcat(dialogstr, editstr);
    switch(wshizlanma[playerid])
    {
        case false:
        {
            format(editstr, sizeof(editstr), ""ww"W+S Hýzlanma: "wb"Kapalý\n");
        }
        case true:
        {
            format(editstr, sizeof(editstr), ""ww"W+S Hýzlanma: "ad"Açýk\n");
        }
    }
    strcat(dialogstr, editstr);
    switch(EkstraZiplama[playerid])
    {
        case false:
        {
            format(editstr, sizeof(editstr), ""ww"Ekstra Zýplama: "wb"Kapalý\n");
        }
        case true:
        {
            format(editstr, sizeof(editstr), ""ww"Ekstra Zýplama: "ad"Açýk\n");
        }
    }
    strcat(dialogstr, editstr);
    switch(ArkadasIstek[playerid])
    {
        case false:
        {
            format(editstr, sizeof(editstr), ""ww"Arkadaþlýk Istekleri: "wb"Kapalý\n");
        }
        case true:
        {
            format(editstr, sizeof(editstr), ""ww"Arkadaþlýk Istekleri: "ad"Açýk\n");
        }
    }
    strcat(dialogstr, editstr);
    strcat(dialogstr, ""ww"Kiþisel Durum Deðiþtir");
    ShowPlayerDialog(playerid,17547,DIALOG_STYLE_LIST,""safaf"Oyuncu Menüsü - Hesap Ýþlemleri",dialogstr,""ww"Tamam",""ww"Kapat");
    return true;
}

CMD:hesabim(playerid, params[])
{

	cmd_omenu(playerid, "");
	return true;
}

CMD:ayarlar(playerid,params[])
{
    cmd_omenu(playerid,"");
    return true;
}

CMD:ayarlarim(playerid,params[])
{
    cmd_omenu(playerid,"");
    return true;
}

CMD:oyuncumenu(playerid,params[])
{
    cmd_omenu(playerid,"");
    return true;
}

CMD:oyuncumenusu(playerid,params[])
{
    cmd_omenu(playerid,"");
    return true;
}

CMD:expyolla(playerid,params[])
{
    new id;
    new miktar;
    if(sscanf(params,"ii",id,miktar))
    {
        return Kullanim(playerid,"expyolla [ÝD] [MÝKTAR]");
    }
    if(miktar > 50 || miktar < 0)
    {
        return Hata(playerid,"En az 0, en fazla 50 EXP gönderebilirsiniz.");
    }
    if(PlayerInfo[playerid][exp] < miktar) return Hata(playerid, "Yeterli EXP'iniz yok!");
    expver(id, miktar);
    PlayerInfo[playerid][exp] -= miktar;
    SFM(playerid,-1,""safaf"%s(%i) isimli oyuncuya %s EXP yolladýn.",getName(id),id,FormatMoney(miktar));
    SFM(id,-1,""safaf"%s(%d) adlý oyuncu sana %s EXP yolladý.",getName(playerid),playerid,FormatMoney(miktar));
    SavePlayer(id);
    SavePlayer(playerid);
    return true;
}

CMD:glkrediyolla(playerid,params[])
{
    new id;
    new miktar;
    if(sscanf(params,"ii",id,miktar))
    {
        return Kullanim(playerid,"glkrediyolla [ÝD] [MÝKTAR]");
    }
    if(miktar > 50 || miktar < 0)
    {
        return Hata(playerid,"En az 0, en fazla 50 GLKredi gönderebilirsiniz.");
    }
    if(PlayerInfo[playerid][GLKredi] < miktar) return Hata(playerid, "Yeterli GLKredi'niz yok!");
    PlayerInfo[id][GLKredi] += miktar;
    PlayerInfo[playerid][GLKredi] -= miktar;
    SFM(playerid,-1,""safaf"%s(%i) isimli oyuncuya %s GLKredi yolladýn.",getName(id),id,FormatMoney(miktar));
    SFM(id,-1,""safaf"%s(%d) adlý oyuncu sana %s GLKredi yolladý.",getName(playerid),playerid,FormatMoney(miktar));
    SavePlayer(id);
    SavePlayer(playerid);
    return true;
}

stock GetVehicleName(vehicleid)
{
    new String[128];
	format(String,sizeof(String),"%s",VehicleNames[GetVehicleModel(vehicleid) - 400]);
	return String;
}

stock Bilgimesaj(playerid, renk, str[])
{
	new str[1024];
    format(str, sizeof(str), ""safaf"%s", str);
    SendClientMessage(playerid, renk, str);
    return true;
}

forward ZombieBaslat();
public ZombieBaslat()
{
	if(ZombieActive == 1 || ZombieBasladi == 1) return true;
    print("» Yeni bir zombie baþladý.");
    ZombieActive = 1;
    ZombieBasladi = 0;
    format(estring,sizeof(estring),"~r~~h~[ZOMBIE] ~w~~h~~h~Zombie az sonra baslayacak! ~r~~h~(/zombie)");
    TextMesaji(code(estring));
    SetTimer("ZombieTekrarla",15000,false);
    SetTimer("ZombieKatilimBitir",30000,false);
    return true;
}

forward HungerGameBaslat();
public HungerGameBaslat()
{
	if(HungerGameActive == 1 || HungerGameBasladi == 1) return true;
    print("» Yeni bir hunger game baþladý.");
    HungerGameActive = 1;
    HungerGameBasladi = 0;
    format(estring,sizeof(estring),"~r~~h~[HG] ~w~~h~~h~Hunger Games az sonra baslayacak! ~r~~h~(/hg)");
    TextMesaji(code(estring));
    SetTimer("HungerGameTekrarla",15000,false);
    SetTimer("HungerGameKatilimBitir",30000,false);
    return true;
}

forward HungerGameTekrarla();
public HungerGameTekrarla()
{
    format(estring,sizeof(estring),"~r~~h~[HG] ~w~~h~~h~Hunger Games az sonra baslayacak! ~r~~h~(/hg)");
    TextMesaji(code(estring));
}

forward HungerGameKatilimBitir();
public HungerGameKatilimBitir()
{
    if(OnlineHungerGame() <= 1)
    {
        new String1[128];
        format(String1, sizeof(String1), "~r~~h~[HG] ~w~~h~~h~Hunger Games, yetersiz oyuncu katilimindan dolayi iptal oldu.");
        TextMesaji(code(String1));
        HungerGameActive = 0;
        for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(HungerGamede[i] == 1)
                {
                    HungerGamede[i] = 0;
                    OnPlayerSpawn(i);
                }
            }
        }
        return true;
    }
    ////////////////////////
    HungerGameActive = 0;
    new String[128];
    format(String, sizeof(String), "~r~~h~[HG] ~w~~h~~h~Hunger Games'e katilim sona erdi!");
    TextMesaji(code(String));
    for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(HungerGamede[i] == 1)
            {
                PlayerInfo[i][Etkinlik_Sayac] = 6;
                KillTimer(PlayerInfo[i][Etkinlik_Timer]);
                PlayerInfo[i][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim4", 1000, true, "i", i);
            }
        }
    }
    return true;
}

forward ZombieTekrarla();
public ZombieTekrarla()
{
    format(estring,sizeof(estring),"~r~~h~[ZOMBIE] ~w~~h~~h~Zombie az sonra baslayacak! ~r~~h~(/zombie)");
    TextMesaji(code(estring));
}

forward ZombieKatilimBitir();
public ZombieKatilimBitir()
{
    if(OnlineToplamZombie() <= 1 || OnlineZombie() < 1 || OnlineInsan() < 1)
    {
        new String1[128];
        format(String1, sizeof(String1), "~r~~h~[ZOMBIE] ~w~~h~~h~Zombie, yetersiz oyuncu katilimindan dolayi iptal oldu.");
        TextMesaji(code(String1));
        ZombieActive = 0;
        for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(Zombiede[i] == 1)
                {
                    Zombiede[i] = 0;
                    ZombieTeamHuman[i] = 0;
                    ZombieTeamZombie[i] = 0;
                    OnPlayerSpawn(i);
                }
            }
        }
        return true;
    }
    ////////////////////////
    ZombieActive = 0;
    new String[128];
    format(String, sizeof(String), "~r~~h~[ZOMBIE] ~w~~h~~h~Zombie'ye katilim sona erdi!");
    TextMesaji(code(String));
    for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(Zombiede[i] == 1)
            {
                PlayerInfo[i][Etkinlik_Sayac] = 6;
                KillTimer(PlayerInfo[i][Etkinlik_Timer]);
                PlayerInfo[i][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim3", 1000, true, "i", i);
            }
        }
    }
    return true;
}

forward GenelTimer();
public GenelTimer()
{
	foreach(new q: Player)
	{
	    if(IsPlayerConnected(q))
	    {
		    if(GetPlayerState(q) == PLAYER_STATE_DRIVER && spawnda[q] == 1)
		    {
		        destroyVehicle(q);
		        Hata(q, "Spawn bölgesinde araç almak yasaktýr.");
		    }
		    new id = GetVehicleModel(GetPlayerVehicleID(q));
			if((id == 441 || id == 464|| id == 465 || id == 501 || id == 564 || id == 594 || id == 447))
			{
				destroyVehicle(q);
				Hata(q, "Bu aracýn kullanýmý yasaklanmýþ.");
			}

			LabelUpdate(q);

			if(PlayerInfo[q][AFK] == false) PlayerInfo[q][onlinet]++;
			
			if(PlayerInfo[q][GodCar] == 1 && GetPlayerState(q) == PLAYER_STATE_DRIVER)
			{
			    SetVehicleHealth(GetPlayerVehicleID(q), 9999.0);
			    RepairVehicle(GetPlayerVehicleID(q));
			}
			
			if(specdeyimaq[q] == 1 && PlayerInfo[q][AFK] == false) PlayerInfo[q][GunlukSpec]++;
		}
	}

	parkour_Timer++;
	soru_Timer++;
	loto_Timer++;
	lotoS_Timer++;

	if(parkour_Timer >= 60+60+60+60+60+60+60+60)
	{
	    ParkourBaslat();
	    parkour_Timer = 0;
	}

	if(soru_Timer >= 60+60+60+60)
	{
	    GenelKulturSor();
	    soru_Timer = 0;
	}

	if(loto_Timer >= 30)
	{
	    Jackpot = Jackpot + LOTTO_JACKPOT;
	    loto_Timer = 0;
	}

	if(lotoS_Timer >= 60+60+60+60+60)
	{
		Draw();
	    lotoS_Timer = 0;
	}

    DerbyKontrol();

    if(ZombieBasladi == 1 && OnlineInsan() >= 1 && OnlineZombie() == 0)
    {
        for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(Zombiede[i] == 1)
                {
                    Zombiede[i] = 0;
                    ZombieTeamHuman[i] = 0;
                    ZombieTeamZombie[i] = 0;
                    ZombieBasladi = 0;
                    ZombieActive = 0;
                    OnPlayerSpawn(i);
                    format(estring,sizeof(estring),"~r~~h~[ZOMBIE] ~w~~h~~h~Zombieyi ~r~~h~insanlar ~w~~h~~h~kazandi!");
                }
            }
        }
    }

    if(ZombieBasladi == 1 && OnlineInsan() == 0 && OnlineZombie() >= 1)
    {
        for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(Zombiede[i] == 1)
                {
                    Zombiede[i] = 0;
                    ZombieTeamHuman[i] = 0;
                    ZombieTeamZombie[i] = 0;
                    ZombieBasladi = 0;
                    ZombieActive = 0;
                    OnPlayerSpawn(i);
                    format(estring,sizeof(estring),"~r~~h~[ZOMBIE] ~w~~h~~h~Zombieyi ~r~~h~zombiler ~w~~h~~h~kazandi!");
                }
            }
        }
    }

    if(HungerGameBasladi == 1 && OnlineHungerGame() == 1)
    {
        for(new i = 0 , j = GetPlayerPoolSize(); i <= j; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(HungerGamede[i] == 1)
                {
                    format(estring, sizeof(estring), "~r~~h~[HG] ~w~~h~~h~%s(%i) adli oyuncu Hunger Games'i kazandi! ~r~~h~(5 skor, $10.000)", getName(i), i);
                    HungerGamede[i] = 0;
                    HungerGameActive = 0;
                    HungerGameBasladi = 0;
                    OnPlayerSpawn(i);
                }
            }
        }
        TextMesaji(code(estring));
    }

}

forward LoadMaps();
public LoadMaps()
{
    CreateDynamicObject(9946,-1752.01684570,884.68298340,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(1)
    CreateDynamicObject(9946,-1803.17968750,885.41308594,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(2)
    CreateDynamicObject(9946,-1754.32812500,846.98437500,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(3)
    CreateDynamicObject(9946,-1803.34082031,846.75683594,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(4)
    CreateDynamicObject(9946,-1803.52197266,808.04064941,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(5)
    CreateDynamicObject(9946,-1754.42626953,807.86926270,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(6)
    CreateDynamicObject(9946,-1706.98046875,802.82519531,341.51126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(7)
    CreateDynamicObject(9946,-1703.54394531,847.49139404,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(8)
    CreateDynamicObject(9946,-1703.01196289,885.62127686,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(9)
    CreateDynamicObject(2759,-1793.24108887,830.02667236,344.63494873,284.00000000,0.00000000,350.00000000); //object(cj_s1_head)(1)
    CreateDynamicObject(2908,-1811.82360840,844.03015137,341.96237183,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(1)
    CreateDynamicObject(2907,-1810.60791016,843.59796143,342.04498291,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(1)
    CreateDynamicObject(2906,-1808.99084473,845.97985840,341.96582031,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(1)
    CreateDynamicObject(2759,-1809.49682617,842.50262451,341.13494873,0.00000000,0.00000000,0.00000000); //object(cj_s1_head)(2)
    CreateDynamicObject(2757,-1771.23449707,866.75451660,341.12844849,0.00000000,0.00000000,0.00000000); //object(cj_s1_larm)(1)
    CreateDynamicObject(3092,-1793.44360352,814.98791504,341.09274292,82.00000000,0.00000000,352.00000000); //object(dead_tied_cop)(1)
    CreateDynamicObject(3092,-1763.74902344,840.05029297,341.34274292,82.00000000,0.00000000,0.00000000); //object(dead_tied_cop)(2)
    CreateDynamicObject(3935,-1745.50573730,837.09649658,342.43005371,0.00000000,82.00000000,0.00000000); //object(statue)(1)
    CreateDynamicObject(2907,-1772.19726562,833.23516846,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(2)
    CreateDynamicObject(2907,-1767.93481445,833.52819824,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(3)
    CreateDynamicObject(2907,-1769.12475586,830.62982178,341.28848267,358.30401611,91.06011963,122.01565552); //object(kmb_deadtorso)(4)
    CreateDynamicObject(2907,-1775.78173828,829.08459473,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(5)
    CreateDynamicObject(2907,-1771.57592773,821.30810547,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(6)
    CreateDynamicObject(2907,-1767.33337402,819.78155518,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(7)
    CreateDynamicObject(2907,-1764.62097168,816.62457275,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(8)
    CreateDynamicObject(2908,-1764.74450684,825.67059326,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(2)
    CreateDynamicObject(2908,-1771.15649414,830.39135742,340.95587158,272.82812500,134.98333740,63.01828003); //object(kmb_deadhead)(3)
    CreateDynamicObject(2908,-1769.34191895,831.91864014,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(4)
    CreateDynamicObject(2908,-1769.94848633,828.47094727,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(5)
    CreateDynamicObject(2908,-1770.75976562,829.05517578,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(6)
    CreateDynamicObject(2908,-1771.77416992,829.78527832,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(7)
    CreateDynamicObject(2908,-1771.77343750,829.78515625,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(8)
    CreateDynamicObject(2905,-1769.34179688,828.67132568,341.21990967,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(1)
    CreateDynamicObject(840,-1759.60241699,836.47399902,343.11895752,0.00000000,0.00000000,0.00000000); //object(dead_tree_12)(1)
    CreateDynamicObject(3641,-1701.87780762,857.53979492,343.54602051,0.00000000,0.00000000,270.00000000); //object(glenphouse04_lax)(1)
    CreateDynamicObject(2908,-1700.38269043,859.42010498,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(9)
    CreateDynamicObject(2907,-1701.95349121,856.83215332,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(9)
    CreateDynamicObject(2906,-1700.23632812,857.49200439,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(2)
    CreateDynamicObject(2906,-1701.17700195,857.72338867,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(3)
    CreateDynamicObject(2905,-1702.32836914,858.46862793,341.21990967,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(2)
    CreateDynamicObject(2905,-1701.98083496,858.35791016,341.42160034,0.00000000,0.00000000,193.99995422); //object(kmb_deadleg)(3)
    CreateDynamicObject(3007,-1803.58984375,768.28637695,310.96383667,0.00000000,0.00000000,0.00000000); //object(chopcop_torso)(1)
    CreateDynamicObject(3092,-1758.49670410,848.87963867,341.09274292,276.00000000,0.00000000,0.00000000); //object(dead_tied_cop)(3)
    CreateDynamicObject(3092,-1760.99365234,848.78063965,341.09274292,275.99853516,0.00000000,0.00000000); //object(dead_tied_cop)(4)
    CreateDynamicObject(3092,-1758.38427734,852.38580322,341.34274292,275.99853516,0.00000000,0.00000000); //object(dead_tied_cop)(5)
    CreateDynamicObject(3092,-1764.38049316,845.89465332,341.34274292,275.99853516,0.00000000,0.00000000); //object(dead_tied_cop)(6)
    CreateDynamicObject(3092,-1763.93969727,847.41308594,341.34274292,275.99853516,0.00000000,0.00000000); //object(dead_tied_cop)(7)
    CreateDynamicObject(2044,-1759.70336914,845.70855713,341.15597534,0.00000000,0.00000000,0.00000000); //object(cj_mp5k)(1)
    CreateDynamicObject(2044,-1761.49658203,852.47973633,341.15597534,0.00000000,0.00000000,0.00000000); //object(cj_mp5k)(2)
    CreateDynamicObject(2045,-1766.50622559,852.06372070,341.22131348,0.00000000,0.00000000,0.00000000); //object(cj_bbat_nails)(1)
    CreateDynamicObject(2036,-1758.37500000,846.58227539,341.16238403,0.00000000,0.00000000,0.00000000); //object(cj_psg1)(1)
    CreateDynamicObject(2034,-1763.54882812,853.11535645,341.15927124,0.00000000,0.00000000,0.00000000); //object(cj_sawnoff)(1)
    CreateDynamicObject(5713,-1794.43164062,801.75097656,346.35784912,0.00000000,0.00000000,0.00000000); //object(grave01_law)(1)
    CreateDynamicObject(2908,-1775.81616211,798.65637207,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(10)
    CreateDynamicObject(2906,-1778.67285156,797.95611572,341.90051270,76.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(4)
    CreateDynamicObject(2906,-1779.27490234,797.23522949,341.90051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(5)
    CreateDynamicObject(2906,-1786.26379395,796.94293213,341.90051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(6)
    CreateDynamicObject(2905,-1780.70556641,802.19207764,341.21990967,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(4)
    CreateDynamicObject(2906,-1887.92138672,730.66278076,326.32730103,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(7)
    CreateDynamicObject(2906,-1813.41064453,793.66558838,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(8)
    CreateDynamicObject(2906,-1742.42871094,875.41979980,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(9)
    CreateDynamicObject(807,-1745.72729492,867.82434082,341.36938477,0.00000000,0.00000000,0.00000000); //object(p_rubble)(1)
    CreateDynamicObject(747,-1742.12854004,864.62976074,341.12844849,0.00000000,0.00000000,0.00000000); //object(sm_scrub_rock3)(1)
    CreateDynamicObject(13635,-1764.77990723,883.72027588,343.47833252,0.00000000,0.00000000,82.00000000); //object(therocks10)(1)
    CreateDynamicObject(6295,-1698.06835938,824.70800781,344.06085205,83.99597168,0.00000000,21.99462891); //object(sanpedlithus_law2)(1)
    CreateDynamicObject(2906,-1790.79101562,796.97717285,341.90051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(10)
    CreateDynamicObject(2906,-1791.23901367,796.44653320,341.90051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(11)
    CreateDynamicObject(2906,-1791.29370117,796.94964600,342.40051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(12)
    CreateDynamicObject(2906,-1795.14025879,797.46026611,342.40051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(13)
    CreateDynamicObject(2906,-1799.63439941,797.13110352,342.40051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(14)
    CreateDynamicObject(2906,-1807.76000977,797.59301758,342.40051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(15)
    CreateDynamicObject(2906,-1807.75976562,797.59277344,342.40051270,75.99792480,0.00000000,0.00000000); //object(kmb_deadarm)(16)
    CreateDynamicObject(9946,-1764.69335938,773.25549316,339.94125366,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(10)
    CreateDynamicObject(9946,-1809.50048828,769.55798340,340.76126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(11)
    CreateDynamicObject(9946,-1705.36315918,767.81304932,339.94125366,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(12)
    CreateDynamicObject(9946,-1702.79101562,923.19921875,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(13)
    CreateDynamicObject(9946,-1751.79187012,922.76019287,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(14)
    CreateDynamicObject(9946,-1801.02526855,923.54199219,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(15)
    CreateDynamicObject(2908,-1728.37768555,813.51770020,342.30993652,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(11)
    CreateDynamicObject(2907,-1726.13305664,810.40344238,342.39254761,0.00000000,5.99853516,97.99804688); //object(kmb_deadtorso)(10)
    CreateDynamicObject(2906,-1731.30224609,812.28387451,342.30651855,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(17)
    CreateDynamicObject(2900,-1723.82995605,814.22686768,342.23251343,0.00000000,0.00000000,0.00000000); //object(temp_cardbox)(1)
    CreateDynamicObject(2893,-1727.34448242,818.65533447,344.00903320,0.00000000,0.00000000,0.00000000); //object(kmb_ramp)(1)
    CreateDynamicObject(2905,-1728.15161133,811.12554932,342.32397461,1.88250732,80.17706299,102.35247803); //object(kmb_deadleg)(5)
    CreateDynamicObject(2906,-1729.35339355,811.25720215,342.30651855,0.00000000,100.00000000,284.00000000); //object(kmb_deadarm)(18)
    CreateDynamicObject(2908,-1726.94726562,811.11914062,342.30993652,0.00000000,63.99536133,85.99548340); //object(kmb_deadhead)(12)
    CreateDynamicObject(2906,-1727.57373047,811.90008545,342.30651855,0.00000000,263.99993896,35.99996948); //object(kmb_deadarm)(19)
    CreateDynamicObject(2907,-1738.43762207,807.90087891,343.64254761,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(11)
    CreateDynamicObject(2908,-1754.02587891,885.24639893,345.04602051,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(13)
    CreateDynamicObject(2907,-1752.94433594,887.61444092,345.57153320,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(12)
    CreateDynamicObject(18096,-1707.52050781,897.79785156,342.02163696,0.00000000,0.00000000,0.00000000); //object(light_shard_06)(1)
    CreateDynamicObject(18447,-1684.79772949,796.83874512,370.56506348,0.00000000,0.00000000,0.00000000); //object(cs_mntdetail01)(1)
    CreateDynamicObject(2906,-1742.92785645,857.22119141,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(20)
    CreateDynamicObject(2908,-1791.88500977,909.59832764,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(14)
    CreateDynamicObject(3092,-1795.59326172,908.53430176,341.34274292,0.00000000,291.99996948,0.00000000); //object(dead_tied_cop)(8)
    CreateDynamicObject(851,-1730.22985840,915.79211426,341.44131470,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_2)(1)
    CreateDynamicObject(851,-1783.98339844,913.32543945,341.44131470,354.00000000,0.00000000,0.00000000); //object(cj_urb_rub_2)(2)
    CreateDynamicObject(852,-1783.70617676,917.93542480,341.12844849,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_4)(1)
    CreateDynamicObject(854,-1782.50537109,915.49206543,341.33520508,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3b)(1)
    CreateDynamicObject(910,-1792.01196289,915.71722412,341.39761353,278.00000000,0.00000000,0.00000000); //object(bust_cabinet_4)(1)
    CreateDynamicObject(852,-1780.73657227,916.61358643,341.12844849,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_4)(2)
    CreateDynamicObject(849,-1782.91540527,911.10595703,341.42819214,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3)(1)
    CreateDynamicObject(851,-1781.09082031,913.28875732,341.44131470,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_2)(3)
    CreateDynamicObject(853,-1790.26879883,912.37341309,341.52911377,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_5)(1)
    CreateDynamicObject(849,-1788.28784180,910.50897217,341.42819214,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3)(2)
    CreateDynamicObject(3119,-1782.05432129,924.02307129,341.43231201,0.00000000,0.00000000,0.00000000); //object(cs_ry_props)(1)
    CreateDynamicObject(3119,-1793.34509277,902.51287842,341.43231201,0.00000000,0.00000000,0.00000000); //object(cs_ry_props)(2)
    CreateDynamicObject(3119,-1797.26562500,925.41815186,341.43231201,0.00000000,0.00000000,0.00000000); //object(cs_ry_props)(3)
    CreateDynamicObject(3098,-1744.33642578,885.45336914,343.41436768,0.00000000,0.00000000,0.00000000); //object(break_wall_1b)(1)
    CreateDynamicObject(3097,-1779.72900391,935.28027344,344.81649780,0.00000000,0.00000000,0.00000000); //object(break_wall_2b)(1)
    CreateDynamicObject(849,-1790.15625000,919.97943115,341.42819214,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3)(3)
    CreateDynamicObject(3012,-1768.21875000,911.65344238,341.12844849,0.00000000,0.00000000,0.00000000); //object(chopcop_head)(1)
    CreateDynamicObject(3098,-1730.69726562,865.73748779,343.41436768,0.00000000,0.00000000,0.00000000); //object(break_wall_1b)(2)
    CreateDynamicObject(3097,-1724.22314453,873.39819336,344.81649780,0.00000000,0.00000000,0.00000000); //object(break_wall_2b)(2)
    CreateDynamicObject(3641,-1699.89794922,889.34606934,343.54602051,0.00000000,0.00000000,269.99450684); //object(glenphouse04_lax)(2)
    CreateDynamicObject(3641,-1696.89160156,916.18090820,343.54602051,0.00000000,0.00000000,269.99450684); //object(glenphouse04_lax)(3)
    CreateDynamicObject(9946,-1707.23046875,807.51855469,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(16)
    CreateDynamicObject(9946,-1740.81726074,806.32989502,340.51126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(17)
    CreateDynamicObject(3097,-1789.45935059,881.13415527,345.57986450,0.00000000,0.00000000,0.00000000); //object(break_wall_2b)(3)
    CreateDynamicObject(3092,-1791.55444336,881.14910889,342.85610962,0.00000000,0.00000000,0.00000000); //object(dead_tied_cop)(9)
    CreateDynamicObject(3010,-1785.66308594,879.61621094,341.06259155,0.00000000,100.00000000,0.00000000); //object(chopcop_legr)(1)
    CreateDynamicObject(3007,-1789.46777344,881.72851562,341.89181519,313.95819092,247.82400513,80.47985840); //object(chopcop_torso)(2)
    CreateDynamicObject(3005,-1789.58032227,881.14910889,342.71945190,0.00000000,0.00000000,0.00000000); //object(smash_box_stay)(1)
    CreateDynamicObject(2908,-1786.70214844,881.65258789,341.96923828,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(15)
    CreateDynamicObject(2907,-1793.19836426,880.66253662,342.04498291,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(13)
    CreateDynamicObject(2907,-1787.20434570,882.03601074,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(14)
    CreateDynamicObject(2907,-1794.13867188,877.17291260,342.04498291,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(15)
    CreateDynamicObject(2906,-1788.60449219,881.82012939,341.96582031,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(21)
    CreateDynamicObject(2905,-1792.72863770,879.76025391,341.97640991,0.00000000,0.00000000,62.00000000); //object(kmb_deadleg)(6)
    CreateDynamicObject(2906,-1806.10876465,888.79083252,341.95895386,0.00000000,0.00000000,298.00000000); //object(kmb_deadarm)(22)
    CreateDynamicObject(2908,-1796.37243652,829.80804443,341.96237183,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(16)
    CreateDynamicObject(2908,-1791.74194336,820.51824951,341.96057129,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(17)
    CreateDynamicObject(2907,-1791.62182617,821.42492676,342.04406738,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(16)
    CreateDynamicObject(2906,-1791.08239746,820.51538086,341.95715332,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(23)
    CreateDynamicObject(2905,-1791.26843262,821.24298096,341.97531128,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(7)
    CreateDynamicObject(2905,-1791.37377930,821.80249023,342.01275635,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(8)
    CreateDynamicObject(2906,-1792.12524414,822.60870361,341.95919800,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(24)
    CreateDynamicObject(2906,-1784.68737793,895.65026855,342.17907715,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(25)
    CreateDynamicObject(2893,-1786.63671875,898.38183594,342.90496826,0.00000000,0.00000000,97.99804688); //object(kmb_ramp)(2)
    CreateDynamicObject(10828,-1753.74584961,941.44281006,353.42968750,0.00000000,0.00000000,0.00000000); //object(drydock1_sfse)(1)
    CreateDynamicObject(10828,-1719.03613281,941.08789062,353.42968750,0.00000000,0.00000000,0.00000000); //object(drydock1_sfse)(2)
    CreateDynamicObject(10828,-1695.11303711,940.15563965,353.42968750,0.00000000,0.00000000,0.00000000); //object(drydock1_sfse)(3)
    CreateDynamicObject(10828,-1678.55859375,920.43457031,353.42968750,0.00000000,0.00000000,269.99450684); //object(drydock1_sfse)(4)
    CreateDynamicObject(10828,-1678.00402832,885.64849854,353.42968750,0.00000000,0.00000000,269.99450684); //object(drydock1_sfse)(5)
    CreateDynamicObject(10828,-1677.44128418,850.36248779,353.42968750,0.00000000,0.00000000,269.99450684); //object(drydock1_sfse)(6)
    CreateDynamicObject(10828,-1680.37634277,814.98144531,353.42968750,0.00000000,0.00000000,263.99450684); //object(drydock1_sfse)(7)
    CreateDynamicObject(10828,-1679.97265625,820.98791504,353.42968750,0.00000000,0.00000000,263.99047852); //object(drydock1_sfse)(8)
    CreateDynamicObject(10828,-1678.50170898,854.03326416,353.42968750,0.00000000,0.00000000,267.99047852); //object(drydock1_sfse)(9)
    CreateDynamicObject(10828,-1681.78210449,824.60754395,353.42968750,0.00000000,0.00000000,267.98950195); //object(drydock1_sfse)(10)
    CreateDynamicObject(10828,-1681.58923340,781.11346436,353.42968750,0.00000000,0.00000000,267.98950195); //object(drydock1_sfse)(11)
    CreateDynamicObject(10828,-1681.30871582,763.52508545,350.42968750,0.00000000,0.00000000,267.98950195); //object(drydock1_sfse)(12)
    CreateDynamicObject(10828,-1679.78698730,769.09234619,350.42968750,0.00000000,0.00000000,267.98950195); //object(drydock1_sfse)(13)
    CreateDynamicObject(10828,-1699.64453125,748.03222656,350.42968750,0.00000000,0.00000000,355.98449707); //object(drydock1_sfse)(14)
    CreateDynamicObject(10828,-1734.27770996,750.68701172,350.42968750,0.00000000,0.00000000,355.98449707); //object(drydock1_sfse)(15)
    CreateDynamicObject(10828,-1734.27734375,750.68652344,350.42968750,0.00000000,0.00000000,355.98449707); //object(drydock1_sfse)(16)
    CreateDynamicObject(10828,-1769.33666992,753.37744141,350.42968750,0.00000000,0.00000000,355.98449707); //object(drydock1_sfse)(17)
    CreateDynamicObject(10828,-1803.91113281,756.47851562,350.42968750,0.00000000,0.00000000,355.98449707); //object(drydock1_sfse)(18)
    CreateDynamicObject(9946,-1797.00610352,769.17004395,340.26126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(18)
    CreateDynamicObject(10828,-1824.83825684,773.61334229,350.42968750,0.00000000,2.00000000,279.98449707); //object(drydock1_sfse)(19)
    CreateDynamicObject(10828,-1827.12280273,808.99792480,350.42968750,0.00000000,1.99951172,267.98107910); //object(drydock1_sfse)(20)
    CreateDynamicObject(10828,-1827.49963379,842.86523438,350.42968750,0.00000000,1.99951172,271.97851562); //object(drydock1_sfse)(21)
    CreateDynamicObject(10828,-1828.64062500,877.97497559,350.42968750,0.00000000,359.99951172,271.97753906); //object(drydock1_sfse)(22)
    CreateDynamicObject(10828,-1829.78247070,913.18377686,350.42968750,0.00000000,359.99450684,271.97753906); //object(drydock1_sfse)(23)
    CreateDynamicObject(10828,-1829.91992188,925.63183594,350.42968750,0.00000000,359.98901367,271.97753906); //object(drydock1_sfse)(24)
    CreateDynamicObject(10828,-1811.15625000,942.54174805,350.42968750,0.00000000,359.99450684,179.97753906); //object(drydock1_sfse)(25)
    CreateDynamicObject(10828,-1783.67492676,941.89587402,350.42968750,0.00000000,359.98901367,179.97253418); //object(drydock1_sfse)(26)
    CreateDynamicObject(2906,-1695.88635254,917.14373779,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(26)
    CreateDynamicObject(2905,-1694.54882812,916.34570312,341.21990967,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(9)
    CreateDynamicObject(2907,-1693.36083984,917.75836182,341.28848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(17)
    CreateDynamicObject(10828,-1682.13488770,784.15740967,353.42968750,0.00000000,0.00000000,267.98950195); //object(drydock1_sfse)(27)
    CreateDynamicObject(2926,-1747.55480957,911.52288818,341.12844849,0.00000000,0.00000000,0.00000000); //object(dyno_box_a)(1)
    CreateDynamicObject(2968,-1771.84741211,913.32794189,341.42498779,0.00000000,0.00000000,0.00000000); //object(cm_box)(1)
    CreateDynamicObject(3005,-1781.88500977,908.38232422,341.12844849,0.00000000,0.00000000,0.00000000); //object(smash_box_stay)(2)
    CreateDynamicObject(3009,-1775.71435547,911.38006592,341.12844849,0.00000000,0.00000000,0.00000000); //object(chopcop_arml)(1)
    CreateDynamicObject(3097,-1772.98876953,911.51098633,344.81649780,0.00000000,0.00000000,0.00000000); //object(break_wall_2b)(4)
    CreateDynamicObject(3092,-1771.97851562,912.03961182,340.84274292,0.00000000,289.99996948,188.00000000); //object(dead_tied_cop)(10)
    CreateDynamicObject(9946,-1703.54394531,847.49121094,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(19)
    CreateDynamicObject(1369,-1785.01501465,828.44519043,341.50033569,9.50588989,86.88116455,288.25933838); //object(cj_wheelchair1)(1)
    CreateDynamicObject(13599,-1771.24853516,798.96520996,376.20477295,0.00000000,0.00000000,0.00000000); //object(standblack04)(1)
    CreateDynamicObject(7289,-1808.40844727,852.17602539,346.18008423,0.00000000,0.00000000,0.00000000); //object(casinoblock2_dy)(1)
    CreateDynamicObject(2510,-1822.85339355,836.95300293,341.50839233,0.00000000,0.00000000,0.00000000); //object(model_plane_big2)(1)
    CreateDynamicObject(2602,-1826.49645996,844.22821045,342.04135132,0.00000000,0.00000000,0.00000000); //object(police_cell_toilet)(1)
    CreateDynamicObject(2603,-1710.38623047,793.15264893,342.11172485,0.00000000,174.00000000,340.00000000); //object(police_cell_bed)(1)
    CreateDynamicObject(2820,-1697.61242676,771.13348389,340.05844116,0.00000000,0.00000000,0.00000000); //object(gb_kitchdirt01)(1)
    CreateDynamicObject(744,-1697.56921387,778.90350342,340.05844116,0.00000000,0.00000000,0.00000000); //object(sm_scrub_rock4)(1)
    CreateDynamicObject(18100,-1690.74853516,777.93554688,340.05844116,0.00000000,0.00000000,0.00000000); //object(cj_rubbish01)(1)
    CreateDynamicObject(1358,-1687.39343262,751.32641602,341.68826294,0.00000000,0.00000000,0.00000000); //object(cj_skip_rubbish)(1)
    CreateDynamicObject(10828,-1802.09057617,755.61315918,350.42968750,0.00000000,0.00000000,355.98449707); //object(drydock1_sfse)(18)
    CreateDynamicObject(10828,-1829.46142578,926.27600098,350.42968750,0.00000000,359.98901367,271.97753906); //object(drydock1_sfse)(24)
    CreateDynamicObject(2907,-1799.26135254,769.63519287,341.03848267,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(18)
    CreateDynamicObject(2906,-1806.81225586,776.80871582,340.95245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(27)
    CreateDynamicObject(2908,-1811.14099121,769.82366943,340.95587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(18)
    CreateDynamicObject(2905,-1796.02185059,763.02801514,340.96990967,0.00000000,0.00000000,140.00000000); //object(kmb_deadleg)(10)
    CreateDynamicObject(2890,-1807.12072754,765.64758301,340.87844849,0.00000000,0.00000000,0.00000000); //object(kmb_skip)(1)
    CreateDynamicObject(2743,-1796.53613281,766.06756592,341.22769165,270.00000000,180.00000000,190.00000000); //object(cj_stat_1)(1)
    CreateDynamicObject(2744,-1795.61486816,761.75512695,341.46270752,353.12387085,97.27828979,318.43783569); //object(cj_stat_2)(1)
    CreateDynamicObject(2756,-1714.97656250,771.04864502,341.26785278,0.00000000,0.00000000,0.00000000); //object(cj_s1_base)(1)
    CreateDynamicObject(2758,-1715.91296387,771.52008057,340.05844116,0.00000000,0.00000000,0.00000000); //object(cj_s1_rarm)(1)
    CreateDynamicObject(2759,-1712.62438965,766.20391846,339.30844116,0.00000000,0.00000000,0.00000000); //object(cj_s1_head)(3)
    CreateDynamicObject(3099,-1762.47326660,769.83233643,340.05844116,0.00000000,0.00000000,0.00000000); //object(break_wall_3b)(1)
    CreateDynamicObject(3098,-1755.85583496,782.39324951,342.34436035,0.00000000,0.00000000,0.00000000); //object(break_wall_1b)(3)
    CreateDynamicObject(3119,-1754.78234863,778.86053467,340.36230469,0.00000000,0.00000000,0.00000000); //object(cs_ry_props)(4)
    CreateDynamicObject(849,-1774.67358398,777.72308350,340.67819214,0.00000000,0.00000000,0.00000000); //object(cj_urb_rub_3)(4)
    CreateDynamicObject(924,-1765.17736816,775.82879639,340.23916626,0.00000000,0.00000000,0.00000000); //object(fruitcrate3)(1)
    CreateDynamicObject(2880,-1759.79272461,778.26391602,340.13867188,0.00000000,0.00000000,0.00000000); //object(cj_burg_2)(1)
    CreateDynamicObject(2856,-1755.35827637,777.27844238,340.05844116,0.00000000,0.00000000,0.00000000); //object(gb_foodwrap02)(1)
    CreateDynamicObject(2427,-1764.88513184,780.68847656,340.30844116,0.00000000,310.00000000,0.00000000); //object(cj_ff_juice_l)(1)
    CreateDynamicObject(2907,-1755.29003906,772.19921875,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(19)
    CreateDynamicObject(2907,-1759.38696289,770.53137207,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(20)
    CreateDynamicObject(2907,-1757.45581055,775.68078613,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(21)
    CreateDynamicObject(2907,-1754.08947754,774.68597412,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(22)
    CreateDynamicObject(2907,-1757.77612305,773.39807129,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(23)
    CreateDynamicObject(2907,-1757.16003418,766.49249268,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(24)
    CreateDynamicObject(2907,-1760.29138184,773.80670166,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(25)
    CreateDynamicObject(2907,-1758.65283203,779.59985352,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(26)
    CreateDynamicObject(2907,-1767.60693359,774.94726562,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(27)
    CreateDynamicObject(2907,-1769.18627930,770.73400879,340.07696533,0.00000000,0.00000000,0.00000000); //object(kmb_deadtorso)(28)
    CreateDynamicObject(2908,-1761.04455566,775.40148926,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(19)
    CreateDynamicObject(2908,-1756.36132812,773.64599609,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(20)
    CreateDynamicObject(2908,-1759.02404785,770.10516357,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(21)
    CreateDynamicObject(2908,-1762.47705078,773.00097656,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(22)
    CreateDynamicObject(2908,-1761.42333984,775.80981445,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(23)
    CreateDynamicObject(2908,-1757.20849609,774.22973633,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(24)
    CreateDynamicObject(2908,-1754.83776855,776.27764893,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(25)
    CreateDynamicObject(2908,-1756.18334961,778.38391113,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(26)
    CreateDynamicObject(2908,-1759.92846680,777.65222168,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(27)
    CreateDynamicObject(2908,-1760.89318848,775.07659912,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(28)
    CreateDynamicObject(2908,-1760.89257812,775.07617188,340.13586426,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(29)
    CreateDynamicObject(2906,-1757.68005371,770.51397705,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(28)
    CreateDynamicObject(2906,-1758.85058594,773.08837891,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(29)
    CreateDynamicObject(2906,-1761.60180664,775.72106934,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(30)
    CreateDynamicObject(2906,-1762.12817383,774.31628418,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(31)
    CreateDynamicObject(2906,-1760.69372559,772.44293213,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(32)
    CreateDynamicObject(2906,-1757.73791504,775.33905029,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(33)
    CreateDynamicObject(2906,-1758.49853516,778.29394531,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(34)
    CreateDynamicObject(2906,-1759.72729492,779.28869629,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(35)
    CreateDynamicObject(2906,-1760.22399902,778.67364502,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(36)
    CreateDynamicObject(2906,-1758.76025391,777.59033203,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(37)
    CreateDynamicObject(2906,-1759.63745117,775.24914551,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(38)
    CreateDynamicObject(2906,-1759.28564453,776.18530273,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(39)
    CreateDynamicObject(2906,-1756.70971680,775.21911621,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(40)
    CreateDynamicObject(2906,-1753.92883301,775.51141357,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(41)
    CreateDynamicObject(2906,-1752.96325684,778.08551025,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(42)
    CreateDynamicObject(2906,-1756.24047852,777.17785645,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(43)
    CreateDynamicObject(2906,-1755.80041504,769.80462646,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(44)
    CreateDynamicObject(2906,-1755.79980469,769.80371094,340.13244629,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(45)
    CreateDynamicObject(2905,-1761.47814941,773.21911621,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(11)
    CreateDynamicObject(2905,-1757.83361816,770.62438965,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(12)
    CreateDynamicObject(2905,-1758.84326172,769.56103516,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(13)
    CreateDynamicObject(2905,-1761.15466309,769.09234619,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(14)
    CreateDynamicObject(2905,-1761.59338379,770.05731201,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(15)
    CreateDynamicObject(2905,-1760.62731934,772.63140869,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(16)
    CreateDynamicObject(2905,-1759.04711914,776.84411621,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(17)
    CreateDynamicObject(2905,-1760.91992188,777.54589844,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(18)
    CreateDynamicObject(2905,-1761.53430176,775.90740967,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(19)
    CreateDynamicObject(2905,-1761.53417969,775.90722656,340.14990234,0.00000000,0.00000000,0.00000000); //object(kmb_deadleg)(20)
    CreateDynamicObject(2810,-1758.77111816,771.72961426,340.05844116,0.00000000,0.00000000,0.00000000); //object(cj_stat_2_bit)(1)
    CreateDynamicObject(2757,-1763.64489746,759.91162109,340.05844116,0.00000000,0.00000000,0.00000000); //object(cj_s1_larm)(2)
    CreateDynamicObject(2803,-1746.69299316,765.74261475,340.71514893,0.00000000,0.00000000,0.00000000); //object(cj_meat_bag_1)(1)
    CreateDynamicObject(2804,-1750.78222656,762.51129150,340.21670532,0.00000000,0.00000000,0.00000000); //object(cj_meat_1)(1)
    CreateDynamicObject(2805,-1752.54077148,767.23706055,340.27563477,274.00000000,0.00000000,0.00000000); //object(cj_meat_bag_2)(1)
    CreateDynamicObject(2806,-1754.31176758,761.54870605,340.27825928,0.00000000,0.00000000,0.00000000); //object(cj_meat_2)(1)
    CreateDynamicObject(2804,-1745.66845703,773.07421875,340.21670532,0.00000000,0.00000000,0.00000000); //object(cj_meat_1)(2)
    CreateDynamicObject(2805,-1749.30908203,767.58148193,340.27563477,273.99902344,0.00000000,0.00000000); //object(cj_meat_bag_2)(2)
    CreateDynamicObject(2805,-1748.25219727,769.45397949,340.27563477,273.99902344,0.00000000,0.00000000); //object(cj_meat_bag_2)(3)
    CreateDynamicObject(2806,-1752.82031250,761.70715332,340.27825928,0.00000000,0.00000000,0.00000000); //object(cj_meat_2)(2)
    CreateDynamicObject(2806,-1750.52124023,763.71270752,340.27825928,0.00000000,0.00000000,0.00000000); //object(cj_meat_2)(3)
    CreateDynamicObject(2806,-1749.18896484,765.36279297,340.27825928,0.00000000,0.00000000,0.00000000); //object(cj_meat_2)(4)
    CreateDynamicObject(2589,-1708.74450684,765.37219238,342.59054565,0.00000000,304.00000000,0.00000000); //object(ab_carcass)(1)
    CreateDynamicObject(3092,-1744.59667969,940.40429688,342.21929932,0.00000000,0.00000000,213.99996948); //object(dead_tied_cop)(11)
    CreateDynamicObject(3092,-1737.35729980,940.77777100,342.21929932,0.00000000,0.00000000,213.99719238); //object(dead_tied_cop)(12)
    CreateDynamicObject(3092,-1734.36083984,940.93188477,342.21929932,0.00000000,0.00000000,213.99719238); //object(dead_tied_cop)(13)
    CreateDynamicObject(3092,-1731.20947266,938.08984375,342.21929932,0.00000000,0.00000000,213.99719238); //object(dead_tied_cop)(14)
    CreateDynamicObject(3092,-1731.11840820,936.34197998,342.21929932,0.00000000,0.00000000,213.99719238); //object(dead_tied_cop)(15)
    CreateDynamicObject(3092,-1734.89233398,931.89093018,342.21929932,0.00000000,0.00000000,213.99719238); //object(dead_tied_cop)(16)
    CreateDynamicObject(3092,-1746.75000000,938.53936768,342.21929932,0.00000000,0.00000000,213.99719238); //object(dead_tied_cop)(17)
    CreateDynamicObject(3092,-1751.70385742,937.53240967,341.46929932,274.00000000,180.00000000,33.99719238); //object(dead_tied_cop)(18)
    CreateDynamicObject(3092,-1751.53491211,934.28619385,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(19)
    CreateDynamicObject(3092,-1748.35742188,930.94494629,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(20)
    CreateDynamicObject(3092,-1745.99426270,928.81298828,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(21)
    CreateDynamicObject(3092,-1743.10583496,926.20751953,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(22)
    CreateDynamicObject(3092,-1740.21716309,923.60205078,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(23)
    CreateDynamicObject(3092,-1736.54077148,920.28613281,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(24)
    CreateDynamicObject(3092,-1732.78259277,920.22961426,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(25)
    CreateDynamicObject(3092,-1730.17858887,923.11779785,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(26)
    CreateDynamicObject(3092,-1728.43029785,923.20733643,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(27)
    CreateDynamicObject(3092,-1728.54235840,930.21136475,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(28)
    CreateDynamicObject(3092,-1729.84570312,926.38824463,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(29)
    CreateDynamicObject(3092,-1732.89685059,922.47485352,341.46929932,273.99902344,179.99450684,33.99169922); //object(dead_tied_cop)(30)
    CreateDynamicObject(5713,-1786.38623047,856.02679443,346.35784912,0.00000000,0.00000000,0.00000000); //object(grave01_law)(1)
    CreateDynamicObject(3097,-1809.92944336,867.32232666,344.81649780,0.00000000,0.00000000,0.00000000); //object(break_wall_2b)(5)
    CreateDynamicObject(3005,-1817.42736816,899.57586670,341.12844849,0.00000000,0.00000000,0.00000000); //object(smash_box_stay)(3)
    CreateDynamicObject(2803,-1799.29455566,863.25885010,341.78515625,0.00000000,0.00000000,0.00000000); //object(cj_meat_bag_1)(2)
    CreateDynamicObject(2806,-1800.26794434,858.81951904,341.34826660,0.00000000,0.00000000,0.00000000); //object(cj_meat_2)(5)
    CreateDynamicObject(2806,-1813.93920898,889.82501221,341.34826660,0.00000000,0.00000000,0.00000000); //object(cj_meat_2)(6)
    CreateDynamicObject(2871,-1798.68981934,867.38159180,341.62844849,285.20791626,23.48278809,10.74542236); //object(cj_ss_3_r)(1)
    CreateDynamicObject(3098,-1796.12145996,900.86138916,343.41436768,0.00000000,0.00000000,0.00000000); //object(break_wall_1b)(1)
    CreateDynamicObject(3098,-1752.22314453,885.43273926,343.41436768,0.00000000,0.00000000,0.00000000); //object(break_wall_1b)(1)
    CreateDynamicObject(3098,-1752.22265625,885.43261719,343.41436768,0.00000000,0.00000000,0.00000000); //object(break_wall_1b)(1)
    CreateDynamicObject(3601,-1810.86608887,919.48107910,345.70269775,0.00000000,264.00000000,64.00000000); //object(hillhouse04_la)(1)
    CreateDynamicObject(1429,-1732.63745117,894.55773926,341.38125610,325.42056274,248.49884033,141.23559570); //object(dyn_tv)(1)
    CreateDynamicObject(3602,-1803.54687500,890.13391113,348.13781738,0.00000000,0.00000000,0.00000000); //object(hillhouse05_la)(1)
    CreateDynamicObject(3588,-1720.70507812,793.61425781,342.73281860,0.00000000,0.00000000,0.00000000); //object(sanped_hse1_las)(1)
    CreateDynamicObject(2907,-1716.79638672,804.62200928,342.39254761,0.00000000,5.99853516,97.99804688); //object(kmb_deadtorso)(10)
    CreateDynamicObject(2907,-1718.39477539,798.02069092,342.39254761,0.00000000,5.99853516,97.99804688); //object(kmb_deadtorso)(10)
    CreateDynamicObject(2907,-1718.39453125,798.02050781,342.39254761,0.00000000,5.99853516,97.99804688); //object(kmb_deadtorso)(10)
    CreateDynamicObject(3596,-1748.47265625,817.02539062,341.12844849,0.00000000,0.00000000,0.00000000); //object(dingbat02aex_la)(1)
    CreateDynamicObject(3596,-1749.74975586,924.23577881,341.12844849,0.00000000,160.00000000,0.00000000); //object(dingbat02aex_la)(1)
    CreateDynamicObject(9946,-1800.97802734,885.87890625,340.76126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(2)
    CreateDynamicObject(2893,-1778.26318359,896.02996826,340.90496826,346.21691895,349.70031738,355.51895142); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.26269531,896.02929688,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.16699219,894.03173828,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.28515625,891.27264404,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.14160156,888.27612305,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.16748047,884.21447754,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.21411133,876.42797852,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.13476562,875.39532471,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.13476562,875.39453125,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.21752930,901.79626465,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(2893,-1778.23925781,904.55712891,341.15496826,346.21215820,349.69482422,355.51757812); //object(kmb_ramp)(2)
    CreateDynamicObject(9946,-1758.21691895,770.56219482,339.44125366,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(10)
    CreateDynamicObject(846,-1722.34985352,914.03955078,342.42449951,0.00000000,0.00000000,0.00000000); //object(dead_tree_18)(1)
    CreateDynamicObject(842,-1704.19409180,904.64721680,341.26489258,0.00000000,0.00000000,0.00000000); //object(dead_tree_14)(1)
    CreateDynamicObject(839,-1721.61853027,890.78613281,343.57736206,0.00000000,0.00000000,0.00000000); //object(dead_tree_11)(1)
    CreateDynamicObject(9946,-1707.50817871,809.24633789,340.51126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(16)
    CreateDynamicObject(9946,-1705.69396973,846.82708740,340.51126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(19)
    CreateDynamicObject(848,-1686.81323242,934.15325928,343.28430176,0.00000000,0.00000000,0.00000000); //object(dead_tree_20)(1)
    CreateDynamicObject(2908,-1688.64343262,935.08081055,341.20587158,0.00000000,0.00000000,0.00000000); //object(kmb_deadhead)(30)
    CreateDynamicObject(16365,-1754.14794922,770.62951660,343.38546753,0.00000000,0.00000000,0.00000000); //object(des_substat_17)(1)
    CreateDynamicObject(2809,-1758.30664062,767.33471680,340.05844116,0.00000000,0.00000000,0.00000000); //object(cj_stat_1_bit)(1)
    CreateDynamicObject(9946,-1753.96386719,773.88476562,339.69125366,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(10)
    CreateDynamicObject(3598,-1788.42578125,772.16210938,342.17535400,301.99768066,0.00000000,333.99536133); //object(hillhouse01_la)(1)
    CreateDynamicObject(10828,-1768.83642578,753.40075684,350.42968750,0.00000000,0.00000000,355.98449707); //object(drydock1_sfse)(17)
    CreateDynamicObject(2906,-1691.40222168,842.08642578,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(46)
    CreateDynamicObject(2906,-1689.71459961,841.65014648,341.20245361,0.00000000,0.00000000,0.00000000); //object(kmb_deadarm)(47)
    CreateDynamicObject(2905,-1689.72460938,844.76940918,341.21990967,0.00000000,0.00000000,284.00000000); //object(kmb_deadleg)(21)
    CreateDynamicObject(9946,-1753.73486328,770.39245605,339.44125366,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(10)
    CreateDynamicObject(9946,-1702.69982910,925.44757080,341.01126099,0.00000000,0.00000000,0.00000000); //object(pyrground_sfe)(13)
    CreateDynamicObject(10828,-1677.48901367,922.30053711,353.42968750,0.00000000,0.00000000,269.99450684); //object(drydock1_sfse)(4)
    return true;
}

CMD:zombie(playerid,params[])
{

    if(ZombieActive == 0)
    {
        return Hata(playerid,"Henüz Zombie baþlamamýþ.");
    }
    HideModelSelectionMenu(playerid);
    ShowPlayerDialog(playerid,17178,DIALOG_STYLE_LIST,""safaf"Zombie Takým Seçimi",""ww"Zombie\n"ww"Human\n",""ww"Seç",""ww"Ýptal");
    return true;
}

CMD:zombiebaslat(playerid,params[])
{
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(ZombieActive == 1)
    {
        return Hata(playerid,"Zaten þu anda bir Zombie aktif.");
    }
    ZombieActive = 1;
    ZombieBasladi = 0;
    format(estring,sizeof(estring),"~r~~h~[ZOMBIE] ~w~~h~~h~Zombie az sonra baslayacak! ~r~~h~(/zombie)");
    TextMesaji(code(estring));
    SetTimer("ZombieTekrarla",15000,false);
    SetTimer("ZombieKatilimBitir",30000,false);
    return true;
}

stock OnlineInsan()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Zombiede[i] == 1 && ZombieTeamHuman[i] == 1)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineZombie()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Zombiede[i] == 1 && ZombieTeamZombie[i] == 1)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineToplamZombie()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Zombiede[i] == 1)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineSpeedyDeagle()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Speedydeaglede[i] == true)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineYaris()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(Yarista[i] == true)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineLabirent()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(InfoLabyrinth[i][playerlost])
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineHungerGame()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(HungerGamede[i] == 1)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineCS()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(CSDe[i] == 1)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

stock OnlineGunGame()
{
	new
	    o_P = false;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GunGamedeAmk[i] == true)
	        {
				o_P++;
			}
		}
	}
	return o_P;
}

forward Etkinlik_Sayim3(playerid);
public Etkinlik_Sayim3(playerid)
{
	switch(PlayerInfo[playerid][Etkinlik_Sayac])
	{
	    case 0:
		{
			GameTextForPlayer(playerid, "~r~~h~~h~~h~~h~~h~GO!", 1500, 5),PlayerPlaySound(playerid,1057,0.0,0.0,0.0), KillTimer(PlayerInfo[playerid][Etkinlik_Timer]), TogglePlayerControllable(playerid, true),ZombieBasladi = 1;
		}
	    case 1: GameTextForPlayer(playerid, "~r~~h~~h~~h~~h~HAZIR", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 2: GameTextForPlayer(playerid, "~r~~h~~h~~h~1", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 3: GameTextForPlayer(playerid, "~r~~h~~h~2", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 4: GameTextForPlayer(playerid, "~r~~h~3", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 5: GameTextForPlayer(playerid, "~r~~h~4", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
		case 6: GameTextForPlayer(playerid, "~r~5", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	}
	PlayerInfo[playerid][Etkinlik_Sayac]--;
	return true;
}

forward Etkinlik_Sayim4(playerid);
public Etkinlik_Sayim4(playerid)
{
	switch(PlayerInfo[playerid][Etkinlik_Sayac])
	{
	    case 0:
		{
			GameTextForPlayer(playerid, "~r~~h~~h~~h~~h~~h~GO!", 1500, 5),PlayerPlaySound(playerid,1057,0.0,0.0,0.0), KillTimer(PlayerInfo[playerid][Etkinlik_Timer]), TogglePlayerControllable(playerid, true),HungerGameBasladi = 1;
		}
	    case 1: GameTextForPlayer(playerid, "~r~~h~~h~~h~~h~HAZIR", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 2: GameTextForPlayer(playerid, "~r~~h~~h~~h~1", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 3: GameTextForPlayer(playerid, "~r~~h~~h~2", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 4: GameTextForPlayer(playerid, "~r~~h~3", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	    case 5: GameTextForPlayer(playerid, "~r~~h~4", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
		case 6: GameTextForPlayer(playerid, "~r~5", 1500, 5),PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
	}
	PlayerInfo[playerid][Etkinlik_Sayac]--;
	return true;
}

CMD:vote(playerid,params[])
{
    new soru[500];
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(Voteactive == 1)
    {
        return Hata(playerid,"Þu anda zaten bir oylama aktif.");
    }
    if(sscanf(params,"s[500]",soru))
    {
        return Kullanim(playerid,"vote [SORU]");
    }
    Voteactive = 1;
    Yescount = 0;
    Nocount = 0;

    new satir[500];
    format(satir,sizeof(satir),"Yetkili %s yeni bir oylama baslatti.",getName(playerid));
    TextDrawSetString(vote2,satir);
    format(satir,sizeof(satir),"%s",code(soru));
    TextDrawSetString(vote5,satir);
    foreach(new i : Player)
    {
		    new str[128];
		    format(str,sizeof(str),"Evet: %d",Yescount);
		    TextDrawSetString(vote7[i],str);

		    format(str,sizeof(str),"Hayir: %d",Nocount);
		    TextDrawSetString(vote8[i],str);

            OyKullandi[i] = 0;
            Yescount = 0;
            Nocount = 0;
            SFM(i,-1,""safaf"Yetkili %s yeni bir oylama baþlattý. Soru: %s",getName(playerid),soru);
            SCM(i,-1,""safaf"Evet demek için {00ff00}Y, "w"hayýr demek için "wb"N "w"tuþlarýna basabilirsiniz.");
            SCM(i,-1,""safaf"Oylama 35 saniye içinde sona erecektir.");
            TextDrawShowForPlayer(i,vote0);
            TextDrawShowForPlayer(i,vote1);
            TextDrawShowForPlayer(i,vote2);
            TextDrawShowForPlayer(i,vote3);
            TextDrawShowForPlayer(i,vote4);
            TextDrawShowForPlayer(i,vote5);
            TextDrawShowForPlayer(i,vote6);
            TextDrawShowForPlayer(i,vote7[i]);
            TextDrawShowForPlayer(i,vote8[i]);
    }
    SetTimer("Voteyigizle",35000,false);
    return true;
}

forward Voteyigizle();
public Voteyigizle()
{
	new str[500];
	format(str, sizeof str, ""safaf"Oylama sona erdi, sonuçlar: Evet = %d, Hayýr = %i", Yescount, Nocount);
	SendClientMessageToAll(-1, str);
    foreach(new i : Player)
    {
            TextDrawHideForPlayer(i,vote0);
            TextDrawHideForPlayer(i,vote1);
            TextDrawHideForPlayer(i,vote2);
            TextDrawHideForPlayer(i,vote3);
            TextDrawHideForPlayer(i,vote4);
            TextDrawHideForPlayer(i,vote5);
            TextDrawHideForPlayer(i,vote6);
            TextDrawHideForPlayer(i,vote7[i]);
            TextDrawHideForPlayer(i,vote8[i]);
    }
	SetTimer("Votesifirla", 2500, false);
	return true;
}

forward Votesifirla();
public Votesifirla()
{
	Yescount = 0;
	Nocount = 0;
	Voteactive = 0;

	foreach(new i : Player)
	{
		new str[128];
	    format(str,sizeof(str),"Evet: %d",Yescount);
	    TextDrawSetString(vote7[i],str);

	    format(str,sizeof(str),"Hayir: %d",Nocount);
	    TextDrawSetString(vote8[i],str);
	}
}

CMD:zombieayril(playerid,params[])
{

    if(Zombiede[playerid] == 0)
    {
        return Hata(playerid,"Zaten Zombie'de deðilsin.");
    }
    Zombiede[playerid] = 0;
    ZombieTeamHuman[playerid] = 0;
    ZombieTeamZombie[playerid] = 0;
    OnPlayerSpawn(playerid);
    return true;
}

CMD:cs(playerid,params[])
{

    if(CSDe[playerid] == 1)
    {
        return Hata(playerid,"Zaten CS'desin.");
    }
    HideModelSelectionMenu(playerid);
    ShowPlayerDialog(playerid,12384,DIALOG_STYLE_LIST,""safaf"CS Minigame Team Selection",""ww"Counter-Terrorist\n"ww"Terrorist\n",""ww"Seç",""ww"Kapat");
    return true;
}

CMD:gg(playerid, params[]) return cmd_gungame(playerid, "");
CMD:gungame(playerid, params[])
{

	if(GunGamedeAmk[playerid] == true) return Hata(playerid,"Zaten gun game'desin.");
	HideModelSelectionMenu(playerid);
    GunGamedeAmk[playerid] = true;
    GunGameSkor[playerid] = 0;
    switch(random(6))
    {
		case 0: SetPlayerPos(playerid, 1310.3135, 2185.9031, 11.0234);
		case 1: SetPlayerPos(playerid, 1334.8992, 2188.3469, 11.0234);
		case 2: SetPlayerPos(playerid, 1357.5551, 2188.4478, 11.0156);
		case 3: SetPlayerPos(playerid, 1358.9692, 2158.6802, 11.0156);
		case 4: SetPlayerPos(playerid, 1341.2158, 2151.2722, 11.0156);
		case 5: SetPlayerPos(playerid, 1320.0950, 2150.0845, 11.0234);
 	}
 	SetCameraBehindPlayer(playerid);
 	SetPlayerVirtualWorld(playerid, GUN_GAME_WORLD);
 	SetPlayerHealth(playerid, 100.0);
 	SetPlayerArmour(playerid, 100.0);
 	ResetPlayerWeapons(playerid);
 	GivePlayerWeapon(playerid, 22, 500);
 	SetPVarInt(playerid, "GunGameWeap", 22);

	new exname[24];
	GetPlayerName(playerid,exname,24);
    format(estring, sizeof estring, "~r~~h~[GUNGAME] ~w~~h~~h~%s(%i) adli oyuncu GunGame'ye katildi! ~r~~h~(/gungame)", exname, playerid);
    TextMesaji(code(estring));
	return true;
}

CMD:csayril(playerid,params[])
{

    if(CSDe[playerid] == 0)
    {
        return Hata(playerid,"Zaten CS'de deðilsin.");
    }
    CSDe[playerid] = 0;
    CSTeamT[playerid] = 0;
    CSTeamCT[playerid] = 0;
    OnPlayerSpawn(playerid);
    SCM(playerid,-1,""safaf"Baþarýyla CS Minigame'den ayrýldýnýz.");
    return true;
}

CMD:hg(playerid,params[])
{
    if(HungerGamede[playerid] == 1)
    {
        return Hata(playerid,"Zaten Hunger Game'desin.");
    }
    if(HungerGameActive == 0)
    {
        return Hata(playerid,"Þu an aktif bir Hunger Game yok.");
    }
    HideModelSelectionMenu(playerid);
    SetPlayerPos(playerid,385.78561, -3768.30640, 186.87257+2);
    SetPlayerSkin(playerid,230);
    ResetPlayerWeapons(playerid);
    SetPlayerHealth(playerid,100.0);
    SetPlayerArmour(playerid,100.0);
    TogglePlayerControllable(playerid,0);
    SetCameraBehindPlayer(playerid);
    //SetPlayerVirtualWorld(playerid,88);
    SetPlayerVirtualWorld(playerid, 46);
    //SetPlayerVirtualWorld(playerid, 0);
    HungerGamede[playerid] = 1;
    SCM(playerid,-1,""safaf"Hunger Game'ye baþarýyla katýldýnýz. Baþlamasýný bekleyin.");
    format(estring, sizeof estring, "~r~~h~[HG] ~w~~h~~h~%s(%i) adli oyuncu Hunger Games'e katildi! ~r~~h~(/hg)", getName(playerid), playerid);
    TextMesaji(code(estring));
    HideModelSelectionMenu(playerid);
    return true;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{

    if(pickupid == speedyhap1)
	{
	    if(spamProtect(playerid, "speedyhap1", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap2)
	{
	    if(spamProtect(playerid, "speedyhap2", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap3)
	{
	    if(spamProtect(playerid, "speedyhap3", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap4)
	{
	    if(spamProtect(playerid, "speedyhap4", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap5)
	{
	    if(spamProtect(playerid, "speedyhap5", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap6)
	{
	    if(spamProtect(playerid, "speedyhap6", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap7)
	{
	    if(spamProtect(playerid, "speedyhap7", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap8)
	{
	    if(spamProtect(playerid, "speedyhap8", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap9)
	{
	    if(spamProtect(playerid, "speedyhap9", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap10)
	{
	    if(spamProtect(playerid, "speedyhap10", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap11)
	{
	    if(spamProtect(playerid, "speedyhap11", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	}

	if(pickupid == speedyhap12)
	{
	    if(spamProtect(playerid, "speedyhap12", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap13)
	{
	    if(spamProtect(playerid, "speedyhap13", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap14)
	{
	    if(spamProtect(playerid, "speedyhap14", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap15)
	{
	    if(spamProtect(playerid, "speedyhap15", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap16)
	{
	    if(spamProtect(playerid, "speedyhap16", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap17)
	{
	    if(spamProtect(playerid, "speedyhap17", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap18)
	{
	    if(spamProtect(playerid, "speedyhap18", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap19)
	{
	    if(spamProtect(playerid, "speedyhap19", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap20)
	{
	    if(spamProtect(playerid, "speedyhap20", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);

	}

	if(pickupid == speedyhap21)
	{
	    if(spamProtect(playerid, "speedyhap21", 15))
	    {
	        return Hata(playerid, "Bu pickupu 15 saniye aralýkla alabilirsiniz.");
	    }
	    new Float:Velocity[3];
	    GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
	}

    if(pickupid == pick1)
    {
    	if(spamProtect(playerid,"pick1",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick2)
    {
    	if(spamProtect(playerid,"pick2",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick3)
    {
    	if(spamProtect(playerid,"pick3",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick4)
    {
    	if(spamProtect(playerid,"pick4",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick5)
    {
    	if(spamProtect(playerid,"pick5",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick6)
    {
    	if(spamProtect(playerid,"pick6",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick7)
    {
    	if(spamProtect(playerid,"pick7",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick8)
    {
    	if(spamProtect(playerid,"pick8",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick9)
    {
    	if(spamProtect(playerid,"pick9",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick10)
    {
    	if(spamProtect(playerid,"pick10",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick11)
    {
    	if(spamProtect(playerid,"pick11",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick12)
    {
    	if(spamProtect(playerid,"pick12",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick13)
    {
    	if(spamProtect(playerid,"pick13",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick14)
    {
    	if(spamProtect(playerid,"pick14",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick15)
    {
    	if(spamProtect(playerid,"pick15",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick16)
    {
    	if(spamProtect(playerid,"pick16",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick17)
    {
    	if(spamProtect(playerid,"pick17",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick18)
    {
    	if(spamProtect(playerid,"pick18",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick19)
    {
    	if(spamProtect(playerid,"pick19",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick20)
    {
    	if(spamProtect(playerid,"pick20",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick21)
    {
    	if(spamProtect(playerid,"pick21",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick22)
    {
    	if(spamProtect(playerid,"pick22",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
    if(pickupid == pick23)
    {
    	if(spamProtect(playerid,"pick23",40))
	{
	    return true;
	}
        switch(random(5))
        {
            case 0:
            {
                GivePlayerWeapon(playerid,24,17);
                GameTextForPlayer(playerid,"~g~DEAGLE!",2500,4);
            }
            case 1:
            {
                GivePlayerWeapon(playerid,34,17);
                GameTextForPlayer(playerid,"~g~SNIPER!",2500,4);
            }
            case 2:
            {
                SetPlayerHealth(playerid,100.0);
                GameTextForPlayer(playerid,"~g~CAN!",2500,4);
            }
            case 3:
            {
                SetPlayerArmour(playerid,100.0);
                GameTextForPlayer(playerid,"~g~ZIRH",2500,4);
            }
            case 4:
            {
                GivePlayerWeapon(playerid,16,1);
                GameTextForPlayer(playerid,"~g~BOMBA!",2500,4);
            }
        }
    }
	return true;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{

    if(pickupid == Banka)
    {
		ShowPlayerDialog(playerid, DIALOG_BANKA, DIALOG_STYLE_LIST, ""safaf"Banka", ""ww"Para Yatýr\n"ww"Para Çek\n"ww"Hesap Bilgisi", ""ww"Seç", ""ww"Kapat");
	}

	return true;
}

CMD:hgbaslat(playerid,params[])
{

	if(PlayerInfo[playerid][dLevel] < 10)
	{
		return YETERSIZSEVIYE(playerid,10);
	}
	if(HungerGameActive == 1)
	{
	    return Hata(playerid,"Zaten bir hunger game atkif.");
	}
	SetTimer("HungerGameBaslat",1,false);
	return true;
}

forward yenispawnsilahlar(playerid);
public yenispawnsilahlar(playerid)
{
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid,GetPVarInt(playerid,"spawnsilah1"),5000);
    GivePlayerWeapon(playerid,GetPVarInt(playerid,"spawnsilah2"),5000);
    GivePlayerWeapon(playerid,GetPVarInt(playerid,"spawnsilah3"),5000);
    GivePlayerWeapon(playerid,GetPVarInt(playerid,"spawnsilah4"),5000);
}

CMD:ggayril(playerid, params[]) return cmd_gungameayril(playerid, "");
CMD:gungameayril(playerid,params[])
{
	if(GunGamedeAmk[playerid] == true)
	{
        GunGamedeAmk[playerid] = false;
        GunGameSkor[playerid] = 0;

        SetPlayerVirtualWorld(playerid, 0);
        OnPlayerSpawn(playerid);

        SCM(playerid,-1,""safaf"Baþarýyla gun game'den ayrýldýn.");
   	} else return Hata(playerid,"Zaten gun game'de deðilsin.");
   	return true;
}

CMD:offnban(playerid,params[])
{
    new isim[250], gun, sbp[256];
    if(PlayerInfo[playerid][dLevel] < 5)
    {
        return YETERSIZSEVIYE(playerid,5);
    }
	if(sscanf(params,"s[250]ds[256]",isim, gun, sbp))
	{
	    return Kullanim(playerid,"offnban [OYUNCU ÝSMÝ] [GÜN] [SEBEP]");
	}
	if(!strcmp(isim,"Lordax",true) || !strcmp(isim,"flareoNNN",true) || !strcmp(isim,"Alper.",true))
	{
	    return Hata(playerid,"Bu isime name-ban atamazsýnýz.");
	}
	if(gun < 0 || gun > 365)
	{
		return Hata(playerid, "En az 1, en fazla 365 gün nban atabilirsiniz.");
	}
	new	Querys[1024];
	format(Querys, sizeof(Querys), "SELECT * FROM oyuncular WHERE kullaniciadi = '%s'", isim);
	mysql_query(mysqlC, Querys);
	if(cache_num_rows() == 0)
	{
		Hata(playerid,"Kayýtlarda böyle birisi bulunamadý.");
		return true;
	}

	new bul = GetPlayerID(isim);
	if(IsPlayerConnected(bul)) return Hata(playerid, "Oyuncu zaten oyunda.");

	format(estring, 256, "UPDATE `oyuncular` SET bannedxd = '1' WHERE `kullaniciadi` = '%s'", isim);
	mysql_query(mysqlC, estring);

	new	Querya[1024];
	format(Querya, sizeof(Querya), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", isim);
	mysql_query(mysqlC, Querya);
	if(cache_num_rows() > 0){
			new moddataa3[500];
			new savingstring3[500];
			cache_get_value_name(0, "kullaniciadi",savingstring3);format(moddataa3,sizeof(moddataa3),"%s",savingstring3);
			SFM(playerid,-1,""safaf"%s isimli oyuncuya baþarýyla name ban attýnýz.",moddataa3);
			new savingstring[50];
			new ipsi[50];
			new Query[2048];
			cache_get_value_name(0, "IP",savingstring);format(ipsi,sizeof(ipsi),"%s",savingstring);
			format(Query, 2048, "INSERT INTO `nbanlog`(`oyuncu`, `ip`, `admin`,`sebep`,`zaman`,`sure`,`sure2`) VALUES('%s',('%s'), '%s', '%s', '%s', '%d', '%d')", moddataa3, ipsi,getName(playerid),sbp,TarihCek(), gettime() + gun * 86400, gun);
			mysql_query(mysqlC,Query);
			format(estring,sizeof(estring),"~r~~h~[OFF-N-Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan offline N-Banlandi. (%i gun)",moddataa3,getName(playerid),playerid,gun);
	}
	TextMesaji(code(estring));
	return true;
}

CMD:offban(playerid,params[])
{

	new nick[256];
	new Query[1024];
	new sbp[256];
	if(PlayerInfo[playerid][dLevel] < 5)
	{
		return YETERSIZSEVIYE(playerid,5);
	}
	if(sscanf(params,"s[256]s[256]",nick,sbp))
	{
		return Kullanim(playerid,"offban [OYUNCU ÝSMÝ] [SEBEP]");
	}
	if(!strcmp(nick,"Lordax",true) || !strcmp(nick,"flareoNNN",true) || !strcmp(nick,"Alper.",true))
	{
	    return Hata(playerid,"Bu isime ip-ban atamazsýnýz.");
	}
	new	Querys[1024];
	format(Querys, sizeof(Querys), "SELECT * FROM oyuncular WHERE kullaniciadi = '%s'", nick);
	mysql_query(mysqlC, Querys);
	if(cache_num_rows() == 0)
	{
		Hata(playerid,"Kayýtlarda böyle birisi bulunamadý.");
		return true;
	}
	new bul = GetPlayerID(nick);
	if(IsPlayerConnected(bul)) return Hata(playerid, "Oyuncu zaten oyunda.");
	new	Querya[1024];
	format(Querya, sizeof(Querya), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", nick);
	mysql_query(mysqlC, Querya);
	if(cache_num_rows() > 0){
			new moddataa[50];
			new moddataa3[500];
			new savingstring[50];
			cache_get_value_name(0, "IP",savingstring);format(moddataa,sizeof(moddataa),"%s",savingstring);
			new savingstring3[500];
			cache_get_value_name(0, "kullaniciadi",savingstring3);format(moddataa3,sizeof(moddataa3),"%s",savingstring3);
			format(Query, sizeof(Query), "INSERT INTO `banlog`(`ip`, `player`, `times`,`admin`,`sebep`) VALUES('%s',('%s'), '%s', '%s', '%s')", moddataa, moddataa3,TarihCek(),getName(playerid),sbp);
			mysql_query(mysqlC,Query);
			SFM(playerid,-1,""safaf"%s isimli oyuncuya baþarýyla ip ban attýnýz.",moddataa3);
			format(estring,sizeof(estring),"~r~~h~[OFF-Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan offline banlandi.",moddataa3,getName(playerid),playerid);
	}
	TextMesaji(code(estring));
	return true;
}

CMD:offsban(playerid,params[])
{
	new nick[256];
	new Query[1024];
	new sbp[256];
	if(PlayerInfo[playerid][dLevel] < 8)
	{
		return YETERSIZSEVIYE(playerid,8);
	}
	if(sscanf(params,"s[256]s[256]",nick,sbp))
	{
		return Kullanim(playerid,"offsban [OYUNCU ÝSMÝ] [SEBEP]");
	}
	if(!strcmp(nick,"Lordax",true) || !strcmp(nick,"flareoNNN",true) || !strcmp(nick,"Alper.",true))
	{
	    return Hata(playerid,"Bu isime s-ban atamazsýnýz.");
	}
	new	Querys[1024];
	format(Querys, sizeof(Querys), "SELECT * FROM oyuncular WHERE kullaniciadi = '%s'", nick);
	mysql_query(mysqlC, Querys);
	if(cache_num_rows() == 0)
	{
		Hata(playerid,"Kayýtlarda böyle birisi bulunamadý.");
		return true;
	}
	new bul = GetPlayerID(nick);
	if(IsPlayerConnected(bul)) return Hata(playerid, "Oyuncu zaten oyunda.");
	new	Querya[1024];
	format(Querya, sizeof(Querya), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", nick);
	mysql_query(mysqlC, Querya);
	if(cache_num_rows() > 0){
			new moddataa[500];
			new moddataa2[500];
			new moddataa3[500];
			new savingstring[500];
			cache_get_value_name(0, "Serial",savingstring);format(moddataa,sizeof(moddataa),"%s",savingstring);
			new savingstring2[500];
			cache_get_value_name(0, "IP",savingstring2);format(moddataa2,sizeof(moddataa2),"%s",savingstring2);
			new savingstring3[500];
			cache_get_value_name(0, "kullaniciadi",savingstring3);format(moddataa3,sizeof(moddataa3),"%s",savingstring3);
			format(Query, sizeof(Query), "INSERT INTO `sbanlog`(`serial`, `name`, `time`, `playerip`,`admin`,`sebep`) VALUES('%s',('%s'), '%s', '%s', '%s','%s')", moddataa, moddataa3,TarihCek(),savingstring2,getName(playerid),sbp);
			mysql_query(mysqlC, Query);
			SFM(playerid,-1,""safaf"%s isimli oyuncuya baþarýyla serial ban attýnýz.",moddataa3);
			format(estring,sizeof(estring),"~r~~h~[OFF-S-Banlandi] ~w~~h~~h~Oyuncu ~r~~h~%s ~w~~h~~h~yetkili ~r~~h~%s(%i) ~w~~h~~h~tarafindan offline S-Banlandi.",moddataa3,getName(playerid),playerid);
	}
	TextMesaji(code(estring));
	return true;
}

CMD:kodekle(playerid,params[])
{

    new skor,para,kod[25];
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(sscanf(params,"iis[50]",skor,para,kod))
    {
        return Kullanim(playerid,"kodekle [ÖDÜL SKORU] [ÖDÜL PARASI] [KOD]");
    }
    new dosya[100];
    format(dosya,sizeof(dosya),"Dark/HediyeKodlari/%s.ini",kod);
    if(dini_Exists(dosya))
    {
        return Hata(playerid,"Böyle bir kod zaten mevcut.");
    }
    if(strlen(kod) > 25)
    {
        return Hata(playerid,"En fazla 25 karakterlik bir kod girebilirsiniz.");
    }
    if(!dini_Exists(dosya))
    {
        dini_Create(dosya);
        dini_IntSet(dosya,"skor",skor);
        dini_IntSet(dosya,"para",para);
        dini_Set(dosya,"kod",kod);
        dini_IntSet(dosya,"kullanildi",0);
    }
    SFM(playerid,-1,""safaf"%s isimli kodu baþarýyla oluþturdunuz.",kod);
    SFM(playerid,-1,""safaf"Kod girildiðinde verilecek ödül: %i skor ve $%d.",skor,para);
    return true;
}

CMD:kodgir(playerid,params[])
{

    new kod[50];
    if(sscanf(params,"s[25]",kod))
    {
        return Kullanim(playerid,"kodgir [KODUNUZ]");
    }
    if(strlen(kod) > 25)
    {
        return Hata(playerid,"En fazla 25 karakterlik bir kod girebilirsiniz.");
    }
    new dosya[100];
    format(dosya,sizeof(dosya),"Dark/HediyeKodlari/%s.ini",kod);
    if(!dini_Exists(dosya))
    {
        return Hata(playerid,"Böyle bir kod mevcut deðil.");
    }
    new kullanildimi;
    kullanildimi = dini_Int(dosya,"kullanildi");
    if(kullanildimi == 1)
    {
        return Hata(playerid,"Bu kodu sizden önce bir kiþi kullanmýþ.");
    }
    new para = dini_Int(dosya,"para");
    new skor = dini_Int(dosya,"skor");
    SetPlayerScore(playerid,GetPlayerScore(playerid)+skor);
    GivePlayerMoney(playerid,para);
    dini_IntSet(dosya,"kullanildi",1);
    SFM(playerid,-1,""safaf"Kodu baþarýyla kullandýnýz. Ödülünüz: %i skor ve $%d.",para,skor);
    return true;
}

CMD:kodsil(playerid,params[])
{

    new kod[25];
    if(PlayerInfo[playerid][dLevel] < 10)
    {
        return YETERSIZSEVIYE(playerid,10);
    }
    if(sscanf(params,"s[25]",kod))
    {
        return Kullanim(playerid,"kodsil [KOD]");
    }
    if(strlen(kod) > 25)
    {
        return Hata(playerid,"En fazla 25 karakterlik bir kod girebilirsiniz.");
    }
    new dosya[100];
    format(dosya,sizeof(dosya),"Dark/HediyeKodlari/%s.ini",kod);
    if(!dini_Exists(dosya))
    {
        return Hata(playerid,"Böyle bir kod zaten yok.");
    }
    if(dini_Exists(dosya))
    {
        dini_Remove(dosya);
    }
    SFM(playerid,-1,""safaf"%s isimli kodu baþarýyla sildiniz.",kod);
    return true;
}

public OnPlayerClickMap(playerid, Float: fX, Float: fY, Float: fZ)
{
    if(GunGamedeAmk[playerid] != true && lEtkinlikte[playerid] == 0 && lKatildim[playerid] == 0 && dmyasagi[playerid] == 0 && HungerGamede[playerid] == 0 && CSDe[playerid] == 0 && Derbyde[playerid] == false && Speedydeaglede[playerid] == false && Zombiede[playerid] == 0 && PlayerInfo[playerid][Jailed] == 0 && (PlayerInfo[playerid][dLevel] > 0))
    {
        SetPlayerPV(playerid, fX, fY, fZ);
    }
    return true;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(clickedid == Text:INVALID_TEXT_DRAW)
	{
	    if(GetPVarInt(playerid, "credits") == 1)
	    {
			TextDrawHideForPlayer(playerid, CreditsText0);
			TextDrawHideForPlayer(playerid, CreditsText1);
			TextDrawHideForPlayer(playerid, CreditsText2);
			TextDrawHideForPlayer(playerid, CreditsText3);
			TextDrawHideForPlayer(playerid, CreditsText4);
			TextDrawHideForPlayer(playerid, CreditsText5);
			TextDrawHideForPlayer(playerid, CreditsText6);
			TextDrawHideForPlayer(playerid, CreditsText7);
			TextDrawHideForPlayer(playerid, CreditsText8);
			TextDrawHideForPlayer(playerid, CreditsText9);
			TextDrawHideForPlayer(playerid, CreditsText10);
			TextDrawHideForPlayer(playerid, CreditsText11);
			TextDrawHideForPlayer(playerid, CreditsText12);
			TextDrawHideForPlayer(playerid, CreditsText13);
			TextDrawHideForPlayer(playerid, CreditsText14);
			TextDrawHideForPlayer(playerid, CreditsText15);
			TextDrawHideForPlayer(playerid, CreditsText16);
			TextDrawHideForPlayer(playerid, CreditsText17);
			TextDrawHideForPlayer(playerid, CreditsText18);
			TextDrawHideForPlayer(playerid, CreditsText19);
			TextDrawHideForPlayer(playerid, CreditsText20);
			TextDrawHideForPlayer(playerid, CreditsText21);
			TextDrawHideForPlayer(playerid, CreditsText22);
			TextDrawHideForPlayer(playerid, CreditsText23);
			SetPVarInt(playerid, "credits", 0);
		}
		return true;
	}

    if(clickedid == CreditsText23)
    {
         TextDrawHideForPlayer(playerid, CreditsText0);
         TextDrawHideForPlayer(playerid, CreditsText1);
         TextDrawHideForPlayer(playerid, CreditsText2);
         TextDrawHideForPlayer(playerid, CreditsText3);
         TextDrawHideForPlayer(playerid, CreditsText4);
         TextDrawHideForPlayer(playerid, CreditsText5);
         TextDrawHideForPlayer(playerid, CreditsText6);
         TextDrawHideForPlayer(playerid, CreditsText7);
         TextDrawHideForPlayer(playerid, CreditsText8);
         TextDrawHideForPlayer(playerid, CreditsText9);
         TextDrawHideForPlayer(playerid, CreditsText10);
         TextDrawHideForPlayer(playerid, CreditsText11);
         TextDrawHideForPlayer(playerid, CreditsText12);
         TextDrawHideForPlayer(playerid, CreditsText13);
         TextDrawHideForPlayer(playerid, CreditsText14);
         TextDrawHideForPlayer(playerid, CreditsText15);
         TextDrawHideForPlayer(playerid, CreditsText16);
         TextDrawHideForPlayer(playerid, CreditsText17);
         TextDrawHideForPlayer(playerid, CreditsText18);
         TextDrawHideForPlayer(playerid, CreditsText19);
         TextDrawHideForPlayer(playerid, CreditsText20);
         TextDrawHideForPlayer(playerid, CreditsText21);
         TextDrawHideForPlayer(playerid, CreditsText22);
         TextDrawHideForPlayer(playerid, CreditsText23);
         CancelSelectTextDraw(playerid);
         SetPVarInt(playerid, "credits", 0);
         return true;
    }
    return false;
}

stock SendClientMessageToAllEx(color, const text[], darabolas = 142)
{
	new seged1[148 + 1], valami = 0 - darabolas, lenght = strlen(text);

	while(lenght > (valami += darabolas))
	{
		strmid(seged1, text[valami], 0, darabolas), SendClientMessageToAll(color, seged1);
	}
}

stock SendClientMessageEx(playerid, color, const text[], darabolas = 155)
{
	new seged1[148 + 1], valami = 0 - darabolas, lenght = strlen(text);

	while(lenght > (valami += darabolas))
	{
		strmid(seged1, text[valami], 0, darabolas), SendClientMessage(playerid, color, seged1);
	}
}

CMD:herkeseglkrediver(playerid,params[])
{
	new miktar,sebep[250];
	if(PlayerInfo[playerid][dLevel] < 10)
	{
		return YETERSIZSEVIYE(playerid,10);
	}
	if(sscanf(params,"is[250]",miktar,sebep))
	{
	    return Kullanim(playerid,"herkeseglkrediver [MÝKTAR] [NOTUNUZ]");
	}
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        new x;
	        x = PlayerInfo[i][GLKredi];
	        PlayerInfo[i][GLKredi] = x+miktar;
	        sesver(i);
	    }
	}
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~butun oyunculara ~r~~h~%s ~w~~h~~h~GLKredi verdi. ~r~~h~Notu: ~w~~h~~h~%s",getName(playerid),playerid,FormatMoney(miktar),code(sebep));
	TextMesaji(code(estring));
	return true;
}

CMD:herkeseexpver(playerid,params[])
{
	new miktar,not[250];
	if(PlayerInfo[playerid][dLevel] < 10)
	{
		return YETERSIZSEVIYE(playerid,10);
	}
	if(sscanf(params,"is[250]",miktar,not))
	{
	    return Kullanim(playerid,"herkeseexpver [MÝKTAR] [NOTUNUZ]");
	}
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        expver(i, miktar);
	        sesver(i);
	    }
	}
	format(estring,sizeof(estring),"~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~butun oyunculara ~r~~h~%s ~w~~h~~h~EXP verdi. ~r~~h~Notu: ~w~~h~~h~%s",getName(playerid),playerid,FormatMoney(miktar),code(not));
	TextMesaji(code(estring));
	return true;
}

CMD:hgayril(playerid,params[])
{

	if(HungerGamede[playerid] == 0)
	{
		return Hata(playerid,"Zaten Hunger Game'de deðilsin.");
	}
	SetPlayerVirtualWorld(playerid,0);
    HungerGamede[playerid] = 0;
    OnPlayerSpawn(playerid);
    SCM(playerid,-1,""safaf"Baþarýyla Hunger Game'den ayrýldýnýz.");
	return true;
}

CMD:testet(playerid,params[])
{

    if(IsPlayerInArea(playerid,194.2813,-60.3618,221.3370,-33.3093)) return SCM(playerid,-1,"yes");
	return true;
}

IsPlayerInArea(playerid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY)
{
	new Float:X, Float:Y, Float:Z;

	GetPlayerPos(playerid, X, Y, Z);
	if(X >= MinX && X <= MaxX && Y >= MinY && Y <= MaxY) {
		return true;
	}
	return false;
}

forward rasgelemesaj();
public rasgelemesaj()
{
	switch(random(16))
	{
	    case 0:
	    {
	        new str[1024];
	        format(str,sizeof(str),"{ff00ff}GamerLity Bot » "w"Resmi ve tek forum adresimiz: "wb"forum.gamerlity.com"w"'dur. Klon sunuculara "wb"itibar etmeyiniz.");
	        SendClientMessageToAll(-1,str);
	    }
	    case 1:
	    {
	        new str[1024];
	        format(str,sizeof(str),"{ff00ff}GamerLity Bot » "wb"/games "w"yazarak mevcut minigamelerimize bakabilirsiniz.");
	        SendClientMessageToAll(-1,str);
	    }
	    case 2:
	    {
	        new str[1024];
	        format(str,sizeof(str),"{ff00ff}GamerLity Bot » "w"Resmi ve tek IP adresimiz: "wb"185.136.204.156:7777. "wb"Favorilere eklemeyi unutmayýn!");
	        SendClientMessageToAll(-1,str);
	    }
	    case 3:
	    {
	        new str[1024];
	        format(str,sizeof(str),"{ff00ff}GamerLity Bot » "wb"/banka "w"yazarak yatýrým yapabilirsiniz.");
	        SendClientMessageToAll(-1,str);
	    }
	    case 4:
	    {
	        new str[1024];
	        format(str,sizeof(str),"{ff00ff}GamerLity Bot » "w"Counter strike minigamesini denemedin mi? "wb"/cs "w"yazda eðlen biraz!");
	        SendClientMessageToAll(-1,str);
	    }
	    case 5:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Spawn olduðunuzda verilecek silahlarýnýzý ayarlamak için "wb"/spawnsilahlari "w"yazabilirsiniz.");
	        SendClientMessageToAll(-1, str);
	    }
	    case 6:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Ýstek etkinliklerinizi "wb"/etkistek "w"ile bildirebilirsiniz.");
	        SendClientMessageToAll(-1, str);
	    }
	    case 7:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Ýstek þarkýlarýnýzý "wb"/isteksarki "w"ile bildirebilirsiniz.");
	        SendClientMessageToAll(-1, str);
	    }
	    case 8:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Bulduðunuz buglarý "wb"/bugrapor "w"ile bildirebilirsiniz.");
	        SendClientMessageToAll(-1, str);
	    }
	    case 9:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Öneri, istek veya þikayetlerinizi "wb"/oneri "w"ile bildirebilirsiniz.");
	        SendClientMessageToAll(-1, str);
	    }
	    case 10:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Bir hileciye rastlarsanýz "wb"/rapor "w"ile bildirebilirsiniz.");
	        SendClientMessageToAll(-1, str);
	    }
	    case 11:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Sunucumuzun en iyilerini görmek için "wb"/toplist "w"yazabilirsiniz!");
	        SendClientMessageToAll(-1, str);
	    }
	    case 12:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"A/D sunucumuza uðramayý unutmayýn! "wb"IP Adresi: 185.136.204.156:8888");
	        SendClientMessageToAll(-1, str);
	    }
	    case 13:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Birbirinden güzel eðlenceli maplar için "wb"/teles "w"yaz!");
	        SendClientMessageToAll(-1, str);
	    }
	    case 14:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Bitcoin piyasasýný takip etmelisin! "wb"/btc");
	        SendClientMessageToAll(-1, str);
	    }
	    case 15:
	    {
	        new str[1024];
	        format(str, sizeof(str), "{ff00ff}GamerLity Bot » "w"Arkadaþ listeni oluþturarak istediðin zaman yanlarýna gidebilirsin! "wb"/arkadaslarim");
	        SendClientMessageToAll(-1, str);
	    }
	}
	return true;
}

CB: labeltimer()
{
	foreach(new playerid: Player)
	{
		if(GetPlayerState(playerid) == 2)
		{
            new Float:vx, Float:vy, Float:vz, Float:vel, total_speed;
            vel = GetVehicleVelocity(GetPlayerVehicleID(playerid), vx, vy, vz);
            vel = (floatsqroot(((vx * vx) + (vy * vy)) + (vz * vz)) * 181.5);
            new YourInteger = floatround(vel, floatround_round);
			//total_speed = YourInteger / 8;
			new za = GetVehicleMaxSpeed(GetVehicleModel(GetPlayerVehicleID(playerid))) / 29;
			total_speed = YourInteger / za;
			for(new i = 0; i < sizeof(GostergeText); i++)
			{
				if(i < total_speed)
				{
					TextDrawColor(GostergeText[i], GostergeRenkleri[i]);
				} else {
					TextDrawColor(GostergeText[i], 0x66666644);
				}
				TextDrawShowForPlayer(playerid, GostergeText[i]);
			}
            new str_hiz[50];
            if(YourInteger < 50)
            {
            	format(str_hiz, sizeof(str_hiz), "~g~~h~%d ~w~~h~~h~km/h", YourInteger);
           	}
           	else if(YourInteger > 50 && YourInteger < 100)
            {
            	format(str_hiz, sizeof(str_hiz), "~y~~h~%d ~w~~h~~h~km/h", YourInteger);
           	}
           	else if(YourInteger > 100 && YourInteger < 150)
            {
            	format(str_hiz, sizeof(str_hiz), "~p~~h~%d ~w~~h~~h~km/h", YourInteger);
           	}
           	else if(YourInteger > 150)
            {
            	format(str_hiz, sizeof(str_hiz), "~r~~h~%d ~w~~h~~h~km/h", YourInteger);
           	}
            TextDrawSetString(GostergeAsilHiz[playerid], str_hiz);
		}
	}
	return true;
}

forward bool: IsPlayerMoving(playerid);
stock bool: IsPlayerMoving(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new Float:Velocity[3];
		GetVehicleVelocity(GetPlayerVehicleID(playerid), Velocity[0], Velocity[1], Velocity[2]);
		if(Velocity[0] == 0 && Velocity[1] == 0 && Velocity[2] == 0) return false;
		return true;
	}
	new Float:Velocity[3];
	GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
	if(Velocity[0] == 0 && Velocity[1] == 0 && Velocity[2] == 0) return false;
	return true;
}

CMD:setcolor(playerid, params[])
{

	new id;
	new renk;
	if(PlayerInfo[playerid][dLevel] < 6)
	{
	    return YETERSIZSEVIYE(playerid,6);
	}
	if(sscanf(params,"ii",id,renk))
	{
	    return Kullanim(playerid,"setcolor [ÝD] [RENK]"),SCM(playerid,-1,""safaf"Renkler: 1=beyaz 2=siyah 3=kýrmýzý 4=yeþil 5=sarý 6=turuncu");
	}
	if(renk < 0 || renk > 6)
	{
	    return Hata(playerid,"Renk deðeri en az 0, en fazla 6 olabilir.");
	}
	switch(renk)
	{
	    case 1:
	    {
	        SetPlayerColor(id,COLOR_WHITE);
	        SFM(playerid,-1,""safaf"%s(%d) isimli oyuncunun rengini beyaz yaptýnýz.",getName(id),id);
	        SFM(id,-1,""safaf"Yetkili %s(%i) rengini beyaz yaptý.",getName(playerid),playerid);
	    }
	    case 2:
	    {
	        SetPlayerColor(id,COLOR_BLACK);
	        SFM(playerid,-1,""safaf"%s(%d) isimli oyuncunun rengini siyah yaptýnýz.",getName(id),id);
	        SFM(id,-1,""safaf"Yetkili %s(%i) rengini siyah yaptý.",getName(playerid),playerid);
	    }
	    case 3:
	    {
	        SetPlayerColor(id,COLOR_RED);
	        SFM(playerid,-1,""safaf"%s(%d) isimli oyuncunun rengini kýrmýzý yaptýnýz.",getName(id),id);
	        SFM(id,-1,""safaf"Yetkili %s(%i) rengini kýrmýzý yaptý.",getName(playerid),playerid);
	    }
	    case 4:
	    {
	        SetPlayerColor(id,COLOR_GREEN);
	        SFM(playerid,-1,""safaf"%s(%d) isimli oyuncunun rengini yeþil yaptýnýz.",getName(id),id);
	        SFM(id,-1,""safaf"Yetkili %s(%i) rengini yeþil yaptý.",getName(playerid),playerid);
	    }
	    case 5:
	    {
	        SetPlayerColor(id,COLOR_YELLOW);
	        SFM(playerid,-1,""safaf"%s(%d) isimli oyuncunun rengini sarý yaptýnýz.",getName(id),id);
	        SFM(id,-1,""safaf"Yetkili %s(%i) rengini sarý yaptý.",getName(playerid),playerid);
	    }
	    case 6:
	    {
	        SetPlayerColor(id,COLOR_ORANGE);
	        SFM(playerid,-1,""safaf"%s(%d) isimli oyuncunun rengini turuncu yaptýnýz.",getName(id),id);
	        SFM(id,-1,""safaf"Yetkili %s(%i) rengini turuncu yaptý.",getName(playerid),playerid);
	    }
	}
	return true;
}

CMD:setname(playerid, params[])
{

	new id, newname[250], eskiisim[250];
	if(PlayerInfo[playerid][dLevel] < 7)
	{
	    return YETERSIZSEVIYE(playerid, 7);
	}
	if(sscanf(params, "is[250]", id, newname))
	{
	    return Kullanim(playerid, "setname [ÝD] [YENÝ ÝSÝM]");
	}
	if(!IsPlayerConnected(id))
	{
	    return Hata(playerid, "Oyuncu oyunda deðil.");
	}
	if(!strcmp(getName(id), "flareoNNN") || !strcmp(getName(id), "Alper.") || !strcmp(getName(id), "Lordax"))
	{
	    return Hata(playerid, "Bu komutu bu kiþi üzerinde kullanamazsýnýz.");
	}
	if(!strcmp(newname,"flareoNNN") || !strcmp(newname,"Alper.") || !strcmp(newname,"Lordax"))
	{
	    return Hata(playerid, "Bu isimi kullanamazsýnýz.");
	}
	if(nickkontrol(newname) != 0)
	{
		format(eskiisim, sizeof(eskiisim), "%s", getName(id));
		if((3 < strlen(newname) < 25) && SetPlayerName(id, newname) == 1)
		{
			if(PlayerInfo[id][dukkanivar] != -1)
		    {
				DukkanLabelGuncelle(PlayerInfo[id][dukkanivar]);
		    }

			if(PlayerData[id][Homes][0] != -1)
			{
				format(HouseData[PlayerData[id][Homes][0]][Owner], 24, newname);
				foreach(new x: Houses)
				{
				    SaveHouse(x);
				}
				SaveAllCars();
				UpdateEntrance(PlayerData[id][Homes][0]);
		    }

			new expkda[100];
			format(expkda,sizeof(expkda),"Dark/OyuncuBilgileri/%s.txt",getName(id));
	        dini_Create(expkda);
	        dini_IntSet(expkda,"SpawnSilahiSecti",SpawnSilahiSecti[id]);
	        dini_IntSet(expkda,"spawnsilah1",GetPVarInt(id,"spawnsilah1"));
	        dini_IntSet(expkda,"spawnsilah2",GetPVarInt(id,"spawnsilah2"));
	        dini_IntSet(expkda,"spawnsilah3",GetPVarInt(id,"spawnsilah3"));
	        dini_IntSet(expkda,"spawnsilah4",GetPVarInt(id,"spawnsilah4"));
	        dini_IntSet(expkda,"sarkisayim",sarkisayim[id]);
	        
			format(estring, sizeof(estring), "UPDATE `oyuncular` SET `kullaniciadi` = '%s' WHERE `kullaniciadi` = '%s'", newname, eskiisim);
			mysql_query(mysqlC, estring);
			SFM(playerid, -1, ""safaf"%s(%i) isimli oyuncunun ismini %s olarak deðiþtirdiniz.", eskiisim, id, newname);
			SFM(id, -1, ""safaf"Yetkili %s(%i) senin ismini %s olarak deðiþtirdi.", getName(playerid), playerid, newname);
		} else Hata(playerid, "Nick en az 3, en fazla 25 karakter olabilir ve özel karakter içermemelidir!");
	} else Hata(playerid, "Bu nick baþkasý tarafýndan kullanýlýyor!");
	return true;
}

CMD:fiyatlar(playerid, params[])
{
	new dialogstr[10000];
	strcat(dialogstr, "{FFFFFF}\\cSPONSOR FÝYATLARI\n\n");
	strcat(dialogstr, ""ww"Sponsor: Aylýk 60 TL\n");
	strcat(dialogstr, ""ww"SPONSOR ÝLE ÝLGÝLÝ DETAYLI BÝLGÝLER FORUMDA.\n\n");
	strcat(dialogstr, ""ww"=========================================\n\n");
	strcat(dialogstr, "\\cOYUN GÖREVLÝSÝ FÝYATLARI\n\n");
	strcat(dialogstr, ""ww"1 Level: Aylýk 15 TL\n");
	strcat(dialogstr, ""ww"2 Level: Aylýk 20 TL\n");
	strcat(dialogstr, ""ww"3 Level: Aylýk 25 TL\n");
	strcat(dialogstr, ""ww"4 Level: Aylýk 30 TL\n");
	strcat(dialogstr, ""ww"5 Level: Aylýk 35 TL\n");
	strcat(dialogstr, ""ww"6 Level: Aylýk 40 TL\n\n");
	strcat(dialogstr, ""ww"=========================================\n\n");
	strcat(dialogstr, ""ww"NOT: Özel bir teklif sunmak için ÜST YÖNETÝM ile irtibata geçebilirsiniz!\n");
	strcat(dialogstr, ""ww"NOT: Ýþlemlerimiz Ziraat Bankasý üzerinden gerçekleþmektedir, detaylý bilgiler forumda.\n");
	strcat(dialogstr, ""ww"(http://forum.gamerlity.com/announcements.php?aid=2)");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Fiyat Listesi", dialogstr, ""ww"Kapat", "");
	return true;
}

CMD:speedydeagle(playerid, params[])
{
    HideModelSelectionMenu(playerid);
	Speedydeaglede[playerid] = true;
	SetPlayerVirtualWorld(playerid, 124);
	HideModelSelectionMenu(playerid);
	destroyVehicle(playerid);
	SetPlayerPos(playerid, 1580.6970,1177.9991,10.8125);
	format(estring, sizeof estring, "~r~~h~[SpeedyDeagle] ~w~~h~~h~%s(%i) adli oyuncu SpeedyDeagle'ye katildi! ~r~~h~(/speedydeagle)", getName(playerid), playerid);
    TextMesaji(code(estring));
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "God", 1);
	ResetPlayerWeapons(playerid);
	SetPlayerHealth(playerid, 100.0);
	SetPlayerArmour(playerid, 100.0);
	GameTextForPlayer(playerid, "~g~~h~~h~Yukleniyor...", 1200, 5);
	SetTimerEx("suremdolduaq", 1200, false, "d", playerid);
	return true;
}

CMD:sdayril(playerid, params[]) return cmd_speedydeagleayril(playerid, "");
CMD:sdgayril(playerid, params[]) return cmd_speedydeagleayril(playerid, "");
CMD:speedydeagleayril(playerid, params[])
{

	if(Speedydeaglede[playerid] == false)
	{
	    return Hata(playerid, "Zaten Speedy Deagle'de deðilsin.");
	}
	destroyVehicle(playerid);
	Speedydeaglede[playerid] = false;
	SetPlayerVirtualWorld(playerid, 0);
	TogglePlayerControllable(playerid, 1);
	SetPlayerHealth(playerid, 100.0);
	SetPlayerArmour(playerid, 100.0);
	SetPVarInt(playerid, "God", 0);
	OnPlayerSpawn(playerid);
	SCM(playerid, -1, ""safaf"Speedy Deagle'den baþarýyla ayrýldýnýz.");
	return true;
}

forward suremdolduaq(playerid);
public suremdolduaq(playerid)
{
	TogglePlayerControllable(playerid, 1);
	SetPVarInt(playerid, "God", 0);
	GameTextForPlayer(playerid, "~g~~h~~h~Yuklendi!", 1200, 5);
	GivePlayerWeapon(playerid, 24, 5000);
	return true;
}

CMD:lsay(playerid, params[])
{
	if((PlayerInfo[playerid][dLevel] >= 4))
	{
	    new yazi[250];
 		if(sscanf(params, "s[250]", yazi)) return Kullanim(playerid, "lsay [YAZI]");
 		new sZ[56];
		format(sZ, 56, "%s", yazi);
        strdelm(sZ, " ");
        if((strcount(sZ, "~")%2) != 0) return Hata(playerid, "Yazýda hata var!");
		new string[256]; format(string, sizeof(string), "~w~~h~~h~%s", code(yazi));
		printf("%s(%d):%s", getName(playerid), playerid, yazi);
		return TextMesaji(code(string));
	} else return YETERSIZSEVIYE(playerid, 4);
}

stock GetVehicleMaxSpeed(const modelid)
{
	if(IsValidVehicleModel(modelid)) return uf_VehicleSpeeds[modelid - 400];
	return false;
}

stock IsValidVehicleModel(const modelid)
	return(399 < modelid < 612);

CMD:speclist(playerid, params[])
{
	if((PlayerInfo[playerid][dLevel] < 1) && !IsPlayerAdmin(playerid))return YETERSIZSEVIYE(playerid,1);

    new
        string[126],
		string2[756],
		stringh[1024],
		stringsayac[100],
		id_syntax[56],
		sayqq;
    for(new i = 0; i < GetMaxPlayers(); i++){
    if(IsPlayerConnected(i)){
    if(specdeyimaq[i] == 1){
    if(i <= 9) { format(id_syntax,56,"00%i", i); }
    else if(i <= 99) { format(id_syntax,56,"0%i", i); }
    else if(i >= 100) { format(id_syntax,56,"%i", i); }
    sayqq++;
    format(string, sizeof string, ""ww"ID:\t\t"ww"Nick:\n");
    format(string2, sizeof string2, "%s"ww"%s\t\t"ww"%s\n", string2, id_syntax, getName(i));
    format(stringsayac, sizeof stringsayac, ""ww"Sunucuda toplam ' "wb"%i "w"' spec görevinde oyuncu bulunuyor.", sayqq);
    format(stringh, sizeof stringh, "%s%s\n%s", string, string2, stringsayac);
	}}}
    if(sayqq==0){ Hata(playerid, "Spec görevinde oyuncu bulunamadý!"); } else { ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"Spec görevindeki Oyuncular",stringh,""ww"Kapat",""); }
    return true;
}

CMD:adminlistesi(playerid, params[])
{
	new sql[500], level, isim[MAX_PLAYER_NAME], songiris[250], yetki_isimaq[100], str[10000], topstr[100], toplamstr[10000];
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `dLevel` > '0' ORDER BY `dLevel` DESC LIMIT 50");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Ýsim\t"ww"Level\t"ww"Son Giriþ\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name_int(i, "dLevel", level);
	    cache_get_value_name(i, "yetki_ismi", yetki_isimaq);
	    if(strcmp(yetki_isimaq, " "))
	    {
	        cache_get_value_name(i, "yetki_ismi", yetki_isimaq);
	        cache_get_value_name(i, "kullaniciadi", isim);
	        cache_get_value_name(i, "LastOn", songiris);
	    	format(str, sizeof(str), "%s"ww"%s\t"ww"%s\t"ww"%s\n", str, isim, yetki_isimaq, songiris);
	    } else {
	    	cache_get_value_name(i, "kullaniciadi", isim);
	        cache_get_value_name(i, "LastOn", songiris);
	        format(str, sizeof(str), "%s"ww"%s\t"ww"%d\t"ww"%s\n", str, isim, level, songiris);
	    }
	}

	strcat(toplamstr, topstr);
	strcat(toplamstr, str);
	format(str, sizeof(str), ""ww"Toplam Oyun Görevlisi: "ad"%d", cache_num_rows());
	strcat(toplamstr, str);

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Oyun Görevlisi Listesi", toplamstr, ""ww"Kapat", "");
	return true;
}

CMD:viplistesi(playerid, params[])
{
	new sql[500], level, isim[MAX_PLAYER_NAME], songiris[250], str[10000], topstr[100], toplamstr[10000];
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `VIP` > '0' ORDER BY `VIP` DESC LIMIT 50");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Ýsim\t"ww"Level\t"ww"Son Giriþ\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim);
	    cache_get_value_name(i, "LastOn", songiris);
	    cache_get_value_name_int(i, "VIP", level);
	    format(str, sizeof(str), "%s"ww"%s\t"ww"%d\t"ww"%s\n", str, isim, level, songiris);
	}

	strcat(toplamstr, topstr);
	strcat(toplamstr, str);
	format(str, sizeof(str), ""ww"Toplam VIP: "ad"%d", cache_num_rows());
	strcat(toplamstr, str);

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"VIP Listesi", toplamstr, ""ww"Kapat", "");
	return true;
}

CMD:sa(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1 && PlayerInfo[playerid][VIP] < 1) return YETERSIZSEVIYE(playerid, 1);
	if(spamProtect(playerid, "sa", 2)) return true;
	else {
		OnPlayerText(playerid, "Selâmun aleyküm, kolay gelsin.");
	}
	return true;
}

CMD:as(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1 && PlayerInfo[playerid][VIP] < 1) return YETERSIZSEVIYE(playerid, 1);
    if(spamProtect(playerid, "as", 2)) return true;
	else {
		OnPlayerText(playerid, "Aleyküm selam, hoþgeldiniz. Ýyi oyunlar.");
	}
	return true;
}

forward DestroyEffectObject(objectid, objectid2);
public DestroyEffectObject(objectid, objectid2)
{
    DestroyObject(objectid);
    if(objectid2 != -1) DestroyObject(objectid2);
    return true;
}

CMD:fchat(playerid, params[])
{

	new id, yazi[250];
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "us[250]", id, yazi)) return Kullanim(playerid, "fchat [OYUNCU ÝSÝM / ÝD] [YAZI]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(PlayerInfo[playerid][dLevel] < PlayerInfo[id][dLevel]) return Hata(playerid, "Oyuncunun leveli sizden büyük!");
	else {
	    OnPlayerText(id, yazi);
	    SCM(playerid, -1, ""safaf"Sahte iþlem baþarýyla gerçekleþtirildi.");
	}
	return true;
}

CMD:bigdrift(playerid, params[])
{

	SetPlayerPV(playerid, 3725.5525, -1726.4814, 1405.1204);
	SetPlayerFacingAngle(playerid, 86.8580);
	SetCameraBehindPlayer(playerid);
	SCM(playerid, -1, ""safaf"Big Drift adlý bölgeye gönderildiniz.");
	return true;
}

CMD:bigdrift2(playerid, params[])
{
	SetPlayerPV(playerid, 5427.8223, -345.0247, 2.3351);
	SCM(playerid, -1, ""safaf"Big Drift 2 adlý bölgeye gönderildiniz.");
	return true;
}

stock secs2hms(secs, &hours, &minutes, &seconds)
{
	if(secs < 0) return false;
	minutes = secs / 60; seconds = secs % 60;
	hours = minutes / 60; minutes = minutes % 60;
	return true;
}

stock GivePlayerScore(playerid, miktar)
{
	SetPlayerScore(playerid, GetPlayerScore(playerid) + miktar);
	PlayerInfo[playerid][score] = GetPlayerScore(playerid);
	return true;
}

stock GivePlayerEXP(playerid, miktar)
{
	PlayerInfo[playerid][exp] += miktar;
}

stock GivePlayerKredi(playerid, miktar)
{
	return PlayerInfo[playerid][GLKredi] += miktar;
}

stock GivePlayerGLKredi(playerid, miktar)
{
	return PlayerInfo[playerid][GLKredi] += miktar;
}

stock ConvertTime(cts)
{
    new
        ctm,
        cth,
        ctd,
        ctw,
        ctmo,
        cty;

    #define PLUR(%0,%1,%2) (%0),((%0) == 1)?((#%1)):((#%2))

    #define CTM_cty 31536000
    #define CTM_ctmo 2628000
    #define CTM_ctw 604800
    #define CTM_ctd 86400
    #define CTM_cth 3600
    #define CTM_ctm 60

    #define CT(%0) %0 = cts / CTM_%0; cts %= CTM_%0

    new strii[128];

    if(cty != -1 && (cts/CTM_cty))
    {
        CT(cty); CT(ctmo); CT(ctw); CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, %d %s, %d %s ve %d %s",PLUR(cty,"yýl","yýl"),PLUR(ctmo,"ay","ay"),PLUR(ctw,"hafta","hafta"),PLUR(ctd,"gün","gün"),PLUR(cth,"saat","saat"),PLUR(ctm,"dakika","dakika"),PLUR(cts,"saniye","saniye"));
        return strii;
    }
    if(ctmo != -1 && (cts/CTM_ctmo))
    {
        cty = 0; CT(ctmo); CT(ctw); CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s, %d %s ve %d %s",PLUR(ctmo,"ay","ay"),PLUR(ctw,"hafta","hafta"),PLUR(ctd,"gün","gün"),PLUR(cth,"saat","saat"),PLUR(ctm,"dakika","dakika"),PLUR(cts,"saniye","saniye"));
        return strii;
    }
    if(ctw != -1 && (cts/CTM_ctw))
    {
        cty = 0; ctmo = 0; CT(ctw); CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s, %d %s ve %d %s",PLUR(ctw,"hafta","hafta"),PLUR(ctd,"gün","gün"),PLUR(cth,"saat","saat"),PLUR(ctm,"dakika","dakika"),PLUR(cts,"saniye","saniye"));
        return strii;
    }
    if(ctd != -1 && (cts/CTM_ctd))
    {
        cty = 0; ctmo = 0; ctw = 0; CT(ctd); CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s, %d %s ve %d %s",PLUR(ctd,"gün","gün"),PLUR(cth,"saat","saat"),PLUR(ctm,"dakika","dakika"),PLUR(cts,"saniye","saniye"));
        return strii;
    }
    if(cth != -1 && (cts/CTM_cth))
    {
        cty = 0; ctmo = 0; ctw = 0; ctd = 0; CT(cth); CT(ctm);
        format(strii, sizeof(strii), "%d %s, %d %s ve %d %s",PLUR(cth,"saat","saat"),PLUR(ctm,"dakika","dakika"),PLUR(cts,"saniye","saniye"));
        return strii;
    }
    if(ctm != -1 && (cts/CTM_ctm))
    {
        cty = 0; ctmo = 0; ctw = 0; ctd = 0; cth = 0; CT(ctm);
        format(strii, sizeof(strii), "%d %s ve %d %s",PLUR(ctm,"dakika","dakika"),PLUR(cts,"saniye","saniye"));
        return strii;
    }
    cty = 0; ctmo = 0; ctw = 0; ctd = 0; cth = 0; ctm = 0;
    format(strii, sizeof(strii), "%d %s", PLUR(cts,"saniye","saniye"));
    return strii;
}

CMD:sarkilar(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new sql[500], topstr[1024], str[10000], strtopla[10000], strtopla2[10000], isim[500], id;
	format(sql, sizeof(sql), "SELECT `Isim`, `ID` FROM `sarkilar` LIMIT 25");
	mysql_query(mysqlC, sql);
	format(topstr, sizeof(topstr), ""ww"ID\t"ww"Ýsim");
	sarkilar_sayi[playerid] = 25;
	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name_int(i, "ID",id);
	    cache_get_value_name(i, "Isim", isim, 500);
	    sarkilar[playerid][i] = id;
	    format(str, sizeof(str), ""ww"%d\t"ww"%s\n", id, code(isim));
	    strcat(strtopla, str);
	}
	mysql_query(mysqlC, "SELECT * FROM `sarkilar`");
	format(strtopla2, sizeof(strtopla2), "%s\n%s", topstr, strtopla);
	if(cache_num_rows() > sarkilar_sayi[playerid])
	    strcat(strtopla2, ""wb"» "ad"Sonraki Sayfa "wb"«");
	ShowPlayerDialog(playerid, DIALOG_SARKILAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Þarkýlar", strtopla2, ""ww"Aç", ""ww"Ýptal");
	return true;
}

CMD:sarkilarekle(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new sql[500], sql2[500], link[1024], isim[500], cekid, yeni_id;
	if(sscanf(params, "s[1024]s[500]", link, isim)) return Kullanim(playerid, "sarkilarrekle [LÝNK] [ÝSÝM]");
	format(sql, sizeof(sql), "SELECT * FROM `sarkilar` ORDER BY `ID` DESC LIMIT 1");
	mysql_query(mysqlC, sql);

	cache_get_value_name_int(0, "ID", cekid);

	yeni_id = cekid + 1;

	format(sql2, sizeof(sql2), "INSERT INTO `sarkilar` (`ID`, `Isim`, `Link`) VALUES ('%d', '%s', '%s')", yeni_id, isim, link);
	mysql_query(mysqlC, sql2);

	SFM(playerid, -1, ""safaf"Þarkýnýz olan "wb"%s"w", "wb"%d"w" ID ile baþarýyla kaydedildi.", isim, yeni_id);
	return true;
}

CMD:sarkilarsil(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);
	new id, sql[500];
	if(sscanf(params, "i", id)) return Kullanim(playerid, "sarkilarsil [ÞARKI ÝD]");
	format(sql, sizeof(sql), "SELECT * FROM `sarkilar` WHERE `ID` = '%d'", id);
	mysql_query(mysqlC, sql);

	if(cache_num_rows() > 0)
	{
	    format(sql, sizeof(sql), "DELETE FROM `sarkilar` WHERE `ID` = '%d'", id);
	    mysql_query(mysqlC, sql);
	    new query[500];
	    format(query, sizeof(query), "UPDATE `sarkilar` SET `ID` = ID-1 WHERE `ID` > '%d'", id);
	    mysql_query(mysqlC, query);
	    SFM(playerid, -1, ""safaf""wb"%d "w"ID'li þarký baþarýyla silindi.", id);
	}
	else {
	    return Hata(playerid, "Bu ID ile bir þarký bulunamadý.");
	}
	return true;
}

stock CeteOfflineOyuncular(playerid)
{
	new sql[500], str[10000], topstr[500], strtopla[10000], strson[10000], isim[50], oyundastr[500], rutbe, Cache:Veri, rutbestr[100];
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `cete` = '%d' LIMIT 25", PlayerInfo[playerid][PlayerCeteID]);
	Veri = mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Oyuncu Ýsmi\t"ww"Oyuncu Durumu\t"ww"Oyuncu Yetkisi\n");

    Cete_Tumuyeler[playerid] = 25;

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim);
	    cache_get_value_name_int(i, "ceterutbe", rutbe);
	    cache_get_value_name_int(i, "sqlid", tumceteoyuncular[playerid][i]);
	    new bul = GetPlayerID(isim);
	    switch(IsPlayerConnected(bul))
	    {
	        case 0:
	        {
	            format(oyundastr, sizeof(oyundastr), ""ww"{FF0000}Oyunda deðil");
	        }
	        case 1:
	        {
	            format(oyundastr, sizeof(oyundastr), ""ww"{00F600}Oyunda");
	        }
	    }
	    switch(rutbe)
	    {
	        case 0: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank1]);
		    case 1: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank2]);
		    case 2: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank3]);
		    case 3: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank4]);
		    case 4: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank5]);
		    case 5: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank6]);
		    case 6: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank7]);
		    case 7: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank8]);
		    case 8: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank9]);
		    case 9: format(rutbestr, sizeof(rutbestr), "%s", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cRank10]);
	    }
	    format(str, sizeof(str), "%s"ww"%s\t%s\t"ww"%s\n", str, isim, oyundastr, rutbestr);
	}
	cache_delete(Veri);
	strcat(strtopla, str);

	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `cete` = '%d'", PlayerInfo[playerid][PlayerCeteID]);
	mysql_query(mysqlC, sql);
	if(cache_num_rows() > Cete_Tumuyeler[playerid])
		strcat(strtopla, ""ad"»»»» Sonraki Sayfa");

	format(strson, sizeof(strson), "%s%s", topstr, strtopla);

	ShowPlayerDialog(playerid, DIALOG_CETE_TUMUYELER, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Üyeleri", strson, ""ww"Seç", ""ww"Kapat");
	return true;
}

CMD:komutspec(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid, 8);
	else {
		if(GetPVarInt(playerid, "KomutSpec") == 0)
		{
			TextDrawShowForPlayer(playerid, KomutSpec0);
			TextDrawShowForPlayer(playerid, KomutSpec1);
			TextDrawShowForPlayer(playerid, KomutSpec2);
			TextDrawShowForPlayer(playerid, KomutSpec3);
			TextDrawShowForPlayer(playerid, KomutSpec4);
			SetPVarInt(playerid, "KomutSpec", 1);
			Bilgi(playerid, "Komut Spec açýldý.");
		} else {
			TextDrawHideForPlayer(playerid, KomutSpec0);
			TextDrawHideForPlayer(playerid, KomutSpec1);
			TextDrawHideForPlayer(playerid, KomutSpec2);
			TextDrawHideForPlayer(playerid, KomutSpec3);
			TextDrawHideForPlayer(playerid, KomutSpec4);
			SetPVarInt(playerid, "KomutSpec", 0);
			Bilgi(playerid, "Komut Spec kapatýldý.");
		}
	}
	return true;
}

CMD:youtube(playerid, params[])
{
    new func[20], opts[500];
    if(sscanf(params, "s[20]S(yazmadim)", func, opts)) return Kullanim(playerid, "youtube ara, goster");

    if(!strcmp(func, "ara", true))
    {
        if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid, 5);
        if(IsYouTubeVideoPlaying(gYoutubeIDForAll)) return Hata(playerid, "Zaten bir þarký çalýyor.");
		new str2[500];
        if(!strcmp(opts, "yazmadim")) return Kullanim(playerid, "youtube ara [ÞARKI ÝSMÝ]");
        format(str2, sizeof(str2), "%s", code(opts));
        strdelm(str2, " ");
        SearchYoutubeVideos(playerid, code(str2));
        sarkisayim[playerid]++;
    }
    else if(!strcmp(func, "goster", true))
    {
        if(caliniyor == 1)
        {
            new playing[500];

            format(playing, sizeof(playing), ""ww"Þarký Ýsmi: %s\n"ww"Þarký Süresi: %i saniye\n", GetVideoTitle(gYoutubeIDForAll), GetVideoDuration(gYoutubeIDForAll));
            ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Çalan Þarký", playing, ""ww"Kapat", "");
        }
        else {
            return Hata(playerid, "Þu anda bir þarký çalmýyor.");
        }
    }
    else {
        return Kullanim(playerid, "youtube ara, goster");
    }
	return true;
}

CMD:youtubelisteekle(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);

	new linkk[256];
	if(sscanf(params, "s[256]", linkk)) return Kullanim(playerid, "youtubelisteekle [YOUTUBE LÝNKÝ]");
	if(!IsValidYoutubeURL(linkk)) return Hata(playerid, "Yanlýþ link girdiniz.");

	PlayYoutubeVideoFor(linkk, playerid, gEveryonesPlaylist);
    sarkisayim[playerid]++;
    caliniyor = 1;
	return true;
}

CMD:youtubeliste(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);

	new songs[MAX_YOUTUBE_SAVES], string[128], plist[256*5];
	songs = GetPlaylistSongs(gEveryonesPlaylist);

	strcat(plist, ""ww"ID\t"ww"Þarký\t"ww"Süre\n");

	for(new i = 0; i < MAX_YOUTUBE_SAVES; i++)
	{
		if(songs[i] == INVALID_YT_ID) continue;
		format(string, sizeof(string), ""ww"%i\t"ww"%s\t"ww"%i saniye\n", i+1, GetVideoTitle(songs[i]), GetVideoDuration(songs[i]));
		strcat(plist, string);
	}

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, GetPlaylistName(gEveryonesPlaylist), plist, ""ww"Kapat", "");
	SCM(playerid, -1, ""safaf"Ýsteðiniz iþleme alýndý. Liste birazdan önünüze gelecektir.");
	return true;
}

CMD:youtubecal(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid,5);

	new sarkilink[256];
	if(sscanf(params, "s[256]", sarkilink)) return Kullanim(playerid, "youtubecal [YOUTUBE LÝNKÝ]");
	if(!IsValidYoutubeURL(sarkilink)) return Hata(playerid, "Yanlýþ link girdiniz.");
	if(IsYouTubeVideoPlaying(gYoutubeIDForAll)) return Hata(playerid, "Zaten bir þarký çalýyor.");

	gYoutubeIDForAll = PlayYoutubeVideoFor(sarkilink);
	SCM(playerid, -1, ""safaf"Ýsteðiniz iþleme alýndý. Þarký birazdan açýlacaktýr.");
    sarkisayim[playerid]++;
    caliniyor = 1;
	return true;
}

public OnYoutubeVideoStart(youtubeid)
{
	new string[256], time[3];

	formatSeconds(GetVideoDuration(youtubeid),time[0],time[1],time[2]);
	format(string,sizeof(string),"~r~~h~~h~[ÞARKI] ~p~%s ~g~~h~~h~(Süre: %02d dakika %02d saniye)",GetVideoTitle(youtubeid),time[1],time[2]);

	if(GetPlaylistFromVideo(youtubeid) != INVALID_PLAYLIST_ID)
		format(string, sizeof(string), "%s (Oynatma Listesi: %s (%d))",string, GetPlaylistName(GetPlaylistFromVideo(youtubeid)), GetPlaylistFromVideo(youtubeid));

	if(GetVideoTarget(youtubeid) != INVALID_PLAYER_ID)
    {
		SendClientMessage(GetVideoTarget(youtubeid), -1, string);
        sarkisayim[GetVideoTarget(youtubeid)]++;
        caliniyor = 1;
        format(calinanlink, sizeof(calinanlink), "%s", GetVideoLink(youtubeid));
    }
	else {
		//SendClientMessageToAll(-1, string);
		TextMesaji(code(string));
        caliniyor = 1;
        format(calinanlink, sizeof(calinanlink), "%s", GetVideoLink(youtubeid));
    }
	return true;
}

public OnYoutubeVideoFinished(youtubeid)
{
	new string[500];
	if(youtubeid == gYoutubeIDForAll)
	{
		/*format(string, sizeof(string), ""safaf""ad"%s "w"þarkýsý sona erdi ve otomatik olarak radyo açýldý.", GetVideoTitle(youtubeid));
		SendClientMessageToAll(-1, string);*/
		TextMesaji("Otomatik radyo acildi!");
        caliniyor = 0;
        foreach(new i: Player)
        {
            PlayAudioStreamForPlayer(i, "http://radyo.dogannet.tv/turkpop");
        }
        format(calinanlink, sizeof(calinanlink), "http://radyo.dogannet.tv/turkpop");
	}
	else
	{
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
		{
			if(gYoutubeID[i] == youtubeid)
			{
				format(string, sizeof(string), ""safaf""ad"%s "w"þarkýsý sona erdi ve otomatik olarak radyo açýldý.", GetVideoTitle(youtubeid));
				SendClientMessage(i, -1, string);
                caliniyor = 0;
		        foreach(new x: Player)
		        {
		            PlayAudioStreamForPlayer(x, "http://radyo.dogannet.tv/turkpop");
		        }
		        format(calinanlink, sizeof(calinanlink), "http://radyo.dogannet.tv/turkpop");
				break;
			}
		}
	}
	return true;
}

public OnPlaylistFinished(playlistid)
{
	new string[128];
	if(playlistid == gYoutubeIDForAll)
	{
		format(string, sizeof(string), "{0049FF}[Oynatma Listesi '%s'] {00c9ff}Sonlandý. /youtubelisteekle yazarak yeni þarkýlar eklenebilir.",GetPlaylistName(playlistid));
		SendClientMessageToAll(-1, string);
		format(calinanlink, sizeof(calinanlink), "http://radyo.dogannet.tv/turkpop");
        caliniyor = 0;
	}
	else
	{
		for(new i = 0, j = GetPlayerPoolSize(); i <= j; i++)
		{
			if(!IsPlayerConnected(i)) continue;
			if(gMyPlaylist[i] == playlistid)
			{
				format(string, sizeof(string), "{0049FF}[Oynatma Listesi '%s'] {00c9ff}Sonlandý. /youtubelisteekle yazarak yeni þarkýlar eklenebilir.",GetPlaylistName(playlistid));
				SendClientMessage(i, -1, string);
                caliniyor = 0;
                format(calinanlink, sizeof(calinanlink), "http://radyo.dogannet.tv/turkpop");
				break;
			}
		}
	}
	return true;
}

public OnPlaylistAddEntry(playerlistid, youtubeid)
{
	new string[128];
	format(string, sizeof(string), "{0049FF}[Oynatma Listesi '%s'] {00c9ff}Eklenen þarký: '%s' (%i) ",GetPlaylistName(playerlistid),  GetVideoTitle(youtubeid), youtubeid);

	if(GetVideoTarget(youtubeid) == INVALID_PLAYER_ID)
		SendClientMessageToAll(-1, string);
	else
		SendClientMessage(GetVideoTarget(youtubeid) , -1, string);
	return true;
}

public OnMVYoutubeError(youtubeid, message[])
{
	new string[256], player = GetVideoTarget(youtubeid);

	format(string, sizeof(string), "Þarkýyý indirirken bir hata oluþtu. %s: %s", GetVideoLink(youtubeid), message);

	if(player != INVALID_PLAYER_ID)
    {
		SendClientMessage(player, COLOR_RED, string);
        caliniyor =  0;
        format(calinanlink, sizeof(calinanlink), "http://radyo.dogannet.tv/turkpop");
    }
	else
    {
		SendClientMessageToAll(COLOR_RED, string);
        caliniyor = 0;
        format(calinanlink, sizeof(calinanlink), "http://radyo.dogannet.tv/turkpop");
    }
	return true;
}

public OnYoutubeSearch(playerid)
{

	new string[128],searchdialog[256*5];

    format(searchdialog, sizeof(searchdialog), "");
    format(string, sizeof(string), "");

	for(new i = 0; i < MAX_SEARCH_RESULTS; i++)
	{

		format(string, sizeof(string), ""ww"%s\n", SearchResults[playerid][i][Title]);
		strcat(searchdialog, string);
	}

	ShowPlayerDialog(playerid, DIALOG_SEARCH_AND_PLAY, DIALOG_STYLE_LIST, ""safaf"Arama Sonuçlarý", searchdialog, ""ww"Çal", ""ww"Kapat");
	return true;
}

stock formatSeconds(seconds, &hours_left, &minutes_left, &seconds_left)
{
	hours_left = seconds/60/60;
	minutes_left = (seconds - hours_left*60*60)/60;
	seconds_left = (seconds - hours_left*60*60 - minutes_left*60);
}

CMD:topnoob(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new sql[500], str[1024], topstr[500], toplastr[2048], isim[500], olum;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `Deaths` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"Ölüm Sayýsý\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim, 500);
	    cache_get_value_name_int(i, "Deaths",olum);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%d\n", str, i + 1, isim, olum);
	}

	strcat(toplastr, topstr);
	strcat(toplastr, str);

	ShowPlayerDialog(playerid, DIALOG_TOPTABLOLAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Noob", toplastr, ""ww"Kapat", "");
	return true;
}

CMD:basarilarim(playerid, params[])
{
	new str[1024], topstr[500], strtopla[2048], sql[500], tamamlandimi;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", getName(playerid));
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Baþarý\t"ww"Açýklama\t"ww"Durum\n");
	strcat(strtopla, topstr);

	cache_get_value_name_int(0, "basari_ilkmesaj", tamamlandimi);
	format(str, sizeof(str), ""ww"Ýlk Mesaj\t"ww"Sohbete bir mesaj gönder.\t"ww"%s\n", (tamamlandimi == 1 ? ("{00F600}Tamamlandý") : ("{ff0000}Tamamlanmadý")));
	strcat(strtopla, str);

	tamamlandimi = PlayerInfo[playerid][Oldurme];
	format(str, sizeof(str), ""ww"10 Öldürme\t"ww"10 kiþi öldür.\t"ww"%s\n", (tamamlandimi > 10 ? ("{00F600}Tamamlandý") : ("{ff0000}Tamamlanmadý")));
	strcat(strtopla, str);

	cache_get_value_name_int(0, "basari_5hsatma", tamamlandimi);
	format(str, sizeof(str), ""ww"5 HS\t"ww"Sniper ile 5 headshot at.\t"ww"%s\n", (tamamlandimi == 1 ? ("{00F600}Tamamlandý") : ("{ff0000}Tamamlanmadý")));
	strcat(strtopla, str);

	tamamlandimi = GetPlayerScore(playerid);
	format(str, sizeof(str), ""ww"100 Skor\t"ww"100 skora eriþ.\t"ww"%s\n", (tamamlandimi > 100 ? ("{00F600}Tamamlandý") : ("{ff0000}Tamamlanmadý")));
	strcat(strtopla, str);

	cache_get_value_name_int(0, "basari_etkkatil", tamamlandimi);
	format(str, sizeof(str), ""ww"Etkinlik\t"ww"1 etkinliðe katýl.\t"ww"%s\n", (tamamlandimi == 1 ? ("{00F600}Tamamlandý") : ("{ff0000}Tamamlanmadý")));
	strcat(strtopla, str);

	cache_get_value_name_int(0, "basari_ilkarkadas", tamamlandimi);
	format(str, sizeof(str), ""ww"Ýlk Arkadaþ\t"ww"Ýlk arkadaþýný ekle. (/arkadaslarim)\t"ww"%s\n", (tamamlandimi == 1 ? ("{00F600}Tamamlandý") : ("{ff0000}Tamamlanmadý")));
	strcat(strtopla, str);

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Baþarýlarým", strtopla, ""ww"Kapat", "");
	return true;
}

stock DukkanlariYenile()
{
    foreach(new x: dukkanlar)
    {
        DestroyDynamicPickup(DukkanInfo[x][dPickup]);
        DestroyDynamic3DTextLabel(DukkanInfo[x][dLabel]);
        DukkanYukle2(x);
    }
    return true;
}

stock DukkanLabelGuncelle(i)
{
	if(DukkanInfo[i][dMevcut] == true)
	{
	    new sahipstr[75];
		switch(DukkanInfo[i][dSahip])
        {
            case -1: sahipstr = "Yok";
            default: format(sahipstr, sizeof(sahipstr), "%s", SQL_Isim_Cek(DukkanInfo[i][dSahip]));
        }
		new labelstr[500];
		format(labelstr, sizeof(labelstr), "{00ff00}/dukkanial\n{FF9900}Dükkan {FFFFFF}#%d\n{FF9900}Bu dükkana sahip olan oyuncu: {00ff00}%s\n{FF9900}Fiyat: {00ff00}%s\n{FF9900}Biriken Para: {00ff00}%s$", i, sahipstr, FormatMoney(DukkanInfo[i][dFiyat]), FormatMoney(DukkanInfo[i][dBirikenPara]));
		UpdateDynamic3DTextLabelText(DukkanInfo[i][dLabel], -1, labelstr);
	}
	return true;
}

stock DukkanYukle2(i)
{
    new sql[500], sahipstr[75];
    format(sql, sizeof(sql), "SELECT * FROM `dukkanlar` WHERE `ID` = '%d'", i);
    mysql_query(mysqlC, sql);

    if(cache_num_rows() > 0)
    {
        cache_get_value_name_int(0, "ID", DukkanInfo[i][dId]);
        cache_get_value_name_int(0, "sahip", DukkanInfo[i][dSahip]);
        cache_get_value_name_int(0, "fiyat", DukkanInfo[i][dFiyat]);
        cache_get_value_name_int(0, "birikenpara", DukkanInfo[i][dBirikenPara]);
        DukkanInfo[i][dMevcut] = true;
        cache_get_value_name_float(0, "X", DukkanInfo[i][dX]);
        cache_get_value_name_float(0, "Y", DukkanInfo[i][dY]);
        cache_get_value_name_float(0, "Z", DukkanInfo[i][dZ]);
        switch(DukkanInfo[i][dSahip])
        {
            case -1: sahipstr = "Yok";
            default: format(sahipstr, sizeof(sahipstr), "%s", SQL_Isim_Cek(DukkanInfo[i][dSahip]));
        }
        new labelstr[500];
        format(labelstr, sizeof(labelstr), "{00ff00}/dukkanial\n{FF9900}Dükkan {FFFFFF}#%d\n{FF9900}Bu dükkana sahip olan oyuncu: {00ff00}%s\n{FF9900}Fiyat: {00ff00}%s\n{FF9900}Biriken Para: {00ff00}%s$", i, sahipstr, FormatMoney(DukkanInfo[i][dFiyat]), FormatMoney(DukkanInfo[i][dBirikenPara]));
        DukkanInfo[i][dLabel] = CreateDynamic3DTextLabel(labelstr, -1, DukkanInfo[i][dX], DukkanInfo[i][dY], DukkanInfo[i][dZ], 30.0);
        DukkanInfo[i][dPickup] = CreateDynamicPickup(1239, 1, DukkanInfo[i][dX], DukkanInfo[i][dY], DukkanInfo[i][dZ], -1);
    }
    return true;
}

CMD:dukkanlariyenile(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return false;
    DukkanlariYenile();
    foreach(new xx: Player)
    {
    	MekanIcon(xx);
    	DukkanIcon(xx);
    }
    SCM(playerid, -1, ""safaf"Dükkanlar yenileniyor...");
    return true;
}

stock CeteMekanlariYenile()
{
    foreach(new x: cetemekanlari)
    {
        DestroyDynamicPickup(CeteMekanInfo[x][cmPickup]);
        DestroyDynamic3DTextLabel(CeteMekanInfo[x][cmLabel]);
        CeteMekanlariYukle2(x);
    }
    return true;
}

stock CeteMekanlariYukle2(i)
{
    new sql[500];
    format(sql, sizeof(sql), "SELECT * FROM `cetemekanlari` WHERE `ID` = '%d'", i);
    mysql_query(mysqlC, sql);

    if(cache_num_rows() > 0)
    {
        CeteMekanInfo[i][cmId] = i;
        cache_get_value_name_int(0, "fiyat", CeteMekanInfo[i][cmFiyat]);
        cache_get_value_name_int(0, "sahipcete", CeteMekanInfo[i][cmSahip]);
        CeteMekanInfo[i][cmMevcut] = true;
        cache_get_value_name_float(0, "X", CeteMekanInfo[i][cmX]);
        cache_get_value_name_float(0, "Y", CeteMekanInfo[i][cmY]);
        cache_get_value_name_float(0, "Z", CeteMekanInfo[i][cmZ]);
        new labelstr[500];
        format(labelstr, sizeof(labelstr), "{00ff00}/mekanial\n{FF9900}Çete Mekaný {FFFFFF}#%d\n{FF9900}Bu mekana sahip olan çete: {00ff00}%s\n{FF9900}Fiyat: {00ff00}%s", i, CeteIsimCek(CeteMekanInfo[i][cmSahip]), FormatMoney(CeteMekanInfo[i][cmFiyat]));
        CeteMekanInfo[i][cmLabel] = CreateDynamic3DTextLabel(labelstr, -1, CeteMekanInfo[i][cmX], CeteMekanInfo[i][cmY], CeteMekanInfo[i][cmZ], 60.0);
        CeteMekanInfo[i][cmPickup] = CreateDynamicPickup(1314, 1, CeteMekanInfo[i][cmX], CeteMekanInfo[i][cmY], CeteMekanInfo[i][cmZ], -1);
    }
    return true;
}

CMD:mekanlariyenile(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return false;
    CeteMekanlariYenile();
    foreach(new xx: Player)
    {
    	DukkanIcon(xx);
    	MekanIcon(xx);
    }
    SCM(playerid, -1, ""safaf"Çete mekanlarý yenileniyor...");
    return true;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	if(!strcmp(test_ip, "94.55.232.15")) return true;
	if(!strcmp(test_ip, "127.0.0.1")) return true;
    new against_ip[32 + 1];
    new x = 0;
    new ip_count = 0;
    for(x = 0; x < GetPlayerPoolSize(); x++)
    {
        if(IsPlayerConnected(x))
        {
            GetPlayerIp(x, against_ip, 32);
            if(!strcmp(against_ip, test_ip)) ip_count++;
        }
    }
    return ip_count;
}

public OnPlayerEnterArea(playerid, areaid)
{
    if(areaid == bolge1)
    {
        spawnda[playerid] = true;
        SCM(playerid, -1, ""safaf"Spawn bölgesine "wb"girdiniz. "w"Burada hasar "wb"veremez "w"ve "wb"alamazsýnýz.");
    }

    if(areaid == bolge2)
    {
        spawnda[playerid] = true;
        SCM(playerid, -1, ""safaf"Spawn bölgesine "wb"girdiniz. "w"Burada hasar "wb"veremez "w"ve "wb"alamazsýnýz.");
    }

    if(areaid == bolge3)
    {
        spawnda[playerid] = true;
        SCM(playerid, -1, ""safaf"Spawn bölgesine "wb"girdiniz. "w"Burada hasar "wb"veremez "w"ve "wb"alamazsýnýz.");
    }
    
    if(areaid == bolge4)
    {
        spawnda[playerid] = true;
        SCM(playerid, -1, ""safaf"Spawn bölgesine "wb"girdiniz. "w"Burada hasar "wb"veremez "w"ve "wb"alamazsýnýz.");
    }
    
    if(areaid == bolge5)
    {
        spawnda[playerid] = true;
        SCM(playerid, -1, ""safaf"Spawn bölgesine "wb"girdiniz. "w"Burada hasar "wb"veremez "w"ve "wb"alamazsýnýz.");
    }

    if(areaid == vip_daire_bolge)
    {
        if(PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][DaireIzin] != 1)
        {
            SetPlayerPV(playerid, -2158.6370, 1352.7582, 7.2283);
            return Hata(playerid, "Bu bölgeye giriþ yapamazsýnýz.");
        }
        SCM(playerid, -1, ""safaf"GamerLity FR VIP konutlarýna "ad"hoþgeldiniz.");
    }
    return true;
}

public OnPlayerLeaveArea(playerid, areaid)
{
    if(areaid == bolge1)
    {
        spawnda[playerid] = false;
        SCM(playerid, -1, ""safaf"Spawn bölgesinden "wb"çýktýnýz. "w"Artýk hasar "wb"verebilir "w"ve "wb"alabilirsiniz.");
    }

    if(areaid == bolge2)
    {
        spawnda[playerid] = false;
        SCM(playerid, -1, ""safaf"Spawn bölgesinden "wb"çýktýnýz. "w"Artýk hasar "wb"verebilir "w"ve "wb"alabilirsiniz.");
    }

    if(areaid == bolge3)
    {
        spawnda[playerid] = false;
        SCM(playerid, -1, ""safaf"Spawn bölgesinden "wb"çýktýnýz. "w"Artýk hasar "wb"verebilir "w"ve "wb"alabilirsiniz.");
    }

    if(areaid == bolge4)
    {
        spawnda[playerid] = false;
        SCM(playerid, -1, ""safaf"Spawn bölgesinden "wb"çýktýnýz. "w"Artýk hasar "wb"verebilir "w"ve "wb"alabilirsiniz.");
    }

    if(areaid == bolge5)
    {
        spawnda[playerid] = false;
        SCM(playerid, -1, ""safaf"Spawn bölgesinden "wb"çýktýnýz. "w"Artýk hasar "wb"verebilir "w"ve "wb"alabilirsiniz.");
    }

    if(areaid == vip_daire_bolge)
    {
        SCM(playerid, -1, ""safaf"GamerLity FR VIP konutlarýndan ayrýldýnýz. "wb"Görüþmek üzere.");
    }
    return true;
}

forward dukkantimerEx(playerid);
public dukkantimerEx(playerid)
{
	if(PlayerInfo[playerid][dukkanivar] != -1 && PlayerInfo[playerid][AFK] != true)
	{
	    new fiyat = randomEx(1000, 2500) + (DukkanInfo[PlayerInfo[playerid][dukkanivar]][dFiyat] / 100);
	    GivePlayerMoney(playerid, fiyat);
	    SFM(playerid, -1, ""safaf"Dükkanýnýzdan saat baþý gelir olan "wb"%s$ "w"aldýnýz.", FormatMoney(fiyat));
	}
	return true;
}

CMD:topheadshot(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new str[10000], toplamstr[10000], topstr[256], sql[256], ismi[MAX_PLAYER_NAME], hsleri;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `headshotlar` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"Headshot Sayýsý\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", ismi);
	    cache_get_value_name_int(i, "headshotlar", hsleri);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%s\n", str, i + 1, ismi, FormatMoney(hsleri));
	}

	strcat(toplamstr, topstr);
	strcat(toplamstr, str);

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Headshot", toplamstr, ""ww"Kapat", "");
	return true;
}

CMD:savecar(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid,"Bir araçta olmalýsýn!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid,"Sürücü olmalýsýn!");
	fstring[0]=EOS;
	for(new as;as<5;as++)
	{
		if(!(400 <= VehicleSave[as][playerid][17] <= 611))
		{
			format(fstring,800,"%s"ww"%d) "wb"BOÞ\n",fstring,as+1);
		}else
		{
			format(fstring,800,"%s"ww"%d) "ad"%s(%d)\n",fstring,as+1,AracIsimler[VehicleSave[as][playerid][17]-400],VehicleSave[as][playerid][17]);
		}
	}
	ShowPlayerDialog(playerid, 9999, DIALOG_STYLE_LIST, ""safaf"Araç Kaydet",fstring,""ww"Kaydet",""ww"Ýptal");
	return true;
}

CMD:loadcar(playerid, params[])
{
	fstring[0]=EOS;
	for(new as;as<5;as++)
	{
		if(!(400 <= VehicleSave[as][playerid][17] <= 611))
		{
			format(fstring,800,"%s"ww"%d) "wb"BOÞ\n",fstring,as+1);
		}else
		{
			format(fstring,800,"%s"ww"%d) "ad"%s(%d)\n",fstring,as+1,AracIsimler[VehicleSave[as][playerid][17]-400],VehicleSave[as][playerid][17]);
		}
	}
	ShowPlayerDialog(playerid, 9997, DIALOG_STYLE_LIST, ""safaf"Araç Çaðýr",fstring,""ww"Çaðýr",""ww"Ýptal");
	return true;
}


stock LoadModData(playerid,data[], modid)
{
	sscanf(data,"p<,>a<i>[18]",VehicleSave[modid][playerid]);
}

stock GetPlayerVehicleMod(playerid)
{
	new bstr[1024],str[256];
	format(str, sizeof(str), "");
	format(bstr, sizeof(bstr), "");
	for(new a;a<5;a++)
	{
		for(new i;i < 17;i++)format(str,256,"%s%d,",str,VehicleSave[a][playerid][i]);
		format(str,256,"%s%d",str,VehicleSave[a][playerid][17]);
		format(bstr,1024,"%s`vehiclemod%d` = '%s'",bstr,a+1,str);
		return bstr;
	}
	return bstr;
}

stock GetPlayerVehicleMod2(playerid)
{
	new bstr[1024],str[256];
	format(str, sizeof(str), "");
	format(bstr, sizeof(bstr), "");
	for(new a;a<5;a++)
	{
		for(new i;i < 17;i++)format(str,256,"%s%d,",str,VehicleSave[a+1][playerid][i]);
		format(str,256,"%s%d",str,VehicleSave[a+1][playerid][17]);
		format(bstr,1024,"%s`vehiclemod%d` = '%s'",bstr,a+2,str);
		return bstr;
	}
	return bstr;
}

stock GetPlayerVehicleMod3(playerid)
{
	new bstr[1024],str[256];
	format(str, sizeof(str), "");
	format(bstr, sizeof(bstr), "");
	for(new a;a<5;a++)
	{
		for(new i;i < 17;i++)format(str,256,"%s%d,",str,VehicleSave[a+2][playerid][i]);
		format(str,256,"%s%d",str,VehicleSave[a+2][playerid][17]);
		format(bstr,1024,"%s`vehiclemod%d` = '%s'",bstr,a+3,str);
		return bstr;
	}
	return bstr;
}

stock GetPlayerVehicleMod4(playerid)
{
	new bstr[1024],str[256];
	format(str, sizeof(str), "");
	format(bstr, sizeof(bstr), "");
	for(new a;a<5;a++)
	{
		for(new i;i < 17;i++)format(str,256,"%s%d,",str,VehicleSave[a+3][playerid][i]);
		format(str,256,"%s%d",str,VehicleSave[a+3][playerid][17]);
		format(bstr,1024,"%s`vehiclemod%d` = '%s'",bstr,a+4,str);
		return bstr;
	}
	return bstr;
}

stock GetPlayerVehicleMod5(playerid)
{
	new bstr[1024],str[256];
	format(str, sizeof(str), "");
	format(bstr, sizeof(bstr), "");
	for(new a;a<5;a++)
	{
		for(new i;i < 17;i++)format(str,256,"%s%d,",str,VehicleSave[a+4][playerid][i]);
		format(str,256,"%s%d",str,VehicleSave[a+4][playerid][17]);
		format(bstr,1024,"%s`vehiclemod%d` = '%s'",bstr,a+5,str);
		return bstr;
	}
	return bstr;
}

CMD:oyuncuyukaydet(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "u", id)) return Kullanim(playerid, "oyuncuyukaydet [OYUNCU ÝD / ÝSÝM]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	SavePlayer(id);
	SFM(playerid, -1, "1: %s", GetPlayerVehicleMod(id));
	SFM(playerid, -1, "2: %s", GetPlayerVehicleMod2(id));
	SFM(playerid, -1, "3: %s", GetPlayerVehicleMod3(id));
	SFM(playerid, -1, "4: %s", GetPlayerVehicleMod4(id));
	SFM(playerid, -1, "5: %s", GetPlayerVehicleMod5(id));
	SCM(playerid, -1, ""safaf"Oyuncuyu baþarýyla kaydettiniz.");
	return true;
}

DukkanIcon(playerid)
{
	foreach(new za: dukkanlar)
	{
	    RemovePlayerMapIcon(playerid, za + 1000);
		SetPlayerMapIcon(playerid, za + 1000, DukkanInfo[za][dX], DukkanInfo[za][dY], DukkanInfo[za][dZ], 20, 0, MAPICON_GLOBAL);
	}
	return true;
}

MekanIcon(playerid)
{
	foreach(new xd: cetemekanlari)
	{
	    RemovePlayerMapIcon(playerid, xd + 100);
	    SetPlayerMapIcon(playerid, xd + 100, CeteMekanInfo[xd][cmX], CeteMekanInfo[xd][cmY], CeteMekanInfo[xd][cmZ], 23, 0, MAPICON_GLOBAL);
	}
	return true;
}

CMD:yetkiisimayarla(playerid, params[])
{
	new id, yetki[500];
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "us[500]", id, yetki)) return Kullanim(playerid, "yetkiisimayarla [OYUNCU ÝD / ÝSÝM] [YETKÝ ÝSMÝ]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	format(PlayerInfo[id][YetkiIsim], 500, "%s", yetki);
	SFM(playerid, -1, ""safaf"Oyuncu "wb"%s(%d) "w"nin yetki ismini "ad"%s "w"olarak ayarladýnýz.", getName(id), id, yetki);
	SFM(id, -1, ""safaf"Yetkili "wb"%s(%d) "w"sizin yetki isminizi "ad"%s "w"olarak ayarladý.", getName(playerid), playerid, yetki);
	SavePlayer(id);
	return true;
}

CMD:fcmd(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	else
 	{
 		#if !defined isnull
	    	#define isnull(%1) \
	                ((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
		#endif
		new Target;
		new cmdParams[50];
	    new cmdToForce[50];
	    sscanf(params, "us[50]s[50]", Target, cmdToForce, cmdParams);
		if(isnull(cmdToForce)) Kullanim(playerid, "fcmd [OYUNCU ÝSÝM / ÝD] [KOMUT] [PARAMETRELER]");
		else
		{
			if(!IsPlayerConnected(Target)) Hata(playerid, "Oyuncu oyunda deðil.");
			if(PlayerInfo[playerid][dLevel] < PlayerInfo[Target][dLevel]) return Hata(playerid, "Oyuncunun leveli sizden büyük!");
			else
			{
    			format(cmdToForce, sizeof(cmdToForce), "cmd_%s", cmdToForce);
				if(funcidx(cmdToForce) != -1)
				{
					if(isnull(cmdParams)) CallLocalFunction(cmdToForce, "i", Target);
					else CallLocalFunction(cmdToForce, "is", Target, cmdParams);
					SCM(playerid, -1, ""safaf"Sahte komut gerçekleþtirildi!");
				}
				else Hata(playerid, "Komut veya parametre hatalý!");
			}
		}
	}
	return true;
}

stock IsPlayerInWater(playerid)
{
    new Float: Z;
    GetPlayerPos(playerid, Z, Z, Z);
    if(Z < 0.7) switch(GetPlayerAnimationIndex(playerid)) { case 1543, 1538, 1539: return true; }
    if(GetPlayerDistanceFromPoint(playerid, -965, 2438, 42) <= 700 && Z < 45) return true;
    new Float:water_places[][] =
    {
            {25.0,  2313.0, -1417.0,        23.0},
            {15.0,  1280.0, -773.0,         1082.0},
            {15.0,  1279.0, -804.0,         86.0},
            {20.0,  1094.0, -674.0,         111.0},
            {26.0,  194.0,  -1232.0,        76.0},
            {25.0,  2583.0, 2385.0,         15.0},
            {25.0,  225.0,  -1187.0,        73.0},
            {50.0,  1973.0, -1198.0,        17.0}
    };
    for(new t=0; t < sizeof water_places; t++)
            if(GetPlayerDistanceFromPoint(playerid,water_places[t][1],water_places[t][2],water_places[t][3]) <= water_places[t][0]) return true;
    return false;
}

CMD:level1(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid, 1);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/cc\t"ww"Chat ekranýný temizler.\n");
	strcat(strdialog, ""ww"/gotopos\t"ww"Bir koordinata ýþýnlar.\n");
	strcat(strdialog, ""ww"/asay\t"ww"Yetkili duyurusu yapar.\n");
	strcat(strdialog, ""ww"/warn\t"ww"Oyuncuya uyarý verir.\n");
	strcat(strdialog, ""ww"/goto\t"ww"Oyuncuya ýþýnlanýr.\n");
	strcat(strdialog, ""ww"/etkmekani1\t"ww"Etkinlik mekaný 1.\n");
	strcat(strdialog, ""ww"/etkmekani2\t"ww"Etkinlik mekaný 2.\n");
	strcat(strdialog, ""ww"/spec\t"ww"Oyuncuyu izlemenizi saðlar.\n");
	strcat(strdialog, ""ww"/specoff\t"ww"Ýzlemeyi kapatýr.\n");
	strcat(strdialog, ""ww"/myammo\t"ww"Mermi verir.\n");
	strcat(strdialog, ""ww"/raporlar\t"ww"Son atýlan raporlarý gösterir.\n");
	strcat(strdialog, ""ww"/isteketkler\t"ww"Son atýlan istek etkinlikleri gösterir.\n");
	strcat(strdialog, ""ww"/adminmekani\t"ww"Admin mekanýna ýþýnlanýr.\n");
	strcat(strdialog, ""ww"/sa\t"ww"Selam verir.\n");
	strcat(strdialog, ""ww"/as\t"ww"Selam alýr.\n");
	strcat(strdialog, ""ww"/asaylist\t"ww"Asay listesini gösterir.\n");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 1 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level2(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid, 2);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/mute\t"ww"Oyuncuyu susturur.\n");
	strcat(strdialog, ""ww"/unmute\t"ww"Oyuncunun susturmasýný kaldýrýr.\n");
	strcat(strdialog, ""ww"/get\t"ww"Oyuncuyu yanýnýza çeker.\n");
	strcat(strdialog, ""ww"/freeze\t"ww"Oyuncuyu dondurur.\n");
	strcat(strdialog, ""ww"/unfreeze\t"ww"Oyuncunun donmasýný kaldýrýr.\n");
	strcat(strdialog, ""ww"/jail\t"ww"Oyuncuyu hapise atar.\n");
	strcat(strdialog, ""ww"/unjail\t"ww"Oyuncuyu hapisten çýkartýr.\n");
	strcat(strdialog, ""ww"/pmspec\t"ww"Atýlan PM leri görmenizi saðlar.\n");
	strcat(strdialog, ""ww"/disarm\t"ww"Oyuncunun silahlarýný siler.\n");
	strcat(strdialog, ""ww"/e\t"ww"Etkinlik komutlarý.\n");
	strcat(strdialog, ""ww"/sethealth\t"ww"Oyuncunun canýný ayarlar.\n");
	strcat(strdialog, ""ww"/setarmour\t"ww"Oyuncunun zýrhýný ayarlar.\n");
	strcat(strdialog, ""ww"/eject\t"ww"Oyuncuyu araçtan atar.\n");
	strcat(strdialog, ""ww"/pmspeclist\t"ww"PM Specde olanlarý gösterir.\n");
	strcat(strdialog, ""ww"/isteksarkilar\t"ww"Son atýlan istek þarkýlarý gösterir.\n");
	strcat(strdialog, ""ww"/aka\t"ww"Oyuncunun eski isimlerini gösterir.\n");
	strcat(strdialog, ""ww""ad"NOT:\t"ww"Tüm alt levellerinizin komutlarýný kullanabilirsiniz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 2 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level3(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 3) return YETERSIZSEVIYE(playerid, 3);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/kick\t"ww"Oyuncuyu oyundan atar.\n");
	strcat(strdialog, ""ww"/setworld\t"ww"Oyuncunun dünyasýný deðiþtirir.\n");
	strcat(strdialog, ""ww""ad"NOT:\t"ww"Tüm alt levellerinizin komutlarýný kullanabilirsiniz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 3 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level4(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 4) return YETERSIZSEVIYE(playerid, 4);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/ban\t"ww"Oyuncuyu banlamanýzý saðlar.\n");
	strcat(strdialog, ""ww"/ip\t"ww"Oyuncunun IP adresini görmenizi saðlar.\n");
	strcat(strdialog, ""ww"/spawn\t"ww"Oyuncuyu spawn etmenizi saðlar.\n");
	strcat(strdialog, ""ww"/burn\t"ww"Oyuncuyu patlatmanýzý saðlar.\n");
	strcat(strdialog, ""ww""ad"NOT:\t"ww"Tüm alt levellerinizin komutlarýný kullanabilirsiniz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 4 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level5(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid, 5);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/sarki\t"ww"Þarký açmanýzý saðlar.\n");
	strcat(strdialog, ""ww"/write\t"ww"Chate bir yazý göndermenizi saðlar.\n");
	strcat(strdialog, ""ww"/warp\t"ww"Bir oyuncuyu diðer bir oyuncunun yanýna gönderir.\n");
	strcat(strdialog, ""ww"/slap\t"ww"Oyuncuya tokat atmanýzý saðlar.\n");
	strcat(strdialog, ""ww"/setskin\t"ww"Oyuncunun skinini deðiþtirmenizi saðlar.\n");
	strcat(strdialog, ""ww"/nban\t"ww"Oyuncunun ismine ban atmanýzý saðlar.\n");
	strcat(strdialog, ""ww"/netstats\t"ww"Oyuncunun internet bilgilerini gösterir.\n");
	strcat(strdialog, ""ww"/offnban\t"ww"Oyunda olmayan bir oyuncunun ismine ban atmanýzý saðlar.\n");
	strcat(strdialog, ""ww"/offban\t"ww"Oyunda olmayan bir oyuncuya ban atmanýzý saðlar.\n");
	strcat(strdialog, ""ww"/sarkilar\t"ww"Þarký listesini gösterir.\n");
	strcat(strdialog, ""ww"/sarkilarekle\t"ww"Þarký listesine þarký eklemenizi saðlar.\n");
	strcat(strdialog, ""ww"/sarkilarsil\t"ww"Þarký listesinden þarký silmenizi saðlar.\n");
	strcat(strdialog, ""ww"/youtube\t"ww"Youtube aramasý yaparak þarký açmanýzý saðlar.\n");
	strcat(strdialog, ""ww"/dukkanlar\t"ww"Tüm dükkanlarý gösterir ve ýþýnlanmanýzý saðlar.\n");
	strcat(strdialog, ""ww"/cetemekanlari\t"ww"Tüm çete mekanlarýný gösterir ve ýþýnlanmanýzý saðlar.\n");
	strcat(strdialog, ""ww""ad"NOT:\t"ww"Tüm alt levellerinizin komutlarýný kullanabilirsiniz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 5 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level6(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid, 6);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/akill\t"ww"Oyuncuyu öldürmenizi saðlar.\n");
	strcat(strdialog, ""ww"/afklist\t"ww"AFK oyuncularý gösterir.\n");
	strcat(strdialog, ""ww"/godveh\t"ww"Arabanýzý patlamaz yapar.\n");
	strcat(strdialog, ""ww"/setcolor\t"ww"Oyuncunun rengini deðiþtirmenizi saðlar.\n");
	strcat(strdialog, ""ww"/etksayisi\t"ww"Görevlinin etkinlik yapma sayýsýný gösterir.\n");
	strcat(strdialog, ""ww""ad"NOT:\t"ww"Tüm alt levellerinizin komutlarýný kullanabilirsiniz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 6 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level7(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 7) return YETERSIZSEVIYE(playerid, 7);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/myweapon\t"ww"Bazý silahlar verir.\n");
	strcat(strdialog, ""ww"/setname\t"ww"Oyuncunun ismini deðiþtirir.\n");
	strcat(strdialog, ""ww""ad"NOT:\t"ww"Tüm alt levellerinizin komutlarýný kullanabilirsiniz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 7 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level8(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid, 8);
	new strdialog[5000];
	strcat(strdialog, ""ww"Komut\t"ww"Açýklama\n");
	strcat(strdialog, ""ww"/sban\t"ww"Oyuncunun bilgisayarýna ban atar.\n");
	strcat(strdialog, ""ww"/unban\t"ww"Oyuncularýn banýný kaldýrmanýza yarar.\n");
	strcat(strdialog, ""ww"/herkesesilahver\t"ww"Tüm oyunculara silah vermenizi saðlar.\n");
	strcat(strdialog, ""ww"/offsban\t"ww"Oyunda olmayan bir oyuncunun bilgisayarýna ban atar.\n");
	strcat(strdialog, ""ww"/komutspec\t"ww"Oyuncularýn yazdýðý komutlarý gösterir (Üst levellerinizi göstermez).\n");
	strcat(strdialog, ""ww"/komutspeclist\t"ww"Komut specte olan yetkilileri gösterir.\n");
	strcat(strdialog, ""ww"/vipbilgigoster\t"ww"VIP olan oyuncularýn VIP bilgilerini gösterir.\n");
	strcat(strdialog, ""ww"/vipdaireler\t"ww"VIP'lere özel dairelere ýþýnlanýr (GamerLity FR KONUTLARI).\n");
	strcat(strdialog, ""ww"/vipgirisac\t"ww"GamerLity FR Konutlarýnýn kapýsýný açar.\n");
	strcat(strdialog, ""ww"/daireizinver\t"ww"GamerLity FR Konutlarýna giriþ izni verir.\n");
	strcat(strdialog, ""ww""ad"NOT:\t"ww"Tüm alt levellerinizin komutlarýný kullanabilirsiniz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Level 8 Komutlarý", strdialog, ""ww"Kapat", "");
	return true;
}

CMD:level9(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 9) return YETERSIZSEVIYE(playerid, 9);
	Hata(playerid, "Bu seviye kullanýmda deðil.");
	return true;
}

stock CetessYukle()
{
	new bidaha_bozmayin_sikicem = 150;
	for(new i; i < bidaha_bozmayin_sikicem; i++)
	{
	    CeteleriYukle(i);
	}
	return true;
}

forward AtmYukle();
public AtmYukle()
{
	new yuklendi, id, satir;
	satir = cache_num_rows();

	if(satir)
	{
	    while(yuklendi < satir)
	    {
	        cache_get_value_name_int(yuklendi, "ID", id);
	        cache_get_value_name_int(yuklendi, "ID", ATMInfo[id][aId]);
	        cache_get_value_name_float(yuklendi, "X", ATMInfo[id][aX]);
	        cache_get_value_name_float(yuklendi, "Y", ATMInfo[id][aY]);
	        cache_get_value_name_float(yuklendi, "Z", ATMInfo[id][aZ]);
	        cache_get_value_name_float(yuklendi, "F", ATMInfo[id][aF]);
	        ATMInfo[id][aMevcut] = true;
	        ATMInfo[id][aCP] = CreateDynamicCP(ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ], 2.0, -1, -1, -1, 100.0);
			new labelstr[500];
			format(labelstr, sizeof(labelstr), ""ad"Bitcoin ATM\n"w"Bitcoin iþlemlerinizi yapabilir ve borsayý buradan takip edebilirsiniz.\n"ad"(%d)", id);
			ATMInfo[id][aLabel] = CreateDynamic3DTextLabel(labelstr, -1, ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ], 60.0);
			ATMInfo[id][aObje] = CreateDynamicObject(2942, ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ] - 0.5, 0, 0, ATMInfo[id][aF]);
			yuklendi++;
			Iter_Add(atmler, id);
	    }
	}
	printf("» Toplam %d ATM yüklendi.", yuklendi);
	return true;
}

stock DukkanYukle()
{
	new sql[500], id, sahipstr[75], i;
	format(sql, sizeof(sql), "SELECT * FROM `dukkanlar`");
	mysql_query(mysqlC, sql);
	
	new rowz;
	cache_get_row_count(rowz);

	while(i < rowz)
    {
		format(sql, sizeof(sql), "SELECT * FROM `dukkanlar`");
		mysql_query(mysqlC, sql);
        cache_get_value_name_int(i, "ID", id);
	    DukkanInfo[id][dId] = id;
        cache_get_value_name_int(i, "sahip", DukkanInfo[id][dSahip]);
        cache_get_value_name_int(i, "fiyat", DukkanInfo[id][dFiyat]);
        DukkanInfo[id][dMevcut] = true;
        cache_get_value_name_float(i, "X", DukkanInfo[id][dX]);
        cache_get_value_name_float(i, "Y", DukkanInfo[id][dY]);
        cache_get_value_name_float(i, "Z", DukkanInfo[id][dZ]);
        cache_get_value_name_int(i, "birikenpara", DukkanInfo[id][dBirikenPara]);
        switch(DukkanInfo[id][dSahip])
        {
            case -1: sahipstr = "Yok";
            default: format(sahipstr, sizeof(sahipstr), "%s", SQL_Isim_Cek(DukkanInfo[id][dSahip]));
        }
        new labelstr[500];
        format(labelstr, sizeof(labelstr), "{00ff00}/dukkanial\n{FF9900}Dükkan {FFFFFF}#%d\n{FF9900}Bu dükkana sahip olan oyuncu: {00ff00}%s\n{FF9900}Fiyat: {00ff00}%s\n{FF9900}Biriken Para: {00ff00}%s$", id, sahipstr, FormatMoney(DukkanInfo[id][dFiyat]), FormatMoney(DukkanInfo[id][dBirikenPara]));
        DukkanInfo[id][dLabel] = CreateDynamic3DTextLabel(labelstr, -1, DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], 30.0);
        DukkanInfo[id][dPickup] = CreateDynamicPickup(1239, 1, DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], -1);
        Iter_Add(dukkanlar, id);
        i++;
    }
    
	printf("» Toplam %d dükkan yüklendi.", i);
	return true;
}

forward CeteMekanYukle();
public CeteMekanYukle()
{
	new i, satir;
	satir = cache_num_rows();

	if(satir)
	{
	    while(i < satir)
	    {
			CeteMekanInfo[i][cmId] = i;
	        cache_get_value_name_int(i, "fiyat", CeteMekanInfo[i][cmFiyat]);
	        cache_get_value_name_int(i, "sahipcete", CeteMekanInfo[i][cmSahip]);
	        CeteMekanInfo[i][cmMevcut] = true;
	        cache_get_value_name_float(i, "X", CeteMekanInfo[i][cmX]);
	        cache_get_value_name_float(i, "Y", CeteMekanInfo[i][cmY]);
	        cache_get_value_name_float(i, "Z", CeteMekanInfo[i][cmZ]);
	        new labelstr[500];
			format(labelstr, sizeof(labelstr), "{00ff00}/mekanial\n{FF9900}Çete Mekaný {FFFFFF}#%d\n{FF9900}Bu mekana sahip olan çete: {00ff00}%s\n{FF9900}Fiyat: {00ff00}%s", i, CeteIsimCek(CeteMekanInfo[i][cmSahip]), FormatMoney(CeteMekanInfo[i][cmFiyat]));
	        CeteMekanInfo[i][cmLabel] = CreateDynamic3DTextLabel(labelstr, -1, CeteMekanInfo[i][cmX], CeteMekanInfo[i][cmY], CeteMekanInfo[i][cmZ], 60.0);
	        CeteMekanInfo[i][cmPickup] = CreateDynamicPickup(1314, 1, CeteMekanInfo[i][cmX], CeteMekanInfo[i][cmY], CeteMekanInfo[i][cmZ], -1);
	        Iter_Add(cetemekanlari, i);
	        i++;
	    }
	}
	printf("» Toplam %d çete mekaný yüklendi.", i);
	return true;
}

CMD:atmyarat(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(IsPlayerInAnyVehicle(playerid)) return Hata(playerid, "Araçtan inmelisiniz.");
	new id = Iter_Free(atmler), Float: poslarim[4];
	GetPlayerPos(playerid, poslarim[0], poslarim[1], poslarim[2]);
	GetPlayerFacingAngle(playerid, poslarim[3]);
	ATMInfo[id][aId] = id;
	ATMInfo[id][aX] = poslarim[0];
	ATMInfo[id][aY] = poslarim[1];
	ATMInfo[id][aZ] = poslarim[2];
	ATMInfo[id][aF] = poslarim[3];
	ATMInfo[id][aMevcut] = true;
	ATMInfo[id][aCP] = CreateDynamicCP(ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ], 2.0, -1, -1, -1, 100.0);
	new labelstr[500];
	format(labelstr, sizeof(labelstr), ""ad"Bitcoin ATM\n"w"Bitcoin iþlemlerini ve borsayý buradan takip edebilirsiniz.\n"ad"(%d)", id);
	ATMInfo[id][aLabel] = CreateDynamic3DTextLabel(labelstr, -1, ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ], 60.0);
    ATMInfo[id][aObje] = CreateDynamicObject(2942, ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ] - 0.5, 0, 0, ATMInfo[id][aF]);
    Iter_Add(atmler, id);
    SetPlayerPos(playerid, poslarim[0], poslarim[1], poslarim[2] + 2);
    new sql[500];
    format(sql, sizeof(sql), "INSERT INTO `atmler` (`ID`, `X`, `Y`, `Z`, `F`) VALUES ('%d', '%f', '%f', '%f', '%f')", id, poslarim[0], poslarim[1], poslarim[2], poslarim[3]);
    mysql_query(mysqlC, sql);
    SFM(playerid, -1, ""safaf"ATM baþarýyla eklendi. ID: %i", id);
	return true;
}

CMD:atmsil(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "i", id)) return Kullanim(playerid, "atmsil [ATM ÝD]");
	if(ATMInfo[id][aMevcut] == false) return Hata(playerid, "Böyle bir ATM yok!");

	new sql[500];
	format(sql, sizeof(sql), "DELETE FROM `atmler` WHERE `ID` = '%d'", id);
	mysql_query(mysqlC, sql);

	ATMInfo[id][aId] = -1;
	ATMInfo[id][aX] = -1;
	ATMInfo[id][aY] = -1;
	ATMInfo[id][aZ] = -1;
	ATMInfo[id][aF] = -1;
	DestroyDynamicCP(ATMInfo[id][aCP]);
	DestroyDynamic3DTextLabel(ATMInfo[id][aLabel]);
	DestroyDynamicObject(ATMInfo[id][aObje]);
	ATMInfo[id][aMevcut] = false;
	Iter_Remove(atmler, id);

	cmd_atmleriyenile(playerid, "");

	SFM(playerid, -1, ""safaf""ad"%d "w"ID'li ATM baþarýyla silindi.", id);
	return true;
}

CMD:atmleriyenile(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	foreach(new id: atmler)
	{
	    new sql[500];
	    format(sql, sizeof(sql), "SELECT * FROM `atmler` WHERE `ID` = '%d'", id);
	    mysql_query(mysqlC, sql);

	    if(cache_num_rows() > 0)
	    {
	    	cache_get_value_name_int(0, "ID", id);
	        cache_get_value_name_int(0, "ID", ATMInfo[id][aId]);
	        cache_get_value_name_float(0, "X", ATMInfo[id][aX]);
	        cache_get_value_name_float(0, "Y", ATMInfo[id][aY]);
	        cache_get_value_name_float(0, "Z", ATMInfo[id][aZ]);
	        cache_get_value_name_float(0, "F", ATMInfo[id][aF]);
	        ATMInfo[id][aMevcut] = true;
	        ATMInfo[id][aCP] = CreateDynamicCP(ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ], 2.0, -1, -1, -1, 100.0);
			new labelstr[500];
			format(labelstr, sizeof(labelstr), ""ad"Bitcoin ATM\n"w"Bitcoin iþlemlerini ve borsayý buradan takip edebilirsiniz.\n"ad"(%d)", id);
			ATMInfo[id][aLabel] = CreateDynamic3DTextLabel(labelstr, -1, ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ], 60.0);
			ATMInfo[id][aObje] = CreateDynamicObject(2942, ATMInfo[id][aX], ATMInfo[id][aY], ATMInfo[id][aZ] - 0.5, 0, 0, ATMInfo[id][aF]);
		}
	}
	return true;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	foreach(new i: atmler)
	{
	    if(checkpointid == ATMInfo[i][aCP])
	    {
	        cmd_btc(playerid, "");
	    }
	}
	return true;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	foreach(new i: atmler)
	{
	    if(checkpointid == ATMInfo[i][aCP])
	    {
	        ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"","","","");
	    }
	}
	return true;
}

CMD:fps(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid, "Bir araçta olmalýsýnýz.");
	if(GetPVarInt(playerid, "isur") == 0)
	{
		new p = GetPlayerVehicleID(playerid);
		obj[playerid] = CreatePlayerObject(playerid, 19300, 0.0000, -9282.9984, 10.1493, 0.0000, -1, -1, 100);
		AttachPlayerObjectToVehicle(playerid, obj[playerid], p, -0.500000, 0.000000, 0.500000, 0.000000, 0.000000, 0.000000);
		AttachCameraToPlayerObject(playerid, obj[playerid]);
		SetPVarInt(playerid, "isur", 1);
		SCM(playerid, -1, ""safaf"FPS modu "ad"açýldý.");
	}
	else if(GetPVarInt(playerid,"isur") == 1)
	{
		SetCameraBehindPlayer(playerid);
		DestroyPlayerObject(playerid, obj[playerid]);
		SetPVarInt(playerid, "isur", 0);
		SCM(playerid, -1, ""safaf"FPS modu "wb"kapatýldý.");
	}
	return true;
}

CMD:setvip(playerid, params[])
{
	new id, sure, level;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "uii", id, level, sure)) return Kullanim(playerid, "setvip [OYUNCU ÝD / ÝSÝM] [LEVEL] [GÜN]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(level < 0 || level > 3) return Hata(playerid, "En az 0, en fazla 3 level VIP verebilirsiniz.");
	if(sure < 1 || sure > 365) return Hata(playerid, "En az 1, en fazla 365 gün VIP verebilirsiniz.");
	PlayerInfo[id][dLevel] = 0;
	PlayerInfo[id][VIP] = level;
	PlayerInfo[id][VIP_Sure] = gettime() + (sure * 86400);
	SFM(playerid, -1, ""safaf""ad"%s(%d) "w"adlý oyuncuyu "ad"%d "w"günlüðüne "ad"%d "w"level VIP yaptýnýz.", getName(id), id, sure, level);
	SFM(id, -1, ""safaf"Yetkili "ad"%s(%i) "w"sizi "ad"%d "w"günlüðüne "ad"%i "w"level VIP yaptý.", getName(playerid), playerid, sure, level);
	SCM(id, -1, ""safaf""ad"/vipbilgi "w"yazarak VIP bilgilerinize bakabilirsiniz.");
	SavePlayer(id);
	return true;
}

CMD:vipsil(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "u", id)) return Kullanim(playerid, "vipsil [OYUNCU ÝSÝM / ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	PlayerInfo[id][VIP] = 0;
	PlayerInfo[id][VIP_Sure] = 0;
	SavePlayer(id);
	SFM(playerid, -1, ""safaf""ad"%s(%d) "w"adlý oyuncunun VIP yetkisini aldýnýz.", getName(id), id);
	return true;
}

CMD:vipbilgi(playerid, params[])
{
	new str[1024], strtopla[5000];
	if(PlayerInfo[playerid][VIP] < 1) return Hata(playerid, "Bu komutu kullanabilmek için VIP olmalýsýnýz.");
	strcat(strtopla, ""ww"VIP Leveli:\n");
	format(str, sizeof(str), "\t"ww"%d\n", PlayerInfo[playerid][VIP]);
	strcat(strtopla, str);
	strcat(strtopla, "\n"ww"Kalan VIP Süresi:\n");
	format(str, sizeof(str), "\t"ww"%s\n", ConvertTime(PlayerInfo[playerid][VIP_Sure] - gettime()));
	strcat(strtopla, str);
	strcat(strtopla, "\n"ww"VIP Bitiþ Zamaný:\n");
	format(str, sizeof(str), "\t"ww"%s\n\n", TarihCek(PlayerInfo[playerid][VIP_Sure]));
	strcat(strtopla, str);
	strcat(strtopla, ""ad"Baðýþýnýz için teþekkür ederiz.");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"VIP Bilgilerim", strtopla, ""ww"Kapat", "");
	return true;
}

CMD:vipbilgigoster(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid, 8);
	if(sscanf(params, "u", id)) return Kullanim(playerid, "vipbilgigoster [OYUNCU ÝSÝM / ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(PlayerInfo[id][VIP] < 1) return Hata(playerid, "Oyuncu VIP deðil.");
	new str[1024], strtopla[5000], baslik[150];

	format(baslik, sizeof(baslik), ""safaf""ad"%s "w"- VIP Bilgileri", getName(id));

	strcat(strtopla, ""ww"VIP Leveli:\n");
	format(str, sizeof(str), "\t"ww"%d\n", PlayerInfo[id][VIP]);
	strcat(strtopla, str);
	strcat(strtopla, "\n"ww"Kalan VIP Süresi:\n");
	format(str, sizeof(str), "\t"ww"%s\n", ConvertTime(PlayerInfo[id][VIP_Sure] - gettime()));
	strcat(strtopla, str);
	strcat(strtopla, "\n"ww"VIP Bitiþ Zamaný:\n");
	format(str, sizeof(str), "\t"ww"%s\n\n", TarihCek(PlayerInfo[id][VIP_Sure]));
	strcat(strtopla, str);

	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, baslik, strtopla, ""ww"Kapat", "");
	return true;
}

CMD:vips(playerid, params[])
{

	new str[256],
	line[128],
	dialog_msg[1228];
	new tmp[256];
	new count;
	foreach(new i:Player)
	{
		if(PlayerInfo[i][VIP] == 0) continue;
		count = count + 1;
	}

	switch(count)
	{
		case 0:
		{
			format(str, sizeof(str), ""safaf"Aktif VIP bulunamadý, lütfen daha sonra tekrar deneyin.");
			sesver(playerid);
			SendClientMessage(playerid, -1, str);
			return true;
		}
		case 1:
		{
			format(str, sizeof(str), ""safaf"Toplam bir VIP aktif!");
			format(line, sizeof(line), ""ww"GamerLity FR™ sunucusunda toplam bir tane VIP aktif:\n\n");
		}
		default:
		{
			format(str, sizeof(str), ""safaf"Toplam %d VIP aktif!", count);
			format(line, sizeof(line), ""ww"GamerLity FR™ sunucusunda toplam %d tane VIP aktif:\n\n", count);
		}
	}

	format(dialog_msg, sizeof(dialog_msg), "%s", line);
	count = 0;
	foreach(new i: Player)
	{
		if(PlayerInfo[i][VIP] == 0) continue;

		switch(PlayerInfo[i][VIP])
		{
			case 1: tmp = "1 Level VIP";
			case 2: tmp = "2 Level VIP";
			case 3: tmp = "3 Level VIP";
		}

		if(PlayerInfo[i][AFK] == true)
		{
            line = "{FF0000}AFK{FFFFFF}";
		}
		else
		{
		    line = "{00FF00}Müsait{FFFFFF}";
        }

		count = count + 1;

		new PlayerName[50];
		GetPlayerName(i, PlayerName, sizeof(PlayerName));
		format(dialog_msg, sizeof(dialog_msg), "%s\t"ww"%d) %s(%d) - %d level - %s\n", dialog_msg, count, PlayerName, i, PlayerInfo[i][VIP], line);
	}

	format(dialog_msg, sizeof(dialog_msg), "%s\n"ww"Eðer sunucuda bir hileci ile karþýlaþýrsan {FF0000}/rapor{FFFFFF} komutunu\nkullan.", dialog_msg);
	ShowPlayerDialog(playerid, 123, DIALOG_STYLE_MSGBOX, str, dialog_msg, ""ww"Kapat", "");
	return true;
}

stock ConvertToTurkish(txt[])
{
    new converted_txt[5000];
    strcat(converted_txt, txt);

    for (new i = 0; i < strlen(converted_txt); i++)
    {
        switch (converted_txt[i])
        {
            case 'ð': converted_txt[i] = 'g';
            case 'Ð': converted_txt[i] = 'G';
            case 'þ': converted_txt[i] = 's';
            case 'Þ': converted_txt[i] = 'S';
            case 'ý': converted_txt[i] = 'i';
            case 'ö': converted_txt[i] = 'o';
            case 'Ö': converted_txt[i] = 'O';
            case 'ç': converted_txt[i] = 'c';
            case 'Ç': converted_txt[i] = 'C';
            case 'ü': converted_txt[i] = 'u';
            case 'Ü': converted_txt[i] = 'U';
            case 'Ý': converted_txt[i] = 'I';
        }
    }
    return converted_txt;
}

CMD:cekilis(playerid, params[])
{
	if(CekilisAktif == false) return Hata(playerid, "Özellik devredýþý.");
    new hour, minute, second, year, month, day;
	gettime(hour, minute, second); getdate(year, month, day);
	if(PlayerInfo[playerid][cekilisgun] == day) return Hata(playerid, "Günlük çekiliþ hakkýnýzý doldurdunuz.");
	TogglePlayerControllable(playerid, false);
	SetTimerEx("cekilisbaslat", 1000, false, "d", playerid);
	GameTextForPlayer(playerid, "~r~~h~CEKILIS BASLIYOR...", 1000, 5);
	PlayerInfo[playerid][cekilisgun] = day;
	SavePlayer(playerid);
	return true;
}

CMD:cekilisaktif(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(CekilisAktif == true)
	{
	    CekilisAktif = false;
	    SCM(playerid, -1, ""safaf"Çekiliþ özelliði "wb"kapatýldý.");
	}
	else if(CekilisAktif == false)
	{
	    CekilisAktif = true;
	    SCM(playerid, -1, ""safaf"Çekiliþ özelliði "ad"açýldý.");
	}
	return true;
}

function cekilisbaslat(playerid)
{
	new str[256], randomm = randomEx(0, sizeof(cekilisodulleri));
	format(str, sizeof(str), "~r~~h~%s", cekilisodulleri[randomm]);
	GameTextForPlayer(playerid, str, 1000, 5);
	SetTimerEx("cekilis2", 1000, false, "i", playerid);
	return true;
}

function cekilis2(playerid)
{
	new str[256], randomm = randomEx(0, sizeof(cekilisodulleri));
	format(str, sizeof(str), "~r~~h~%s", cekilisodulleri[randomm]);
	GameTextForPlayer(playerid, str, 1000, 5);
	SetTimerEx("cekilis3", 1000, false, "i", playerid);
	return true;
}

function cekilis3(playerid)
{
	new str[256], randomm = randomEx(0, sizeof(cekilisodulleri));
	format(str, sizeof(str), "~r~~h~%s", cekilisodulleri[randomm]);
	GameTextForPlayer(playerid, str, 1000, 5);
	SetTimerEx("cekilis4", 1000, false, "i", playerid);
	return true;
}

function cekilis4(playerid)
{
	new str[256], randomm = randomEx(0, sizeof(cekilisodulleri));
	format(str, sizeof(str), "~r~~h~%s", cekilisodulleri[randomm]);
	GameTextForPlayer(playerid, str, 1000, 5);
	SetTimerEx("cekilis5", 1000, false, "i", playerid);
	return true;
}

function cekilis5(playerid)
{
	new str[256], randomm = randomEx(0, sizeof(cekilisodulleri));
	format(str, sizeof(str), "~r~~h~%s", cekilisodulleri[randomm]);
	GameTextForPlayer(playerid, str, 1000, 5);
	SetTimerEx("cekilis6", 1000, false, "i", playerid);
	return true;
}

function cekilis6(playerid)
{
	new str[256], randomm = randomEx(0, sizeof(cekilisodulleri));
	format(str, sizeof(str), "~g~~h~~h~%s KAZANDINIZ! TEBRIKLER!", cekilisodulleri[randomm]);
	GameTextForPlayer(playerid, str, 10000, 5);
	SFM(playerid, -1, ""safaf"Çekiliþten "ad"%s "w"kazandýnýz! Tebrikler!", cekilisodulleri[randomm]);
	if(randomm == 0)
	{
	    SetPlayerScore(playerid, GetPlayerScore(playerid) + 200);
	    PlayerInfo[playerid][GLKredi] += 200;
	    SavePlayer(playerid);
	}
	else if(randomm == 1)
	{
	    SetPlayerScore(playerid, GetPlayerScore(playerid) + 150);
	    PlayerInfo[playerid][GLKredi] += 100;
	    SavePlayer(playerid);
	}
	else if(randomm == 2)
	{
	    GameTextForPlayer(playerid, "~r~IFLAS!", 5000, 5);
	}
	else if(randomm == 3)
	{
	    SetPlayerScore(playerid, GetPlayerScore(playerid) + 1000);
	    GivePlayerMoney(playerid, 1000000);
	    SavePlayer(playerid);
	}
	else if(randomm == 4)
	{
	    PlayerInfo[playerid][GLKredi] += 250;
	    SavePlayer(playerid);
	}
	else if(randomm == 5)
	{
		PlayerInfo[playerid][dLevel] = 0;
		PlayerInfo[playerid][VIP] = 1;
		PlayerInfo[playerid][VIP_Sure] = gettime() + (1 * 86400);
		SCM(playerid, -1, ""safaf""ad"/vipbilgi "w"yazarak VIP bilgilerinize bakabilirsiniz.");
		SavePlayer(playerid);
	}
	else if(randomm == 6)
	{
		PlayerInfo[playerid][dLevel] = 0;
		PlayerInfo[playerid][VIP] = 1;
		PlayerInfo[playerid][VIP_Sure] = gettime() + (1 * 86400);
		SCM(playerid, -1, ""safaf""ad"/vipbilgi "w"yazarak VIP bilgilerinize bakabilirsiniz.");
		SavePlayer(playerid);
	}
	TogglePlayerControllable(playerid, true);
	return true;
}

stock Wtoupper(ch)
{
	if(ch == 'q') ch = 'Q';
	else if(ch == 'w') ch = 'W';
	else if(ch == 'e') ch = 'E';
	else if(ch == 'r') ch = 'R';
	else if(ch == 't') ch = 'T';
	else if(ch == 'y') ch = 'Y';
	else if(ch == 'u') ch = 'U';
	else if(ch == 'ý') ch = 'I';
	else if(ch == 'o') ch = 'O';
	else if(ch == 'p') ch = 'P';
	else if(ch == 'ð') ch = 'Ð';
	else if(ch == 'ü') ch = 'Ü';
	else if(ch == 'a') ch = 'A';
	else if(ch == 's') ch = 'S';
	else if(ch == 'd') ch = 'D';
	else if(ch == 'f') ch = 'F';
	else if(ch == 'g') ch = 'G';
	else if(ch == 'h') ch = 'H';
	else if(ch == 'j') ch = 'J';
	else if(ch == 'k') ch = 'K';
	else if(ch == 'l') ch = 'L';
	else if(ch == 'þ') ch = 'Þ';
	else if(ch == 'i') ch = 'Ý';
	else if(ch == 'z') ch = 'Z';
	else if(ch == 'x') ch = 'X';
	else if(ch == 'c') ch = 'C';
	else if(ch == 'v') ch = 'V';
	else if(ch == 'b') ch = 'B';
	else if(ch == 'n') ch = 'N';
	else if(ch == 'm') ch = 'M';
	else if(ch == 'ö') ch = 'Ö';
	else if(ch == 'ç') ch = 'Ç';
	return ch;
}

forward LevelAtlandiKapat(playerid);
public LevelAtlandiKapat(playerid)
{
	for(new x = 0; x < 10; x++)
	{
	    TextDrawHideForPlayer(playerid, LevelAtlandi[playerid][x]);
	}
	return true;
}

stock UpdateEXP(playerid)
{
	if(PlayerInfo[playerid][exp] >= PlayerInfo[playerid][maxexp] && PlayerInfo[playerid][Giris] == 1)
	{
	    PlayerInfo[playerid][exp] -= PlayerInfo[playerid][maxexp];
	    PlayerInfo[playerid][seviye]++;
	    PlayerInfo[playerid][maxexp] = 3630 * PlayerInfo[playerid][seviye];
	    new str[256];
	    format(str, sizeof(str), "Yeni seviye: %d", PlayerInfo[playerid][seviye]);
	    TextDrawSetString(LevelAtlandi[playerid][9], str);
		new a = 0;
		while(a < 120)
		{
			SendClientMessage(playerid, -1, " ");
			a++;
		}
	    for(new i = 0; i < 10; i++)
	    {
	        TextDrawShowForPlayer(playerid, LevelAtlandi[playerid][i]);
	    }
	    SetTimerEx("LevelAtlandiKapat", 5000, false, "d", playerid);
	    skorver(playerid, 150);
	    GivePlayerMoney(playerid, 500000);
	    SFM(playerid, -1, ""safaf"Tebrikler level atladýnýz! Yeni leveliniz: "ad"%d "wb"(+500.000$, +150 skor)", PlayerInfo[playerid][seviye]);
	}
	
	new str[500];
	format(str, sizeof(str), "Level: %d(%d/%d) EXP", PlayerInfo[playerid][seviye], PlayerInfo[playerid][exp], PlayerInfo[playerid][maxexp]);
	TextDrawSetString(exptext1[playerid], str);

	new ilk = PlayerInfo[playerid][maxexp] / 50;
	new Hesapla = PlayerInfo[playerid][exp] / ilk;

	for(new i; i < 50; i++)
	{
		if(i < Hesapla)
		{
			TextDrawColor(NEWEXPText[playerid][i], NEWEXPRenkleri[i]);
		}
		else
		{
			TextDrawColor(NEWEXPText[playerid][i], 0x66666644);
		}
		TextDrawShowForPlayer(playerid, NEWEXPText[playerid][i]);
	}
	return true;
}

CMD:adminmekani(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid, 1);
	SetPlayerPV(playerid, -536.9242, 2593.7798, 53.4141);
	SetPlayerFacingAngle(playerid, 90.6527);
	SetCameraBehindPlayer(playerid);
	SCM(playerid, -1, ""safaf"Admin mekaný adlý bölgeye gönderildiniz.");
	return true;
}

CMD:dp(playerid, params[])
{
	if(PlayerInfo[playerid][PlayerCeteID] != 1 && PlayerInfo[playerid][dLevel] < 8) return Hata(playerid, ""w"'"wb"De Piedra"w"' çetesine üye deðilsiniz!");
	SetPlayerPV(playerid, -2048.3362, -86.9568, 35.1641);
	SetPlayerFacingAngle(playerid, 182.7150);
	SetCameraBehindPlayer(playerid);
	SCM(playerid, -1, ""safaf""wb"De Piedra mekan "w"adlý bölgeye gönderildiniz.");
	return true;
}

stock YetkiliSayisi()
{
	new say = 0;
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][dLevel] > 0 || PlayerInfo[i][VIP] > 0)
	    {
	        say++;
	    }
	}
	return say;
}

stock CreateSnow(playerid)
{
	if(snowOn{playerid}) return false;
	new Float: pPossx[3];
	GetPlayerPos(playerid, pPossx[0], pPossx[1], pPossx[2]);
	for(new i = 0; i < MAX_SNOW_OBJECTS; i++) snowObject[playerid][i] = CreateDynamicObject(18864, pPossx[0] + random(25), pPossx[1] + random (25), pPossx[2] - 5, random(100), random(100), random(100), -1, -1, playerid);
	snowOn{playerid} = true;
	updateTimer{playerid} = SetTimerEx("UpdateSnow", 1000, true, "i", playerid);
	return true;
}

stock DeleteSnow(playerid)
{
	if(!snowOn{playerid}) return false;
	for(new i = 0; i < MAX_SNOW_OBJECTS; i++) DestroyDynamicObject(snowObject[playerid][i]);
	KillTimer(updateTimer{playerid});
	snowOn{playerid} = false;
	return true;
}

CB: UpdateSnow(playerid)
{
	if(!snowOn{playerid}) return false;
	new Float: pPosxx[3];
	GetPlayerPos(playerid, pPosxx[0], pPosxx[1], pPosxx[2]);
	for(new i = 0; i < MAX_SNOW_OBJECTS; i++) SetDynamicObjectPos(snowObject[playerid][i], pPosxx[0] + random(25), pPosxx[1] + random(25), pPosxx[2] - 5);
	return true;
}

CMD:komutspeclist(playerid, params[])
{

	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid,8);
    new
        string[126], string2[756], stringh[1024], stringsayac[100], id_syntax[56], sayxx;
    for(new i = 0; i < GetMaxPlayers(); i++){
    if(IsPlayerConnected(i)){
    if(GetPVarInt(i, "komutspec") == 1){
    if(i <= 9) { format(id_syntax,56,"00%i", i); }
    else if(i <= 99) { format(id_syntax,56,"0%i", i); }
    else if(i >= 100) { format(id_syntax,56,"%i", i); }
    sayxx++;
    format(string, sizeof string, ""ww"ID:\t\t"ww"Nick:\n");
    format(string2, sizeof string2, ""w"%s"ww"%s\t\t"ww"%s\n", string2, id_syntax, getName(i));
    format(stringsayac, sizeof stringsayac, ""ww"Sunucuda toplam ' "wb"%i "w"' Komut Spec görevinde yetkili bulunuyor.", sayxx);
    format(stringh, sizeof stringh, "%s%s\n%s", string, string2, stringsayac);
	}}}
    if(sayxx==0){ Hata(playerid, "Komut spec modunda olan yetkili bulunamadý."); } else { ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX,""safaf"Komut Spec Görevindekiler",stringh,""ww"Kapat",""); }
    return true;
}

stock GetDistancePlayertoPlayer(playerid, playerid2)
{
	if(!IsPlayerConnected(playerid)) return 65000;
	if(!IsPlayerConnected(playerid2)) return 65000;
	new Float: x1, Float: y1, Float: z1;
	new Float: x2, Float: y2, Float: z2;
	GetPlayerPos(playerid, x1, y1, z1);
	GetPlayerPos(playerid2, x2, y2, z2);
	new Float: dist = floatsqroot(floatpower(floatabs(floatsub(x2, x1)), 2) + floatpower(floatabs(floatsub(y2, y1)), 2) + floatpower(floatabs(floatsub(z2, z1)), 2));
	new duzhesap = floatround(dist, floatround_round);
	return duzhesap;
}

CMD:sapka(playerid, params[])
{
	if(GetPVarInt(playerid, "sapkaacik") == 0)
	{
	    SetPVarInt(playerid, "sapkaacik", 1);
	    RemovePlayerAttachedObject(playerid, 0);
	    SetPlayerAttachedObject(playerid, 0, 19066, 2, 0.120999, 0.025000, 0.004000, 90.400062, 124.299926, 0.000000, 1.000000, 1.000000, 1.000000);
	    SCM(playerid, -1, ""safaf"Yýlbaþý þapkasý "ad"açýk!");
	}
	else if(GetPVarInt(playerid, "sapkaacik") == 1)
	{
	    SetPVarInt(playerid, "sapkaacik", 0);
	    RemovePlayerAttachedObject(playerid, 0);
	    SCM(playerid, -1, ""safaf"Yýlbaþý þapkasý "wb"kapalý!");
	}
	return true;
}

OlumTextleri(playerid, olduren, sebep)
{
	new string[500];
	format(string, sizeof(string), "~y~Olduren: ~g~~h~%s", getName(olduren));
	TextDrawSetString(OlumText3[playerid], string);

	format(string, sizeof(string), "~y~Silah: ~g~~h~%s", aWeaponNames[sebep]);
	TextDrawSetString(OlumText4[playerid], string);

	format(string, sizeof(string), "~y~Mesafe: ~g~~h~%d Metre", GetDistancePlayertoPlayer(playerid, olduren));
	TextDrawSetString(OlumText5[playerid], string);

	TextDrawShowForPlayer(playerid, OlumText0);
	TextDrawShowForPlayer(playerid, OlumText1);
	TextDrawShowForPlayer(playerid, OlumText2);
	TextDrawShowForPlayer(playerid, OlumText3[playerid]);
	TextDrawShowForPlayer(playerid, OlumText4[playerid]);
	TextDrawShowForPlayer(playerid, OlumText5[playerid]);
	SetTimerEx("OlumTextleriGizle", 5000, false, "i", playerid);
	return true;
}

CB: OlumTextleriGizle(playerid)
{
	TextDrawSetString(OlumText3[playerid], " ");

	TextDrawSetString(OlumText4[playerid], " ");

	TextDrawSetString(OlumText5[playerid], " ");

	TextDrawHideForPlayer(playerid, OlumText0);
	TextDrawHideForPlayer(playerid, OlumText1);
	TextDrawHideForPlayer(playerid, OlumText2);
	TextDrawHideForPlayer(playerid, OlumText3[playerid]);
	TextDrawHideForPlayer(playerid, OlumText4[playerid]);
	TextDrawHideForPlayer(playerid, OlumText5[playerid]);
	return true;
}

forward HTTP_OnPlayerProxyCheck(playerid, response_code, data[]);
public HTTP_OnPlayerProxyCheck(playerid, response_code, data[])
{
	new ip[16];
	GetPlayerIp(playerid, ip, sizeof(ip));
	if(strcmp(ip, "127.0.0.1", true) == 0) return true;

	if(response_code == 200)
	{
		switch(data[0])
		{
			case 'Y': return CallRemoteFunction("OnPlayerProxyCheck", "isi", playerid, ip, true);
			case 'N': return CallRemoteFunction("OnPlayerProxyCheck", "isi", playerid, ip, false);
			case 'X': return printf("(Proxy Detector): invalid ip format.");
			default: return printf("The request failed! The response code was: %d", response_code);
		}
	}
	return true;
}

forward OnPlayerProxyCheck(playerid, playerip[], bool:proxy);
public OnPlayerProxyCheck(playerid, playerip[], bool:proxy)
{
	if(proxy)
	{
		kickle(playerid, "Proxy/VPN Kullanimi");
	}
	return true;
}

CB: dukkanbiriktir()
{
	foreach(new i: dukkanlar)
	{
	    if(DukkanInfo[i][dSahip] != -1)
	    {
		    DukkanInfo[i][dBirikenPara] += randomEx(1000, 2500) + (DukkanInfo[i][dFiyat] / 100);
		    new sql[500];
		    format(sql, sizeof(sql), "UPDATE `dukkanlar` SET `birikenpara` = '%d' WHERE `ID` = '%d'", DukkanInfo[i][dBirikenPara], i);
		    mysql_query(mysqlC, sql);
		    new id = GetPlayerID(SQL_Isim_Cek(DukkanInfo[i][dSahip]));
		    if(IsPlayerConnected(id))
		    {
		        SFM(id, -1, ""safaf"Dükkanýnýzda saat baþý biriken para "ad"%s$ "w"oldu.", FormatMoney(DukkanInfo[i][dBirikenPara]));
		    }
		    printf("%i ID'li dükkanýn biriken parasý: %d$", i, DukkanInfo[i][dBirikenPara]);
		    DukkanLabelGuncelle(i);
	    }
	}
	return true;
}

/*CMD:dukkancek(playerid, params[])
{
	new id;
	if(sscanf(params, "d", id)) return Kullanim(playerid, "dukkancek [DÜKKAN ÝD]");
	if(DukkanInfo[id][dMevcut] == false) return Hata(playerid, "Bu ID'de bir dükkan yok.");
	if(PlayerInfo[playerid][dukkanivar] != id) return Hata(playerid, "Bu dükkan size ait deðil.");
	if(DukkanInfo[id][dBirikenPara] == 0) return Hata(playerid, "Dükkanda hiç para birikmemiþ.");
	if(PlayerInfo[playerid][onlinet] < 43200) return Hata(playerid, "Dükkandan para çekebilmek için en az 12 saat online süreniz olmalý.");
	if(spamProtect(playerid, "dukkancek", 30)) return true;
	else {
	    GivePlayerMoney(playerid, DukkanInfo[id][dBirikenPara]);
	    SFM(playerid, -1, ""safaf"Dükkanýnýzda biriken "ad"%s$ "w"parayý baþarýyla çektiniz.", FormatMoney(DukkanInfo[id][dBirikenPara]));
	    DukkanInfo[id][dBirikenPara] = 0;
	    new sql[500];
	    format(sql, sizeof(sql), "UPDATE `dukkanlar` SET `birikenpara` = '0' WHERE `sahip` = '%s'", getName(playerid));
	    mysql_query(mysqlC, sql);
	    DukkanlariYenile();
	}
	return true;
}*/

CMD:dukkanim(playerid, params[])
{
	new id = PlayerInfo[playerid][dukkanivar], dialog[2048], str[1024];
	
	if(id == -1) return Hata(playerid, "Bir dükkanýnýz yok!");
	
	strcat(dialog, ""ww"#\t"ww"#\n");
	
	format(str, sizeof(str), ""ww"Dükkan ID:\t"ad"%s\n", FormatMoney(id));
	strcat(dialog, str);
	
	Get2DZone(DukkanInfo[id][dX], DukkanInfo[id][dY], DukkanInfo[id][dZ], getGPSForPlayer[playerid], MAX_ZONE_NAME);
	format(str, sizeof(str), ""ww"Dükkan Bölgesi:\t"ad"%s\n", getGPSForPlayer[playerid]);
	strcat(dialog, str);
	
	format(str, sizeof(str), ""ww"Dükkan Fiyatý:\t"ad"$%s\n", FormatMoney(DukkanInfo[id][dFiyat]));
	strcat(dialog, str);
	
	format(str, sizeof(str), ""ww"Dükkan Geliri:\t"ad"$%s\n", FormatMoney(DukkanInfo[id][dFiyat] / 100));
	strcat(dialog, str);
	
	format(str, sizeof(str), ""ww"Dükkan Kasasýndaki Para:\t"ad"$%s\n", FormatMoney(DukkanInfo[id][dBirikenPara]));
	strcat(dialog, str);
	
	format(str, sizeof(str), " \n");
	strcat(dialog, str);
	
	format(str, sizeof(str), ""ww"Dükkan Kasasýndaki Parayý Çek\n");
	strcat(dialog, str);
	
	format(str, sizeof(str), " \n");
	strcat(dialog, str);

	format(str, sizeof(str), ""ww"Dükkaný "wb"SAT");
	strcat(dialog, str);
	
	ShowPlayerDialog(playerid, DIALOG_DUKKANIM, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Dükkan Paneli", dialog, ""ww"Seç", ""ww"Kapat");
	return true;
}

CMD:dukkanimagit(playerid, params[])
{
	if(PlayerInfo[playerid][dukkanivar] == -1) return Hata(playerid, "Bir dükkanýnýz yok.");
	SetPlayerPos(playerid, DukkanInfo[PlayerInfo[playerid][dukkanivar]][dX], DukkanInfo[PlayerInfo[playerid][dukkanivar]][dY], DukkanInfo[PlayerInfo[playerid][dukkanivar]][dZ]);
	SetPVarInt(playerid, "dukkanaisinlandi", 1);
	if(GetPVarInt(playerid, "dukkanaisinlandi") == 0) return Hata(playerid, "Dükkanýnýz var ancak bulunamadý, "ad"lütfen yetkili birime baþvurunuz.");
	SCM(playerid, -1, ""safaf"Dükkanýnýza baþarýyla ýþýnlandýnýz.");
	SetPVarInt(playerid, "dukkanaisinlandi", 0);
	return true;
}

CMD:dukkanlar(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid, 5);
	new str[10000], toplamstr[10000], topstr[200], fiyat, id, sahipsTr[100];
	new sahip;
	mysql_query(mysqlC, "SELECT * FROM `dukkanlar` ORDER BY `ID` ASC LIMIT 20");
	new xd;
	cache_get_row_count(xd);

	dukkanlar_sayim[playerid] = 20;

	format(topstr, sizeof(topstr), ""ww"ID\t"ww"Sahip\t"ww"Fiyat\n");
	strcat(toplamstr, topstr);

	new i = 0;
	while(i < xd)
	{
	    mysql_query(mysqlC, "SELECT * FROM `dukkanlar` ORDER BY `ID` ASC LIMIT 20");
	    cache_get_value_name_int(i, "sahip", sahip);
	    cache_get_value_name_int(i, "fiyat", fiyat);
	    cache_get_value_name_int(i, "ID", id);
	    dukkanlarx[playerid][i] = id;
	    switch(sahip)
        {
            case -1: sahipsTr = "Yok";
            default: format(sahipsTr, sizeof(sahipsTr), "%s", SQL_Isim_Cek(sahip));
        }
	    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\n", str,  id, sahipsTr, FormatMoney(fiyat));
	    i++;
	}
	strcat(toplamstr, str);

	mysql_query(mysqlC, "SELECT * FROM `dukkanlar`");
	if(cache_num_rows() > dukkanlar_sayim[playerid])
	{
	    strcat(toplamstr, ""wb"» "ad"Sonraki Sayfa "wb"«");
	}

	ShowPlayerDialog(playerid, DIALOG_DUKKANGIT, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Dükkan Listesi", toplamstr, ""ww"Seç", ""ww"Çýkýþ");
	return true;
}

CMD:cetemekanlari(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 5) return YETERSIZSEVIYE(playerid, 5);
	new str[10000], toplamstr[10000], topstr[200], fiyat, id;
	new sahip;
	mysql_query(mysqlC, "SELECT * FROM `cetemekanlari` ORDER BY `ID` ASC LIMIT 20");

	cetemekan_sayim[playerid] = 20;

	format(topstr, sizeof(topstr), ""ww"ID\t"ww"Sahip\t"ww"Fiyat\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name_int(i, "sahipcete", sahip);
	    cache_get_value_name_int(i, "fiyat", fiyat);
	    cache_get_value_name_int(i, "ID", id);
	    cetemekanlarix[playerid][i] = id;
	    format(str, sizeof(str), "%s"ww"%d\t"ww"%s\t"ww"%s\n", str, id, Ceteler[sahip][cIsim], FormatMoney(fiyat));
	}

	strcat(toplamstr, topstr);
	strcat(toplamstr, str);

	mysql_query(mysqlC, "SELECT * FROM `cetemekanlari`");
	if(cache_num_rows() > cetemekan_sayim[playerid])
	    strcat(toplamstr, ""wb"» "ad"Sonraki Sayfa "wb"«");

	ShowPlayerDialog(playerid, DIALOG_CETEMEKANINAGIT, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Çete Mekaný Listesi", toplamstr, ""ww"Seç", ""ww"Çýkýþ");
	return true;
}

CMD:btc(playerid, params[]) return cmd_bitcoin(playerid, params);
CMD:bitcoin(playerid, params[])
{

	new str[500];

	format(str, sizeof(str), "\
	"ww"Bitcoin Al (Bitcoin Pazarý)\n\
	"ww"Bitcoin Sat\n\
	"ww"Bitcoin Dönüþtür\n\
	"ww"Bitcoin Bilgilerim");

	ShowPlayerDialog(playerid, DIALOG_BITCOIN_GENEL, DIALOG_STYLE_LIST, ""safaf"Bitcoin Menüsü", str, ""ww"Seç", ""ww"Kapat");
	return true;
}

CMD:setbtc(playerid, params[]) return cmd_setbitcoin(playerid, params);
CMD:setbitcoin(playerid, params[])
{

	new id, miktar;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "ui", id, miktar)) return Kullanim(playerid, "setbitcoin [OYUNCU ÝSÝM / ÝD] [MÝKTAR]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	PlayerInfo[id][BitCoin] = miktar;
	SavePlayer(id);
	SFM(playerid, -1, ""safaf""ad"%s(%d) "w"isimli oyuncunun bitcoini'ni "ad"%s "w"yaptýnýz.", getName(id), id, FormatMoney(miktar));
	SFM(id, -1, ""safaf"Yetkili "ad"%s(%d) "w"senin bitcoini'ni "ad"%s "w"yaptý.", getName(playerid), playerid, FormatMoney(miktar));
	return true;
}

CMD:givebtc(playerid, params[]) return cmd_givebitcoin(playerid, params);
CMD:givebitcoin(playerid, params[])
{

	new id, miktar;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "ui", id, miktar)) return Kullanim(playerid, "givebitcoin [OYUNCU ÝSÝM / ÝD] [MÝKTAR]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	PlayerInfo[id][BitCoin] += miktar;
	SFM(playerid, -1, ""safaf""ad"%s(%d) "w"isimli oyuncuya "ad"%s "w"bitcoin verdiniz.", getName(id), id, FormatMoney(miktar));
	SFM(id, -1, ""safaf"Yetkili "ad"%s(%d) "w"sana "ad"%s "w"bitcoin verdi.", getName(playerid), playerid, FormatMoney(miktar));
	SavePlayer(id);
	return true;
}

CMD:herkesebtcver(playerid, params[]) return cmd_herkesebitcoinver(playerid, params);
CMD:herkesebitcoinver(playerid, params[])
{

	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	new miktar, not[250];
	if(sscanf(params, "is[250]", miktar, not)) return Kullanim(playerid, "herkesebitcoinver [MÝKTAR] [NOTUNUZ]");
	foreach(new i: Player)
	{
		PlayerInfo[i][BitCoin] += miktar;
		SavePlayer(i);
	}
	format(estring, sizeof(estring), "~w~~h~~h~Yetkili ~r~~h~%s(%i) ~w~~h~~h~butun oyunculara ~r~~h~%s ~w~~h~~h~BitCoin verdi. ~r~~h~Notu: ~w~~h~~h~%s", getName(playerid), playerid, FormatMoney(miktar), code(not));
	TextMesaji(code(estring));
	return true;
}

CMD:borsaayarla(playerid, params[]) return cmd_borsadegistir(playerid, params);
CMD:borsadegistir(playerid, params[])
{

	new miktar, skor;
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "di", miktar, skor)) return Kullanim(playerid, "borsadegistir [PARA] [SKOR]");
	borsadurumpara = miktar;
	borsadurumskor = skor;
	SFM(playerid, -1, ""safaf"Borsa durumunu deðiþtirdiniz. Artýk "ad"1 bitcoin %s$ edecek.", FormatMoney(borsadurumpara * 1));
	SFM(playerid, -1, ""safaf"Borsa durumunu deðiþtirdiniz. Artýk "ad"1 bitcoin %s skor edecek.", FormatMoney(borsadurumskor * 1));
	return true;
}

CMD:giris(playerid, params[])
{
	if(PlayerInfo[playerid][Kayitli] == 1 && PlayerInfo[playerid][Giris] == 0)
	{
		new string[1024];
		format(string, sizeof(string), ""ww"Sunucuya hoþ geldin %s seni tekrar aramýzda görmek çok güzel!", getName(playerid));
		SendClientMessage(playerid, -1, string);
		SendClientMessage(playerid, -1, ""ww"Þifreni yazarak oyuna giriþ yapabilirsin!");
		SCM(playerid, -1, ""ww"Þifreni 30 saniye içinde girmezsen sunucudan atýlacaksýn.");
		format(string, sizeof(string), "\\c"ww"Sunucuya hoþ geldin %s, seni tekrar aramýzda görmek çok güzel!\n\\c"ww"Þifreni yazarak oyuna giriþ yapabilirsin!\n\\c"ww"Þifreni 30 saniye içinde girmezsen sunucudan atýlacaksýn.", getName(playerid));
		ShowPlayerDialog(playerid, DIALOGID0+2, DIALOG_STYLE_PASSWORD, ""safaf"Giriþ", string, ""ww"Giriþ", "");
		SetTimerEx("kickzamani", 30000, false, "d", playerid);
	}
	return true;
}

CMD:asaylist(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 1) return YETERSIZSEVIYE(playerid, 1);
	ShowPlayerDialog(playerid, DIALOG_ASAYLIST_SECIM, DIALOG_STYLE_LIST, ""safaf"Asay List - Seçim", ""ww"Genel Bilgilendirme\n"ww"Etkinlik", ""ww"Giriþ", ""ww"Kapat");
	return true;
}

CMD:aracparasut(playerid, params[])
{

	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid, "Bir araçta deðilsiniz.");
	new Float: x, Float: y, Float: z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	if(z > 0) return Hata(playerid, "Düþüþte deðilisiniz.");
	if(spamProtect(playerid, "aracparasut", 15)) return true;
	ParasutObje[playerid] = CreateDynamicObject(2903, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
	AttachDynamicObjectToVehicle(ParasutObje[playerid], GetPlayerVehicleID(playerid), 0.084999, 0.000000, 7.969058, -1.004999, -1.004999, -91.335014);
	SendClientMessage(playerid, -1, ""safaf"Paraþüt açýldý!");
	Update[playerid] = SetTimerEx("Guncelle", 500, true, "d", playerid);
	return true;
}

CB: Guncelle(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
		DestroyDynamicObject(ParasutObje[playerid]);
	    return KillTimer(Update[playerid]);
	}
	new Float: x, Float: y, Float: z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	if(z >= 0)
	{
		DestroyDynamicObject(ParasutObje[playerid]);
	    return KillTimer(Update[playerid]);
	}
	static vid, Float: tx, Float: ty;
	vid = GetPlayerVehicleID(playerid);
	tx = ty = 0.0;
	SetVehicleVelocity(vid, (tx / 10.0), (ty / 10.0), -0.6);
	return true;
}

CMD:topseviye(playerid, params[]) return cmd_toplevel(playerid, params);
CMD:toplevel(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new sql[500], str[1024], topstr[500], toplastr[2048], isim[500], olum;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `seviye` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"Level\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim, 500);
	    cache_get_value_name_int(i, "seviye", olum);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%s\n", str, i + 1, isim, FormatMoney(olum));
	}

	strcat(toplastr, topstr);
	strcat(toplastr, str);

	ShowPlayerDialog(playerid, DIALOG_TOPTABLOLAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Level", toplastr, ""ww"Kapat", "");
	return true;
}

CMD:topbtc(playerid, params[]) return cmd_topbitcoin(playerid, params);
CMD:topbitcoin(playerid, params[])
{
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][Giris] == 1)
	    {
	        SavePlayer(i);
	    }
	}
	new sql[500], str[1024], topstr[500], toplastr[2048], isim[500], olum;
	format(sql, sizeof(sql), "SELECT * FROM `oyuncular` ORDER BY `BitCoin` DESC LIMIT 10");
	mysql_query(mysqlC, sql);

	format(topstr, sizeof(topstr), ""ww"Sýralama\t"ww"Oyuncu Ýsmi\t"ww"BTC Sayýsý\n");

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "kullaniciadi", isim, 500);
	    cache_get_value_name_int(i, "BitCoin",olum);
	    format(str, sizeof(str), "%s"ww"%i\t"ww"%s\t"ww"%s\n", str, i + 1, isim, FormatMoney(olum));
	}

	strcat(toplastr, topstr);
	strcat(toplastr, str);

	ShowPlayerDialog(playerid, DIALOG_TOPTABLOLAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Top Bitcoin", toplastr, ""ww"Kapat", "");
	return true;
}

CMD:sanspaketleri(playerid, params[])
{

	new str[1024];
	strcat(str, ""ww"Paket\t"ww"Fiyat\n");
	strcat(str, ""ww"Küçük Boy Þans Paketi\t"ww"5 BTC\n");
	strcat(str, ""ww"Orta Boy Þans Paketi\t"ww"10 BTC\n");
	strcat(str, ""ww"Büyük Boy Þans Paketi\t"ww"15 BTC\n");
	ShowPlayerDialog(playerid, DIALOG_SANSPAKETLERI, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Þans Paketleri", str, ""ww"Aç", ""ww"Kapat");
	return true;
}

CB: KucukSansPaketiAktif(playerid)
{
	if(KucukSansPaketiSayim[playerid] == 85)
	{
	    new kazandigi = GetPVarInt(playerid, "KucukSansPaketiSonSayi");
	    if(kazandigi == 0)
	    {
	        SetPlayerScore(playerid, GetPlayerScore(playerid) + 50);
	    } else if(kazandigi == 1)
	    {
	        GivePlayerMoney(playerid, 100000);
	    } else if(kazandigi == 2)
	    {
	        PlayerInfo[playerid][BitCoin] += 1;
		} else if(kazandigi == 3)
		{
		    SetPlayerScore(playerid, GetPlayerScore(playerid) + 30);
		} else if(kazandigi == 4)
		{
		    GivePlayerMoney(playerid, 300000);
		}
	    SFM(playerid, -1, ""safaf""ad"%s "w"kazandýnýz!", KucukSansPaketiOduller[GetPVarInt(playerid, "KucukSansPaketiSonSayi")]);
	    return KillTimer(KucukSansPaketiTimer[playerid]);
	}
    new str[1024];
    new sansinaa = random(sizeof(KucukSansPaketiOduller));
    for(new i; i < sizeof(KucukSansPaketiOduller); i++)
    {
        if(i == sansinaa)
        {
            format(str, sizeof(str), "%s"ww"{FF0004}%s\n", str, KucukSansPaketiOduller[i]);
        } else {
            format(str, sizeof(str), "%s"ww"{00FFFB}%s\n", str, KucukSansPaketiOduller[i]);
		}
    }
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Küçük Þans Paketi Açýlýmý", str, ""ww"Lutfen", ""ww"Bekleyiniz");
    SetPVarInt(playerid, "KucukSansPaketiSonSayi", sansinaa);
    KucukSansPaketiSayim[playerid]++;
	return true;
}

CB: OrtaSansPaketiAktif(playerid)
{
	if(OrtaSansPaketiSayim[playerid] == 85)
	{
		new kazandigi = GetPVarInt(playerid, "OrtaSansPaketiSonSayi");
	    if(kazandigi == 0)
	    {
	        SetPlayerScore(playerid, GetPlayerScore(playerid) + 100);
	    } else if(kazandigi == 1)
	    {
	        PlayerInfo[playerid][GLKredi] += 85;
	    } else if(kazandigi == 2)
	    {
	        PlayerInfo[playerid][BitCoin] += 3;
		} else if(kazandigi == 3)
		{
		    GivePlayerMoney(playerid, 1000000);
		} else if(kazandigi == 4)
		{
		    SetPlayerScore(playerid, GetPlayerScore(playerid) + 150);
		}
	    SFM(playerid, -1, ""safaf""ad"%s "w"kazandýnýz!", OrtaSansPaketiOduller[GetPVarInt(playerid, "OrtaSansPaketiSonSayi")]);
	    return KillTimer(OrtaSansPaketiTimer[playerid]);
	}
    new str[1024];
    new sansinaa = random(sizeof(OrtaSansPaketiOduller));
    for(new i; i < sizeof(OrtaSansPaketiOduller); i++)
    {
        if(i == sansinaa)
        {
            format(str, sizeof(str), "%s"ww"{FF0004}%s\n", str, OrtaSansPaketiOduller[i]);
        } else {
            format(str, sizeof(str), "%s"ww"{00FFFB}%s\n", str, OrtaSansPaketiOduller[i]);
		}
    }
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Orta Þans Paketi Açýlýmý", str, ""ww"Lutfen", ""ww"Bekleyiniz");
    SetPVarInt(playerid, "OrtaSansPaketiSonSayi", sansinaa);
    OrtaSansPaketiSayim[playerid]++;
	return true;
}

CB: BuyukSansPaketiAktif(playerid)
{
	if(BuyukSansPaketiSayim[playerid] == 85)
	{
		new kazandigi = GetPVarInt(playerid, "BuyukSansPaketiSonSayi");
	    if(kazandigi == 0)
	    {
	        SetPlayerScore(playerid, GetPlayerScore(playerid) + 250);
	    } else if(kazandigi == 1)
	    {
	        SetPlayerScore(playerid, GetPlayerScore(playerid) + 500);
	    } else if(kazandigi == 2)
	    {
	        PlayerInfo[playerid][BitCoin] += 5;
		} else if(kazandigi == 3)
		{
		    GivePlayerMoney(playerid, 5000000);
		} else if(kazandigi == 4)
		{
		    if(PlayerInfo[playerid][dLevel] == 0)
		    {
			    PlayerInfo[playerid][VIP_Sure] = gettime() + (1 * 86400);
			    PlayerInfo[playerid][VIP] = 1;
		    }
		}
	    SFM(playerid, -1, ""safaf""ad"%s "w"kazandýnýz!", BuyukSansPaketiOduller[GetPVarInt(playerid, "BuyukSansPaketiSonSayi")]);
	    return KillTimer(BuyukSansPaketiTimer[playerid]);
	}
    new str[1024];
    new sansinaa = random(sizeof(BuyukSansPaketiOduller));
    for(new i; i < sizeof(BuyukSansPaketiOduller); i++)
    {
        if(i == sansinaa)
        {
            format(str, sizeof(str), "%s"ww"{FF0004}%s\n", str, BuyukSansPaketiOduller[i]);
        } else {
            format(str, sizeof(str), "%s"ww"{00FFFB}%s\n", str, BuyukSansPaketiOduller[i]);
		}
    }
    ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Büyük Þans Paketi Açýlýmý", str, ""ww"Lutfen", ""ww"Bekleyiniz");
    SetPVarInt(playerid, "BuyukSansPaketiSonSayi", sansinaa);
    BuyukSansPaketiSayim[playerid]++;
	return true;
}

CMD:vipdaireler(playerid, params[])
{

	if(PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][DaireIzin] != 1) return YETERSIZSEVIYE(playerid, 1);
	SetPlayerPV(playerid, -2158.6370, 1352.7582, 7.2283);
	SCM(playerid, -1, ""safaf"VIP Dairelerin olduðu bölgeye gönderildiniz.");
	return true;
}

CMD:vipgirisac(playerid, params[])
{

	if(PlayerInfo[playerid][VIP] < 1 && PlayerInfo[playerid][dLevel] < 8 && PlayerInfo[playerid][DaireIzin] != 1) return YETERSIZSEVIYE(playerid, 1);
	MoveDynamicObject(vipdairegiris, -2152.5166, 1361.7246, 13.7669, 2.0);
	SCM(playerid, -1, ""safaf"Kapý açýlýyor...");
	SetTimerEx("VIPKapiKapat", 5000, false, "d", playerid);
	return true;
}

CB: VIPKapiKapat(playerid)
{
	MoveDynamicObject(vipdairegiris, -2152.5747, 1361.8062, 8.3808, 2.0);
	SCM(playerid, -1, ""safaf"Kapý kapanýyor...");
	return true;
}

CMD:etksayisi(playerid, params[])
{
	new id;
	if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid, 6);
	if(sscanf(params, "u", id)) return Kullanim(playerid, "etksayisi [OYUNCU ÝSÝM / ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(PlayerInfo[id][dLevel] < 1) return Hata(playerid, "Oyuncu görevli deðil!");
	SFM(playerid, -1, ""safaf""ad"%s(%d) "w"adlý görevlinin günlük etkinlik yapma sayýsý: "wb"%d", getName(id), id, PlayerInfo[id][GunlukEtk]);
	return true;
}

CMD:daireizinver(playerid, params[])
{

	new id, deger;
	if(PlayerInfo[playerid][dLevel] < 8) return YETERSIZSEVIYE(playerid, 8);
	if(sscanf(params, "ud", id, deger)) return Kullanim(playerid, "daireizinver [OYUNCU ÝSÝM / ÝD] [DEÐER]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(PlayerInfo[id][DaireIzin] != 0) return Hata(playerid, "Oyuncunun zaten dairelere girme izni var.");
	if(PlayerInfo[id][VIP] != 0) return Hata(playerid, "Oyuncu zaten VIP.");
	PlayerInfo[id][DaireIzin] = deger;
	SFM(playerid, -1, ""safaf"GamerLity FR Konutlarýna giriþ iznini "ad"%s(%d) "w"adlý oyuncuya verdiniz.", getName(id), id);
	return true;
}

CB: bilgitextdrawi()
{
	//AltTextler[6]
    TextDrawSetString(AltTextler[6], code(Textdraw_Random_Mesajlar[random(sizeof(Textdraw_Random_Mesajlar))]));
	return true;
}

CMD:derbykatil(playerid, params[])
{
	if(Derbyde[playerid] == true) return Hata(playerid, "Zaten derbydesin.");
	if(DerbyOyunculari >= 10) return Hata(playerid, "Derby'nin oyuncu sýrýný dolmuþ.");
	if(DerbyAktif == false && DerbyBasladi == false) cmd_derbybaslatdsakfmsad(playerid, "");
	if(DerbyAktif == false && DerbyBasladi == true) return Hata(playerid, "Derby þu anda oynanýyor.");
	Derbyde[playerid] = true;
	ResetPlayerWeapons(playerid);
	SetPlayerVirtualWorld(playerid, 45);
	HideModelSelectionMenu(playerid);
	switch(DerbyMap)
	{
	    case 0:
	    {
	        switch(DerbyOyunculari)
	        {
	            case 0:
	            {
					SetPlayerPos(playerid, 423.8255, 3487.7175, 58.1102); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 176.2341); ResetPlayerWeapons(playerid);
				}
				case 1:
				{
					SetPlayerPos(playerid, 421.9863, 3462.4016, 58.1086); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 175.9207); ResetPlayerWeapons(playerid);
				}
				case 2:
				{
					SetPlayerPos(playerid, 420.0581, 3435.3623, 58.1083); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 175.9207); ResetPlayerWeapons(playerid);
				}
				case 3:
				{
					SetPlayerPos(playerid, 436.6864, 3430.3550, 63.4012); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 355.1491); ResetPlayerWeapons(playerid);
				}
				case 4:
				{
					SetPlayerPos(playerid, 438.6910, 3454.3079, 63.4061); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 355.7758); ResetPlayerWeapons(playerid);
				}
				case 5:
				{
					SetPlayerPos(playerid, 440.5679, 3479.7180, 63.4084); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 355.7758); ResetPlayerWeapons(playerid);
				}
				case 6:
				{
					SetPlayerPos(playerid, 424.2181, 3488.9431, 68.6381); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 87.8967); ResetPlayerWeapons(playerid);
				}
				case 7:
				{
					SetPlayerPos(playerid, 406.5315, 3489.4790, 68.5479); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 176.8841); ResetPlayerWeapons(playerid);
				}
				case 8:
				{
					SetPlayerPos(playerid, 404.6685, 3466.1768, 68.5439); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 175.0041); ResetPlayerWeapons(playerid);
				}
				case 9:
				{
					SetPlayerPos(playerid, 403.0526, 3431.9424, 68.5773); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
                    SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
                    SetPlayerFacingAngle(playerid, 269.3184); ResetPlayerWeapons(playerid);
				}
			}
	    }
	    case 1:
	    {
	        switch(DerbyOyunculari)
	        {
	            case 0:
	            {
					SetPlayerPos(playerid, 1398.8990,3649.7090,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 358.6352); ResetPlayerWeapons(playerid);
	            }
	            case 1:
	            {
					SetPlayerPos(playerid, 1390.3307,3650.3911,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 358.3218); ResetPlayerWeapons(playerid);
	            }
	            case 2:
	            {
					SetPlayerPos(playerid, 1394.4653,3659.1926,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 266.5143); ResetPlayerWeapons(playerid);
	            }
	            case 3:
	            {
					SetPlayerPos(playerid, 1398.6622,3669.1455,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 351.7418); ResetPlayerWeapons(playerid);
	            }
	            case 4:
	            {
					SetPlayerPos(playerid, 1399.7349,3680.5911,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 357.0685); ResetPlayerWeapons(playerid);
	            }
	            case 5:
	            {
					SetPlayerPos(playerid, 1400.3239,3692.1030,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 357.0685); ResetPlayerWeapons(playerid);
	            }
	            case 6:
	            {
					SetPlayerPos(playerid, 1400.8892,3703.1572,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 357.0685); ResetPlayerWeapons(playerid);
	            }
	            case 7:
	            {
					SetPlayerPos(playerid, 1407.9672,3703.8723,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 268.7078); ResetPlayerWeapons(playerid);
	            }
	            case 8:
	            {
					SetPlayerPos(playerid, 1415.6267,3696.4980,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 175.9602); ResetPlayerWeapons(playerid);
	            }
	            case 9:
	            {
					SetPlayerPos(playerid, 1415.4061,3682.8955,58.1060); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 180.0336); ResetPlayerWeapons(playerid);
	            }
	        }
	    }
	    case 2:
	    {
	        switch(DerbyOyunculari)
	        {
	            case 0:
	            {
					SetPlayerPos(playerid, 4004.0188,-80.4025,39.0285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 358.6354); ResetPlayerWeapons(playerid);
	            }
	            case 1:
	            {
					SetPlayerPos(playerid, 4004.1897,-52.4389,39.0285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 0.2021); ResetPlayerWeapons(playerid);
	            }
	            case 2:
	            {
					SetPlayerPos(playerid, 4004.2947,-15.7112,39.0285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 1.4554); ResetPlayerWeapons(playerid);
	            }
	            case 3:
	            {
					SetPlayerPos(playerid, 4012.1567,-0.6377,39.0285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 268.7079); ResetPlayerWeapons(playerid);
	            }
	            case 4:
	            {
					SetPlayerPos(playerid, 4047.1819,-5.1162,39.0108); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 221.7074); ResetPlayerWeapons(playerid);
	            }
	            case 5:
	            {
					SetPlayerPos(playerid, 4068.2935,-1.3401,39.0285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 268.7078); ResetPlayerWeapons(playerid);
	            }
	            case 6:
	            {
					SetPlayerPos(playerid, 4090.7803,-1.2921,39.1285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 270.2744); ResetPlayerWeapons(playerid);
	            }
	            case 7:
	            {
					SetPlayerPos(playerid, 4118.2769,-2.0499,39.1285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 181.6003); ResetPlayerWeapons(playerid);
	            }
	            case 8:
	            {
					SetPlayerPos(playerid, 4119.2544,-37.1387,39.0285); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 181.6003); ResetPlayerWeapons(playerid);
	            }
	            case 9:
	            {
					SetPlayerPos(playerid, 4093.2378,-34.0798,38.5032); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 131.7798); ResetPlayerWeapons(playerid);
	            }
	        }
		}
		case 3:
		{
	        switch(DerbyOyunculari)
	        {
	            case 0:
	            {
					SetPlayerPos(playerid, 3844.7659,2101.4607,158.0999); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 1.8068); ResetPlayerWeapons(playerid);
	            }
	            case 1:
	            {
					SetPlayerPos(playerid, 3838.0598,2100.6697,158.0998); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 89.7015); ResetPlayerWeapons(playerid);
	            }
	            case 2:
	            {
					SetPlayerPos(playerid, 3805.2188,2106.8672,158.0986); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 359.8285); ResetPlayerWeapons(playerid);
	            }
	            case 3:
	            {
					SetPlayerPos(playerid, 3809.7898,2100.0547,158.0987); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 268.8717); ResetPlayerWeapons(playerid);
	            }
	            case 4:
	            {
					SetPlayerPos(playerid, 3805.7268,2138.2822,158.0835); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 322.3688); ResetPlayerWeapons(playerid);
	            }
	            case 5:
	            {
					SetPlayerPos(playerid, 3819.2837,2160.8652,158.0996); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 45.9014); ResetPlayerWeapons(playerid);
	            }
	            case 6:
	            {
					SetPlayerPos(playerid, 3818.6401,2154.5396,158.1014); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 135.9419); ResetPlayerWeapons(playerid);
	            }
	            case 7:
	            {
					SetPlayerPos(playerid, 3825.8792,2155.2896,158.1018); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 227.5950); ResetPlayerWeapons(playerid);
	            }
	            case 8:
	            {
					SetPlayerPos(playerid, 3825.5586,2162.2322,158.0987); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 318.2473); ResetPlayerWeapons(playerid);
	            }
	            case 9:
	            {
					SetPlayerPos(playerid, 3840.8218,2179.8789,158.0980); Derbyde[playerid] = true; TogglePlayerControllable(playerid, 0); DerbyOyunculari++;
					SetTimerEx("DerbyAracVerim", 1500, false, "d", playerid);
					SetPlayerFacingAngle(playerid, 144.3664); ResetPlayerWeapons(playerid);
	            }
     		}
        }
	}
	SetCameraBehindPlayer(playerid);
	format(estring, sizeof estring, "~r~~h~[DERBY] ~w~~h~~h~%s(%i) adli oyuncu derby'e katildi! ~r~~h~(/derby)", getName(playerid), playerid);
	TextMesaji(code(estring));
	return true;
}

CMD:derby(playerid, params[])
{
	cmd_derbykatil(playerid, "");
	return true;
}

CMD:derbyayril(playerid, params[])
{
	if(Derbyde[playerid] != true) return Hata(playerid, "Zaten derby'de deðilsiniz.");
	Derbyde[playerid] = false;
	DerbyOyunculari--;
	OnPlayerSpawn(playerid);
	SCM(playerid, -1, ""safaf"Baþarýyla derby'den ayrýldýnýz.");
	return true;
}

CMD:derbybaslatdsakfmsad(playerid, params[])
{

	if(DerbyAktif == true || DerbyBasladi == true) return Hata(playerid, "Derby zaten aktif.");
	new String[128], string[50];
	format(String, sizeof(String), "~r~~h~[DERBY] ~w~~h~~h~Derby az sonra baslayacak! ~r~~h~(/derby)");
    TextMesaji(code(String));
    format(string, sizeof(string), "~r~~h~/derby");
    GameTextForAll(string, 5000, 1);
	DerbyOyunculari = 0;
	DerbyMap = random(3);
	DerbyAktif = true;
	DerbyBasladi = false;
	SetTimer("DerbyReklam", 15000, false);
	SetTimer("DerbyKatilimBitir", 30000, false);
	return true;
}

CB: DerbyReklam()
{
	new String[128], string[50];
	format(String, sizeof(String), "~r~~h~[DERBY] ~w~~h~~h~Derby az sonra baslayacak! ~r~~h~(/derby)");
    TextMesaji(code(String));
    format(string, sizeof(string), "~r~~h~/derby");
    GameTextForAll(string, 5000, 1);
	return true;
}

CB: DerbyKatilimBitir()
{
    new String[256];
	if(OnlineDerby() <= 1)
	{
	    DerbyAktif = false;
	    DerbyBasladi = false;
	    DerbyMap = -1;
	    DerbyOyunculari = 0;
	    foreach(new i: Player)
	    {
	        if(Derbyde[i] == true)
	        {
		        destroyVehicle(i);
		    	Derbyde[i] = false;
		    	TogglePlayerControllable(i, 1);
		    	OnPlayerSpawn(i);
	    	}
	    }
		format(String, sizeof(String), "~r~~h~[DERBY] ~w~~h~~h~Derby, yetersiz oyuncu katilimindan dolayi iptal oldu.");
        return TextMesaji(code(String));
	}

	DerbyAktif = false;
	DerbyBasladi = true;
	format(String, sizeof(String), "~r~~h~[DERBY] ~w~~h~~h~Derby'e katilim sona erdi!");
	TextMesaji(code(String));
	foreach(new i: Player)
	{
	    if(Derbyde[i] == true)
	    {
	    	PlayerInfo[i][Etkinlik_Sayac] = 6;
			KillTimer(PlayerInfo[i][Etkinlik_Timer]);
		 	PlayerInfo[i][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", i);
	    }
	}
	return true;
}

CB: DerbyKontrol()
{
	if(OnlineDerby() == 0 && DerbyBasladi == true)
	{
	    foreach(new i: Player)
	    {
	        Derbyde[i] = false;
	    }
	    DerbyAktif = false;
        DerbyBasladi = false;
        DerbyMap = -1;
        DerbyOyunculari = 0;
	}
	
	if(OnlineDerby() == 1 && DerbyBasladi == true)
	{
	    foreach(new i: Player)
	    {
	        if(Derbyde[i] == true)
	        {
	            SCM(i, -1, ""safaf"Derby'i "ad"kazandýnýz!");
	            SetPlayerScore(i, GetPlayerScore(i) + 10);
	            GivePlayerMoney(i, 10000);
	            PlayerInfo[i][GLKredi] += 5;
	            Derbyde[i] = false;
	            destroyVehicle(i);
	            OnPlayerSpawn(i);

	            DerbyAktif = false;
	            DerbyBasladi = false;
	            DerbyMap = -1;
	            DerbyOyunculari = 0;

			    new String[128];
			    format(String, sizeof(String), "~r~~h~[DERBY] ~w~~h~~h~%s(%i) adli oyuncu Derby'i kazandi! ~r~~h~(5 skor, $10.000, 5 GLKredi)", getName(i), i);
				TextMesaji(code(String));
	        }
	    }
	}

	foreach(new x: Player)
	{
	    if(Derbyde[x] == true && IsPlayerWater(x) && DerbyBasladi == true)
	    {
	        destroyVehicle(x);
	        SCM(x, -1, ""safaf"Derby'den "wb"elendiniz.");
	        Derbyde[x] = false;
	        OnPlayerSpawn(x);
	    }
	}
	return true;
}

CB: DerbyAracVerim(playerid)
{
	CreatePlayerVehicle(playerid, 415);
	return true;
}

CMD:cik(playerid, params[])
{
	if(GunGamedeAmk[playerid] == true)
	{
		GunGamedeAmk[playerid] = false;
		GunGameSkor[playerid] = 0;

		SetPlayerVirtualWorld(playerid, 0);
		OnPlayerSpawn(playerid);

		SCM(playerid,-1,""safaf"Baþarýyla gun game'den ayrýldýn.");
	}
	else if(HungerGamede[playerid] == 1)
	{
		SetPlayerVirtualWorld(playerid,0);
		HungerGamede[playerid] = 0;
		OnPlayerSpawn(playerid);
		SCM(playerid,-1,""safaf"Baþarýyla Hunger Game'den ayrýldýnýz.");
	}
	else if(Zombiede[playerid] == 1)
	{
		Zombiede[playerid] = 0;
		ZombieTeamHuman[playerid] = 0;
		ZombieTeamZombie[playerid] = 0;
		OnPlayerSpawn(playerid);
		SCM(playerid, -1, ""safaf"Zombie'den ayrýldýnýz.");
	}
	else if(CSDe[playerid] == 1)
	{
		CSDe[playerid] = 0;
		CSTeamT[playerid] = 0;
		CSTeamCT[playerid] = 0;
		OnPlayerSpawn(playerid);
		SCM(playerid,-1,""safaf"Baþarýyla CS Minigame'den ayrýldýnýz.");
	}
	else if(lEtkinlikte[playerid] == 1 || lKatildim[playerid] == 1)
	{
		lKatildim[playerid] = 0;
		lEtkinlikte[playerid] = 0;
		TogglePlayerControllable(playerid, true);
		OnPlayerSpawn(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		SCM(playerid, -1, ""safaf"Etkinlikten ayrýldýnýz.");
	}
	else if(PlayerInfo[playerid][Parkour] == true)
	{
		PlayerInfo[playerid][Parkour] = false;
		DMZoneOyuncuModu[playerid] = YOK;
		DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid,true);
		OnPlayerSpawn(playerid);
		SCM(playerid,-1,""safaf"Parkur'dan ayrýldýnýz.");
	}
	else if(duelloda[playerid] == true)
	{
	    new kazanan = GetPVarInt(playerid, "duello_davetatilan");
	    duelloda[kazanan] = false;
	    duelloda[playerid] = false;
	    OnPlayerSpawn(kazanan);
	    OnPlayerSpawn(playerid);
	    GivePlayerMoney(kazanan, GetPVarInt(playerid, "duello_para"));
	    SetPlayerScore(kazanan, GetPlayerScore(kazanan) + GetPVarInt(playerid, "duello_skor"));
	    GivePlayerMoney(playerid, -GetPVarInt(playerid, "duello_para"));
	    SetPlayerScore(playerid, GetPlayerScore(playerid) - GetPVarInt(playerid, "duello_skor"));
	    SFM(kazanan, -1, ""safaf"Tebrikler! Düelloyu kazandýnýz ve "ad"%s skor + %s$ "w"kazandýnýz.", FormatMoney(GetPVarInt(playerid, "duello_skor")), FormatMoney(GetPVarInt(playerid, "duello_para")));
	    SFM(playerid, -1, ""safaf"Düelloyu kaybettiniz. "wb"-%s skor ve -%s$", FormatMoney(GetPVarInt(playerid, "duello_skor")), FormatMoney(GetPVarInt(playerid, "duello_para")));
	}
	else if(isCbug[playerid] == 1)
	{
		ccount[0][playerid] = 0; ccount[1][playerid] = 0; ccount[2][playerid] = 0; ccount[3][playerid] = 0;
		isCbug[playerid] = 0;
		SetPVarInt(playerid,"God",0);
		SetPlayerVirtualWorld(playerid,0);
		OnPlayerSpawn(playerid);
		SCM(playerid, -1, ""safaf"C-Bug sayacýndan baþarýyla ayrýldýnýz.");
	}
	else if(Derbyde[playerid] == true)
	{
	    DerbyOyunculari--;
		Derbyde[playerid] = false;
		OnPlayerSpawn(playerid);
		SCM(playerid, -1, ""safaf"Baþarýyla derby'den ayrýldýnýz.");
	}
	else if(Speedydeaglede[playerid] == true)
	{
		destroyVehicle(playerid);
		Speedydeaglede[playerid] = false;
		SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 1);
		SetPlayerHealth(playerid, 100.0);
		SetPlayerArmour(playerid, 100.0);
		SetPVarInt(playerid, "God", 0);
		OnPlayerSpawn(playerid);
		SCM(playerid, -1, ""safaf"Speedy Deagle'den baþarýyla ayrýldýnýz.");
	}
	else if(dmde[playerid] != 0)
	{
		SetPlayerVirtualWorld(playerid, 0);
		dmyasagi[playerid] = 0;
		SetPlayerInterior(playerid,0);
		dmde[playerid] = 0;
		OnPlayerSpawn(playerid);
		SCM(playerid, -1, ""safaf"DM'den baþarýyla ayrýldýnýz.");
	}
	else if(Yarista[playerid] == true)
	{
	    Yarista[playerid] = false;
	    DisableRemoteVehicleCollisions(playerid, false);
	    SetPlayerVirtualWorld(playerid, 0);
		OnPlayerSpawn(playerid);
		CPDurum[playerid] = 1;
		DisablePlayerRaceCheckpoint(playerid);
		new Yaristalar = 0;
		foreach(new i: Player)
		{
		    if(Yarista[i] == true)
		    {
		        Yaristalar++;
		    }
		}
		if(Yaristalar == 0)
		{
		    KillTimer(RaceTextGuncelle_Timer);
		    YarisBasladi = false;
		    YarisAktif = false;
		}
	    
		for(new i = 0; i < 8; i++)
		{
		    TextDrawHideForPlayer(playerid, Yaris_Top5[i]);
		}
		
		for(new i = 0; i < 4; i++)
	    {
	        TextDrawHideForPlayer(playerid, YarisBilgiText[playerid][i]);
	    }
		
		SCM(playerid, -1, ""safaf"Baþarýyla yarýþtan ayrýldýnýz.");
	}
	else
	{
	    Hata(playerid, "Bir oyunda deðilsiniz!");
	}
	return true;
}

CMD:hakkimizda(playerid, params[])
{
	new str[10000];
	strcat(str, ""ww"GamerLity, 14 Aralýk 2013 tarihinde kurulmuþ olan CXE (Conquer x Emotion) Gaming'in devamý niteliðinde olup Türk online oyun ve oyuncu platformudur.\n\n");
	strcat(str, ""ww"2013 yýlýndan bugüne kadar geliþmekte olan ve hala geliþen GamerLity’in temel amaç ve hedefi, bu platformu tekrar eðlenceli bir hale getirebilmek,\n");
	strcat(str, "platformun bir kazanç kaynaðý deðil bir eðlence kaynaðý olduðu algýsýný tüm kiþi ve kiþilere aþýlamaktýr. GamerLity hizmetlerini gün geçtikte daha da\n");
	strcat(str, "kaliteli hale getirmek için uðraþýyor. Yaklaþýk 5 yýldýr sizlere online oyun sunucusu hizmeti veriyoruz.\n");
	strcat(str, "\n"ww"El velhasýl GamerLity vizyonu ve misyonu doðrultusunda emin adýmlarla yoluna devam ediyor, edecek...");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, ""safaf"Hakkýmýzda", str, ""ww"Kapat", "");
	return true;
}

CMD:arkadaslarim(playerid, params[])
{
	new sql[500], arkadas_isim[MAX_PLAYER_NAME], str[500], durum[128], arkadas_id, toplastr[1024];
	format(sql, sizeof(sql), "SELECT * FROM `arkadaslar` WHERE `kullanici` = '%s'", getName(playerid));
	mysql_query(mysqlC, sql);

	SetPVarInt(playerid, "arkadas_sonsatir", cache_num_rows());

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name(i, "arkadas", arkadas_isim);
	    cache_get_value_name_int(i, "ID", arkadas_id);
	    Arkadaslar[playerid][i] = arkadas_id;
	    switch(IsPlayerConnected(GetPlayerID(arkadas_isim)))
	    {
	        case 0:
	        {
	            durum = ""wb"Offline";
	        }
	        case 1:
	        {
	            durum = ""ad"Online";
	        }
	    }
	    format(str, sizeof(str), "%s"ww"%s\t"ww"%s\n", str, arkadas_isim, durum);
	}

	strcat(toplastr, ""ww"Ýsim\t"ww"Durum\n");
	strcat(toplastr, str);
	strcat(toplastr, ""ww""ad"Arkadaþ ekle\n");
	strcat(toplastr, ""ww""ad"Arkadaþ sil\n");

	ShowPlayerDialog(playerid, DIALOG_ARKADASLARIM, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Arkadaþlarým", toplastr, ""ww"Iþýnlan", ""ww"Kapat");
	return true;
}

stock OnlineOyuncularr()
{
	new sayi;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        sayi++;
	    }
	}
	return sayi;
}

forward belegecir(cetid, pid, bolgid);
public belegecir(cetid, pid, bolgid)
{
	new string[200], string2[200];
	if(YanindakiUyeler(pid) >= 6*bolgebilgi[bolgid][bolgeseviye] && YanindakiYLider(pid) >= 1*bolgebilgi[bolgid][bolgeseviye] && IsPlayerConnected(pid) && IsPlayerInDynamicArea(pid, bolgebilgi[bolgid][bolgezone2]))
	{
	    bolgebilgi[bolgid][kalanzaman]--;
	    format(string, sizeof(string), "~r~~h~%d ~w~~h~~h~Saniye sonra ~g~~h~%s ~w~~h~~h~bolgesini ele gecireceksiniz.", bolgebilgi[bolgid][kalanzaman], bolgebilgi[bolgid][bolgeisim]);
	    format(string2, sizeof(string2), "~r~~h~%d ~w~~h~~h~Saniye sonra ~g~~h~%s ~w~~h~~h~bolgesini kaybedeceksiniz.", bolgebilgi[bolgid][kalanzaman], bolgebilgi[bolgid][bolgeisim]);
	    foreach(new i: Player)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInDynamicArea(i, bolgebilgi[bolgid][bolgezone2]) && PlayerInfo[i][PlayerCeteID] == PlayerInfo[pid][PlayerCeteID])
	            {
	                TextDrawHideForPlayer(i, elegecirme[i]);
	                TextDrawSetString(elegecirme[i], string);
	                TextDrawShowForPlayer(i, elegecirme[i]);
	            }
	            else if(IsPlayerInDynamicArea(i, bolgebilgi[bolgid][bolgezone2]) && PlayerInfo[i][PlayerCeteID] == bolgebilgi[bolgid][sahipceteid] && bolgebilgi[bolgid][sahipceteid] != -1)
	            {
	                TextDrawHideForPlayer(i, elegecirme[i]);
	                TextDrawSetString(elegecirme[i], string2);
	                TextDrawShowForPlayer(i, elegecirme[i]);
	            }
	        }
	    }
	    if(bolgebilgi[bolgid][kalanzaman] < 1)
	    {
	        KillTimer(bolgebilgi[bolgid][elegecirmetimer]);
	        GangZoneStopFlashForAll(bolgebilgi[bolgid][bolgezone]);
	        bolgebilgi[bolgid][bolgesaldiri] = false;
	        bolgebilgi[bolgid][bolgesaldiran] = -1;
	        if(bolgebilgi[bolgid][sahipceteid] != -1)
	        {
	            format(string,sizeof(string),""safaf""ad"%s "w"isimli çete "ad"'%s' "w"bölgenizi ele geçirdi.", Ceteler[PlayerInfo[pid][PlayerCeteID]][cIsim], bolgebilgi[bolgid][bolgeisim]);
	            CetedekilereMesaj(bolgebilgi[bolgid][sahipceteid], string);
	        }
	        format(string,sizeof(string),""safaf"Çeteniz "ad"%s "w"bölgesini ele geçirdi.", bolgebilgi[bolgid][bolgeisim]);
	        CetedekilereMesaj(PlayerInfo[pid][PlayerCeteID], string);
	        foreach(new p: Player)
	        {
	            if(IsPlayerConnected(p))
	            {
	                RemovePlayerMapIcon(p, bolgid);
	                if(IsPlayerInDynamicArea(p, bolgebilgi[bolgid][bolgezone2]) && (PlayerInfo[p][PlayerCeteID] == cetid || PlayerInfo[p][PlayerCeteID] == bolgebilgi[bolgid][sahipceteid]))
	                {
	                    TextDrawHideForPlayer(p, elegecirme[p]);
	                }
	            }
	        }
	        bolgeelegecirildi(cetid, bolgid);
	    }
	}
	else
	{
	    BolgeSavasBitir(bolgid);
	}
	return true;
}

stock BolgeleriYukle()
{
	new sql[500], max_id;
	format(sql, sizeof(sql), "SELECT * FROM `bolgeler` ORDER BY `bolgeid` DESC LIMIT 500");
	mysql_query(mysqlC, sql);

	cache_get_value_name_int(0, "bolgeid", max_id);

	for(new i = 0; i < max_id; i++)
	{
	    BolgeYukle(i);
	}
	return true;
}

forward BolgeSayisi();
public BolgeSayisi()
{
	new cekrow;
	cache_get_row_count(cekrow);
	bolgecount = cekrow;
	printf("» Toplam %d bölge yüklendi !", bolgecount);
	return true;
}

stock trcar(car[])
{
	new tmp[MAX_STRING];
	set(tmp, car);
	tmp = strreplace("ð", "g", tmp);
	tmp = strreplace("|", "", tmp);
	tmp = strreplace("Ð", "G", tmp);
	tmp = strreplace("þ", "s", tmp);
	tmp = strreplace("Þ", "S", tmp);
	tmp = strreplace("ý", "i", tmp);
	tmp = strreplace("I", "I", tmp);
	tmp = strreplace("Ý", "I", tmp);
	tmp = strreplace("ö", "o", tmp);
	tmp = strreplace("Ö", "O", tmp);
	tmp = strreplace("ç", "c", tmp);
	tmp = strreplace("Ç", "C", tmp);
	tmp = strreplace("ü", "u", tmp);
	tmp = strreplace("Ü", "U", tmp);
	return tmp;
}

forward BolgeYukle(BolgeID);
public BolgeYukle(BolgeID)
{
	new query[400];
	format(query, sizeof(query), "SELECT * FROM `bolgeler` WHERE `bolgeid` = '%d'", BolgeID);
	mysql_query(mysqlC, query);
	new BolgeRows;
	cache_get_row_count(BolgeRows);
	if(BolgeRows)
	{
	    cache_get_value_name_int(0, "bolgeid", bolgebilgi[BolgeID][bolgeid]);
	    cache_get_value_name(0, "bolgeisim", bolgebilgi[BolgeID][bolgeisim], 30);
	    cache_get_value_name_int(0, "sahipceteid", bolgebilgi[BolgeID][sahipceteid]);
     	cache_get_value_name(0, "sahipname", bolgebilgi[BolgeID][sahipname], 30);
	    cache_get_value_name_int(0, "bolgeseviye", bolgebilgi[BolgeID][bolgeseviye]);
	    cache_get_value_name_int(0, "bolgerenk", bolgebilgi[BolgeID][bolgerenk]);
	    cache_get_value_name_float(0, "bolgex", bolgebilgi[BolgeID][koorx]);
	    cache_get_value_name_float(0, "bolgey", bolgebilgi[BolgeID][koory]);
	    cache_get_value_name_float(0, "bolgez", bolgebilgi[BolgeID][koorz]);
     	DestroyDynamic3DTextLabel(bolgebilgi[BolgeID][bolgeyazi]);
     	DestroyDynamicArea(bolgebilgi[BolgeID][bolgezone2]);
	    bolgebilgi[BolgeID][bolgezone] = GangZoneCreate(bolgebilgi[BolgeID][koorx] - 45, bolgebilgi[BolgeID][koory] - 45, bolgebilgi[BolgeID][koorx] + 45, bolgebilgi[BolgeID][koory] + 45);
		new string[300];
	    format(string, sizeof(string), ""ad"%s\n"ww"Bölge Sahibi: %s\n"ww"Bölge Seviyesi: "ad"%d",bolgebilgi[BolgeID][bolgeisim], bolgebilgi[BolgeID][sahipname], bolgebilgi[BolgeID][bolgeseviye]);
	    bolgebilgi[BolgeID][bolgeyazi] = CreateDynamic3DTextLabel(string, -1, bolgebilgi[BolgeID][koorx], bolgebilgi[BolgeID][koory], bolgebilgi[BolgeID][koorz] + 1, 80.0, .worldid = 0);
	    //bolgebilgi[BolgeID][bolgezone2] = CreateDynamicRectangle(bolgebilgi[BolgeID][koorx]-45, bolgebilgi[BolgeID][koory]-45, bolgebilgi[BolgeID][koorx]+45, bolgebilgi[BolgeID][koory]+45, 0, 0);
        bolgebilgi[BolgeID][bolgezone2] = CreateDynamicCuboid(bolgebilgi[BolgeID][koorx]-45, bolgebilgi[BolgeID][koory]-45, bolgebilgi[BolgeID][koorz]-15, bolgebilgi[BolgeID][koorx]+45, bolgebilgi[BolgeID][koory]+45, bolgebilgi[BolgeID][koorz]+15, 0,0);
	}
	foreach(new z: Player)
	{
	    for(new i; i < bolgecount + 1; i++)
	    {
		    switch(bolgebilgi[i][bolgerenk])
		    {
	        	case 1: GangZoneShowForPlayer(z, bolgebilgi[i][bolgezone], 0xAA3333AA);
	        	case 2: GangZoneShowForPlayer(z, bolgebilgi[i][bolgezone], 0xFFFF00AA);
	        	case 3: GangZoneShowForPlayer(z, bolgebilgi[i][bolgezone], 0x0000BBAA);
	        	case 4: GangZoneShowForPlayer(z, bolgebilgi[i][bolgezone], 0x33AA33AA);
	        	case 5: GangZoneShowForPlayer(z, bolgebilgi[i][bolgezone], 0xFFFFFFAA);
	        	default: GangZoneShowForPlayer(z, bolgebilgi[i][bolgezone], 0xAA3333AA);
	        }
	    }
    }
	return true;
}

CMD:bolgesaldiri(playerid, params[])
{
	new string[400];
    if(PlayerInfo[playerid][PlayerCeteID] == -1 || PlayerInfo[playerid][PlayerCeteRutbeID] != 9) return Hata(playerid, "Bu komutu kullanabilmek için "ad"'ÇETE LÝDERÝ' "w"olmalýsýn.");
    new zoneid = GetBolgeID(playerid);
	if(zoneid == -1) return Hata(playerid, "Bu komutu kullanabilmek için herangi bir bölgenin üstünde olmalýsýnýz.");
	if(bolgebilgi[zoneid][bolgesaldiri] == true) return Hata(playerid, "Bu bölge zaten ele geçiriliyor!");
	if(YanindakiUyeler(playerid) < 6*bolgebilgi[zoneid][bolgeseviye] || YanindakiYLider(playerid) < 1*bolgebilgi[zoneid][bolgeseviye])
	{
	    format(string, sizeof(string), ""safaf"Bu bölgeyi ele geçirmek için "ad"1 Çete Kurucusu + "ad"%d Çete Kurucu Yardýmcýsý + "ad"%d Üye "w"gerekiyor.", 1*bolgebilgi[zoneid][bolgeseviye], 6*bolgebilgi[zoneid][bolgeseviye]);
	    SendClientMessage(playerid, -1, string);
	    return true;
	}
	if(YanindakiUyeler(playerid) == 0)
	{
	    Hata(playerid, "Yanýnýzdaki üye sayýsý yetersiz.");
	    return true;
	}
	if(YanindakiYLider(playerid) == 0)
	{
	    Hata(playerid, "Yanýnýzdaki çete kurucu yardýmcýsý sayýsý yetersiz.");
	    return true;
	}
	if(bolgebilgi[zoneid][sahipceteid] == PlayerInfo[playerid][PlayerCeteID]) return Hata(playerid, "Bölge zaten sizin çetenize ait.");
	bolgebilgi[zoneid][elegecirmetimer] = SetTimerEx("belegecir", 1000, true, "ddd", PlayerInfo[playerid][PlayerCeteID], playerid, zoneid);
	bolgebilgi[zoneid][kalanzaman] = 90 * bolgebilgi[zoneid][bolgeseviye];
	bolgebilgi[zoneid][bolgesaldiri] = true;
	bolgebilgi[zoneid][bolgesaldiran] = PlayerInfo[playerid][PlayerCeteID];
	if(bolgebilgi[zoneid][sahipceteid] != -1)
	{
		format(string, sizeof(string), ""safaf""ad"%s "w"isimli çete "ad"'%s' "w"isimli bölgenize saldýrýyor. Git ve bölgeni koru!", Ceteler[PlayerInfo[playerid][PlayerCeteID]][cIsim], bolgebilgi[zoneid][bolgeisim]);
		CetedekilereMesaj(bolgebilgi[zoneid][sahipceteid], string);
	}
	format(string, sizeof(string), ""safaf"Çeteniz "ad"%s "w"adlý bölgeye saldýrý yapýyor! Yardýmda bulunmalýsýn!", bolgebilgi[zoneid][bolgeisim]);
	CetedekilereMesaj(PlayerInfo[playerid][PlayerCeteID], string);
	switch(bolgebilgi[zoneid][bolgerenk])
 	{
 		case 1: GangZoneFlashForAll(bolgebilgi[zoneid][bolgezone], 0xAA3333FF);
  		case 2: GangZoneFlashForAll(bolgebilgi[zoneid][bolgezone], 0xFFFF00FF);
    	case 3: GangZoneFlashForAll(bolgebilgi[zoneid][bolgezone], 0x0000BBFF);
    	case 4: GangZoneFlashForAll(bolgebilgi[zoneid][bolgezone], 0x33AA33FF);
    	case 5: GangZoneFlashForAll(bolgebilgi[zoneid][bolgezone], 0xFFFFFFFF);
    	default: GangZoneFlashForAll(bolgebilgi[zoneid][bolgezone], 0xAA3333FF);
  	}
  	foreach(new i: Player)
  	{
		if(IsPlayerConnected(i))
		{
		    SetPlayerMapIcon(i, zoneid, bolgebilgi[zoneid][koorx], bolgebilgi[zoneid][koory], bolgebilgi[zoneid][koorz], 62, 0, MAPICON_GLOBAL);
		}
  	}
	return true;
}

CMD:bolgeekle(playerid, params[])
{
	new bolgename[30];
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	if(sscanf(params, "s[30]", bolgename)) return Kullanim(playerid, "bolgeekle [BÖLGE ÝSMÝ]");
	if(bolgecount >= MAX_BOLGE) return Hata(playerid, "Sunucu maksimum bölge limitine ulaþtý.");
	new Float: posx, Float: posy, Float: posz;
	GetPlayerPos(playerid, posx, posy, posz);
	new query[500];
	format(query, sizeof(query), "INSERT INTO `bolgeler` (`bolgeisim`, `bolgex`, `bolgey`, `bolgez`, `bolgerenk`) VALUES ('%s', '%f', '%f', '%f', '2')", trcar(bolgename), posx, posy, posz);
	mysql_query(mysqlC, query);
	new insertx = cache_insert_id();
	BolgeYukle(insertx);
	SCM(playerid, -1, ""safaf"Bölge baþarý ile eklendi.");
	bolgecount++;
	return true;
}

CMD:bolgesil(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
    new SilinecekBolge = GetBolgeID(playerid);
    if(SilinecekBolge == -1) return Hata(playerid, "Herhangi bir bölgede deðilsiniz.");
    if(bolgebilgi[SilinecekBolge][bolgesaldiri] == true) return Hata(playerid, "Bu bölge ele geçiriliyor, þu anda silemezsiniz.");
    new query[150], gangid;
    format(query, sizeof(query), "SELECT * FROM `bolgeler` WHERE `bolgeid` = '%d'", SilinecekBolge);
    mysql_query(mysqlC, query);
    cache_get_value_name_int(0, "sahipceteid", gangid);
    if(gangid > 0)
    {
		Ceteler[gangid][cetebolgesayisi]--;
        format(query, sizeof(query), "UPDATE `ceteler` SET `cetebolgesayisi` = '%d' WHERE `ID` = '%d'", Ceteler[gangid][cetebolgesayisi], gangid + 1);
        mysql_query(mysqlC, query);
    }
    format(query, sizeof(query), "DELETE FROM `bolgeler` WHERE `bolgeid` = '%d'", SilinecekBolge);
    mysql_query(mysqlC, query);
    GangZoneDestroy(bolgebilgi[SilinecekBolge][bolgezone]);
    DestroyDynamic3DTextLabel(bolgebilgi[SilinecekBolge][bolgeyazi]);
   	DestroyDynamicArea(bolgebilgi[SilinecekBolge][bolgezone2]);
   	bolgebilgi[SilinecekBolge][koorx] = 0.0;
   	bolgebilgi[SilinecekBolge][koory] = 0.0;
   	bolgebilgi[SilinecekBolge][koorz] = 0.0;
   	bolgebilgi[SilinecekBolge][sahipceteid] = -1;
   	SCM(playerid, -1, ""safaf"Bölgeyi baþarýlý bir þekilde sildiniz.");
	return true;
}

CMD:bolgemenu(playerid)
{
	new zoneid = GetBolgeID(playerid);
	if(PlayerInfo[playerid][PlayerCeteID] == -1 || PlayerInfo[playerid][PlayerCeteRutbeID] < 9) return Hata(playerid, "Bu komutu kullanabilmek için "ad"'ÇETE LÝDERÝ' "w"olmalýsýnýz.");
	if(zoneid == -1) return Hata(playerid, "Herhangi bir bölgenin üstünde olmalýsýn.");
	if(bolgebilgi[zoneid][sahipceteid] != PlayerInfo[playerid][PlayerCeteID]) return Hata(playerid, "Bu bölge sizin çetenize ait deðil.");
	if(bolgebilgi[zoneid][bolgesaldiri] == true) return Hata(playerid, "Bunu bölge savaþtayken yapamazsýn.");
	ShowPlayerDialog(playerid, 94, DIALOG_STYLE_LIST, ""safaf"Bölge Yönetim Paneli", ""ww"Bölge Ýsmini Deðiþtir\n"ww"Bölgeyi Seviye Atlat\n"ww"Bölge Rengini Deðiþtir", ""ww"Seç", ""ww"Kapat");
	return true;
}

stock BolgeSavasBitir(bolgid)
{
	new string[200];
    KillTimer(bolgebilgi[bolgid][elegecirmetimer]);
    bolgebilgi[bolgid][bolgesaldiri] = false;
    GangZoneStopFlashForAll(bolgebilgi[bolgid][bolgezone]);
    format(string, sizeof(string), ""safaf"Çeteniz "ad"%s "w"isimli bölgeyi ele geçiremedi.",bolgebilgi[bolgid][bolgeisim]);
    CetedekilereMesaj(bolgebilgi[bolgid][bolgesaldiran], string);
    if(bolgebilgi[bolgid][sahipceteid] != -1)
    {
	    format(string,sizeof(string),""safaf"%s "w"isimli çete "ad"'%s' "w"isimli bölgenizi ele geçiremedi.", Ceteler[bolgebilgi[bolgid][bolgesaldiran]][cIsim], bolgebilgi[bolgid][bolgeisim]);
	    CetedekilereMesaj(bolgebilgi[bolgid][sahipceteid], string);
    }
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        RemovePlayerMapIcon(i, bolgid);
	        TextDrawHideForPlayer(i, elegecirme[i]);
	    }
	}
	bolgebilgi[bolgid][bolgesaldiran] = -1;
	return true;
}

stock YanindakiUyeler(playerid)
{
	new yanindauyeler;
	new zoneid = GetBolgeID(playerid);
	if(zoneid == -1) return true;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(IsPlayerInDynamicArea(i, bolgebilgi[zoneid][bolgezone2]) && PlayerInfo[i][AFK] == false && PlayerInfo[i][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
	        {
	            yanindauyeler++;
	        }
	    }
	}
	return yanindauyeler;
}

stock YanindakiYLider(playerid)
{
	new yanindaylider;
	new zoneid = GetBolgeID(playerid);
	if(zoneid == -1) return true;
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(IsPlayerInDynamicArea(i, bolgebilgi[zoneid][bolgezone2]) && PlayerInfo[i][PlayerCeteRutbeID] >= 8 && PlayerInfo[i][AFK] == false && PlayerInfo[i][PlayerCeteID] == PlayerInfo[playerid][PlayerCeteID])
	        {
	            yanindaylider++;
	        }
	    }
	}
	return yanindaylider;
}

stock GetBolgeID(playerid)
{
	for(new i; i < MAX_BOLGE; i++)
	{
	    if(IsPlayerInDynamicArea(playerid, bolgebilgi[i][bolgezone2])) return i;
	}
	return -1;
}

stock bolgeelegecirildi(gangid, AlinanBolgeID)
{
	new query[512];
	if(bolgebilgi[AlinanBolgeID][sahipceteid] != -1)
	{
	    Ceteler[bolgebilgi[AlinanBolgeID][sahipceteid]][cetebolgesayisi]--;
	    format(query, sizeof(query), "UPDATE `ceteler` SET `cetebolgesayisi` = '%d' WHERE `ID` = '%d'", Ceteler[bolgebilgi[AlinanBolgeID][sahipceteid]][cetebolgesayisi], bolgebilgi[AlinanBolgeID][sahipceteid] + 1);
	    mysql_query(mysqlC, query);
	}
	format(query, sizeof(query), "UPDATE `bolgeler` SET `sahipceteid` = '%d',`sahipname` = '%s' WHERE `bolgeid` = '%d'", gangid, Ceteler[gangid][cIsim], AlinanBolgeID);
	mysql_query(mysqlC, query);
	Ceteler[gangid][cetebolgesayisi]++;
	format(query, sizeof(query), "UPDATE `ceteler` SET `cetebolgesayisi` = '%d' WHERE `ID` = '%d'", Ceteler[gangid][cetebolgesayisi], gangid + 1);
	mysql_query(mysqlC, query);
	bolgebilgi[AlinanBolgeID][sahipceteid] = gangid;
	format(bolgebilgi[AlinanBolgeID][sahipname], 30, "%s", Ceteler[gangid][cIsim]);
	BolgeYukle(AlinanBolgeID);

	new duyuruxxx[850];
	format(duyuruxxx, sizeof(duyuruxxx), "~r~~h~[BOLGE SALDIRISI] %s ~w~~h~~h~isimli cete ~r~~h~%s ~w~~h~~h~isimli bolgeyi ele gecirdi.", Ceteler[gangid][cIsim], bolgebilgi[AlinanBolgeID][bolgeisim]);
	TextMesaji(code(duyuruxxx));
	return true;
}

CMD:e(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 2) return YETERSIZSEVIYE(playerid, 1);
	new str[10000];
	strcat(str, ""ww"Komut\t"ww"Açýklama\n");
	strcat(str, ""ww"/etkolustur\t"ww"Bir etkinlik oluþturmanýzý saðlar.\n");
	strcat(str, ""ww"/ecevir\t"ww"Yanýnýzdaki oyuncularý baktýðýnýz yöne çevirir.\n");
	strcat(str, ""ww"/ecevirarac\t"ww"Yanýnýzdaki oyuncularýn araçlarýný baktýðýnýz yöne çevirir.\n");
	strcat(str, ""ww"/eduzeltarac\t"ww"Yanýnýzdaki oyuncularýn araçlarý ters döndüyse düzeltir.\n");
	strcat(str, ""ww"/etamirarac\t"ww"Yanýnýzdaki oyuncularýn araçlarýný tamir eder.\n");
	strcat(str, ""ww"/esiralaetraf\t"ww"Yanýnýzdaki oyuncularý etrafýnýzda sýralar.\n");
	strcat(str, ""ww"/esiralaaracici\t"ww"Yanýnýzdaki oyuncularý araç verecek mesafe ile sýralar.\n");
	strcat(str, ""ww"/esiralaarac\t"ww"Yanýnýzdaki oyuncularýn araçlarýný sýralar.\n");
	strcat(str, ""ww"/esiralaon\t"ww"Yanýnýzdaki oyuncularý önünüze sýralar.\n");
	strcat(str, ""ww"/esiralaarka\t"ww"Yanýnýzdaki oyuncularý arkanýza sýralar.\n");
	strcat(str, ""ww"/ecek\t"ww"Etkinlikte olmayan bir oyuncuyu etkinliðe çeker.\n");
	strcat(str, ""ww"/eodul\t"ww"Etkinliði kazanan oyuncuya ödül verir.\n");
	strcat(str, ""ww"/ebitir\t"ww"Etkinliði bitirir.\n");
	strcat(str, ""ww"/egodcar\t"ww"Yanýnýzdaki oyuncularýn araçlarýný ölümsüz yapar.\n");
	strcat(str, ""ww"/eann\t"ww"Etkinlikteki oyunculara duyuru yapar.\n");
	strcat(str, ""ww"/earenk\t"ww"Yanýnýzdaki oyuncularýn araç rengini ayarlar.\n");
	strcat(str, ""ww"/eacek\t"ww"Bir oyuncuyu etkinliðe aracýyla birlikte çeker.\n");
	strcat(str, ""ww"/emotorengeli\t"ww"Yanýnýzdakilerin motordan inmesini engeller.\n");
	strcat(str, ""ww"/earacengeli\t"ww"Yanýnýzdakilerin araçtan inmesini engeller.\n");
	strcat(str, ""ww"/ekill\t"ww"Yanýnýzdakileri öldürür.\n");
	strcat(str, ""ww"/espawn\t"ww"Yanýnýzdakileri spawnlar.\n");
	strcat(str, ""ww"/eeject\t"ww"Yanýnýzdakileri araçtan çýkartýr.\n");
	strcat(str, ""ad">>>>>>>> DÝÐER SAYFA\n");
	ShowPlayerDialog(playerid, ETK_KOMUTLARI, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Etkinlik Komutlarý (1/2)", str, ""ww"Kapat", "");
	return true;
}

stock TextYukleEx(playerid)
{
	YarisBilgiText[playerid][0] = TextDrawCreate(146.164001, 342.250000, "box");
	TextDrawLetterSize(YarisBilgiText[playerid][0], 0.000000, 7.142021);
	TextDrawTextSize(YarisBilgiText[playerid][0], 283.000000, 0.000000);
	TextDrawAlignment(YarisBilgiText[playerid][0], 1);
	TextDrawColor(YarisBilgiText[playerid][0], -1);
	TextDrawUseBox(YarisBilgiText[playerid][0], 1);
	TextDrawBoxColor(YarisBilgiText[playerid][0], 51);
	TextDrawSetShadow(YarisBilgiText[playerid][0], 0);
	TextDrawSetOutline(YarisBilgiText[playerid][0], 0);
	TextDrawBackgroundColor(YarisBilgiText[playerid][0], 255);
	TextDrawFont(YarisBilgiText[playerid][0], 1);
	TextDrawSetProportional(YarisBilgiText[playerid][0], 1);
	TextDrawSetShadow(YarisBilgiText[playerid][0], 0);

	YarisBilgiText[playerid][1] = TextDrawCreate(215.036575, 351.583282, "~r~~h~Checkpoint: ~g~~h~15/20");
	TextDrawLetterSize(YarisBilgiText[playerid][1], 0.266470, 1.279165);
	TextDrawAlignment(YarisBilgiText[playerid][1], 2);
	TextDrawColor(YarisBilgiText[playerid][1], -1);
	TextDrawSetShadow(YarisBilgiText[playerid][1], 0);
	TextDrawSetOutline(YarisBilgiText[playerid][1], 1);
	TextDrawBackgroundColor(YarisBilgiText[playerid][1], 34);
	TextDrawFont(YarisBilgiText[playerid][1], 1);
	TextDrawSetProportional(YarisBilgiText[playerid][1], 1);
	TextDrawSetShadow(YarisBilgiText[playerid][1], 0);

	YarisBilgiText[playerid][2] = TextDrawCreate(214.236526, 389.485595, "~r~~h~Sira: ~g~~h~1st");
	TextDrawLetterSize(YarisBilgiText[playerid][2], 0.266470, 1.279165);
	TextDrawAlignment(YarisBilgiText[playerid][2], 2);
	TextDrawColor(YarisBilgiText[playerid][2], -1);
	TextDrawSetShadow(YarisBilgiText[playerid][2], 0);
	TextDrawSetOutline(YarisBilgiText[playerid][2], 1);
	TextDrawBackgroundColor(YarisBilgiText[playerid][2], 34);
	TextDrawFont(YarisBilgiText[playerid][2], 1);
	TextDrawSetProportional(YarisBilgiText[playerid][2], 1);
	TextDrawSetShadow(YarisBilgiText[playerid][2], 0);

	YarisBilgiText[playerid][3] = TextDrawCreate(215.036575, 370.584442, "~r~~h~Sure: ~g~~h~1 dakika 10 saniye");
	TextDrawLetterSize(YarisBilgiText[playerid][3], 0.266470, 1.279165);
	TextDrawAlignment(YarisBilgiText[playerid][3], 2);
	TextDrawColor(YarisBilgiText[playerid][3], -1);
	TextDrawSetShadow(YarisBilgiText[playerid][3], 0);
	TextDrawSetOutline(YarisBilgiText[playerid][3], 1);
	TextDrawBackgroundColor(YarisBilgiText[playerid][3], 34);
	TextDrawFont(YarisBilgiText[playerid][3], 1);
	TextDrawSetProportional(YarisBilgiText[playerid][3], 1);
	TextDrawSetShadow(YarisBilgiText[playerid][3], 0);

	RaceDuel_Gosterge[playerid][0] = TextDrawCreate(150.849212, 349.250061, "box");
	TextDrawLetterSize(RaceDuel_Gosterge[playerid][0], 0.000000, 8.172767);
	TextDrawTextSize(RaceDuel_Gosterge[playerid][0], 317.000000, 0.000000);
	TextDrawAlignment(RaceDuel_Gosterge[playerid][0], 1);
	TextDrawColor(RaceDuel_Gosterge[playerid][0], -1);
	TextDrawUseBox(RaceDuel_Gosterge[playerid][0], 1);
	TextDrawBoxColor(RaceDuel_Gosterge[playerid][0], 51);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][0], 0);
	TextDrawSetOutline(RaceDuel_Gosterge[playerid][0], 0);
	TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][0], 255);
	TextDrawFont(RaceDuel_Gosterge[playerid][0], 1);
	TextDrawSetProportional(RaceDuel_Gosterge[playerid][0], 1);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][0], 0);

	RaceDuel_Gosterge[playerid][1] = TextDrawCreate(231.903381, 359.166534, "~r~~h~Checkpoint: ~g~~h~1");
	TextDrawLetterSize(RaceDuel_Gosterge[playerid][1], 0.289897, 1.226664);
	TextDrawAlignment(RaceDuel_Gosterge[playerid][1], 2);
	TextDrawColor(RaceDuel_Gosterge[playerid][1], -1);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][1], 0);
	TextDrawSetOutline(RaceDuel_Gosterge[playerid][1], 1);
	TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][1], 51);
	TextDrawFont(RaceDuel_Gosterge[playerid][1], 1);
	TextDrawSetProportional(RaceDuel_Gosterge[playerid][1], 1);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][1], 0);

	RaceDuel_Gosterge[playerid][2] = TextDrawCreate(231.903381, 378.416717, "~r~~h~Sira: ~g~~h~1st");
	TextDrawLetterSize(RaceDuel_Gosterge[playerid][2], 0.289897, 1.226664);
	TextDrawAlignment(RaceDuel_Gosterge[playerid][2], 2);
	TextDrawColor(RaceDuel_Gosterge[playerid][2], -1);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][2], 0);
	TextDrawSetOutline(RaceDuel_Gosterge[playerid][2], 1);
	TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][2], 51);
	TextDrawFont(RaceDuel_Gosterge[playerid][2], 1);
	TextDrawSetProportional(RaceDuel_Gosterge[playerid][2], 1);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][2], 0);

	RaceDuel_Gosterge[playerid][3] = TextDrawCreate(231.903381, 398.250335, "~r~~h~Vites: ~g~~h~5");
	TextDrawLetterSize(RaceDuel_Gosterge[playerid][3], 0.289897, 1.226664);
	TextDrawAlignment(RaceDuel_Gosterge[playerid][3], 2);
	TextDrawColor(RaceDuel_Gosterge[playerid][3], -1);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][3], 0);
	TextDrawSetOutline(RaceDuel_Gosterge[playerid][3], 1);
	TextDrawBackgroundColor(RaceDuel_Gosterge[playerid][3], 51);
	TextDrawFont(RaceDuel_Gosterge[playerid][3], 1);
	TextDrawSetProportional(RaceDuel_Gosterge[playerid][3], 1);
	TextDrawSetShadow(RaceDuel_Gosterge[playerid][3], 0);

	LevelAtlandi[playerid][0] = TextDrawCreate(183.645645, 46.499977, "box");
	TextDrawLetterSize(LevelAtlandi[playerid][0], 0.000000, 10.046852);
	TextDrawTextSize(LevelAtlandi[playerid][0], 454.000000, 0.000000);
	TextDrawAlignment(LevelAtlandi[playerid][0], 1);
	TextDrawColor(LevelAtlandi[playerid][0], -1);
	TextDrawUseBox(LevelAtlandi[playerid][0], 1);
	TextDrawBoxColor(LevelAtlandi[playerid][0], 1768515993);
	TextDrawSetShadow(LevelAtlandi[playerid][0], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][0], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][0], 255);
	TextDrawFont(LevelAtlandi[playerid][0], 1);
	TextDrawSetProportional(LevelAtlandi[playerid][0], 1);
	TextDrawSetShadow(LevelAtlandi[playerid][0], 0);

	LevelAtlandi[playerid][1] = TextDrawCreate(382.130676, 42.999996, "");
	TextDrawLetterSize(LevelAtlandi[playerid][1], 0.000000, 0.000000);
	TextDrawTextSize(LevelAtlandi[playerid][1], 120.000000, 115.000000);
	TextDrawAlignment(LevelAtlandi[playerid][1], 1);
	TextDrawColor(LevelAtlandi[playerid][1], -1);
	TextDrawSetShadow(LevelAtlandi[playerid][1], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][1], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][1], 0);
	TextDrawFont(LevelAtlandi[playerid][1], 5);
	TextDrawSetProportional(LevelAtlandi[playerid][1], 0);
	TextDrawSetShadow(LevelAtlandi[playerid][1], 0);
	TextDrawSetPreviewModel(LevelAtlandi[playerid][1], 348);
	TextDrawSetPreviewRot(LevelAtlandi[playerid][1], 0.000000, 0.000000, 0.000000, 1.000000);

	LevelAtlandi[playerid][2] = TextDrawCreate(178.023406, 38.333347, "box");
	TextDrawLetterSize(LevelAtlandi[playerid][2], 0.000000, 11.592971);
	TextDrawTextSize(LevelAtlandi[playerid][2], 461.000000, 0.000000);
	TextDrawAlignment(LevelAtlandi[playerid][2], 1);
	TextDrawColor(LevelAtlandi[playerid][2], -1);
	TextDrawUseBox(LevelAtlandi[playerid][2], 1);
	TextDrawBoxColor(LevelAtlandi[playerid][2], 1768515942);
	TextDrawSetShadow(LevelAtlandi[playerid][2], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][2], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][2], -120);
	TextDrawFont(LevelAtlandi[playerid][2], 1);
	TextDrawSetProportional(LevelAtlandi[playerid][2], 1);
	TextDrawSetShadow(LevelAtlandi[playerid][2], 0);

	LevelAtlandi[playerid][3] = TextDrawCreate(315.131988, 45.333335, "");
	TextDrawLetterSize(LevelAtlandi[playerid][3], 0.000000, 0.000000);
	TextDrawTextSize(LevelAtlandi[playerid][3], 90.000000, 90.000000);
	TextDrawAlignment(LevelAtlandi[playerid][3], 1);
	TextDrawColor(LevelAtlandi[playerid][3], -1);
	TextDrawSetShadow(LevelAtlandi[playerid][3], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][3], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][3], 0);
	TextDrawFont(LevelAtlandi[playerid][3], 5);
	TextDrawSetProportional(LevelAtlandi[playerid][3], 0);
	TextDrawSetShadow(LevelAtlandi[playerid][3], 0);
	TextDrawSetPreviewModel(LevelAtlandi[playerid][3], 0);
	TextDrawSetPreviewRot(LevelAtlandi[playerid][3], 0.000000, 0.000000, 0.000000, 1.000000);

	LevelAtlandi[playerid][4] = TextDrawCreate(190.973648, 87.333366, "hud:radar_cash");
	TextDrawLetterSize(LevelAtlandi[playerid][4], 0.000000, 0.000000);
	TextDrawTextSize(LevelAtlandi[playerid][4], 12.000000, 18.000000);
	TextDrawAlignment(LevelAtlandi[playerid][4], 1);
	TextDrawColor(LevelAtlandi[playerid][4], -1);
	TextDrawSetShadow(LevelAtlandi[playerid][4], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][4], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][4], 255);
	TextDrawFont(LevelAtlandi[playerid][4], 4);
	TextDrawSetProportional(LevelAtlandi[playerid][4], 0);
	TextDrawSetShadow(LevelAtlandi[playerid][4], 0);

	LevelAtlandi[playerid][5] = TextDrawCreate(190.973648, 109.499992, "hud:radar_sweet");
	TextDrawLetterSize(LevelAtlandi[playerid][5], 0.000000, 0.000000);
	TextDrawTextSize(LevelAtlandi[playerid][5], 11.000000, 18.000000);
	TextDrawAlignment(LevelAtlandi[playerid][5], 1);
	TextDrawColor(LevelAtlandi[playerid][5], -1);
	TextDrawSetShadow(LevelAtlandi[playerid][5], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][5], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][5], 255);
	TextDrawFont(LevelAtlandi[playerid][5], 4);
	TextDrawSetProportional(LevelAtlandi[playerid][5], 0);
	TextDrawSetShadow(LevelAtlandi[playerid][5], 0);

	LevelAtlandi[playerid][6] = TextDrawCreate(205.197601, 88.499984, "+500.000");
	TextDrawLetterSize(LevelAtlandi[playerid][6], 0.252415, 1.652500);
	TextDrawAlignment(LevelAtlandi[playerid][6], 1);
	TextDrawColor(LevelAtlandi[playerid][6], -5963521);
	TextDrawSetShadow(LevelAtlandi[playerid][6], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][6], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][6], 255);
	TextDrawFont(LevelAtlandi[playerid][6], 2);
	TextDrawSetProportional(LevelAtlandi[playerid][6], 1);
	TextDrawSetShadow(LevelAtlandi[playerid][6], 0);

	LevelAtlandi[playerid][7] = TextDrawCreate(204.729095, 110.083335, "+150");
	TextDrawLetterSize(LevelAtlandi[playerid][7], 0.272093, 1.839167);
	TextDrawAlignment(LevelAtlandi[playerid][7], 1);
	TextDrawColor(LevelAtlandi[playerid][7], -65281);
	TextDrawSetShadow(LevelAtlandi[playerid][7], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][7], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][7], 255);
	TextDrawFont(LevelAtlandi[playerid][7], 2);
	TextDrawSetProportional(LevelAtlandi[playerid][7], 1);
	TextDrawSetShadow(LevelAtlandi[playerid][7], 0);

	LevelAtlandi[playerid][8] = TextDrawCreate(190.204910, 50.583332, "SEVIYE ATLANDI");
	TextDrawLetterSize(LevelAtlandi[playerid][8], 0.400000, 1.600000);
	TextDrawAlignment(LevelAtlandi[playerid][8], 1);
	TextDrawColor(LevelAtlandi[playerid][8], 16711935);
	TextDrawSetShadow(LevelAtlandi[playerid][8], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][8], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][8], 255);
	TextDrawFont(LevelAtlandi[playerid][8], 3);
	TextDrawSetProportional(LevelAtlandi[playerid][8], 1);
	TextDrawSetShadow(LevelAtlandi[playerid][8], 0);

	LevelAtlandi[playerid][9] = TextDrawCreate(190.204833, 67.500007, "Yeni seviye: 10");
	TextDrawLetterSize(LevelAtlandi[playerid][9], 0.279589, 1.518334);
	TextDrawAlignment(LevelAtlandi[playerid][9], 1);
	TextDrawColor(LevelAtlandi[playerid][9], 16777215);
	TextDrawSetShadow(LevelAtlandi[playerid][9], 0);
	TextDrawSetOutline(LevelAtlandi[playerid][9], 0);
	TextDrawBackgroundColor(LevelAtlandi[playerid][9], 255);
	TextDrawFont(LevelAtlandi[playerid][9], 1);
	TextDrawSetProportional(LevelAtlandi[playerid][9], 1);
	TextDrawSetShadow(LevelAtlandi[playerid][9], 0);

	vote7[playerid] = TextDrawCreate(12.181545, 261.333435, "Evet: 0");
	TextDrawLetterSize(vote7[playerid], 0.271493, 1.553333);
	TextDrawAlignment(vote7[playerid], 1);
	TextDrawColor(vote7[playerid], 16711935);
	TextDrawSetShadow(vote7[playerid], 0);
	TextDrawSetOutline(vote7[playerid], 1);
	TextDrawBackgroundColor(vote7[playerid], 51);
	TextDrawFont(vote7[playerid], 1);
	TextDrawSetProportional(vote7[playerid], 1);

	vote8[playerid] = TextDrawCreate(67.935607, 261.333312, "Hayir: 0");
	TextDrawLetterSize(vote8[playerid], 0.321156, 1.512499);
	TextDrawTextSize(vote8[playerid], 484.919464, -11.666666);
	TextDrawAlignment(vote8[playerid], 1);
	TextDrawColor(vote8[playerid], -16776961);
	TextDrawUseBox(vote8[playerid], true);
	TextDrawBoxColor(vote8[playerid], 0);
	TextDrawSetShadow(vote8[playerid], 0);
	TextDrawSetOutline(vote8[playerid], 1);
	TextDrawBackgroundColor(vote8[playerid], 51);
	TextDrawFont(vote8[playerid], 1);
	TextDrawSetProportional(vote8[playerid], 1);

	skorlar2[playerid] = TextDrawCreate(555.000000, 221.083328, "_");
	TextDrawLetterSize(skorlar2[playerid], 0.178125, 1.045833);
	TextDrawAlignment(skorlar2[playerid], 1);
	TextDrawColor(skorlar2[playerid], -1);
	TextDrawSetShadow(skorlar2[playerid], 0);
	TextDrawSetOutline(skorlar2[playerid], 1);
	TextDrawBackgroundColor(skorlar2[playerid], 51);
	TextDrawFont(skorlar2[playerid], 2);
	TextDrawSetProportional(skorlar2[playerid], 1);

	skorlar4[playerid] = TextDrawCreate(588.500000, 220.916671, "_");
	TextDrawLetterSize(skorlar4[playerid], 0.166875, 0.981666);
	TextDrawAlignment(skorlar4[playerid], 1);
	TextDrawColor(skorlar4[playerid], -1);
	TextDrawSetShadow(skorlar4[playerid], 0);
	TextDrawSetOutline(skorlar4[playerid], 1);
	TextDrawBackgroundColor(skorlar4[playerid], 51);
	TextDrawFont(skorlar4[playerid], 2);
	TextDrawSetProportional(skorlar4[playerid], 1);

	skorlar6[playerid] = TextDrawCreate(503.875000, 236.499893, "_");
	TextDrawLetterSize(skorlar6[playerid], 0.179374, 1.209166);
	TextDrawAlignment(skorlar6[playerid], 1);
	TextDrawColor(skorlar6[playerid], -1);
	TextDrawSetShadow(skorlar6[playerid], 0);
	TextDrawSetOutline(skorlar6[playerid], 1);
	TextDrawBackgroundColor(skorlar6[playerid], 51);
	TextDrawFont(skorlar6[playerid], 1);
	TextDrawSetProportional(skorlar6[playerid], 1);

	skorlar7[playerid] = TextDrawCreate(504.125000, 256.499908, "_");
	TextDrawLetterSize(skorlar7[playerid], 0.179374, 1.209166);
	TextDrawAlignment(skorlar7[playerid], 1);
	TextDrawColor(skorlar7[playerid], -1);
	TextDrawSetShadow(skorlar7[playerid], 0);
	TextDrawSetOutline(skorlar7[playerid], 1);
	TextDrawBackgroundColor(skorlar7[playerid], 51);
	TextDrawFont(skorlar7[playerid], 1);
	TextDrawSetProportional(skorlar7[playerid], 1);

	skorlar8[playerid] = TextDrawCreate(588.250000, 238.250000, "_");
	TextDrawLetterSize(skorlar8[playerid], 0.171874, 0.876666);
	TextDrawAlignment(skorlar8[playerid], 1);
	TextDrawColor(skorlar8[playerid], -1);
	TextDrawSetShadow(skorlar8[playerid], 0);
	TextDrawSetOutline(skorlar8[playerid], 1);
	TextDrawBackgroundColor(skorlar8[playerid], 51);
	TextDrawFont(skorlar8[playerid], 2);
	TextDrawSetProportional(skorlar8[playerid], 1);

	skorlar10[playerid] = TextDrawCreate(587.875000, 257.666656, "_");
	TextDrawLetterSize(skorlar10[playerid], 0.171874, 0.876666);
	TextDrawAlignment(skorlar10[playerid], 1);
	TextDrawColor(skorlar10[playerid], -1);
	TextDrawSetShadow(skorlar10[playerid], 0);
	TextDrawSetOutline(skorlar10[playerid], 1);
	TextDrawBackgroundColor(skorlar10[playerid], 51);
	TextDrawFont(skorlar10[playerid], 2);
	TextDrawSetProportional(skorlar10[playerid], 1);

	GostergeAsilHiz[playerid] = TextDrawCreate(62.298690, 292.666717, "~b~0 ~w~~h~~h~km/h");
	TextDrawLetterSize(GostergeAsilHiz[playerid], 0.275373, 1.722500);
	TextDrawAlignment(GostergeAsilHiz[playerid], 1);
	TextDrawColor(GostergeAsilHiz[playerid], -1);
	TextDrawSetShadow(GostergeAsilHiz[playerid], 0);
	TextDrawSetOutline(GostergeAsilHiz[playerid], 1);
	TextDrawBackgroundColor(GostergeAsilHiz[playerid], 255);
	TextDrawFont(GostergeAsilHiz[playerid], 2);
	TextDrawSetProportional(GostergeAsilHiz[playerid], 1);
	TextDrawSetShadow(GostergeAsilHiz[playerid], 0);

	NEWEXPText[playerid][0] = TextDrawCreate(524.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][0], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][0], 2);
	TextDrawColor(NEWEXPText[playerid][0], -1);
	TextDrawSetShadow(NEWEXPText[playerid][0], 0);
	TextDrawSetOutline(NEWEXPText[playerid][0], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][0], 255);
	TextDrawFont(NEWEXPText[playerid][0], 2);
	TextDrawSetProportional(NEWEXPText[playerid][0], 1);
	TextDrawSetShadow(NEWEXPText[playerid][0], 0);

	NEWEXPText[playerid][1] = TextDrawCreate(526.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][1], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][1], 2);
	TextDrawColor(NEWEXPText[playerid][1], -1);
	TextDrawSetShadow(NEWEXPText[playerid][1], 0);
	TextDrawSetOutline(NEWEXPText[playerid][1], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][1], 255);
	TextDrawFont(NEWEXPText[playerid][1], 2);
	TextDrawSetProportional(NEWEXPText[playerid][1], 1);
	TextDrawSetShadow(NEWEXPText[playerid][1], 0);

	NEWEXPText[playerid][2] = TextDrawCreate(528.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][2], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][2], 2);
	TextDrawColor(NEWEXPText[playerid][2], -1);
	TextDrawSetShadow(NEWEXPText[playerid][2], 0);
	TextDrawSetOutline(NEWEXPText[playerid][2], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][2], 255);
	TextDrawFont(NEWEXPText[playerid][2], 2);
	TextDrawSetProportional(NEWEXPText[playerid][2], 1);
	TextDrawSetShadow(NEWEXPText[playerid][2], 0);

	NEWEXPText[playerid][3] = TextDrawCreate(530.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][3], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][3], 2);
	TextDrawColor(NEWEXPText[playerid][3], -1);
	TextDrawSetShadow(NEWEXPText[playerid][3], 0);
	TextDrawSetOutline(NEWEXPText[playerid][3], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][3], 255);
	TextDrawFont(NEWEXPText[playerid][3], 2);
	TextDrawSetProportional(NEWEXPText[playerid][3], 1);
	TextDrawSetShadow(NEWEXPText[playerid][3], 0);

	NEWEXPText[playerid][4] = TextDrawCreate(532.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][4], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][4], 2);
	TextDrawColor(NEWEXPText[playerid][4], -1);
	TextDrawSetShadow(NEWEXPText[playerid][4], 0);
	TextDrawSetOutline(NEWEXPText[playerid][4], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][4], 255);
	TextDrawFont(NEWEXPText[playerid][4], 2);
	TextDrawSetProportional(NEWEXPText[playerid][4], 1);
	TextDrawSetShadow(NEWEXPText[playerid][4], 0);

	NEWEXPText[playerid][5] = TextDrawCreate(534.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][5], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][5], 2);
	TextDrawColor(NEWEXPText[playerid][5], -1);
	TextDrawSetShadow(NEWEXPText[playerid][5], 0);
	TextDrawSetOutline(NEWEXPText[playerid][5], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][5], 255);
	TextDrawFont(NEWEXPText[playerid][5], 2);
	TextDrawSetProportional(NEWEXPText[playerid][5], 1);
	TextDrawSetShadow(NEWEXPText[playerid][5], 0);

	NEWEXPText[playerid][6] = TextDrawCreate(536.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][6], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][6], 2);
	TextDrawColor(NEWEXPText[playerid][6], -1);
	TextDrawSetShadow(NEWEXPText[playerid][6], 0);
	TextDrawSetOutline(NEWEXPText[playerid][6], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][6], 255);
	TextDrawFont(NEWEXPText[playerid][6], 2);
	TextDrawSetProportional(NEWEXPText[playerid][6], 1);
	TextDrawSetShadow(NEWEXPText[playerid][6], 0);

	NEWEXPText[playerid][7] = TextDrawCreate(538.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][7], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][7], 2);
	TextDrawColor(NEWEXPText[playerid][7], -1);
	TextDrawSetShadow(NEWEXPText[playerid][7], 0);
	TextDrawSetOutline(NEWEXPText[playerid][7], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][7], 255);
	TextDrawFont(NEWEXPText[playerid][7], 2);
	TextDrawSetProportional(NEWEXPText[playerid][7], 1);
	TextDrawSetShadow(NEWEXPText[playerid][7], 0);

	NEWEXPText[playerid][8] = TextDrawCreate(540.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][8], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][8], 2);
	TextDrawColor(NEWEXPText[playerid][8], -1);
	TextDrawSetShadow(NEWEXPText[playerid][8], 0);
	TextDrawSetOutline(NEWEXPText[playerid][8], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][8], 255);
	TextDrawFont(NEWEXPText[playerid][8], 2);
	TextDrawSetProportional(NEWEXPText[playerid][8], 1);
	TextDrawSetShadow(NEWEXPText[playerid][8], 0);

	NEWEXPText[playerid][9] = TextDrawCreate(542.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][9], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][9], 2);
	TextDrawColor(NEWEXPText[playerid][9], -1);
	TextDrawSetShadow(NEWEXPText[playerid][9], 0);
	TextDrawSetOutline(NEWEXPText[playerid][9], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][9], 255);
	TextDrawFont(NEWEXPText[playerid][9], 2);
	TextDrawSetProportional(NEWEXPText[playerid][9], 1);
	TextDrawSetShadow(NEWEXPText[playerid][9], 0);

	NEWEXPText[playerid][10] = TextDrawCreate(544.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][10], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][10], 2);
	TextDrawColor(NEWEXPText[playerid][10], -1);
	TextDrawSetShadow(NEWEXPText[playerid][10], 0);
	TextDrawSetOutline(NEWEXPText[playerid][10], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][10], 255);
	TextDrawFont(NEWEXPText[playerid][10], 2);
	TextDrawSetProportional(NEWEXPText[playerid][10], 1);
	TextDrawSetShadow(NEWEXPText[playerid][10], 0);

	NEWEXPText[playerid][11] = TextDrawCreate(546.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][11], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][11], 2);
	TextDrawColor(NEWEXPText[playerid][11], -1);
	TextDrawSetShadow(NEWEXPText[playerid][11], 0);
	TextDrawSetOutline(NEWEXPText[playerid][11], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][11], 255);
	TextDrawFont(NEWEXPText[playerid][11], 2);
	TextDrawSetProportional(NEWEXPText[playerid][11], 1);
	TextDrawSetShadow(NEWEXPText[playerid][11], 0);

	NEWEXPText[playerid][12] = TextDrawCreate(548.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][12], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][12], 2);
	TextDrawColor(NEWEXPText[playerid][12], -1);
	TextDrawSetShadow(NEWEXPText[playerid][12], 0);
	TextDrawSetOutline(NEWEXPText[playerid][12], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][12], 255);
	TextDrawFont(NEWEXPText[playerid][12], 2);
	TextDrawSetProportional(NEWEXPText[playerid][12], 1);
	TextDrawSetShadow(NEWEXPText[playerid][12], 0);

	NEWEXPText[playerid][13] = TextDrawCreate(550.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][13], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][13], 2);
	TextDrawColor(NEWEXPText[playerid][13], -1);
	TextDrawSetShadow(NEWEXPText[playerid][13], 0);
	TextDrawSetOutline(NEWEXPText[playerid][13], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][13], 255);
	TextDrawFont(NEWEXPText[playerid][13], 2);
	TextDrawSetProportional(NEWEXPText[playerid][13], 1);
	TextDrawSetShadow(NEWEXPText[playerid][13], 0);

	NEWEXPText[playerid][14] = TextDrawCreate(552.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][14], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][14], 2);
	TextDrawColor(NEWEXPText[playerid][14], -1);
	TextDrawSetShadow(NEWEXPText[playerid][14], 0);
	TextDrawSetOutline(NEWEXPText[playerid][14], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][14], 255);
	TextDrawFont(NEWEXPText[playerid][14], 2);
	TextDrawSetProportional(NEWEXPText[playerid][14], 1);
	TextDrawSetShadow(NEWEXPText[playerid][14], 0);

	NEWEXPText[playerid][15] = TextDrawCreate(554.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][15], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][15], 2);
	TextDrawColor(NEWEXPText[playerid][15], -1);
	TextDrawSetShadow(NEWEXPText[playerid][15], 0);
	TextDrawSetOutline(NEWEXPText[playerid][15], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][15], 255);
	TextDrawFont(NEWEXPText[playerid][15], 2);
	TextDrawSetProportional(NEWEXPText[playerid][15], 1);
	TextDrawSetShadow(NEWEXPText[playerid][15], 0);

	NEWEXPText[playerid][16] = TextDrawCreate(556.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][16], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][16], 2);
	TextDrawColor(NEWEXPText[playerid][16], -1);
	TextDrawSetShadow(NEWEXPText[playerid][16], 0);
	TextDrawSetOutline(NEWEXPText[playerid][16], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][16], 255);
	TextDrawFont(NEWEXPText[playerid][16], 2);
	TextDrawSetProportional(NEWEXPText[playerid][16], 1);
	TextDrawSetShadow(NEWEXPText[playerid][16], 0);

	NEWEXPText[playerid][17] = TextDrawCreate(558.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][17], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][17], 2);
	TextDrawColor(NEWEXPText[playerid][17], -1);
	TextDrawSetShadow(NEWEXPText[playerid][17], 0);
	TextDrawSetOutline(NEWEXPText[playerid][17], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][17], 255);
	TextDrawFont(NEWEXPText[playerid][17], 2);
	TextDrawSetProportional(NEWEXPText[playerid][17], 1);
	TextDrawSetShadow(NEWEXPText[playerid][17], 0);

	NEWEXPText[playerid][18] = TextDrawCreate(560.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][18], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][18], 2);
	TextDrawColor(NEWEXPText[playerid][18], -1);
	TextDrawSetShadow(NEWEXPText[playerid][18], 0);
	TextDrawSetOutline(NEWEXPText[playerid][18], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][18], 255);
	TextDrawFont(NEWEXPText[playerid][18], 2);
	TextDrawSetProportional(NEWEXPText[playerid][18], 1);
	TextDrawSetShadow(NEWEXPText[playerid][18], 0);

	NEWEXPText[playerid][19] = TextDrawCreate(562.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][19], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][19], 2);
	TextDrawColor(NEWEXPText[playerid][19], -1);
	TextDrawSetShadow(NEWEXPText[playerid][19], 0);
	TextDrawSetOutline(NEWEXPText[playerid][19], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][19], 255);
	TextDrawFont(NEWEXPText[playerid][19], 2);
	TextDrawSetProportional(NEWEXPText[playerid][19], 1);
	TextDrawSetShadow(NEWEXPText[playerid][19], 0);

	NEWEXPText[playerid][20] = TextDrawCreate(564.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][20], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][20], 2);
	TextDrawColor(NEWEXPText[playerid][20], -1);
	TextDrawSetShadow(NEWEXPText[playerid][20], 0);
	TextDrawSetOutline(NEWEXPText[playerid][20], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][20], 255);
	TextDrawFont(NEWEXPText[playerid][20], 2);
	TextDrawSetProportional(NEWEXPText[playerid][20], 1);
	TextDrawSetShadow(NEWEXPText[playerid][20], 0);

	NEWEXPText[playerid][21] = TextDrawCreate(566.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][21], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][21], 2);
	TextDrawColor(NEWEXPText[playerid][21], -1);
	TextDrawSetShadow(NEWEXPText[playerid][21], 0);
	TextDrawSetOutline(NEWEXPText[playerid][21], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][21], 255);
	TextDrawFont(NEWEXPText[playerid][21], 2);
	TextDrawSetProportional(NEWEXPText[playerid][21], 1);
	TextDrawSetShadow(NEWEXPText[playerid][21], 0);

	NEWEXPText[playerid][22] = TextDrawCreate(568.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][22], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][22], 2);
	TextDrawColor(NEWEXPText[playerid][22], -1);
	TextDrawSetShadow(NEWEXPText[playerid][22], 0);
	TextDrawSetOutline(NEWEXPText[playerid][22], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][22], 255);
	TextDrawFont(NEWEXPText[playerid][22], 2);
	TextDrawSetProportional(NEWEXPText[playerid][22], 1);
	TextDrawSetShadow(NEWEXPText[playerid][22], 0);

	NEWEXPText[playerid][23] = TextDrawCreate(570.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][23], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][23], 2);
	TextDrawColor(NEWEXPText[playerid][23], -1);
	TextDrawSetShadow(NEWEXPText[playerid][23], 0);
	TextDrawSetOutline(NEWEXPText[playerid][23], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][23], 255);
	TextDrawFont(NEWEXPText[playerid][23], 2);
	TextDrawSetProportional(NEWEXPText[playerid][23], 1);
	TextDrawSetShadow(NEWEXPText[playerid][23], 0);

	NEWEXPText[playerid][24] = TextDrawCreate(572.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][24], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][24], 2);
	TextDrawColor(NEWEXPText[playerid][24], -1);
	TextDrawSetShadow(NEWEXPText[playerid][24], 0);
	TextDrawSetOutline(NEWEXPText[playerid][24], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][24], 255);
	TextDrawFont(NEWEXPText[playerid][24], 2);
	TextDrawSetProportional(NEWEXPText[playerid][24], 1);
	TextDrawSetShadow(NEWEXPText[playerid][24], 0);

	NEWEXPText[playerid][25] = TextDrawCreate(574.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][25], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][25], 2);
	TextDrawColor(NEWEXPText[playerid][25], -1);
	TextDrawSetShadow(NEWEXPText[playerid][25], 0);
	TextDrawSetOutline(NEWEXPText[playerid][25], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][25], 255);
	TextDrawFont(NEWEXPText[playerid][25], 2);
	TextDrawSetProportional(NEWEXPText[playerid][25], 1);
	TextDrawSetShadow(NEWEXPText[playerid][25], 0);

	NEWEXPText[playerid][26] = TextDrawCreate(576.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][26], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][26], 2);
	TextDrawColor(NEWEXPText[playerid][26], -1);
	TextDrawSetShadow(NEWEXPText[playerid][26], 0);
	TextDrawSetOutline(NEWEXPText[playerid][26], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][26], 255);
	TextDrawFont(NEWEXPText[playerid][26], 2);
	TextDrawSetProportional(NEWEXPText[playerid][26], 1);
	TextDrawSetShadow(NEWEXPText[playerid][26], 0);

	NEWEXPText[playerid][27] = TextDrawCreate(578.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][27], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][27], 2);
	TextDrawColor(NEWEXPText[playerid][27], -1);
	TextDrawSetShadow(NEWEXPText[playerid][27], 0);
	TextDrawSetOutline(NEWEXPText[playerid][27], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][27], 255);
	TextDrawFont(NEWEXPText[playerid][27], 2);
	TextDrawSetProportional(NEWEXPText[playerid][27], 1);
	TextDrawSetShadow(NEWEXPText[playerid][27], 0);

	NEWEXPText[playerid][28] = TextDrawCreate(580.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][28], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][28], 2);
	TextDrawColor(NEWEXPText[playerid][28], -1);
	TextDrawSetShadow(NEWEXPText[playerid][28], 0);
	TextDrawSetOutline(NEWEXPText[playerid][28], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][28], 255);
	TextDrawFont(NEWEXPText[playerid][28], 2);
	TextDrawSetProportional(NEWEXPText[playerid][28], 1);
	TextDrawSetShadow(NEWEXPText[playerid][28], 0);

	NEWEXPText[playerid][29] = TextDrawCreate(582.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][29], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][29], 2);
	TextDrawColor(NEWEXPText[playerid][29], -1);
	TextDrawSetShadow(NEWEXPText[playerid][29], 0);
	TextDrawSetOutline(NEWEXPText[playerid][29], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][29], 255);
	TextDrawFont(NEWEXPText[playerid][29], 2);
	TextDrawSetProportional(NEWEXPText[playerid][29], 1);
	TextDrawSetShadow(NEWEXPText[playerid][29], 0);

	NEWEXPText[playerid][30] = TextDrawCreate(584.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][30], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][30], 2);
	TextDrawColor(NEWEXPText[playerid][30], -1);
	TextDrawSetShadow(NEWEXPText[playerid][30], 0);
	TextDrawSetOutline(NEWEXPText[playerid][30], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][30], 255);
	TextDrawFont(NEWEXPText[playerid][30], 2);
	TextDrawSetProportional(NEWEXPText[playerid][30], 1);
	TextDrawSetShadow(NEWEXPText[playerid][30], 0);

	NEWEXPText[playerid][31] = TextDrawCreate(586.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][31], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][31], 2);
	TextDrawColor(NEWEXPText[playerid][31], -1);
	TextDrawSetShadow(NEWEXPText[playerid][31], 0);
	TextDrawSetOutline(NEWEXPText[playerid][31], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][31], 255);
	TextDrawFont(NEWEXPText[playerid][31], 2);
	TextDrawSetProportional(NEWEXPText[playerid][31], 1);
	TextDrawSetShadow(NEWEXPText[playerid][31], 0);

	NEWEXPText[playerid][32] = TextDrawCreate(588.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][32], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][32], 2);
	TextDrawColor(NEWEXPText[playerid][32], -1);
	TextDrawSetShadow(NEWEXPText[playerid][32], 0);
	TextDrawSetOutline(NEWEXPText[playerid][32], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][32], 255);
	TextDrawFont(NEWEXPText[playerid][32], 2);
	TextDrawSetProportional(NEWEXPText[playerid][32], 1);
	TextDrawSetShadow(NEWEXPText[playerid][32], 0);

	NEWEXPText[playerid][33] = TextDrawCreate(590.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][33], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][33], 2);
	TextDrawColor(NEWEXPText[playerid][33], -1);
	TextDrawSetShadow(NEWEXPText[playerid][33], 0);
	TextDrawSetOutline(NEWEXPText[playerid][33], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][33], 255);
	TextDrawFont(NEWEXPText[playerid][33], 2);
	TextDrawSetProportional(NEWEXPText[playerid][33], 1);
	TextDrawSetShadow(NEWEXPText[playerid][33], 0);

	NEWEXPText[playerid][34] = TextDrawCreate(592.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][34], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][34], 2);
	TextDrawColor(NEWEXPText[playerid][34], -1);
	TextDrawSetShadow(NEWEXPText[playerid][34], 0);
	TextDrawSetOutline(NEWEXPText[playerid][34], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][34], 255);
	TextDrawFont(NEWEXPText[playerid][34], 2);
	TextDrawSetProportional(NEWEXPText[playerid][34], 1);
	TextDrawSetShadow(NEWEXPText[playerid][34], 0);

	NEWEXPText[playerid][35] = TextDrawCreate(594.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][35], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][35], 2);
	TextDrawColor(NEWEXPText[playerid][35], -1);
	TextDrawSetShadow(NEWEXPText[playerid][35], 0);
	TextDrawSetOutline(NEWEXPText[playerid][35], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][35], 255);
	TextDrawFont(NEWEXPText[playerid][35], 2);
	TextDrawSetProportional(NEWEXPText[playerid][35], 1);
	TextDrawSetShadow(NEWEXPText[playerid][35], 0);

	NEWEXPText[playerid][36] = TextDrawCreate(596.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][36], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][36], 2);
	TextDrawColor(NEWEXPText[playerid][36], -1);
	TextDrawSetShadow(NEWEXPText[playerid][36], 0);
	TextDrawSetOutline(NEWEXPText[playerid][36], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][36], 255);
	TextDrawFont(NEWEXPText[playerid][36], 2);
	TextDrawSetProportional(NEWEXPText[playerid][36], 1);
	TextDrawSetShadow(NEWEXPText[playerid][36], 0);

	NEWEXPText[playerid][37] = TextDrawCreate(598.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][37], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][37], 2);
	TextDrawColor(NEWEXPText[playerid][37], -1);
	TextDrawSetShadow(NEWEXPText[playerid][37], 0);
	TextDrawSetOutline(NEWEXPText[playerid][37], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][37], 255);
	TextDrawFont(NEWEXPText[playerid][37], 2);
	TextDrawSetProportional(NEWEXPText[playerid][37], 1);
	TextDrawSetShadow(NEWEXPText[playerid][37], 0);

	NEWEXPText[playerid][38] = TextDrawCreate(600.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][38], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][38], 2);
	TextDrawColor(NEWEXPText[playerid][38], -1);
	TextDrawSetShadow(NEWEXPText[playerid][38], 0);
	TextDrawSetOutline(NEWEXPText[playerid][38], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][38], 255);
	TextDrawFont(NEWEXPText[playerid][38], 2);
	TextDrawSetProportional(NEWEXPText[playerid][38], 1);
	TextDrawSetShadow(NEWEXPText[playerid][38], 0);

	NEWEXPText[playerid][39] = TextDrawCreate(602.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][39], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][39], 2);
	TextDrawColor(NEWEXPText[playerid][39], -1);
	TextDrawSetShadow(NEWEXPText[playerid][39], 0);
	TextDrawSetOutline(NEWEXPText[playerid][39], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][39], 255);
	TextDrawFont(NEWEXPText[playerid][39], 2);
	TextDrawSetProportional(NEWEXPText[playerid][39], 1);
	TextDrawSetShadow(NEWEXPText[playerid][39], 0);

	NEWEXPText[playerid][40] = TextDrawCreate(604.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][40], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][40], 2);
	TextDrawColor(NEWEXPText[playerid][40], -1);
	TextDrawSetShadow(NEWEXPText[playerid][40], 0);
	TextDrawSetOutline(NEWEXPText[playerid][40], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][40], 255);
	TextDrawFont(NEWEXPText[playerid][40], 2);
	TextDrawSetProportional(NEWEXPText[playerid][40], 1);
	TextDrawSetShadow(NEWEXPText[playerid][40], 0);

	NEWEXPText[playerid][41] = TextDrawCreate(606.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][41], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][41], 2);
	TextDrawColor(NEWEXPText[playerid][41], -1);
	TextDrawSetShadow(NEWEXPText[playerid][41], 0);
	TextDrawSetOutline(NEWEXPText[playerid][41], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][41], 255);
	TextDrawFont(NEWEXPText[playerid][41], 2);
	TextDrawSetProportional(NEWEXPText[playerid][41], 1);
	TextDrawSetShadow(NEWEXPText[playerid][41], 0);

	NEWEXPText[playerid][42] = TextDrawCreate(608.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][42], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][42], 2);
	TextDrawColor(NEWEXPText[playerid][42], -1);
	TextDrawSetShadow(NEWEXPText[playerid][42], 0);
	TextDrawSetOutline(NEWEXPText[playerid][42], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][42], 255);
	TextDrawFont(NEWEXPText[playerid][42], 2);
	TextDrawSetProportional(NEWEXPText[playerid][42], 1);
	TextDrawSetShadow(NEWEXPText[playerid][42], 0);

	NEWEXPText[playerid][43] = TextDrawCreate(610.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][43], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][43], 2);
	TextDrawColor(NEWEXPText[playerid][43], -1);
	TextDrawSetShadow(NEWEXPText[playerid][43], 0);
	TextDrawSetOutline(NEWEXPText[playerid][43], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][43], 255);
	TextDrawFont(NEWEXPText[playerid][43], 2);
	TextDrawSetProportional(NEWEXPText[playerid][43], 1);
	TextDrawSetShadow(NEWEXPText[playerid][43], 0);

	NEWEXPText[playerid][44] = TextDrawCreate(612.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][44], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][44], 2);
	TextDrawColor(NEWEXPText[playerid][44], -1);
	TextDrawSetShadow(NEWEXPText[playerid][44], 0);
	TextDrawSetOutline(NEWEXPText[playerid][44], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][44], 255);
	TextDrawFont(NEWEXPText[playerid][44], 2);
	TextDrawSetProportional(NEWEXPText[playerid][44], 1);
	TextDrawSetShadow(NEWEXPText[playerid][44], 0);

	NEWEXPText[playerid][45] = TextDrawCreate(614.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][45], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][45], 2);
	TextDrawColor(NEWEXPText[playerid][45], -1);
	TextDrawSetShadow(NEWEXPText[playerid][45], 0);
	TextDrawSetOutline(NEWEXPText[playerid][45], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][45], 255);
	TextDrawFont(NEWEXPText[playerid][45], 2);
	TextDrawSetProportional(NEWEXPText[playerid][45], 1);
	TextDrawSetShadow(NEWEXPText[playerid][45], 0);

	NEWEXPText[playerid][46] = TextDrawCreate(616.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][46], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][46], 2);
	TextDrawColor(NEWEXPText[playerid][46], -1);
	TextDrawSetShadow(NEWEXPText[playerid][46], 0);
	TextDrawSetOutline(NEWEXPText[playerid][46], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][46], 255);
	TextDrawFont(NEWEXPText[playerid][46], 2);
	TextDrawSetProportional(NEWEXPText[playerid][46], 1);
	TextDrawSetShadow(NEWEXPText[playerid][46], 0);

	NEWEXPText[playerid][47] = TextDrawCreate(618.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][47], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][47], 2);
	TextDrawColor(NEWEXPText[playerid][47], -1);
	TextDrawSetShadow(NEWEXPText[playerid][47], 0);
	TextDrawSetOutline(NEWEXPText[playerid][47], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][47], 255);
	TextDrawFont(NEWEXPText[playerid][47], 2);
	TextDrawSetProportional(NEWEXPText[playerid][47], 1);
	TextDrawSetShadow(NEWEXPText[playerid][47], 0);

	NEWEXPText[playerid][48] = TextDrawCreate(620.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][48], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][48], 2);
	TextDrawColor(NEWEXPText[playerid][48], -1);
	TextDrawSetShadow(NEWEXPText[playerid][48], 0);
	TextDrawSetOutline(NEWEXPText[playerid][48], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][48], 255);
	TextDrawFont(NEWEXPText[playerid][48], 2);
	TextDrawSetProportional(NEWEXPText[playerid][48], 1);
	TextDrawSetShadow(NEWEXPText[playerid][48], 0);

	NEWEXPText[playerid][49] = TextDrawCreate(622.729370, 386.583343, "I");
	TextDrawLetterSize(NEWEXPText[playerid][49], 0.301609, 2.428333);
	TextDrawAlignment(NEWEXPText[playerid][49], 2);
	TextDrawColor(NEWEXPText[playerid][49], -1);
	TextDrawSetShadow(NEWEXPText[playerid][49], 0);
	TextDrawSetOutline(NEWEXPText[playerid][49], 0);
	TextDrawBackgroundColor(NEWEXPText[playerid][49], 255);
	TextDrawFont(NEWEXPText[playerid][49], 2);
	TextDrawSetProportional(NEWEXPText[playerid][49], 1);
	TextDrawSetShadow(NEWEXPText[playerid][49], 0);

	OlumText3[playerid] = TextDrawCreate(113.850677, 285.249938, "~y~Olduren: ~g~~h~flareoNNN");
	TextDrawLetterSize(OlumText3[playerid], 0.184816, 1.407500);
	TextDrawAlignment(OlumText3[playerid], 1);
	TextDrawColor(OlumText3[playerid], -1);
	TextDrawSetShadow(OlumText3[playerid], 0);
	TextDrawSetOutline(OlumText3[playerid], 1);
	TextDrawBackgroundColor(OlumText3[playerid], 51);
	TextDrawFont(OlumText3[playerid], 1);
	TextDrawSetProportional(OlumText3[playerid], 1);

	OlumText4[playerid] = TextDrawCreate(113.850677, 300.249938, "~y~Silah: ~g~~h~Desert Eagle");
	TextDrawLetterSize(OlumText4[playerid], 0.184816, 1.407500);
	TextDrawAlignment(OlumText4[playerid], 1);
	TextDrawColor(OlumText4[playerid], -1);
	TextDrawSetShadow(OlumText4[playerid], 0);
	TextDrawSetOutline(OlumText4[playerid], 1);
	TextDrawBackgroundColor(OlumText4[playerid], 51);
	TextDrawFont(OlumText4[playerid], 1);
	TextDrawSetProportional(OlumText4[playerid], 1);

	OlumText5[playerid] = TextDrawCreate(113.850677, 315.249938, "~y~Mesafe: ~g~~h~50 Metre");
	TextDrawLetterSize(OlumText5[playerid], 0.184816, 1.407500);
	TextDrawAlignment(OlumText5[playerid], 1);
	TextDrawColor(OlumText5[playerid], -1);
	TextDrawSetShadow(OlumText5[playerid], 0);
	TextDrawSetOutline(OlumText5[playerid], 1);
	TextDrawBackgroundColor(OlumText5[playerid], 51);
	TextDrawFont(OlumText5[playerid], 1);
	TextDrawSetProportional(OlumText5[playerid], 1);

	elegecirme[playerid] = TextDrawCreate(6.399953, 140.519821, "90 Saniye sonra Deneme bolgesini ele gecireceksiniz.");
	TextDrawLetterSize(elegecirme[playerid], 0.227599, 1.577600);
	TextDrawAlignment(elegecirme[playerid], 1);
	TextDrawColor(elegecirme[playerid], -16776961);
	TextDrawSetShadow(elegecirme[playerid], 0);
	TextDrawSetOutline(elegecirme[playerid], 1);
	TextDrawBackgroundColor(elegecirme[playerid], 51);
	TextDrawFont(elegecirme[playerid], 1);
	TextDrawSetProportional(elegecirme[playerid], 1);

	exptext1[playerid] = TextDrawCreate(523.338378, 377.999908, "Level: 30(1450/1450) EXP");
	TextDrawLetterSize(exptext1[playerid], 0.220893, 1.238334);
	TextDrawAlignment(exptext1[playerid], 1);
	TextDrawColor(exptext1[playerid], 16777215);
	TextDrawSetShadow(exptext1[playerid], 0);
	TextDrawSetOutline(exptext1[playerid], 1);
	TextDrawBackgroundColor(exptext1[playerid], 51);
	TextDrawFont(exptext1[playerid], 1);
	TextDrawSetProportional(exptext1[playerid], 1);
	
	FPSKismiText[playerid][0] = TextDrawCreate(519.500000, 360.489013, "box");
	TextDrawLetterSize(FPSKismiText[playerid][0], 0.000000, 0.900001);
	TextDrawTextSize(FPSKismiText[playerid][0], 611.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][0], 1);
	TextDrawColor(FPSKismiText[playerid][0], -1);
	TextDrawUseBox(FPSKismiText[playerid][0], 1);
	TextDrawBoxColor(FPSKismiText[playerid][0], 51);
	TextDrawSetShadow(FPSKismiText[playerid][0], 0);
	TextDrawSetOutline(FPSKismiText[playerid][0], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][0], 255);
	TextDrawFont(FPSKismiText[playerid][0], 1);
	TextDrawSetProportional(FPSKismiText[playerid][0], 1);
	TextDrawSetShadow(FPSKismiText[playerid][0], 0);

	FPSKismiText[playerid][1] = TextDrawCreate(519.500000, 346.800109, "box");
	TextDrawLetterSize(FPSKismiText[playerid][1], 0.000000, 0.900002);
	TextDrawTextSize(FPSKismiText[playerid][1], 611.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][1], 1);
	TextDrawColor(FPSKismiText[playerid][1], -1);
	TextDrawUseBox(FPSKismiText[playerid][1], 1);
	TextDrawBoxColor(FPSKismiText[playerid][1], 51);
	TextDrawSetShadow(FPSKismiText[playerid][1], 0);
	TextDrawSetOutline(FPSKismiText[playerid][1], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][1], 255);
	TextDrawFont(FPSKismiText[playerid][1], 1);
	TextDrawSetProportional(FPSKismiText[playerid][1], 1);
	TextDrawSetShadow(FPSKismiText[playerid][1], 0);

	FPSKismiText[playerid][2] = TextDrawCreate(520.500000, 359.866790, "box");
	TextDrawLetterSize(FPSKismiText[playerid][2], 0.000000, -1.982795);
	TextDrawTextSize(FPSKismiText[playerid][2], 528.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][2], 1);
	TextDrawColor(FPSKismiText[playerid][2], -1);
	TextDrawUseBox(FPSKismiText[playerid][2], 1);
	TextDrawBoxColor(FPSKismiText[playerid][2], 136);
	TextDrawSetShadow(FPSKismiText[playerid][2], 0);
	TextDrawSetOutline(FPSKismiText[playerid][2], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][2], 255);
	TextDrawFont(FPSKismiText[playerid][2], 1);
	TextDrawSetProportional(FPSKismiText[playerid][2], 1);
	TextDrawSetShadow(FPSKismiText[playerid][2], 0);

	FPSKismiText[playerid][3] = TextDrawCreate(518.063110, 343.611083, "hud:radar_ammugun");
	TextDrawLetterSize(FPSKismiText[playerid][3], 0.000000, 0.000000);
	TextDrawTextSize(FPSKismiText[playerid][3], 11.000000, 13.000000);
	TextDrawAlignment(FPSKismiText[playerid][3], 1);
	TextDrawColor(FPSKismiText[playerid][3], -1);
	TextDrawSetShadow(FPSKismiText[playerid][3], 0);
	TextDrawSetOutline(FPSKismiText[playerid][3], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][3], 255);
	TextDrawFont(FPSKismiText[playerid][3], 4);
	TextDrawSetProportional(FPSKismiText[playerid][3], 0);
	TextDrawSetShadow(FPSKismiText[playerid][3], 0);

	FPSKismiText[playerid][4] = TextDrawCreate(523.000000, 349.755645, "hud:radar_locosyndicate");
	TextDrawLetterSize(FPSKismiText[playerid][4], 0.000000, 0.000000);
	TextDrawTextSize(FPSKismiText[playerid][4], 6.000000, 7.000000);
	TextDrawAlignment(FPSKismiText[playerid][4], 1);
	TextDrawColor(FPSKismiText[playerid][4], -1);
	TextDrawSetShadow(FPSKismiText[playerid][4], 0);
	TextDrawSetOutline(FPSKismiText[playerid][4], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][4], 255);
	TextDrawFont(FPSKismiText[playerid][4], 4);
	TextDrawSetProportional(FPSKismiText[playerid][4], 0);
	TextDrawSetShadow(FPSKismiText[playerid][4], 0);

	FPSKismiText[playerid][5] = TextDrawCreate(531.500000, 343.688964, "K/D:");
	TextDrawLetterSize(FPSKismiText[playerid][5], 0.147000, 0.716444);
	TextDrawAlignment(FPSKismiText[playerid][5], 1);
	TextDrawColor(FPSKismiText[playerid][5], -1);
	TextDrawSetShadow(FPSKismiText[playerid][5], 0);
	TextDrawSetOutline(FPSKismiText[playerid][5], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][5], 255);
	TextDrawFont(FPSKismiText[playerid][5], 1);
	TextDrawSetProportional(FPSKismiText[playerid][5], 1);
	TextDrawSetShadow(FPSKismiText[playerid][5], 0);

	FPSKismiText[playerid][6] = TextDrawCreate(534.000000, 350.533416, "00");
	TextDrawLetterSize(FPSKismiText[playerid][6], 0.110500, 0.766221);
	TextDrawAlignment(FPSKismiText[playerid][6], 1);
	TextDrawColor(FPSKismiText[playerid][6], -16776961);
	TextDrawSetShadow(FPSKismiText[playerid][6], 0);
	TextDrawSetOutline(FPSKismiText[playerid][6], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][6], 255);
	TextDrawFont(FPSKismiText[playerid][6], 1);
	TextDrawSetProportional(FPSKismiText[playerid][6], 1);
	TextDrawSetShadow(FPSKismiText[playerid][6], 0);

	FPSKismiText[playerid][7] = TextDrawCreate(574.500000, 359.866790, "box");
	TextDrawLetterSize(FPSKismiText[playerid][7], 0.000000, -1.982795);
	TextDrawTextSize(FPSKismiText[playerid][7], 581.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][7], 1);
	TextDrawColor(FPSKismiText[playerid][7], -1);
	TextDrawUseBox(FPSKismiText[playerid][7], 1);
	TextDrawBoxColor(FPSKismiText[playerid][7], 136);
	TextDrawSetShadow(FPSKismiText[playerid][7], 0);
	TextDrawSetOutline(FPSKismiText[playerid][7], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][7], 255);
	TextDrawFont(FPSKismiText[playerid][7], 1);
	TextDrawSetProportional(FPSKismiText[playerid][7], 1);
	TextDrawSetShadow(FPSKismiText[playerid][7], 0);

	FPSKismiText[playerid][8] = TextDrawCreate(546.000000, 359.866790, "box");
	TextDrawLetterSize(FPSKismiText[playerid][8], 0.000000, -1.982795);
	TextDrawTextSize(FPSKismiText[playerid][8], 553.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][8], 1);
	TextDrawColor(FPSKismiText[playerid][8], -1);
	TextDrawUseBox(FPSKismiText[playerid][8], 1);
	TextDrawBoxColor(FPSKismiText[playerid][8], 136);
	TextDrawSetShadow(FPSKismiText[playerid][8], 0);
	TextDrawSetOutline(FPSKismiText[playerid][8], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][8], 255);
	TextDrawFont(FPSKismiText[playerid][8], 1);
	TextDrawSetProportional(FPSKismiText[playerid][8], 1);
	TextDrawSetShadow(FPSKismiText[playerid][8], 0);

	FPSKismiText[playerid][9] = TextDrawCreate(545.944641, 345.827575, "hud:radar_locosyndicate");
	TextDrawLetterSize(FPSKismiText[playerid][9], 0.000000, 0.000000);
	TextDrawTextSize(FPSKismiText[playerid][9], 7.000000, 10.000000);
	TextDrawAlignment(FPSKismiText[playerid][9], 1);
	TextDrawColor(FPSKismiText[playerid][9], -1);
	TextDrawSetShadow(FPSKismiText[playerid][9], 0);
	TextDrawSetOutline(FPSKismiText[playerid][9], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][9], 255);
	TextDrawFont(FPSKismiText[playerid][9], 4);
	TextDrawSetProportional(FPSKismiText[playerid][9], 0);
	TextDrawSetShadow(FPSKismiText[playerid][9], 0);

	FPSKismiText[playerid][10] = TextDrawCreate(531.500000, 343.688964, "K/D:");
	TextDrawLetterSize(FPSKismiText[playerid][10], 0.147000, 0.716444);
	TextDrawAlignment(FPSKismiText[playerid][10], 1);
	TextDrawColor(FPSKismiText[playerid][10], -1);
	TextDrawSetShadow(FPSKismiText[playerid][10], 0);
	TextDrawSetOutline(FPSKismiText[playerid][10], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][10], 255);
	TextDrawFont(FPSKismiText[playerid][10], 1);
	TextDrawSetProportional(FPSKismiText[playerid][10], 1);
	TextDrawSetShadow(FPSKismiText[playerid][10], 0);

	FPSKismiText[playerid][11] = TextDrawCreate(556.000000, 343.688964, "Olum:");
	TextDrawLetterSize(FPSKismiText[playerid][11], 0.147000, 0.716444);
	TextDrawAlignment(FPSKismiText[playerid][11], 1);
	TextDrawColor(FPSKismiText[playerid][11], -1);
	TextDrawSetShadow(FPSKismiText[playerid][11], 0);
	TextDrawSetOutline(FPSKismiText[playerid][11], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][11], 255);
	TextDrawFont(FPSKismiText[playerid][11], 1);
	TextDrawSetProportional(FPSKismiText[playerid][11], 1);
	TextDrawSetShadow(FPSKismiText[playerid][11], 0);

	FPSKismiText[playerid][12] = TextDrawCreate(560.500000, 350.533416, "00");
	TextDrawLetterSize(FPSKismiText[playerid][12], 0.110500, 0.766221);
	TextDrawAlignment(FPSKismiText[playerid][12], 1);
	TextDrawColor(FPSKismiText[playerid][12], -16776961);
	TextDrawSetShadow(FPSKismiText[playerid][12], 0);
	TextDrawSetOutline(FPSKismiText[playerid][12], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][12], 255);
	TextDrawFont(FPSKismiText[playerid][12], 1);
	TextDrawSetProportional(FPSKismiText[playerid][12], 1);
	TextDrawSetShadow(FPSKismiText[playerid][12], 0);

	FPSKismiText[playerid][13] = TextDrawCreate(560.500000, 350.533416, "00");
	TextDrawLetterSize(FPSKismiText[playerid][13], 0.110500, 0.766221);
	TextDrawAlignment(FPSKismiText[playerid][13], 1);
	TextDrawColor(FPSKismiText[playerid][13], -16776961);
	TextDrawSetShadow(FPSKismiText[playerid][13], 0);
	TextDrawSetOutline(FPSKismiText[playerid][13], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][13], 255);
	TextDrawFont(FPSKismiText[playerid][13], 1);
	TextDrawSetProportional(FPSKismiText[playerid][13], 1);
	TextDrawSetShadow(FPSKismiText[playerid][13], 0);

	FPSKismiText[playerid][14] = TextDrawCreate(574.000000, 345.399932, "hud:radar_emmetgun");
	TextDrawLetterSize(FPSKismiText[playerid][14], 0.000000, 0.000000);
	TextDrawTextSize(FPSKismiText[playerid][14], 8.000000, 10.000000);
	TextDrawAlignment(FPSKismiText[playerid][14], 1);
	TextDrawColor(FPSKismiText[playerid][14], -1);
	TextDrawSetShadow(FPSKismiText[playerid][14], 0);
	TextDrawSetOutline(FPSKismiText[playerid][14], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][14], 255);
	TextDrawFont(FPSKismiText[playerid][14], 4);
	TextDrawSetProportional(FPSKismiText[playerid][14], 0);
	TextDrawSetShadow(FPSKismiText[playerid][14], 0);

	FPSKismiText[playerid][15] = TextDrawCreate(583.500000, 343.688964, "Oldurme:");
	TextDrawLetterSize(FPSKismiText[playerid][15], 0.147000, 0.716444);
	TextDrawAlignment(FPSKismiText[playerid][15], 1);
	TextDrawColor(FPSKismiText[playerid][15], -1);
	TextDrawSetShadow(FPSKismiText[playerid][15], 0);
	TextDrawSetOutline(FPSKismiText[playerid][15], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][15], 255);
	TextDrawFont(FPSKismiText[playerid][15], 1);
	TextDrawSetProportional(FPSKismiText[playerid][15], 1);
	TextDrawSetShadow(FPSKismiText[playerid][15], 0);

	FPSKismiText[playerid][16] = TextDrawCreate(590.500000, 349.911193, "00");
	TextDrawLetterSize(FPSKismiText[playerid][16], 0.110500, 0.766221);
	TextDrawAlignment(FPSKismiText[playerid][16], 1);
	TextDrawColor(FPSKismiText[playerid][16], -16776961);
	TextDrawSetShadow(FPSKismiText[playerid][16], 0);
	TextDrawSetOutline(FPSKismiText[playerid][16], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][16], 255);
	TextDrawFont(FPSKismiText[playerid][16], 1);
	TextDrawSetProportional(FPSKismiText[playerid][16], 1);
	TextDrawSetShadow(FPSKismiText[playerid][16], 0);

	FPSKismiText[playerid][17] = TextDrawCreate(520.500000, 373.555694, "box");
	TextDrawLetterSize(FPSKismiText[playerid][17], 0.000000, -1.982795);
	TextDrawTextSize(FPSKismiText[playerid][17], 528.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][17], 1);
	TextDrawColor(FPSKismiText[playerid][17], -1);
	TextDrawUseBox(FPSKismiText[playerid][17], 1);
	TextDrawBoxColor(FPSKismiText[playerid][17], 136);
	TextDrawSetShadow(FPSKismiText[playerid][17], 0);
	TextDrawSetOutline(FPSKismiText[playerid][17], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][17], 255);
	TextDrawFont(FPSKismiText[playerid][17], 1);
	TextDrawSetProportional(FPSKismiText[playerid][17], 1);
	TextDrawSetShadow(FPSKismiText[playerid][17], 0);

	FPSKismiText[playerid][18] = TextDrawCreate(546.000000, 372.311248, "box");
	TextDrawLetterSize(FPSKismiText[playerid][18], 0.000000, -1.832795);
	TextDrawTextSize(FPSKismiText[playerid][18], 553.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][18], 1);
	TextDrawColor(FPSKismiText[playerid][18], -1);
	TextDrawUseBox(FPSKismiText[playerid][18], 1);
	TextDrawBoxColor(FPSKismiText[playerid][18], 136);
	TextDrawSetShadow(FPSKismiText[playerid][18], 0);
	TextDrawSetOutline(FPSKismiText[playerid][18], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][18], 255);
	TextDrawFont(FPSKismiText[playerid][18], 1);
	TextDrawSetProportional(FPSKismiText[playerid][18], 1);
	TextDrawSetShadow(FPSKismiText[playerid][18], 0);

	FPSKismiText[playerid][19] = TextDrawCreate(556.500000, 359.711212, "hud:radar_gangn");
	TextDrawLetterSize(FPSKismiText[playerid][19], 0.000000, 0.000000);
	TextDrawTextSize(FPSKismiText[playerid][19], -13.000000, 9.000000);
	TextDrawAlignment(FPSKismiText[playerid][19], 1);
	TextDrawColor(FPSKismiText[playerid][19], -1);
	TextDrawSetShadow(FPSKismiText[playerid][19], 0);
	TextDrawSetOutline(FPSKismiText[playerid][19], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][19], 255);
	TextDrawFont(FPSKismiText[playerid][19], 4);
	TextDrawSetProportional(FPSKismiText[playerid][19], 0);
	TextDrawSetShadow(FPSKismiText[playerid][19], 0);

	FPSKismiText[playerid][20] = TextDrawCreate(520.000000, 359.711212, "ld_none:warp");
	TextDrawLetterSize(FPSKismiText[playerid][20], 0.000000, 0.000000);
	TextDrawTextSize(FPSKismiText[playerid][20], 8.000000, 10.000000);
	TextDrawAlignment(FPSKismiText[playerid][20], 1);
	TextDrawColor(FPSKismiText[playerid][20], -1);
	TextDrawSetShadow(FPSKismiText[playerid][20], 0);
	TextDrawSetOutline(FPSKismiText[playerid][20], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][20], 255);
	TextDrawFont(FPSKismiText[playerid][20], 4);
	TextDrawSetProportional(FPSKismiText[playerid][20], 0);
	TextDrawSetShadow(FPSKismiText[playerid][20], 0);

	FPSKismiText[playerid][21] = TextDrawCreate(531.500000, 358.000091, "FPS:");
	TextDrawLetterSize(FPSKismiText[playerid][21], 0.147000, 0.716444);
	TextDrawAlignment(FPSKismiText[playerid][21], 1);
	TextDrawColor(FPSKismiText[playerid][21], -1);
	TextDrawSetShadow(FPSKismiText[playerid][21], 0);
	TextDrawSetOutline(FPSKismiText[playerid][21], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][21], 255);
	TextDrawFont(FPSKismiText[playerid][21], 1);
	TextDrawSetProportional(FPSKismiText[playerid][21], 1);
	TextDrawSetShadow(FPSKismiText[playerid][21], 0);

	FPSKismiText[playerid][22] = TextDrawCreate(533.500000, 364.222320, "00");
	TextDrawLetterSize(FPSKismiText[playerid][22], 0.110500, 0.766221);
	TextDrawAlignment(FPSKismiText[playerid][22], 1);
	TextDrawColor(FPSKismiText[playerid][22], -16776961);
	TextDrawSetShadow(FPSKismiText[playerid][22], 0);
	TextDrawSetOutline(FPSKismiText[playerid][22], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][22], 255);
	TextDrawFont(FPSKismiText[playerid][22], 1);
	TextDrawSetProportional(FPSKismiText[playerid][22], 1);
	TextDrawSetShadow(FPSKismiText[playerid][22], 0);

	FPSKismiText[playerid][23] = TextDrawCreate(555.500000, 358.622314, "Yetkililer:");
	TextDrawLetterSize(FPSKismiText[playerid][23], 0.147000, 0.716444);
	TextDrawAlignment(FPSKismiText[playerid][23], 1);
	TextDrawColor(FPSKismiText[playerid][23], -1);
	TextDrawSetShadow(FPSKismiText[playerid][23], 0);
	TextDrawSetOutline(FPSKismiText[playerid][23], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][23], 255);
	TextDrawFont(FPSKismiText[playerid][23], 1);
	TextDrawSetProportional(FPSKismiText[playerid][23], 1);
	TextDrawSetShadow(FPSKismiText[playerid][23], 0);

	FPSKismiText[playerid][24] = TextDrawCreate(563.062988, 364.183441, "00");
	TextDrawLetterSize(FPSKismiText[playerid][24], 0.110500, 0.766221);
	TextDrawAlignment(FPSKismiText[playerid][24], 1);
	TextDrawColor(FPSKismiText[playerid][24], -16776961);
	TextDrawSetShadow(FPSKismiText[playerid][24], 0);
	TextDrawSetOutline(FPSKismiText[playerid][24], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][24], 255);
	TextDrawFont(FPSKismiText[playerid][24], 1);
	TextDrawSetProportional(FPSKismiText[playerid][24], 1);
	TextDrawSetShadow(FPSKismiText[playerid][24], 0);

	FPSKismiText[playerid][25] = TextDrawCreate(583.000000, 372.933471, "box");
	TextDrawLetterSize(FPSKismiText[playerid][25], 0.000000, -1.932795);
	TextDrawTextSize(FPSKismiText[playerid][25], 590.000000, 0.000000);
	TextDrawAlignment(FPSKismiText[playerid][25], 1);
	TextDrawColor(FPSKismiText[playerid][25], -1);
	TextDrawUseBox(FPSKismiText[playerid][25], 1);
	TextDrawBoxColor(FPSKismiText[playerid][25], 136);
	TextDrawSetShadow(FPSKismiText[playerid][25], 0);
	TextDrawSetOutline(FPSKismiText[playerid][25], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][25], 255);
	TextDrawFont(FPSKismiText[playerid][25], 1);
	TextDrawSetProportional(FPSKismiText[playerid][25], 1);
	TextDrawSetShadow(FPSKismiText[playerid][25], 0);

	FPSKismiText[playerid][26] = TextDrawCreate(583.000000, 359.711212, "particle:lockonfire");
	TextDrawLetterSize(FPSKismiText[playerid][26], 0.000000, 0.000000);
	TextDrawTextSize(FPSKismiText[playerid][26], 6.000000, 9.000000);
	TextDrawAlignment(FPSKismiText[playerid][26], 1);
	TextDrawColor(FPSKismiText[playerid][26], -1);
	TextDrawSetShadow(FPSKismiText[playerid][26], 0);
	TextDrawSetOutline(FPSKismiText[playerid][26], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][26], 255);
	TextDrawFont(FPSKismiText[playerid][26], 4);
	TextDrawSetProportional(FPSKismiText[playerid][26], 0);
	TextDrawSetShadow(FPSKismiText[playerid][26], 0);

	FPSKismiText[playerid][27] = TextDrawCreate(593.000000, 358.000091, "Ping:");
	TextDrawLetterSize(FPSKismiText[playerid][27], 0.147000, 0.716444);
	TextDrawAlignment(FPSKismiText[playerid][27], 1);
	TextDrawColor(FPSKismiText[playerid][27], -1);
	TextDrawSetShadow(FPSKismiText[playerid][27], 0);
	TextDrawSetOutline(FPSKismiText[playerid][27], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][27], 255);
	TextDrawFont(FPSKismiText[playerid][27], 1);
	TextDrawSetProportional(FPSKismiText[playerid][27], 1);
	TextDrawSetShadow(FPSKismiText[playerid][27], 0);

	FPSKismiText[playerid][28] = TextDrawCreate(595.562988, 364.183441, "00");
	TextDrawLetterSize(FPSKismiText[playerid][28], 0.110500, 0.766221);
	TextDrawAlignment(FPSKismiText[playerid][28], 1);
	TextDrawColor(FPSKismiText[playerid][28], -16776961);
	TextDrawSetShadow(FPSKismiText[playerid][28], 0);
	TextDrawSetOutline(FPSKismiText[playerid][28], 0);
	TextDrawBackgroundColor(FPSKismiText[playerid][28], 255);
	TextDrawFont(FPSKismiText[playerid][28], 1);
	TextDrawSetProportional(FPSKismiText[playerid][28], 1);
	TextDrawSetShadow(FPSKismiText[playerid][28], 0);
	return true;
}

stock TextSilEx(playerid)
{
	for(new x = 0; x < 29; x++)
	{
	    TextDrawDestroy(FPSKismiText[playerid][x]);
	}
	TextDrawDestroy(exptext1[playerid]);
	TextDrawDestroy(elegecirme[playerid]);
	TextDrawDestroy(OlumText5[playerid]);
	TextDrawDestroy(OlumText4[playerid]);
	TextDrawDestroy(OlumText3[playerid]);
	TextDrawDestroy(GostergeAsilHiz[playerid]);
	TextDrawDestroy(skorlar10[playerid]);
	TextDrawDestroy(skorlar8[playerid]);
	TextDrawDestroy(skorlar7[playerid]);
	TextDrawDestroy(skorlar6[playerid]);
	TextDrawDestroy(skorlar4[playerid]);
	TextDrawDestroy(skorlar2[playerid]);
	TextDrawDestroy(vote8[playerid]);
	TextDrawDestroy(vote7[playerid]);
	for(new u; u < 52; u++)
	{
		TextDrawDestroy(NEWEXPText[playerid][u]);
	}
	return true;
}

public OnPlayerUnpause(playerid)
{
	PlayerInfo[playerid][AFK] = false;
	KillTimer(PlayerInfo[playerid][AFK_Timer]);
	return true;
}

public OnPlayerPause(playerid)
{
	PlayerInfo[playerid][AFK] = true;
	KillTimer(PlayerInfo[playerid][AFK_Timer]);
	PlayerInfo[playerid][AFK_Timer] = SetTimerEx("AFK_Atim", 600000, false, "d", playerid);
	return true;
}

CB: AFK_Atim(playerid)
{
	if(PlayerInfo[playerid][AFK] == false) return KillTimer(PlayerInfo[playerid][AFK_Timer]);
	kickle(playerid, "AFK");
	return true;
}

CMD:longwaydown(playerid, params[])
{
	SetPlayerPV(playerid, -1268.8969, -1967.8436, 2548.5598);
	SCM(playerid, -1, ""safaf"Long Way Down Stunt adlý bölgeye gönderildiniz.");
	return true;
}

CMD:freeway(playerid, params[])
{
	SetPlayerPV(playerid, -2845.4104, 2192.5742, 802.3612);
	SCM(playerid, -1, ""safaf"Freeway Stunt adlý bölgeye gönderildiniz.");
	return true;
}

CMD:tube(playerid, params[])
{
	SetPlayerPV(playerid, -183.2982, -2725.5115, 924.6597);
	SCM(playerid, -1, ""safaf"Tube Stunt adlý bölgeye gönderildiniz.");
	return true;
}

CMD:duello(playerid, params[])
{
	new id, str[1024];
	if(sscanf(params, "u", id)) return Kullanim(playerid, "duello [OYUNCU ÝSÝM / ÝD]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil.");
	if(GetPVarInt(playerid, "duello_istek") == 0) return Hata(playerid, "Düello istekleriniz kapalýyken kimseye düello isteði atamazsýnýz.");
	if(GetPVarInt(id, "duello_istek") == 0) return Hata(playerid, "Karþý taraf düello isteklerini kapatmýþ.");
	if(id == playerid) return Hata(playerid, "Kendinize düello daveti atamazsýnýz.");
	if(duelloda[id] == true) return Hata(playerid, "Oyuncu þu anda düelloda.");
	if(duelloda[playerid] == true) return Hata(playerid, "Düellodayken bunu yapamazsýnýz.");
	if(duelatti[playerid] == true) return Hata(playerid, "Bir düello isteði zaten göndermiþsiniz.");
	
	if(lKatildim[id] == 1 || lEtkinlikte[id] == 1) return Hata(playerid, "Oyuncu þu anda etkinlikte.");
	if(Derbyde[id] == true) return Hata(playerid,"Oyuncu þu anda derby'de.");
	if(PlayerInfo[id][Parkour] == true) return Hata(playerid, "Oyuncu þu anda parkur'da.");
	if(CSDe[id] == 1) return Hata(playerid,"Oyuncu þu an CS Minigame'de.");
	if(HungerGamede[id] == 1) return Hata(playerid,"Oyuncu þu an Hunger Game'de.");
	if(Zombiede[id] == 1) return Hata(playerid,"Oyuncu þu an Zombie'de.");
	if(GunGamedeAmk[id] == true) return Hata(playerid,"Oyuncu þu an GunGame'de.");
	if(Speedydeaglede[id] == true) return Hata(playerid, "Oyuncu þu an SpeedyDeagle'de.");
	if(dmde[id] > 0 || dmyasagi[id] == 1) return Hata(playerid, "Oyuncu þu an DM'de.");
	if(Bankada[id] == true) return Hata(playerid, "Oyuncu þu anda bankada.");
	if(PlayerInfo[id][Jailed] == 1) return Hata(playerid, "Oyuncu þu an hapiste.");
	if(duelloda[id] == true) return Hata(playerid, "Oyuncu þu an düelloda.");
	if(Yarista[id] == true) return Hata(playerid, "Oyuncu þu anda yarýþta.");
	if(RaceDuelde[id] == true) return Hata(playerid, "Oyuncu þu anda race duelde.");
	if(isCbug[id] == 1) return Hata(playerid, "Bu oyuncuya þu anda düello isteði atamazsýnýz.");
	
	if(spamProtect(playerid, "duello", 20)) return true;
	format(str, sizeof(str), "\
	"ww"Desert Eagle\n\
	"ww"Sawn-off Shotgun\n\
	"ww"Shotgun\n\
	"ww"Sniper\n\
	"ww"MP5\n\
	"ww"Grenade\n\
	"ww"UZI\n\
	"ww"AK-47\n\
	"ww"M4");
	SetPVarInt(playerid, "duello_davetatilan", id);
	SetPVarInt(id, "duello_davetatilan", playerid);
	ShowPlayerDialog(playerid, DIALOG_DUELLO_SILAH1, DIALOG_STYLE_LIST, ""safaf"Düello - Silah 1", str, ""ww"Seç", ""ww"Kapat");
	return true;
}

CMD:kullanicilar(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);

	new str[10000], sql, isim[24], toplamstr[10000];
	mysql_query(mysqlC, "SELECT * FROM `oyuncular` ORDER BY `sqlid` ASC LIMIT 15");

	strcat(toplamstr, ""ww"SQLID\t"ww"Kullanýcý Adý\n");

	kullanici_sayi[playerid] = 15;

	for(new i; i < cache_num_rows(); i++)
	{
	    cache_get_value_name_int(i, "sqlid", sql);
	    cache_get_value_name(i, "kullaniciadi", isim);
	    format(str, sizeof(str), ""ww"%s\t"ww"%s\n", FormatMoney(sql), isim);
	    strcat(toplamstr, str);
	}

	mysql_query(mysqlC, "SELECT * FROM `oyuncular`");

	if(cache_num_rows() > 15)
	{
	    strcat(toplamstr, ""wb"» "ad"Sonraki Sayfa "wb"«");
	}

	ShowPlayerDialog(playerid, DIALOG_ILERLE, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Tüm Kullanýcýlar", toplamstr, ""ww"Ýleri", ""ww"Kapat");
	return true;
}

stock CetedekiLiderSayisi(ceteID)
{
	new sayim = 0;
	foreach(new i: Player)
	{
	    if(PlayerInfo[i][PlayerCeteID] == ceteID && PlayerInfo[i][PlayerCeteRutbeID] == 9)
	    {
	        sayim++;
	    }
	}
	return sayim;
}

CB: TarihSaat(playerid)
{
	new string[256], year, month, day, hours, minutes, seconds;
	getdate(year, month, day), gettime(hours, minutes, seconds);
	hours += 7;
	if(hours >= 24)
	{
	    hours -= 24;
	}
	format(string, sizeof string, "~w~Tarih: ~w~~h~~h~%d/%s%d/%s%d  ~w~Saat: ~w~~h~~h~%s%d:%s%d:%s%d", day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year, (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
	TextDrawSetString(pDateClock, string);
}

stock CheckAdvertising( string[ ] )
{
    new dotCount;
    for ( new i; string[ i ] != EOS; ++i )
    {
        if ( ( '0' <= string[ i ] <= '9') || string[ i ] == '.' || string[ i ] == ',' || string[ i ] == ' ' || string[ i ] == '-' || string[ i ] == '/' || string[ i ] == ':' || string[ i ] == '*' || string[ i ] == '@' || string[ i ] == '+' || string[ i ] == '=' || string[ i ] == '?' || string[ i ] == '!' || string[ i ] == '&' || string[ i ] == '&' || string[ i ] == ''' || string[ i ] == '^' )
        {
            if ( ( string[ i ] == '.' ) && ( string[ i + 1 ] != '.' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
            	++dotCount;

			if ( ( string[ i ] == ',' ) && ( string[ i + 1 ] != ',' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

			if ( ( string[ i ] == ' ' ) && ( string[ i + 1 ] != ' ' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

			if ( ( string[ i ] == '-' ) && ( string[ i + 1 ] != '-' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '/' ) && ( string[ i + 1 ] != '/' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == ':' ) && ( string[ i + 1 ] != ':' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '*' ) && ( string[ i + 1 ] != '*' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '@' ) && ( string[ i + 1 ] != '@' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '+' ) && ( string[ i + 1 ] != '+' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '=' ) && ( string[ i + 1 ] != '=' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '?' ) && ( string[ i + 1 ] != '?' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '!' ) && ( string[ i + 1 ] != '!' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '&' ) && ( string[ i + 1 ] != '&' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '%' ) && ( string[ i + 1 ] != '%' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == ''' ) && ( string[ i + 1 ] != ''' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            if ( ( string[ i ] == '^' ) && ( string[ i + 1 ] != '^' ) && ( '0' <= string[ i - 1 ] <= '9' ) )
				++dotCount;

            continue;
        }
    }
    return ( dotCount > 2 );
}

stock strreplaceID(string[], const search[], const replacement[], bool:ignorecase = false, pos = 0, limit = -1, maxlength = sizeof(string))
{
    if (limit == 0)
        return false;

    new
             sublen = strlen(search),
             replen = strlen(replacement),
        bool:packed = ispacked(string),
             maxlen = maxlength,
             len = strlen(string),
             count = 0
    ;

    if (packed)
        maxlen *= 4;

    if (!sublen)
        return false;

    while (-1 != (pos = strfind(string, search, ignorecase, pos))) {
        strdel(string, pos, pos + sublen);

        len -= sublen;

        if (replen && len + replen < maxlen) {
            strins(string, replacement, pos, maxlength);

            pos += replen;
            len += replen;
        }

        if (limit != -1 && ++count >= limit)
            break;
    }

    return count;
}

CMD:mdusme(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid, "Bir araçta deðilsiniz.");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 581 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 509 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 481 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 462 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 521 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 463 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 510 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 522 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 461 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 448 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 471 &&
	GetVehicleModel(GetPlayerVehicleID(playerid)) != 468) return Hata(playerid, "Bir motorda deðilsiniz.");
	if(GetPVarInt(playerid, "mdusme") == 1)
	{
	    SetPVarInt(playerid, "mdusme", 0);
	    SCM(playerid, -1, ""safaf"Motordan düþmeme özelliði devre dýþý býrakýldý.");
	}
	else if(GetPVarInt(playerid, "mdusme") == 0)
	{
	    SetPVarInt(playerid, "mdusme", 1);
	    SCM(playerid, -1, ""safaf"Motordan düþmeme özelliði açýldý.");
	}
	return true;
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float: x_, Float: y_, Float: z_;
	GetPlayerPos(playerid, x_, y_, z_);
 	for(new i; i != sizeof(SanAndreasZones); i++)
	{
		if(x_ >= SanAndreasZones[i][Zone_Area][0] && x_ <= SanAndreasZones[i][Zone_Area][3] && y_ >= SanAndreasZones[i][Zone_Area][1] && y_ <= SanAndreasZones[i][Zone_Area][4])
		{
			return format(zone, len, SanAndreasZones[i][Zone_Name], 0);
		}
	}
	return false;
}

stock Get2DZone(Float: x_, Float: y_, Float: z_, zone[], len)
{
	#pragma unused z_
 	for(new i; i != sizeof(SanAndreasZones); i++)
	{
		if(x_ >= SanAndreasZones[i][Zone_Area][0] && x_ <= SanAndreasZones[i][Zone_Area][3] && y_ >= SanAndreasZones[i][Zone_Area][1] && y_ <= SanAndreasZones[i][Zone_Area][4])
		{
			return format(zone, len, SanAndreasZones[i][Zone_Name], 0);
		}
	}
	return false;
}

CMD:duellokapat(playerid, params[])
{
	if(GetPVarInt(playerid, "duello_istek") == 0)
	{
	    SetPVarInt(playerid, "duello_istek", 1);
	    SCM(playerid, -1, ""safaf"Düello istekleriniz "ad"açýldý.");
	}
	else if(GetPVarInt(playerid, "duello_istek") == 1)
	{
	    SetPVarInt(playerid, "duello_istek", 0);
	    SCM(playerid, -1, ""safaf"Düello istekleriniz "wb"kapatýldý.");
	}
	return true;
}

CMD:sorular(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	new sql[500], satir[10000], toplamsatir[10000], id, soru[1024], cevap[500];
	format(sql, sizeof(sql), "SELECT * FROM `sorular` LIMIT 10");
	mysql_query(mysqlC, sql);
	sorular_limit[playerid] = 10;

	strcat(toplamsatir, ""ww"ID\t"ww"Soru\t"ww"Cevap\n");

	if(cache_num_rows())
	{
	    for(new i = 0; i < cache_num_rows(); i++)
	    {
	        cache_get_value_name_int(i, "ID", id);
	        cache_get_value_name(i, "Soru", soru, 1024);
	        cache_get_value_name(i, "Cevap", cevap, 500);
	        format(satir, sizeof(satir), "%s"ww"%d\t"ww"%s\t"ww"%s\n", satir, id, soru, cevap);
	    }
	    strcat(toplamsatir, satir);
	}
	else
	{
	    return Hata(playerid, "Hiç soru eklenmemiþ.");
	}

	mysql_query(mysqlC, "SELECT * FROM `sorular`");
	if(cache_num_rows() > sorular_limit[playerid])
	{
	    strcat(toplamsatir, ""ww"» Diðer Sayfa");
	}

	ShowPlayerDialog(playerid, DIALOG_SORULAR, DIALOG_STYLE_TABLIST_HEADERS, ""safaf"Soru Listesi", toplamsatir, ""ww"Kapat", "");
	return true;
}

CMD:sorularekle(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
	ShowPlayerDialog(playerid, DIALOG_SORULAR_EKLE, DIALOG_STYLE_INPUT, ""safaf"Soru Listesi - Ekle (1/2)", ""ww"Eklenecek soruyu yazýn:\n", ""ww"Ýlerle", ""ww"Ýptal");
	return true;
}

CMD:sorularsil(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);
    ShowPlayerDialog(playerid, DIALOG_SORULAR_SIL, DIALOG_STYLE_INPUT, ""safaf"Soru Listesi - Sil", ""ww"Silinecek sorunun ID'sini girin:\n", ""ww"Sil", ""ww"Ýptal");
	return true;
}

CMD:genelkultursor(playerid, params[])
{
    if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 10);

	if(SoruData[sAktif] == true) return Hata(playerid, "Bir genel kültür sorusu zaten aktif!");

    GenelKulturSor();
	return true;
}

CMD:bakim(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 10) return YETERSIZSEVIYE(playerid, 99);
	
	if(BakimDurum == false)
	{
	    SendRconCommand("hostname »» GamerLity FR™ [BAKIM] - Stunt/FR/Games ««");
	    SendRconCommand("password cxegaming1122339");
	    
	    foreach(new i: Player)
	    {
	        if(i == playerid) continue;
	        SCM(i, -1, ""safaf"Sunucumuz bakýma alýnmýþtýr, en kýsa sürede tekrar aktifleþtirilecektir.");
	        kickle(i, "Bakim");
	    }
	    SCM(playerid, -1, ""safaf"Bakým modu "ad"açýldý.");
	    BakimDurum = true;
	}
	else if(BakimDurum == true)
	{
	    new str[512];
	    format(str, sizeof(str), "hostname %s", HOSTNAME);
	    SendRconCommand(str);
	    SendRconCommand("password 0");
	    SCM(playerid, -1, ""safaf"Bakým modu "wb"kapatýldý.");
	    BakimDurum = false;
	}
	return true;
}

CMD:acikar(playerid, params[])
{
	new id;
	if(sscanf(params, "u", id)) return Kullanim(playerid, "acikar [ÝD/ÝSÝM]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil!");
	if(!IsPlayerInAnyVehicle(playerid)) return Hata(playerid, "Bir araçta deðilsiniz!");
	if(GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid)) return Hata(playerid, "Oyuncu sizin aracýnýzda deðil!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return Hata(playerid, "Aracýn sürücüsü olmalýsýnýz!");
	if(GetPlayerVehicleID(id) == GetPlayerVehicleID(playerid) && GetPlayerState(id) == PLAYER_STATE_DRIVER) return Hata(playerid, "Aracýn sürücüsünü atamazsýnýz!");
    if(spamProtect(playerid, "acikar", 7)) return true;
	RemovePlayerFromVehicle(id);
	SFM(playerid, -1, ""safaf"Baþarýyla "ad"%s(%d) "w"adlý oyuncuyu aracýnýzdan attýnýz.", getName(id), id);
	SFM(id, -1, ""safaf"Oyuncu "ad"%s(%d) "w"sizi aracýndan attý.", getName(playerid), playerid);
	return true;
}

CMD:raceduel(playerid, params[])
{
	new id, skor, para, str[512];
	
	if(sscanf(params, "uii", id, skor, para)) return Kullanim(playerid, "raceduel [ÝD/ÝSÝM] [ÖDÜL SKOR] [ÖDÜL PARA]");
	if(!IsPlayerConnected(id)) return Hata(playerid, "Oyuncu oyunda deðil!");
	if(id == playerid) return Hata(playerid, "Kendinize race duel atamazsýnýz!");
	if(GetPlayerMoney(playerid) < para) return Hata(playerid, "O kadar paranýz yok.");
	if(GetPlayerMoney(id) < para) return Hata(playerid, "Rakibin yeterli parasý yok.");
	if(GetPlayerScore(playerid) < skor) return Hata(playerid, "Yeterli skorunuz yok.");
	if(GetPlayerScore(id) < skor) return Hata(playerid, "Rakibin yeterli skoru yok.");
	if(skor > 50 || skor < 0) return Hata(playerid, "En fazla 50 skor bahis yapabilirsiniz.");
	if(para > 500000 || para < 0) return Hata(playerid, "En fazla $500.000 bahis yapabilirsiniz.");
	
	if(RaceDuelde[id] == true) return Hata(playerid, "Oyuncu zaten race duel'de.");
	if(lKatildim[id] == 1 || lEtkinlikte[id] == 1) return Hata(playerid, "Oyuncu þu anda etkinlikte.");
	if(Derbyde[id] == true) return Hata(playerid,"Oyuncu þu anda derby'de.");
	if(PlayerInfo[id][Parkour] == true) return Hata(playerid, "Oyuncu þu anda parkur'da.");
	if(CSDe[id] == 1) return Hata(playerid,"Oyuncu þu an CS Minigame'de.");
	if(HungerGamede[id] == 1) return Hata(playerid,"Oyuncu þu an Hunger Game'de.");
	if(Zombiede[id] == 1) return Hata(playerid,"Oyuncu þu an Zombie'de.");
	if(GunGamedeAmk[id] == true) return Hata(playerid,"Oyuncu þu an GunGame'de.");
	if(Speedydeaglede[id] == true) return Hata(playerid, "Oyuncu þu an SpeedyDeagle'de.");
	if(dmde[id] > 0 || dmyasagi[id] == 1) return Hata(playerid, "Oyuncu þu an DM'de.");
	if(Bankada[id] == true) return Hata(playerid, "Oyuncu þu anda bankada.");
	if(PlayerInfo[id][Jailed] == 1) return Hata(playerid, "Oyuncu þu an hapiste.");
	if(duelloda[id] == true) return Hata(playerid, "Oyuncu þu an düelloda.");
	if(Yarista[id] == true) return Hata(playerid, "Oyuncu þu anda yarýþta.");
	if(RaceDuelde[id] == true) return Hata(playerid, "Oyuncu þu anda race duelde.");
	
	SetPVarInt(playerid, "raceduel_gonderen", id);
	SetPVarInt(id, "raceduel_gonderen", playerid);
	SetPVarInt(playerid, "raceduel_para", para);
	SetPVarInt(playerid, "raceduel_skor", skor);
	SetPVarInt(id, "raceduel_para", para);
	SetPVarInt(id, "raceduel_skor", skor);
	
	format(str, sizeof(str), ""ww""ad"%s(%d) "w"adlý oyuncu sizi yarýþ düellosuna davet ediyor!\n\n\
	"ww"Ödül Skoru: "ad"%s\n\
	"ww"Ödül Parasý: "ad"$%s\n\n\
	"ww"Kabul ediyor musunuz?", getName(playerid), playerid, FormatMoney(skor), FormatMoney(para));
	
	ShowPlayerDialog(id, DIALOG_RACEDUEL, DIALOG_STYLE_MSGBOX, ""safaf"Race Duel Ýsteði", str, ""ww"Evet", ""ww"Hayýr");
	
	SCM(playerid, -1, ""safaf"Race duel isteði gönderildi.");
	return true;
}

CB: racearacav(playerid)
{
	CreatePlayerVehicle(playerid, 411);
	return true;
}

CB: duelkabuletmedi(playerid)
{
	duelatti[playerid] = false;
	return true;
}

CB: RaceVites_Duel(playerid)
{
	if(RaceDuelde[playerid] == false)
	{
        TextDrawHideForPlayer(playerid, VitesTD[0]);
		TextDrawHideForPlayer(playerid, VitesTD[1]);
		return KillTimer(RaceDuelTimer[playerid]);
	}
    if(RaceDuelVitesAtma[playerid] != true) return true;
	VitesAtabilirsin[playerid] = true;
	TextDrawShowForPlayer(playerid, VitesTD[0]);
	TextDrawShowForPlayer(playerid, VitesTD[1]);
	SetTimerEx("RaceVites_Duel_Bitir", 1200, false, "d", playerid);
	return true;
}

CB: RaceVites_Duel_Bitir(playerid)
{
    if(RaceDuelde[playerid] == false)
	{
        TextDrawHideForPlayer(playerid, VitesTD[0]);
		TextDrawHideForPlayer(playerid, VitesTD[1]);
		return KillTimer(RaceDuelTimer[playerid]);
	}
    if(RaceDuelVitesAtma[playerid] != true) return true;
	VitesAtabilirsin[playerid] = false;
	TextDrawHideForPlayer(playerid, VitesTD[0]);
	TextDrawHideForPlayer(playerid, VitesTD[1]);
	if(RaceBastim[playerid] == false)
	{
	    new id = GetPVarInt(playerid, "raceduel_gonderen");
	    new para = GetPVarInt(playerid, "raceduel_para");
	    new skor = GetPVarInt(playerid, "raceduel_skor");

		CPrace_duel_cp[playerid] = 0;
		CPrace_duel_cp[id] = 0;

		SFM(id, -1, ""safaf"Race duel'i kazandýnýz! "ad"(+%s$ ve +%s skor)", FormatMoney(para), FormatMoney(skor));
		SFM(playerid, -1, ""safaf"Race duel'i kaybettiniz. "wb"(-%s$ ve -%s skor)", FormatMoney(para), FormatMoney(skor));

		GivePlayerMoney(id, para);
		GivePlayerMoney(playerid, -para);

		SetPlayerScore(id, GetPlayerScore(playerid) + skor);
		SetPlayerScore(playerid, GetPlayerScore(id) - skor);

		RaceDuelde[id] = false;
		RaceDuelde[playerid] = false;

		OnPlayerSpawn(id);
		OnPlayerSpawn(playerid);

		DisablePlayerCheckpoint(playerid);
		DisablePlayerCheckpoint(id);
	}
	return true;
}

CB: racebasma(playerid)
{
	RaceBastim[playerid] = false;
	return true;
}

CB: raceyakin1(playerid)
{
	if(RaceDuelde[playerid] == false) return KillTimer(RaceYakinTimer[playerid]);
	RaceYakinP1 = GetPlayerDistanceFromPoint(playerid, -521.5491, -3727.8906, 3.3075);
	return true;
}

CB: raceyakin2(playerid)
{
    if(RaceDuelde[playerid] == false) return KillTimer(RaceYakinTimer[playerid]);
	RaceYakinP2 = GetPlayerDistanceFromPoint(playerid, -521.5491, -3727.8906, 3.3075);
	return true;
}

CB: rrrr(playerid)
{
	if(RaceDuelde[playerid] == false) return KillTimer(RACEkontrol);
	new gonderen = GetPVarInt(playerid, "raceduel_gonderen");
	if(RaceYakinP1 > RaceYakinP2)
	{
	    RacePosition[playerid] = 2;
	    RacePosition[gonderen] = 1;
	}
	else if(RaceYakinP1 < RaceYakinP2)
	{
	    RacePosition[playerid] = 1;
	    RacePosition[gonderen] = 2;
	}
	else if(RaceYakinP1 == RaceYakinP2)
	{
	    RacePosition[playerid] = 1;
	    RacePosition[gonderen] = 1;
	}
	return true;
}

CB: RaceTabloGuncelle(playerid)
{
	if(RaceDuelde[playerid] != true)
	{
		TextDrawHideForPlayer(playerid, RaceDuel_Gosterge[playerid][0]);
	    TextDrawHideForPlayer(playerid, RaceDuel_Gosterge[playerid][1]);
	    TextDrawHideForPlayer(playerid, RaceDuel_Gosterge[playerid][2]);
	    TextDrawHideForPlayer(playerid, RaceDuel_Gosterge[playerid][3]);
		return KillTimer(RaceTabloTimer[playerid]);
	}
	/*new id = GetPVarInt(playerid, "raceduel_gonderen");
	if(RaceDuelCP[id] > RaceDuelCP[playerid])
	{
	    RacePosition[playerid] = 2;
	}
	else if(RaceDuelCP[id] < RaceDuelCP[playerid])
	{
	    RacePosition[playerid] = 1;
	}
	else if(RaceDuelCP[playerid] == RaceDuelCP[id])
	{
	    RacePosition[playerid] = 1;
	}*/
    new str[256];
    format(str, sizeof(str), "~r~~h~Checkpoint: ~g~~h~%d", RaceDuelCP[playerid]);
    TextDrawSetString(RaceDuel_Gosterge[playerid][1], str);
    format(str, sizeof(str), "~r~~h~Sira: ~g~~h~%d", RacePosition[playerid]);
    TextDrawSetString(RaceDuel_Gosterge[playerid][2], str);
    format(str, sizeof(str), "~r~~h~Vites: ~g~~h~%d", RaceVites[playerid]);
    TextDrawSetString(RaceDuel_Gosterge[playerid][3], str);
	return true;
}

stock split(const strsrc[], strdest[][], delimiter)
{
    new i, li;
    new aNum;
    new len;
    while(i <= strlen(strsrc))
    {
        if(strsrc[i] == delimiter || i == strlen(strsrc))
        {
            len = strmid(strdest[aNum], strsrc, li, i, 128);
            strdest[aNum][len] = 0;
            li = i+1;
            aNum++;
        }
        i++;
    }
    return true;
}

CMD:lazer(playerid, params[])
{
	if(GetPVarInt(playerid, "laser") == 1)
	{
		SetPVarInt(playerid, "laser", 0);
		RemovePlayerAttachedObject(playerid, 0);
		SCM(playerid, -1, ""safaf"Lazer özelliði "wb"kapatýldý.");
	}
	else if(GetPVarInt(playerid, "laser") == 0)
	{
		SetPVarInt(playerid, "laser", 1);
		SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
		SCM(playerid, -1, ""safaf"Lazer özelliði "ad"açýldý.");
	}
	return true;
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) ||
	(anim == 1643) || (anim == 1453) || (anim == 220)) return true;
        return false;
}

CMD:labirent(playerid, params[])
{
	if(InfoLabyrinth[playerid][playerlost])return Hata(playerid, "Zaten labirenttesin!");

	new Float:pos[4];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	GetPlayerFacingAngle(playerid,pos[3]);
	InfoLabyrinth[playerid][oldposition][0]=pos[0];
	InfoLabyrinth[playerid][oldposition][1]=pos[1];
	InfoLabyrinth[playerid][oldposition][2]=pos[2];
	InfoLabyrinth[playerid][oldposition][3]=pos[3];
	InfoLabyrinth[playerid][oldclothes]=GetPlayerSkin(playerid);
	InfoLabyrinth[playerid][newworld][0]=GetPlayerVirtualWorld(playerid);
	InfoLabyrinth[playerid][newworld][1]=GetPlayerInterior(playerid);
	ResetPlayerWeapons(playerid);

	new rand = random(sizeof(ControlPoint));
	SetPlayerPos(playerid,ControlPoint[rand][0],ControlPoint[rand][1],ControlPoint[rand][2]);
	SetPlayerFacingAngle(playerid,ControlPoint[rand][3]);
	SetPlayerSkin(playerid,clotheslabyrinth[random(sizeof(clotheslabyrinth))]);
	SetPlayerVirtualWorld(playerid,LABYRINTH_VW);
	SetPlayerInterior(playerid,LABYRINTH_IN);
	SetPlayerTime(playerid,2,30);
	SetPlayerWeather(playerid,8);
	InfoLabyrinth[playerid][playerlost]=true;
	StopAudioStreamForPlayer(playerid);
	PlayAudioStreamForPlayer(playerid,musiclabyrinth[random(sizeof(musiclabyrinth))]);
	PlayerTextDrawShow(playerid,InfoLabyrinth[playerid][countertext]);
	InfoLabyrinth[playerid][labyrinthtimer]=gettime()+60;
	KillTimer(InfoLabyrinth[playerid][countertextTimer]);
	InfoLabyrinth[playerid][countertextTimer]=SetTimerEx("updatecounter",1000,true,"d",playerid);

	SCM(playerid, -1, ""safaf"Labirente gönderildin. Çýkýþý bulmadan çýkmak yok (:");
	Bilgi(playerid, "Çýkýþý bulduðun zaman "wb"/labirentcik "w"kullan.");
	return true;
}

CMD:labirentcik(playerid, params[])
{
	if(!InfoLabyrinth[playerid][playerlost])return Hata(playerid, "Zaten labirentte deðilsiniz.");
	if(!IsPlayerInRangeOfPoint(playerid,2.0,320.4967,1990.6796,37.1619))return Hata(playerid, "Labirentten çýkmak için çýkýþý bulmalýsýn :)");

	new Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	#pragma unused Second
	SetPlayerPos(playerid,InfoLabyrinth[playerid][oldposition][0],InfoLabyrinth[playerid][oldposition][1],InfoLabyrinth[playerid][oldposition][2]);
	SetPlayerFacingAngle(playerid,InfoLabyrinth[playerid][oldposition][3]);
	SetPlayerSkin(playerid,InfoLabyrinth[playerid][oldclothes]);
	SetPlayerVirtualWorld(playerid,InfoLabyrinth[playerid][newworld][0]);
	SetPlayerInterior(playerid,InfoLabyrinth[playerid][newworld][1]);

	InfoLabyrinth[playerid][oldposition][0]=0.0;
	InfoLabyrinth[playerid][oldposition][1]=0.0;
	InfoLabyrinth[playerid][oldposition][2]=0.0;
	InfoLabyrinth[playerid][oldposition][3]=0.0;
	InfoLabyrinth[playerid][newworld][0]=-1;
	InfoLabyrinth[playerid][newworld][1]=-1;
	InfoLabyrinth[playerid][playerlost]=false;
	StopAudioStreamForPlayer(playerid);
	for(new msg=0; msg<32; msg++) {SendClientMessage(playerid,-1," ");}
	PlayerTextDrawHide(playerid,InfoLabyrinth[playerid][countertext]);
	KillTimer(InfoLabyrinth[playerid][countertextTimer]);

	SCM(playerid, -1, ""safaf"Labirent'ten kurtulmayý baþardýn! "ad"Tebrikler!");
	return true;
}

forward updatecounter(playerid);
public updatecounter(playerid)
{
	new Hour, Minute, Second, data[30];
	if(InfoLabyrinth[playerid][labyrinthtimer]>gettime()){
		format(data,sizeof(data), "~w~00:%02d", InfoLabyrinth[playerid][labyrinthtimer]-gettime());
		PlayerTextDrawSetString(playerid,InfoLabyrinth[playerid][countertext], data);
		PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	}else{
		gettime(Hour, Minute, Second);
		#pragma unused Second
		SetPlayerPos(playerid,InfoLabyrinth[playerid][oldposition][0],InfoLabyrinth[playerid][oldposition][1],InfoLabyrinth[playerid][oldposition][2]);
		SetPlayerFacingAngle(playerid,InfoLabyrinth[playerid][oldposition][3]);
		SetPlayerSkin(playerid,InfoLabyrinth[playerid][oldclothes]);
		SetPlayerVirtualWorld(playerid,InfoLabyrinth[playerid][newworld][0]);
		SetPlayerInterior(playerid,InfoLabyrinth[playerid][newworld][1]);

		InfoLabyrinth[playerid][oldposition][0]=0.0;
		InfoLabyrinth[playerid][oldposition][1]=0.0;
		InfoLabyrinth[playerid][oldposition][2]=0.0;
		InfoLabyrinth[playerid][oldposition][3]=0.0;
		InfoLabyrinth[playerid][newworld][0]=-1;
		InfoLabyrinth[playerid][newworld][1]=-1;
		InfoLabyrinth[playerid][playerlost]=false;
		StopAudioStreamForPlayer(playerid);
		PlayerTextDrawHide(playerid,InfoLabyrinth[playerid][countertext]);
		KillTimer(InfoLabyrinth[playerid][countertextTimer]);
		SCM(playerid, -1, ""safaf"Süre doldu ve labirenti "wb"tamamlayamadýn!");
	}
}

CB: MapFSYukle()
{
	SendRconCommand("loadfs map");
	return true;
}

stock YarisYukle(isim[])
{
	if(YarisAktif == true || YarisBasladi == true) return printf("Yaris aktif gozukuyor, %s yuklenemedi.", isim);
	new dosya[100], dosyaism[100], Float: Veriler[4];
	format(dosya, sizeof(dosya), "Yaris/%s.txt", isim);
	if(!dini_Exists(dosya)) return true;
	if(dini_Exists(dosya))
	{
	    YarisAktif = true;
	    YarisBasladi = false;
	    YarisBitirmeSayim = 0;
	    format(YarisIsim, 50, "%s", dini_Get(dosya, "Isim"));
	    format(YarisDosyaIsim, 50, "%s", isim);
	    YarisToplamCP = dini_Int(dosya, "ToplamCP");
	    YarisArac = dini_Int(dosya, "Arac");
	    new x[250];
	    format(x, sizeof(x), "%s", dini_Get(dosya, "Baslangic"));
	    sscanf(x, "p<,>ffff", YarisBaslangic[0], YarisBaslangic[1], YarisBaslangic[2], YarisBaslangic[3]);
	    for(new i = 1; i <= YarisToplamCP; i++)
	    {
	        format(dosyaism, sizeof(dosyaism), "CP%d", i);
	        new s[250];
	        format(s, sizeof(s), "%s", dini_Get(dosya, dosyaism));
	        sscanf(s, "p<,>fff", Veriler[0], Veriler[1], Veriler[2]);
	        CP_Pos[i][0] = Veriler[0];
	        CP_Pos[i][1] = Veriler[1];
	        CP_Pos[i][2] = Veriler[2];
	    }
	    new reklam[512];
	    format(reklam, sizeof(reklam), "~r~~h~~h~[YARIS] ~w~~h~~h~Birazdan ~r~~h~~h~%s ~w~~h~~h~isimli yaris baslayacak. Katilmak icin ~r~~h~~h~/yarisgit", YarisIsim);
	    TextMesaji(code(reklam));
	    SetTimer("YarisTekrarla", 15000, false);
	    SetTimer("YarisBitir", 30000, false);
	    RaceTextGuncelle_Timer = SetTimer("YarisHesapla", 500, true);
	    print("» Yeni bir yarýþ baþladý.");
	}
	return true;
}

stock CP_Ayarla(playerid, PrevCP, NextCP, MaxCP, Type)
{
	if(Type == 0)
	{
		if(NextCP == MaxCP + 1) SetPlayerRaceCheckpoint(playerid, 1, CP_Pos[PrevCP][0], CP_Pos[PrevCP][1], CP_Pos[PrevCP][2], CP_Pos[NextCP][0], CP_Pos[NextCP][1], CP_Pos[NextCP][2], 12.0);
			else SetPlayerRaceCheckpoint(playerid, 0, CP_Pos[PrevCP][0], CP_Pos[PrevCP][1], CP_Pos[PrevCP][2], CP_Pos[NextCP][0], CP_Pos[NextCP][1], CP_Pos[NextCP][2], 12.0);
	}
	else if(Type == 3)
	{
		if(NextCP == MaxCP) SetPlayerRaceCheckpoint(playerid, 4, CP_Pos[PrevCP][0], CP_Pos[PrevCP][1], CP_Pos[PrevCP][2], CP_Pos[NextCP][0], CP_Pos[NextCP][1], CP_Pos[NextCP][2], 12.0);
			else SetPlayerRaceCheckpoint(playerid, 3, CP_Pos[PrevCP][0], CP_Pos[PrevCP][1], CP_Pos[PrevCP][2], CP_Pos[NextCP][0], CP_Pos[NextCP][1], CP_Pos[NextCP][2], 12.0);
	}
	return true;
}

CMD:yarisgit(playerid, params[])
{
	if(YarisAktif == false) return Hata(playerid, "Aktif bir yarýþ yok.");
	if(YarisBasladi == true) return Hata(playerid, "Yarýþ þu an oynanýyor, bir sonraki turu bekleyin.");
	Yarista[playerid] = true;
	DisableRemoteVehicleCollisions(playerid, true);
	destroyVehicle(playerid);
	SetPlayerPos(playerid, YarisBaslangic[0], YarisBaslangic[1], YarisBaslangic[2]);
	SetPlayerFacingAngle(playerid, YarisBaslangic[3]);
	SetCameraBehindPlayer(playerid);
	CPDurum[playerid] = 1;
	CP_Pos[playerid][3] = 0;
	RaceZamanTutum[playerid] = 0;
	CP_Ayarla(playerid, CPDurum[playerid], CPDurum[playerid] + 1, YarisToplamCP, 0);
	TogglePlayerControllable(playerid, false);
	SetTimerEx("YarisAracVer_S", 1000, false, "d", playerid);
	SetPlayerVirtualWorld(playerid, 34);
	SCM(playerid, -1, ""safaf"Race'ye katýldýnýz. Birazdan baþlayacaktýr.");
	
	new dosya[100], str[256];
	format(dosya, sizeof(dosya), "Yaris/%s.txt", YarisDosyaIsim);
	
	format(str, sizeof(str), "~r~~h~\"%s\" ~y~Top 5", YarisIsim);
	TextDrawSetString(Yaris_Top5[1], str);
	
	format(str, sizeof(str), "~b~~h~1) ~w~~h~%s - %s", dini_Get(dosya, "Top1Isim"), ConvertTime(dini_Int(dosya, "Top1")));
	TextDrawSetString(Yaris_Top5[3], str);
	
	format(str, sizeof(str), "~b~~h~2) ~w~~h~%s - %s", dini_Get(dosya, "Top2Isim"), ConvertTime(dini_Int(dosya, "Top2")));
	TextDrawSetString(Yaris_Top5[4], str);
	
	format(str, sizeof(str), "~b~~h~3) ~w~~h~%s - %s", dini_Get(dosya, "Top3Isim"), ConvertTime(dini_Int(dosya, "Top3")));
	TextDrawSetString(Yaris_Top5[5], str);
	
	format(str, sizeof(str), "~b~~h~4) ~w~~h~%s - %s", dini_Get(dosya, "Top4Isim"), ConvertTime(dini_Int(dosya, "Top4")));
	TextDrawSetString(Yaris_Top5[6], str);
	
	format(str, sizeof(str), "~b~~h~5) ~w~~h~%s - %s", dini_Get(dosya, "Top5Isim"), ConvertTime(dini_Int(dosya, "Top5")));
	TextDrawSetString(Yaris_Top5[7], str);
	
	for(new i = 0; i < 8; i++)
	{
	    TextDrawShowForPlayer(playerid, Yaris_Top5[i]);
	}
	return true;
}

CB: YarisTekrarla()
{
	new reklam[512];
	format(reklam, sizeof(reklam), "~r~~h~~h~[YARIS] ~w~~h~~h~Birazdan ~r~~h~~h~%s ~w~~h~~h~isimli yaris baslayacak. Katilmak icin ~r~~h~~h~/yarisgit", YarisIsim);
	TextMesaji(code(reklam));
	return true;
}

CB: YarisBitir()
{
	new str[512], Yaristakiler = 0;
	format(str, sizeof(str), "~r~~h~~h~[YARIS] %s ~w~~h~~h~isimli yarisa katilimlar sona erdi.", YarisIsim);
	TextMesaji(code(str));
	
	YarisAktif = false;
	
	foreach(new i: Player)
	{
	    if(Yarista[i] == true)
	    {
	        Yaristakiler++;
	    }
	}
	
	if(Yaristakiler <= 1)
	{
		format(str, sizeof(str), "~r~~h~~h~[YARIS] %s ~w~~h~~h~isimli yaris iptal edildi. ~p~(Yetersiz Katilim)", YarisIsim);
		TextMesaji(code(str));
		YarisAktif = false;
		YarisBasladi = false;
		foreach(new i: Player)
		{
		    if(Yarista[i] == true)
		    {
		        Yarista[i] = false;
		        OnPlayerSpawn(i);
		        DisablePlayerRaceCheckpoint(i);
		        for(new x = 0; x < 8; x++)
				{
				    TextDrawHideForPlayer(i, Yaris_Top5[x]);
				}
		    }
		}
	}
	else
	{
		YarisBasladi = true;

		foreach(new x: Player)
		{
		    if(Yarista[x] == true)
		    {
				PlayerInfo[x][Etkinlik_Sayac] = 6;
				KillTimer(PlayerInfo[x][Etkinlik_Timer]);
				PlayerInfo[x][Etkinlik_Timer] = SetTimerEx("Etkinlik_Sayim", 1000, true, "i", x);
		    }
		}
	}
	return true;
}

CB: RemoteKapat_Yaris(playerid)
{
    DisableRemoteVehicleCollisions(playerid, false);
	return true;
}

CMD:yarisbaslat(playerid, params[])
{
	if(PlayerInfo[playerid][dLevel] < 6) return YETERSIZSEVIYE(playerid, 6);
	new isim[256], dosya[100];
	if(sscanf(params, "s[256]", isim)) return Kullanim(playerid, "yarisbaslat [YARIÞ ÝSMÝ]");
	format(dosya, sizeof(dosya), "Yaris/%s.txt", isim);
	if(!dini_Exists(dosya)) return Hata(playerid, "Böyle bir yarýþ yok!");
	YarisYukle(isim);
	return true;
}

CB: YarisHesapla()
{
	new Float: fx, Float: fy, Float: fz, Float: uzaklik[MAX_PLAYERS];
	foreach(new i: Player)
	{
	    if(Yarista[i] == true)
	    {
		    GetPlayerPos(i, fx, fy, fz);
		    fx -= CP_Pos[CPDurum[i]][0];
		    fy -= CP_Pos[CPDurum[i]][1];
		    fz -= CP_Pos[CPDurum[i]][2];
		    uzaklik[i] = ((fx * fx) + (fy * fy) + (fz * fz));
		    RaceMevkii[i] = 1;
	    }
 	}
	foreach(new playerid: Player)
	{
	    if(Yarista[playerid] == true)
	    {
			foreach(new i: Player)
			{
			    if(Yarista[i] == true)
			    {
					if(i != playerid)
					{
					    if(CPDurum[playerid] < CPDurum[i]) RaceMevkii[playerid]++;
					    else if(CPDurum[playerid] == CPDurum[i])
						{
					    	if(uzaklik[playerid] > uzaklik[i]) RaceMevkii[playerid]++;
					    }
					}
					RaceMevkii[playerid] += YarisBitirmeSayim;
					RaceTextGuncelle(playerid);
				}
			}
		}
	}
	return true;
}

stock RaceTextGuncelle(playerid)
{
	if(Yarista[playerid] == false)
	{
	    for(new i = 0; i < 4; i++)
	    {
	        TextDrawHideForPlayer(playerid, YarisBilgiText[playerid][i]);
	    }
	    return KillTimer(RaceTextGuncelle_Timer);
	}
	new string[256], ek[56];
	if(RaceMevkii[playerid] == 1) format(ek, 56, "st");
	else if(RaceMevkii[playerid] == 2) format(ek, 56, "nd");
	else if(RaceMevkii[playerid] == 3) format(ek, 56, "rd");
	else format(ek, 56, "th");
	
	format(string, sizeof(string), "~r~~h~Checkpoint: ~g~~h~%d/%d", CPDurum[playerid], YarisToplamCP);
	TextDrawSetString(YarisBilgiText[playerid][1], string);
	
	format(string, sizeof(string), "~r~~h~Sira: ~g~~h~%d%s", RaceMevkii[playerid], ek);
	TextDrawSetString(YarisBilgiText[playerid][2], string);
	
	format(string, sizeof(string), "~r~~h~Sure: ~g~~h~%s", ConvertTime(gettime() - RaceZamanTutum[playerid]));
	TextDrawSetString(YarisBilgiText[playerid][3], string);
	return true;
}

CB: YarisAracVer_S(playerid)
{
	CreatePlayerVehicle(playerid, YarisArac);
	return true;
}

stock TarihCek(stamp = -1)
{
	if(stamp == -1)
		stamp = gettime();
	    
	new tarih_y3x[128];
	TimeStampTamTarih(stamp, tarih_y3x, 128);
	return tarih_y3x;
}

stock SQL_Isim_Cek(sqlidd)
{
	new ssx[24];
	switch(sqlidd)
	{
	    case -1:
	    {
	        format(ssx, sizeof(ssx), "Yok");
	    }
	    default:
	    {
			new sql[500], Cache: test;

			format(sql, sizeof(sql), "SELECT * FROM `oyuncular` WHERE `sqlid` = '%d'", sqlidd);
			test = mysql_query(mysqlC, sql);

			cache_get_value_name(0, "kullaniciadi", ssx, 24);
			cache_delete(test);
	    }
	}
	return ssx;
}

stock YarislariYukle()
{
	new dosya[100], yarisism[128];
	format(dosya, sizeof(dosya), "/Yaris/TumYarislar.txt");
	ToplamYarislar = dini_Int(dosya, "YarisSayisi");
	
	for(new i = 0; i < ToplamYarislar; i++)
	{
	    format(yarisism, sizeof(yarisism), "Yaris_%d", i);
	    format(YarisIsimleri[i], 128, "%s", dini_Get(dosya, yarisism));
	    printf("» %s isimli yarýþ yüklendi.", dini_Get(dosya, yarisism));
	}
	return true;
}

CB: YarisBaslatX()
{
	new baslatilacakYaris[59];
	format(baslatilacakYaris, sizeof(baslatilacakYaris), "%s", YarisIsimleri[random(ToplamYarislar)]);
	YarisYukle(baslatilacakYaris);
	return true;
}

stock CeteRutbeCek(playerid)
{
	new yetki_isimm[51], id = PlayerInfo[playerid][PlayerCeteID];
	switch(PlayerInfo[playerid][PlayerCeteRutbeID])
	{
	    case 0: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank1]);
	    case 1: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank2]);
	    case 2: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank3]);
	    case 3: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank4]);
	    case 4: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank5]);
	    case 5: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank6]);
	    case 6: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank7]);
	    case 7: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank8]);
	    case 8: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank9]);
	    case 9: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank10]);
	}
	return yetki_isimm;
}

stock CeteRutbeCek_SQL(oyuncu_ismi[])
{
	new asdas[500], rutbee, id, yetki_isimm[128], Cache:yex;
	
	format(asdas, sizeof(asdas), "SELECT * FROM `oyuncular` WHERE `kullaniciadi` = '%s'", oyuncu_ismi);
	yex = mysql_query(mysqlC, asdas);
	
	cache_get_value_name_int(0, "ceterutbe", rutbee);
	cache_get_value_name_int(0, "cete", id);
	
	cache_delete(yex);
	switch(rutbee)
	{
	    case 0: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank1]);
	    case 1: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank2]);
	    case 2: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank3]);
	    case 3: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank4]);
	    case 4: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank5]);
	    case 5: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank6]);
	    case 6: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank7]);
	    case 7: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank8]);
	    case 8: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank9]);
	    case 9: format(yetki_isimm, sizeof(yetki_isimm), "%s", Ceteler[id][cRank10]);
	}
	return yetki_isimm;
}

stock CeteIsimCek(ceteid)
{
	new isim[100];
	switch(ceteid)
	{
	    case -1: isim = "Yok";
	    default: format(isim, sizeof(isim), "%s", Ceteler[ceteid][cIsim]);
	}
	return isim;
}

public AntiFly(playerid)
{
	if(PlayerData[playerid][CurrentHouse] == -1) kickle(playerid, "Fly Hack");
	return true;
}

stock LabelUpdate(i)
{
	new str[512], cete[128], ceterutbe[128], yetki[128], godstr[50];
    if(PlayerInfo[i][Giris] == 1)
    {
        if(PlayerInfo[i][dLevel] > 0)
        {
            switch(PlayerInfo[i][PlayerCeteID])
            {
                case -1: cete = "";
                default: format(cete, sizeof(cete), "{%s}[%s] - %s", CeteColor[Ceteler[PlayerInfo[i][PlayerCeteID]][cRenk]][cInffrenk2], Ceteler[PlayerInfo[i][PlayerCeteID]][cTag], Ceteler[PlayerInfo[i][PlayerCeteID]][cIsim]);
            }
            if(PlayerInfo[i][PlayerCeteID] != -1)
            {
				format(ceterutbe, sizeof(ceterutbe), ""w"%s", CeteRutbeCek(i));
            }
            else
            {
                ceterutbe = "";
            }
            switch(GetPVarInt(i, "God"))
            {
                case 1: godstr = ""wb"[ "ad"ÖLÜMSÜZLÜK AKTÝF "wb"]";
                case 0: godstr = "";
            }
            switch(PlayerInfo[i][dLevel])
            {
                case 1..2: format(yetki, sizeof(yetki), ""wb"Deneme "ad"Oyun Görevlisi");
                case 3..7: format(yetki, sizeof(yetki), ""wb"%d "ad"Level Oyun Görevlisi", PlayerInfo[i][dLevel]);
                case 8: format(yetki, sizeof(yetki), ""wb"GamerLity "ad"Baþkan Yardýmcýsý");
                case 9: format(yetki, sizeof(yetki), ""wb"GamerLity "ad"Baþkan");
                case 10: format(yetki, sizeof(yetki), ""wb"GamerLity "ad"%s", (PlayerInfo[i][pCEO] == 1 ? ("CEO") : ("Sahip")));
            }
            format(str, sizeof(str), "%s\n%s\n%s\n%s", cete, ceterutbe, yetki, godstr);
            Update3DTextLabelText(siraclabel[i], -1, str);
        }
        else if(PlayerInfo[i][VIP] > 0)
        {
            switch(PlayerInfo[i][PlayerCeteID])
            {
                case -1: cete = "";
                default: format(cete, sizeof(cete), "{%s}[%s] - %s", CeteColor[Ceteler[PlayerInfo[i][PlayerCeteID]][cRenk]][cInffrenk2], Ceteler[PlayerInfo[i][PlayerCeteID]][cTag], Ceteler[PlayerInfo[i][PlayerCeteID]][cIsim]);
            }
            if(PlayerInfo[i][PlayerCeteID] != -1)
            {
				format(ceterutbe, sizeof(ceterutbe), ""w"%s", CeteRutbeCek(i));
            }
            else
            {
                ceterutbe = "";
            }
            switch(GetPVarInt(i, "God"))
            {
                case 1: godstr = ""wb"[ "ad"ÖLÜMSÜZLÜK AKTÝF "wb"]";
                case 0: godstr = "";
            }
            format(yetki, sizeof(yetki), ""wb"%d "ad"Level VIP", PlayerInfo[i][VIP]);
            format(str, sizeof(str), "%s\n%s\n%s\n%s", cete, ceterutbe, yetki, godstr);
            Update3DTextLabelText(siraclabel[i], -1, str);
        }
        else if(PlayerInfo[i][VIP] == 0 && PlayerInfo[i][dLevel] == 0)
        {
            switch(PlayerInfo[i][PlayerCeteID])
            {
                case -1: cete = "";
                default: format(cete, sizeof(cete), "{%s}[%s] - %s", CeteColor[Ceteler[PlayerInfo[i][PlayerCeteID]][cRenk]][cInffrenk2], Ceteler[PlayerInfo[i][PlayerCeteID]][cTag], Ceteler[PlayerInfo[i][PlayerCeteID]][cIsim]);
            }
            if(PlayerInfo[i][PlayerCeteID] != -1)
            {
				format(ceterutbe, sizeof(ceterutbe), ""w"%s", CeteRutbeCek(i));
            }
            else
            {
                ceterutbe = "";
            }
            switch(GetPVarInt(i, "God"))
            {
                case 1: godstr = ""wb"[ "ad"ÖLÜMSÜZLÜK AKTÝF "wb"]";
                case 0: godstr = "";
            }
            format(str, sizeof(str), "%s\n%s\n%s", cete, ceterutbe, godstr);
            Update3DTextLabelText(siraclabel[i], -1, str);
        }
    }
	return true;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(LAGPlayerExitingVehicle[playerid] != vehicleid)
	{
		if(GetTickCount() - LAGExitTimeCheck[playerid] < VEHICLE_EXIT_TIME)
		{
			LAGExitedVehicle[playerid]++;
			if(LAGExitedVehicle[playerid] >= VEHICLE_EXITS)
			{
				OnPlayerUsedLagExploit(playerid);
			}
		}
		else
		{
			LAGExitedVehicle[playerid] = 1;
		}
		LAGExitTimeCheck[playerid] = GetTickCount();
		LAGPlayerExitingVehicle[playerid] = vehicleid;
	}
	return true;
}

forward OnPlayerUsedLagExploit(playerid);
public OnPlayerUsedLagExploit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		kickle(playerid, "Lag Exploit");
	}
	return true;
}

public OnAntiCheatAutoBullet(playerid, weaponid)
{
	kickle(playerid, "Auto Bullet");
	return true;
}

static CheckSpeed(playerid)
{
    new Keys, ud, lr;
    GetPlayerKeys(playerid, Keys, ud, lr);

	if(ud == KEY_UP && lr != KEY_LEFT && lr != KEY_RIGHT)
	{
		new Float: Velocity[3];
		GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
	    Velocity[0] = floatsqroot((Velocity[0] * Velocity[0]) + (Velocity[1] * Velocity[1]) + (Velocity[2] * Velocity[2]));
		if(Velocity[0] >= 0.11 && Velocity[0] <= 0.13) return true;
	}
	return false;
}

stock intdiffabs(tick1, tick2)
{
	if(tick1 > tick2)
	{
		new value = (tick1 - tick2);

		return value < 0 ? -value : value;
	}

	else
	{
		new value = (tick1 - tick2);

		return value < 0 ? -value : value;
	}
}

stock GetTickCountDifference(a, b)
{
	if ((a < 0) && (b > 0))
	{

		new dist;

		dist = intdiffabs(a, b);

		if(dist > 2147483647)
			return intdiffabs(a - 2147483647, b - 2147483647);

		else
			return dist;
	}

	return intdiffabs(a, b);
}
